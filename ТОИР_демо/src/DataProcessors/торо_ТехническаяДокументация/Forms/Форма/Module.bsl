#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ФОИспользоватьТиповыеОР 				= ПолучитьФункциональнуюОпцию("торо_ИспользоватьТиповыеОР");
	ФОУчетВыявленныхДефектов 				= ПолучитьФункциональнуюОпцию("торо_УчетВыявленныхДефектовОборудования");
	ФОИспользоватьСметыРемонта 				= ПолучитьФункциональнуюОпцию("торо_ИспользоватьСметыРемонта");
	ФОИспользоватьНарядыНаВыполнениеРабот	= ПолучитьФункциональнуюОпцию("торо_ИспользоватьНарядыНаВыполнениеРабот");
	
	ПостроитьДеревоПрисоединенныхФайловНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ДобавленыНовыеФайлы" Тогда
		ПолучитьПрисоединенныеФайлыНаСервере();
		ПодключитьОбработчикОжидания("ДеревоДокументацииПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоДокументации

&НаКлиенте
Процедура ДеревоДокументацииПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ДеревоДокументацииПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДокументацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПодключитьОбработчикОжидания("СписокДокументацииПриИзмененииСтрокиОбработчикОжидания", 0.1, Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДокументации

&НаКлиенте
Процедура СписокДокументацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПодключитьОбработчикОжидания("СписокДокументацииПриИзмененииСтрокиОбработчикОжидания", 0.1, Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ОбновитьСписокФайлов(Команда)
	ПостроитьДеревоПрисоединенныхФайловНаСервере();
	ПодключитьОбработчикОжидания("ДеревоДокументацииПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ПолучитьПрисоединенныеФайлыНаСервере()
	
	// {{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!.
	тзПрисоединенныеФайлы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПрисоединенныеФайлы.ПрисоединенныйФайл,
		|	ПрисоединенныеФайлы.ПрисоединенныйФайл.ВладелецФайла КАК ВладелецФайла
		|ИЗ
		|	РегистрСведений.ПрисоединенныеФайлы КАК ПрисоединенныеФайлы";

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НС = тзПрисоединенныеФайлы.Добавить();
		ЗаполнитьЗначенияСвойств(НС, ВыборкаДетальныеЗаписи);
		НС.МетаданныеФайла = ВыборкаДетальныеЗаписи.ПрисоединенныйФайл.Метаданные().Синоним;
	КонецЦикла;
	

	// }}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаСервере
Процедура ПостроитьДеревоПрисоединенныхФайловНаСервере()
	
	ДеревоФайлов = ДанныеФормыВЗначение(ДеревоДокументации, Тип("ДеревоЗначений"));
	
	ПолучитьПрисоединенныеФайлыНаСервере();
		
	ДеревоФайлов.Строки.Очистить();
		
	СписокСправочниковФайлов = Новый СписокЗначений;
	
	СтрокаТехДокументация = ДеревоФайлов.Строки.Добавить();
	СтрокаТехДокументация.ПрисоединенныйФайл = "Техническая документация";
	

	
	Для Каждого Справочник Из Метаданные.Справочники Цикл
		ИмяСпр = Справочник.Имя;	
		Если Найти(ИмяСпр, "ПрисоединенныеФайлы") Тогда
			
			Если (ФОИспользоватьТиповыеОР ИЛИ НЕ Метаданные.ФункциональныеОпции.торо_ИспользоватьТиповыеОР.Состав.Содержит(Справочник))
				И (ФОУчетВыявленныхДефектов ИЛИ НЕ Метаданные.ФункциональныеОпции.торо_УчетВыявленныхДефектовОборудования.Состав.Содержит(Справочник))
				И (ФОИспользоватьСметыРемонта ИЛИ НЕ Метаданные.ФункциональныеОпции.торо_ИспользоватьСметыРемонта.Состав.Содержит(Справочник))
				И (ФОИспользоватьНарядыНаВыполнениеРабот ИЛИ НЕ Метаданные.ФункциональныеОпции.торо_ИспользоватьНарядыНаВыполнениеРабот.Состав.Содержит(Справочник)) Тогда
					
					НСДер = СтрокаТехДокументация.Строки.Добавить();
					НСДер.ПрисоединенныйФайл = Справочник.Синоним;
					
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	

	Для Каждого СтрокаФайла Из тзПрисоединенныеФайлы Цикл
		// дерево
		СпрФайла = СтрокаФайла.МетаданныеФайла;
		СтрокаДерева = СтрокаТехДокументация.Строки.Найти(СпрФайла, "ПрисоединенныйФайл");
		Если Не СтрокаДерева = Неопределено Тогда
			СтрокаВладельца = СтрокаДерева.Строки.Найти(СтрокаФайла.ВладелецФайла, "ПрисоединенныйФайл");
			Если СтрокаВладельца = Неопределено Тогда
				СтрокаВладельца = СтрокаДерева.Строки.Добавить();
				СтрокаВладельца.ПрисоединенныйФайл = СтрокаФайла.ВладелецФайла;
			КонецЕсли;
		КонецЕсли;
				
	КонецЦикла;
	
	ЗначениеВДанныеФормы(ДеревоФайлов, ДеревоДокументации);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДокументацииПриАктивизацииСтрокиОбработчикОжидания()
	УстановитьОтборВСписке(Элементы.ДеревоДокументации.ТекущиеДанные.ПрисоединенныйФайл);
	Если Элементы.ДеревоДокументации.ТекущиеДанные.ПрисоединенныйФайл<>"Техническая документация" Тогда
		Элементы.СписокДокументации.Развернуть(0, Ложь);
	Иначе
		Элементы.СписокДокументации.Свернуть(Элементы.СписокДокументации.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборВСписке(ПрисоединенныйФайл)
	СписокФайлов = ДанныеФормыВЗначение(СписокДокументации, Тип("ДеревоЗначений"));
	СписокФайлов.Строки.Очистить();
	Если ТипЗнч(ПрисоединенныйФайл) = Тип("Строка") Тогда
		Если ПрисоединенныйФайл = "Техническая документация" Тогда
			Для Каждого Справочник Из Метаданные.Справочники Цикл
				ИмяСпр = Справочник.Имя;	
				Если Найти(ИмяСпр, "ПрисоединенныеФайлы") Тогда
					НС = СписокФайлов.Строки.Добавить();
					НС.ПрисоединенныйФайл = Справочник.Синоним;
					НС.Картинка = 5;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого Строка из тзПрисоединенныеФайлы Цикл
				СтрокаСправ = СписокФайлов.Строки.Найти(Строка.МетаданныеФайла, "ПрисоединенныйФайл");
				Если СтрокаСправ = Неопределено Тогда
					СтрокаСправ = СписокФайлов.Строки.Добавить();
					СтрокаСправ.ПрисоединенныйФайл = Строка.МетаданныеФайла;
					СтрокаСправ.Картинка = 5;
				КонецЕсли;
				СтрокаВлад = СтрокаСправ.Строки.Найти(Строка.ВладелецФайла, "ПрисоединенныйФайл");
				Если СтрокаВлад = Неопределено Тогда
					СтрокаВлад = СтрокаСправ.Строки.Добавить();
					СтрокаВлад.ПрисоединенныйФайл = Строка.ВладелецФайла;
					СтрокаВлад.Картинка = 4;
				КонецЕсли;
				СтрокаФайл = СтрокаВлад.Строки.Добавить();
				СтрокаФайл.ПрисоединенныйФайл = Строка.ПрисоединенныйФайл;
				СтрокаФайл.Картинка = 9;
			КонецЦикла;
		Иначе

			МассивСтрокФайлов = тзПрисоединенныеФайлы.НайтиСтроки(Новый Структура("МетаданныеФайла", ПрисоединенныйФайл));
			СтрокаСправ = СписокФайлов.Строки.Добавить();
			СтрокаСправ.ПрисоединенныйФайл = ПрисоединенныйФайл;
			СтрокаСправ.Картинка = 5;
			
			Для Каждого СтрокаМассива Из МассивСтрокФайлов Цикл
				СтрокаВлад = СтрокаСправ.Строки.Найти(СтрокаМассива.ВладелецФайла, "ПрисоединенныйФайл");
				Если СтрокаВлад = Неопределено Тогда
					СтрокаВлад = СтрокаСправ.Строки.Добавить();
					СтрокаВлад.ПрисоединенныйФайл = СтрокаМассива.ВладелецФайла;
					СтрокаВлад.Картинка = 4;
				КонецЕсли;
				СтрокаФайл = СтрокаВлад.Строки.Добавить();
				СтрокаФайл.ПрисоединенныйФайл = СтрокаМассива.ПрисоединенныйФайл;
				СтрокаФайл.Картинка = 9;
			КонецЦикла;
		КонецЕсли;
	Иначе
		МассивФайлов = тзПрисоединенныеФайлы.НайтиСтроки(Новый Структура("ВладелецФайла", ПрисоединенныйФайл));
		СтрокаВлад = СписокФайлов.Строки.Добавить();
		СтрокаВлад.ПрисоединенныйФайл = ПрисоединенныйФайл;
		СтрокаВлад.Картинка = 4;
		Для Каждого Строка Из МассивФайлов Цикл
			СтрокаФайл = СтрокаВлад.Строки.Добавить();
			СтрокаФайл.ПрисоединенныйФайл = Строка.ПрисоединенныйФайл;
			СтрокаФайл.Картинка = 9;
		КонецЦикла;
	КонецЕсли;
	
	ЗначениеВДанныеФормы(СписокФайлов, СписокДокументации);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяМетаданныхНаСервере(ТекФайл)
	
	 Возврат ТекФайл.Метаданные().Имя;
	
КонецФункции

&НаКлиенте
Процедура СписокДокументацииПриИзмененииСтрокиОбработчикОжидания()
	
	Если Элементы.СписокДокументации.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанныеФайл = Элементы.СписокДокументации.ТекущиеДанные.ПрисоединенныйФайл;
	
	Если ТипЗнч(ТекДанныеФайл) = Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	ИмяМетаданных = ПолучитьИмяМетаданныхНаСервере(ТекДанныеФайл);
	
	Если Найти(ИмяМетаданных, "ПрисоединенныеФайлы")<>0 Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ПрисоединенныйФайл", ТекДанныеФайл);
		
		ОткрытьФорму("ОбщаяФорма.ПрисоединенныйФайл", ПараметрыФормы);
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВладелецФайла",  ТекДанныеФайл);
		ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
		
		ОткрытьФорму("ОбщаяФорма.ПрисоединенныеФайлы",
		ПараметрыФормы,
		ЭтаФорма,
		Ложь,
		ВариантОткрытияОкна.ОтдельноеОкно);
	КонецЕсли;		
КонецПроцедуры

#КонецОбласти