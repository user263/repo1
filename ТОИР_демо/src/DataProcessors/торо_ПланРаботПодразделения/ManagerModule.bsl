#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетПланаРемонтовНаПериод") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"МакетПланаРемонтовНаПериод", 
		"План-график ППР", 
		СформироватьПечатнуюФормуПланРабот(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
КонецПроцедуры

// Процедуры формирования команд и макетов печатной формы АктНаПриемкуОборудованияИзРемонта.
Функция СформироватьПечатнуюФормуПланРабот(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПланГрафикППР";
	УстановитьПривилегированныйРежим(Истина);
	ТабличныйДокумент = ПечатьПланРабот(МассивОбъектов, ПараметрыПечати);
	УстановитьПривилегированныйРежим(Ложь);
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции

// Процедура вывода на экран печатной формы документа
// торо_ПланГрафикРемонта.
//  
Функция ПечатьПланРабот(МассивОбъектов, ПараметрыПечати)
	
	ПланГрафикРемонта=ПараметрыПечати.ДокППР;
	ПериодКон=ПараметрыПечати.Параметры.ДатаКонца;
	ПериодНач=ПараметрыПечати.Параметры.ДатаНачала;
	ВыводитьПо = ПараметрыПечати.Параметры.ВыводитьПо;
	Подразделение = ПараметрыПечати.Параметры.Подразделение;
	ИнтервалРазбиенияПереданный=ПараметрыПечати.Параметры.ИнтервалРазбиения;
	ОтборПечатнойФормы=ПараметрыПечати.Параметры.ОтборФормы;	
	
	ОтборПечатнойФормы[0].Имя="ОбъектРемонтныхРабот";
	ОтборПечатнойФормы[1].Имя="ВидРемонтныхРабот";
	
	Если ИнтервалРазбиенияПереданный = "Год" тогда 
		ИнтервалРазбиения=Перечисления.Периодичность.Год;
	ИначеЕсли ИнтервалРазбиенияПереданный = "Месяц" тогда 
		ИнтервалРазбиения=Перечисления.Периодичность.Месяц;
	ИначеЕсли ИнтервалРазбиенияПереданный = "Неделя" тогда 
		ИнтервалРазбиения=Перечисления.Периодичность.Неделя;
	ИначеЕсли ИнтервалРазбиенияПереданный = "День" тогда 
		ИнтервалРазбиения=Перечисления.Периодичность.День;
	КонецЕсли;	
	
	ПоПланГрафикамППР = Истина;
	ПоСметамПоДефектам = Истина;
	ПоСметамПоВнешнимОснованиям = Истина;
	ПоГрафикамРегламентныхМероприятий = Истина;
	
	Если НЕ ПолучитьЗначениеФО("торо_ИспользоватьРегламентныеМероприятия") Тогда
		ПоГрафикамРегламентныхМероприятий = Ложь;				
	КонецЕсли;
	Если НЕ ПолучитьЗначениеФО("торо_ИспользоватьППР") Тогда
		ПоПланГрафикамППР = Ложь;			
	КонецЕсли;			
	Если НЕ ПолучитьЗначениеФО("торо_ИспользоватьСметыРемонта") Тогда
		ПоСметамПоВнешнимОснованиям = Ложь;
		ПоСметамПоДефектам = Ложь;
	КонецЕсли;				
	Если НЕ ПолучитьЗначениеФО("торо_ИспользоватьВнешниеОснованияДляРабот") Тогда
		ПоСметамПоВнешнимОснованиям = Ложь;		
	КонецЕсли;					
	Если НЕ ПолучитьЗначениеФО("торо_УчетВыявленныхДефектовОборудования") Тогда
		ПоСметамПоДефектам = Ложь;		
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	торо_ПлановыеРемонтныеРаботы.ID,
	|	торо_ПлановыеРемонтныеРаботы.ВидРемонтныхРабот,
	|	торо_ПлановыеРемонтныеРаботы.ДатаНачалаРемонтныхРабот КАК ДатаНач,
	|	торо_ПлановыеРемонтныеРаботы.ДатаОкончанияРемонтныхРабот КАК ДатаКон,
	|	торо_ПлановыеРемонтныеРаботы.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	|	торо_ПлановыеРемонтныеРаботы.ОбъектРемонтныхРабот.Подразделение КАК Подразделение,
	|	торо_ПлановыеРемонтныеРаботы.Регистратор КАК ДокументППР,
	|	""ППР"" КАК ИсточникДанных
	|ПОМЕСТИТЬ ТаблицаНачало
	|ИЗ
	|	РегистрСведений.торо_ПлановыеРемонтныеРаботы КАК торо_ПлановыеРемонтныеРаботы
	|ГДЕ
	|	&ПоПланГрафикамППР
	|	И торо_ПлановыеРемонтныеРаботы.Регистратор ССЫЛКА Документ.торо_ПланГрафикРемонта
	|	И НЕ торо_ПлановыеРемонтныеРаботы.Отменен
	|	И НЕ торо_ПлановыеРемонтныеРаботы.Замещен
	|	И торо_ПлановыеРемонтныеРаботы.ДатаНачалаРемонтныхРабот МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_ПлановыеРемонтныеРаботы.ID,
	|	торо_ПлановыеРемонтныеРаботы.ВидМероприятия,
	|	торо_ПлановыеРемонтныеРаботы.ДатаНачала,
	|	торо_ПлановыеРемонтныеРаботы.ДатаОкончания,
	|	торо_ПлановыеРемонтныеРаботы.СписокОбъектов,
	|	торо_ПлановыеРемонтныеРаботы.СписокОбъектов.ПодразделениеИсполнитель,
	|	торо_ПлановыеРемонтныеРаботы.Регистратор,
	|	""РМ""
	|ИЗ
	|	РегистрСведений.торо_ПлановыеМероприятия.СрезПоследних(, &ПоГрафикамРегламентныхМероприятий) КАК торо_ПлановыеРемонтныеРаботы
	|ГДЕ
	|	&ПоГрафикамРегламентныхМероприятий
	|	И НЕ торо_ПлановыеРемонтныеРаботы.Отменен
	|	И торо_ПлановыеРемонтныеРаботы.ДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РемонтыВД.ID,
	|	РемонтЗаявка.ВидРемонта,
	|	РемонтЗаявка.ДатаНачалаПлан,
	|	РемонтЗаявка.ДатаОкончанияПлан,
	|	РемонтЗаявка.ОбъектРемонта,
	|	РемонтЗаявка.ОбъектРемонта.Подразделение,
	|	РемонтЗаявка.Регистратор,
	|	""СПД""
	|ИЗ
	|	РегистрСведений.торо_Ремонты КАК РемонтыВД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК РемонтЗаявка
	|		ПО РемонтыВД.ID = РемонтЗаявка.ID
	|			И (РемонтЗаявка.Регистратор ССЫЛКА Документ.торо_ЗаявкаНаРемонт)
	|			И (РемонтыВД.Регистратор ССЫЛКА Документ.торо_ВыявленныеДефекты)
	|ГДЕ
	|	&ПоСметамПоДефектам
	|	И НЕ РемонтЗаявка.ДатаНачалаПлан ЕСТЬ NULL 
	|	И РемонтЗаявка.ДатаНачалаПлан МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РемонтыВД.ID,
	|	РемонтЗаявка.ВидРемонта,
	|	РемонтЗаявка.ДатаНачалаПлан,
	|	РемонтЗаявка.ДатаОкончанияПлан,
	|	РемонтЗаявка.ОбъектРемонта,
	|	РемонтЗаявка.ОбъектРемонта.Подразделение,
	|	РемонтЗаявка.Регистратор,
	|	""СПВН""
	|ИЗ
	|	РегистрСведений.торо_Ремонты КАК РемонтыВД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК РемонтЗаявка
	|		ПО РемонтыВД.ID = РемонтЗаявка.ID
	|			И (РемонтЗаявка.Регистратор ССЫЛКА Документ.торо_ЗаявкаНаРемонт)
	|			И (РемонтыВД.Регистратор ССЫЛКА Документ.торо_ВнешнееОснованиеДляРабот)
	|ГДЕ
	|	&ПоСметамПоВнешнимОснованиям
	|	И НЕ РемонтЗаявка.ДатаНачалаПлан ЕСТЬ NULL 
	|	И РемонтЗаявка.ДатаНачалаПлан МЕЖДУ &ДатаНачала И &ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНачало.ID,
	|	ТаблицаНачало.ВидРемонтныхРабот,
	|	ТаблицаНачало.ДатаНач,
	|	ТаблицаНачало.ДатаКон,
	|	ТаблицаНачало.ОбъектРемонтныхРабот,
	|	ТаблицаНачало.Подразделение,
	|	ТаблицаНачало.ДокументППР,
	|	ТаблицаНачало.ИсточникДанных
	|ИЗ
	|	ТаблицаНачало КАК ТаблицаНачало
	|ГДЕ
	|	ТаблицаНачало.Подразделение = &Подразделение";
	
	Сч = 0;
		
	Для каждого СтрокаОтбора Из ОтборПечатнойФормы Цикл
		Если СтрокаОтбора.Использование Тогда
			Сч = Сч + 1;
			РеквизитОтбора = СтрокаОтбора.Имя;
			ВидСравненияВЗапросе = ПолучитьВидСравненияДляЗапроса(СтрокаОтбора.ВидСравнения);
			Если ЗначениеЗаполнено(СтрокаОтбора.Имя) Тогда					
				Запрос.Текст = Запрос.Текст + " И ТаблицаНачало." + СтрокаОтбора.Имя + " " + ВидСравненияВЗапросе.ВидСравненияНачало + " &Параметр" + Сч + ВидСравненияВЗапросе.ВидСравненияКонец; 	
				Если СтрокаОтбора.ВидСравнения = ВидСравнения.Содержит ИЛИ СтрокаОтбора.ВидСравнения = ВидСравнения.НеСодержит Тогда
					Запрос.УстановитьПараметр("Параметр"+ Сч, "%" + СтрокаОтбора.Значение + "%");
				Иначе
					Запрос.УстановитьПараметр("Параметр"+ Сч, СтрокаОтбора.Значение);
				КонецЕсли; 					
			КонецЕсли;
		КонецЕсли;			
	КонецЦикла;	
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО ДатаНач";	
	
	Если НЕ ЗначениеЗаполнено(Подразделение) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаНачало.Подразделение = &Подразделение", "ИСТИНА");
	Иначе
		Запрос.УстановитьПараметр("Подразделение",Подразделение);
	КонецЕсли;
		
	Запрос.УстановитьПараметр("ДатаНачала",ПериодНач);	
	Запрос.УстановитьПараметр("ДатаОкончания",ПериодКон);
	
	Запрос.УстановитьПараметр("ПоПланГрафикамППР",ПоПланГрафикамППР);
	Запрос.УстановитьПараметр("ПоСметамПоДефектам",ПоСметамПоДефектам);
	Запрос.УстановитьПараметр("ПоСметамПоВнешнимОснованиям",ПоСметамПоВнешнимОснованиям);
	Запрос.УстановитьПараметр("ПоГрафикамРегламентныхМероприятий",ПоГрафикамРегламентныхМероприятий);


	ПланРемонтов = Запрос.Выполнить().Выгрузить();
	
	Наименование = "";
	ТаблицаПлана = Новый ТабличныйДокумент;;		
	
	ТаблицаПлана.Очистить();
	
	МакетТаблицы =  ПолучитьМакет("МакетПланаРемонтовНаПериод");
	
	Область = МакетТаблицы.ПолучитьОбласть("Заголовок");	
	Область.Параметры.НачалоПериода = Формат(ПериодНач, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""");
	Область.Параметры.КонецПериода = Формат(ПериодКон, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения"""); 	
	Область.Параметры.Подразделение = Подразделение;
	Область.Параметры.ПодразделениеНомер = Подразделение;

	
	ТаблицаПлана.Вывести(Область);
	
	ПериодовВОтчете = (НачалоДня(ПериодКон) - НачалоДня(ПериодНач))/(60*60*24);
	
	Область = МакетТаблицы.ПолучитьОбласть("Шапка");
	
	ШиринаТаблицы = Область.ШиринаТаблицы;
	
	ТаблицаПлана.Вывести(Область);
	
	ТемпДата = НачалоДня(ПериодНач);
	
	ПериодНачРасчетный = ПериодНач;
	ПериодКонРасчетный = ПериодКон;
	
	МассивВременныхИнтервалов = Новый Массив;
	
	Если ИнтервалРазбиения = Перечисления.Периодичность.День Тогда
		ПериодКонРасчетный = КонецДня(ПериодКон);
		ПериодовВОтчете = 0;
		СледующийДень = Истина;
		Пока СледующийДень Цикл
			Область = МакетТаблицы.ПолучитьОбласть("СтолбецДня");
			ОбластьОформления = Область.Область("Знач");
			
			Область.Параметры.НомИнтервала = Формат(ТемпДата, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""");
			Если ДеньНедели(Дата(Год(ТемпДата), Месяц(ТемпДата), День(ТемпДата), 0,0,0))=6 или ДеньНедели(Дата(Год(ТемпДата), Месяц(ТемпДата), День(ТемпДата), 0,0,0))=7 Тогда
				ОбластьОформления.ЦветФона = новый Цвет(255,251,240);
				ОбластьОформления.ЦветТекста = новый Цвет(0,0,0);
			КонецЕсли;
			
			ЕдиничныйИнтервал = Новый Структура;
			ЕдиничныйИнтервал.Вставить("НачИнт",НачалоДня(ТемпДата));
			ЕдиничныйИнтервал.Вставить("КонИнт",КонецДня(ТемпДата));	
			МассивВременныхИнтервалов.Добавить(ЕдиничныйИнтервал);
			
			ТаблицаПлана.Присоединить(Область);
			ТемпДата = ТемпДата+60*60*24; 
			Если ТемпДата > ПериодКонРасчетный Тогда
				СледующийДень = Ложь;		
			КонецЕсли;
			ПериодовВОтчете = ПериодовВОтчете + 1;
		КонецЦикла;
		ШиринаТаблицы = ШиринаТаблицы + ПериодовВОтчете*Область.ШиринаТаблицы;
	ИначеЕсли ИнтервалРазбиения = Перечисления.Периодичность.Неделя Тогда 
		ПериодКонРасчетный = КонецНедели(ПериодКон);
		ТемпДата = НачалоДня(НачалоНедели(ПериодНач));
		ПериодовВОтчете = 0;	
		СледующаяНеделя = Истина;
		Пока СледующаяНеделя Цикл 
			Область = МакетТаблицы.ПолучитьОбласть("СтолбецДня");
			ОбластьОформления = Область.Область("Знач");
			
			Область.Параметры.НомИнтервала = Формат(ТемпДата, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""") + "-" + Формат(ТемпДата+60*60*24*6, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""");
			ТаблицаПлана.Присоединить(Область);
			
			ЕдиничныйИнтервал = Новый Структура;
			ЕдиничныйИнтервал.Вставить("НачИнт",НачалоНедели(ТемпДата));
			ЕдиничныйИнтервал.Вставить("КонИнт",КонецНедели(ТемпДата));	
			МассивВременныхИнтервалов.Добавить(ЕдиничныйИнтервал);

			ТемпДата = ТемпДата+60*60*24*7;
			Если НачалоДня(ТемпДата) > НачалоДня(ПериодКонРасчетный) Тогда
				СледующаяНеделя = Ложь;		
			КонецЕсли;	
			ПериодовВОтчете = ПериодовВОтчете + 1;
		КонецЦикла;
		ШиринаТаблицы = ШиринаТаблицы + ПериодовВОтчете*Область.ШиринаТаблицы;
    ИначеЕсли ИнтервалРазбиения = Перечисления.Периодичность.Месяц Тогда 
		ПериодКонРасчетный = КонецМесяца(ПериодКон);
		ТемпДата = НачалоМесяца(ПериодНач);
		ПериодовВОтчете = 0;
		СледующийМесяц = Истина;
		Пока СледующийМесяц Цикл
			Область = МакетТаблицы.ПолучитьОбласть("СтолбецДня");
			ОбластьОформления = Область.Область("Знач");
			
			Область.Параметры.НомИнтервала = НазваниеМесяцаСтрокойПадежное(Месяц(ТемпДата)) + Символы.ПС + Сред(ТемпДата,7,4); 
			ТаблицаПлана.Присоединить(Область);
			
			ЕдиничныйИнтервал = Новый Структура;
			ЕдиничныйИнтервал.Вставить("НачИнт",НачалоМесяца(ТемпДата));
			ЕдиничныйИнтервал.Вставить("КонИнт",КонецМесяца(ТемпДата));	
			МассивВременныхИнтервалов.Добавить(ЕдиничныйИнтервал);

			ТемпДата = ДобавитьМесяц(ТемпДата,1);
			Если ТемпДата > ПериодКонРасчетный Тогда
				СледующийМесяц = Ложь;		
			КонецЕсли;	
			ПериодовВОтчете = ПериодовВОтчете + 1;
		КонецЦикла;
		ШиринаТаблицы = ШиринаТаблицы + ПериодовВОтчете*Область.ШиринаТаблицы;
	ИначеЕсли ИнтервалРазбиения = Перечисления.Периодичность.Год Тогда 
		ПериодКонРасчетный = КонецГода(ПериодКон);
		ТемпДата = НачалоГода(ПериодНач);
		ПериодовВОтчете = 0;
		СледующийГод = Истина;
		Пока СледующийГод Цикл
			Область = МакетТаблицы.ПолучитьОбласть("СтолбецДня");
			ОбластьОформления = Область.Область("Знач");
			
			Область.Параметры.НомИнтервала = Сред(ТемпДата,7,4); 
			ТаблицаПлана.Присоединить(Область);
			
			ЕдиничныйИнтервал = Новый Структура;
			ЕдиничныйИнтервал.Вставить("НачИнт",НачалоГода(ТемпДата));
			ЕдиничныйИнтервал.Вставить("КонИнт",КонецГода(ТемпДата));	
			МассивВременныхИнтервалов.Добавить(ЕдиничныйИнтервал);
			
			ТемпДата = ДобавитьМесяц(ТемпДата,12);
			Если ТемпДата > ПериодКонРасчетный Тогда
				СледующийГод = Ложь;		
			КонецЕсли;	
			ПериодовВОтчете = ПериодовВОтчете + 1;
		КонецЦикла; 
		ШиринаТаблицы = ШиринаТаблицы + ПериодовВОтчете*Область.ШиринаТаблицы;
	КонецЕсли;
	
	// Непосредственно вывод данных по объекту
	
	НСТР = 1;
	
	СписокХранения = Новый СписокЗначений;
	
	Для каждого СтрокаТаблицы из ПланРемонтов Цикл
		
		Если ВыводитьПо = "Объектам ремонта" Тогда
			ОбъектДляДобавления =  СтрокаТаблицы.ОбъектРемонтныхРабот;
		Иначе
			ОбъектДляДобавления =  СтрокаТаблицы.ВидРемонтныхРабот;	
		КонецЕсли;
			
			
		Если СписокХранения.НайтиПоЗначению(ОбъектДляДобавления)=Неопределено Тогда
			СписокХранения.Добавить(ОбъектДляДобавления);			
		КонецЕсли;
		
	КонецЦикла;
	
	МассивОбъектов = СписокХранения.ВыгрузитьЗначения();
	КоличествоОбъектов = МассивОбъектов.Количество();	
	Для каждого ОбъектДляОтчета из МассивОбъектов Цикл
		Область = МакетТаблицы.ПолучитьОбласть("СтрокаЗаполнения");
		ФорматнаяОбласть = Область.Область("НаимПрим");
		Если ВыводитьПо = "Объектам ремонта" И ТипЗнч(ОбъектДляОтчета) = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
			ФорматнаяОбласть.Примечание.Текст = ОбъектДляОтчета.ПлановыйГрафикРаботы.Наименование;
		КонецЕсли;
		Область.Параметры.НПП = НСТР;
		
		Если ВыводитьПо = "Объектам ремонта" Тогда 
			Область.Параметры.НаименовОбъекта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ОбъектДляОтчета);			
		Иначе
			Область.Параметры.НаименовОбъекта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияВРДляПечати(ОбъектДляОтчета);
		КонецЕсли;
		
		ТаблицаПлана.Вывести(Область);	
		
		линСплошная = новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
		линНикакая = новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
		
		Условие = Новый Структура;
		
		
		Если ВыводитьПо = "Объектам ремонта" Тогда 
			Условие.Вставить("ОбъектРемонтныхРабот", ОбъектДляОтчета);			
		Иначе
			Условие.Вставить("ВидРемонтныхРабот", ОбъектДляОтчета);	
			МассивОбъектовРемонта = Новый Массив;
		КонецЕсли;
		
		НайденныеСтроки = ПланРемонтов.НайтиСтроки(Условие); 		
		для Сч =1 по  МассивВременныхИнтервалов.Количество() Цикл
			
			БуфГод = "";
			ТекущийПериодНач = МассивВременныхИнтервалов[Сч-1].НачИнт;
			ТекущийПериодКон = МассивВременныхИнтервалов[Сч-1].КонИнт;
			
			Область = МакетТаблицы.ПолучитьОбласть("ЗначенияДня");
			ОбластьФормат =  Область.Область();
			Если ВыводитьПо = "Видам работ" Тогда
				МассивОбъектовРемонта.Очистить();
			КонецЕсли;
			Для Каждого ОбъектСравнения из НайденныеСтроки цикл 
				
					Если ОбъектСравнения.ДатаКон<ОбъектСравнения.ДатаНач Тогда
						КонечнаяДата = КонецДня(ОбъектСравнения.ДатаНач);	
					Иначе
						КонечнаяДата = ОбъектСравнения.ДатаКон;
					КонецЕсли; 
				
					Если  ((ТекущийПериодКон>=ОбъектСравнения.ДатаНач) и (ТекущийПериодНач<=КонечнаяДата)) или
						((ТекущийПериодКон>ОбъектСравнения.ДатаНач) и (ТекущийПериодНач<=КонечнаяДата)) Тогда
						ОбластьФормат.ЦветФона = новый Цвет(255, 251, 240);
						ОбластьФормат.ГраницаСлева =линНикакая;
						ОбластьФормат.ГраницаСправа = линСплошная;
						
						Если ВыводитьПо = "Объектам ремонта" Тогда						
							ПредставлениеВидаРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияВРДляПечати(ОбъектСравнения.ВидРемонтныхРабот);
							БуфГод = БуфГод + ПредставлениеВидаРемонта + ", ";
						Иначе
							ПредставлениеОР = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ОбъектСравнения.ОбъектРемонтныхРабот);
							Если МассивОбъектовРемонта.Найти(ОбъектСравнения.ОбъектРемонтныхРабот) = Неопределено Тогда
								БуфГод = БуфГод + СокрЛП(ПредставлениеОР);
								БуфГод = БуфГод + ", ";
								МассивОбъектовРемонта.Добавить(ОбъектСравнения.ОбъектРемонтныхРабот);
							КонецЕсли;
						КонецЕсли;					
						
						
						Если ВыводитьПо = "Объектам ремонта" Тогда
							ОбластьФормат.Примечание.Текст =  ОбластьФормат.Примечание.Текст + ПредставлениеВидаРемонта 
							+ " (" + Лев(ОбъектСравнения.ДатаНач, 10) + " - " + Лев(ОбъектСравнения.ДатаКон, 10) + ") " + Символы.ПС;							
						Иначе 
							ОбластьФормат.Примечание.Текст =  ОбластьФормат.Примечание.Текст + ПредставлениеОР 
							+ " (" + Лев(ОбъектСравнения.ДатаНач, 10) + " - " + Лев(ОбъектСравнения.ДатаКон, 10) + ") " + Символы.ПС;
						КонецЕсли;
							
					КонецЕсли;	
				
			КонецЦикла;	
			Область.Параметры.заполнение = Лев(БуфГод,СтрДлина(БуфГод)-2);
			ТаблицаПлана.Присоединить(Область);
					
		КонецЦикла;				
		НСТР = НСТР + 1;
		
	КонецЦикла;	
	Область = МакетТаблицы.ПолучитьОбласть("Пояснение");	
	ТаблицаПлана.Вывести(Область);

	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "торо_ПечатьПланаРабот_МакетПланаРемонтовНаПериод";
	ТабДок.ИмяПараметровПечати = "торо_ПечатьПланаРабот_МакетПланаРемонтовНаПериод";
	ТабДок.ВставитьОбласть(ТаблицаПлана.Область());
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
	Возврат ТабДок;
	
КонецФункции

Функция ПолучитьВидСравненияДляЗапроса(ВидСравненияОтбора) 
	
	СтруктураВидаСравнения = Новый Структура;
	СтруктураВидаСравнения.Вставить("ВидСравненияНачало");
	СтруктураВидаСравнения.Вставить("ВидСравненияКонец");
	Если ВидСравненияОтбора = ВидСравнения.Равно Тогда
		
		СтруктураВидаСравнения.ВидСравненияНачало = "=";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
		
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.НеРавно Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "<>";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.ВСписке Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "В(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.НеВСписке Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "НЕ В(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.ВИерархии Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "В ИЕРАРХИИ(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.ВСпискеПоИерархии Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "В ИЕРАРХИИ(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.НеВСпискеПоИерархии Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "НЕ В ИЕРАРХИИ(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.НеВИерархии Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "НЕ В ИЕРАРХИИ(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.Больше Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = ">";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.БольшеИлиРавно Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = ">=";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.Меньше Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "<";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.МеньшеИлиРавно Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "<=";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.Содержит Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = " ПОДОБНО ВЫРАЗИТЬ(";
		СтруктураВидаСравнения.ВидСравненияКонец = " КАК Строка(900))";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.НеСодержит Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = " НЕ ПОДОБНО ВЫРАЗИТЬ(";
		СтруктураВидаСравнения.ВидСравненияКонец = " КАК Строка(900))";
		Возврат СтруктураВидаСравнения;
	Иначе // другие варианты 
		СтруктураВидаСравнения.ВидСравненияНачало = "=";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	КонецЕсли;
	
КонецФункции // ПолучитьВидСравненияДляЗапроса()

// Формирование названия месяца с учетом падежа (именительный и родительный).
//
// Параметры:
// 	НомерМесяца - номер месяца в году.
//		Падеж - указание паджа, в котором нужно сформировать название месяца
//				("Имен" - именительный, по-умолчанию; "Род" - родительный).
//
// Возвращаемое значение:
// 		Строка, название месяца с учетом падежа.
//
Функция НазваниеМесяцаСтрокойПадежное(Знач НомерМесяца, Знач Падеж="Имен")
    если Падеж="Род" тогда
     если НомерМесяца=1 тогда
    	Возврат "января"
     иначеЕсли НомерМесяца=2 тогда
    	Возврат "февраля"
     иначеЕсли НомерМесяца=3 тогда
    	Возврат "марта"
     иначеЕсли НомерМесяца=4 тогда
    	Возврат "апреля"
     иначеЕсли НомерМесяца=5 тогда
    	Возврат "мая"
     иначеЕсли НомерМесяца=6 тогда
    	Возврат "июня"
     иначеЕсли НомерМесяца=7 тогда
    	Возврат "июля"
     иначеЕсли НомерМесяца=8 тогда
    	Возврат "августа"
     иначеЕсли НомерМесяца=9 тогда
    	Возврат "сентября"
     иначеЕсли НомерМесяца=10 тогда
    	Возврат "октября"
     иначеЕсли НомерМесяца=11 тогда
    	Возврат "ноября"
      иначеЕсли НомерМесяца=12 тогда
    	Возврат "декабря"	
      конецЕсли;
   конецЕсли;
   если Падеж="Имен" тогда
     если НомерМесяца=1 тогда
    	Возврат "январь"
     иначеЕсли НомерМесяца=2 тогда
    	Возврат "февраль"
     иначеЕсли НомерМесяца=3 тогда
    	Возврат "март"
     иначеЕсли НомерМесяца=4 тогда
    	Возврат "апрель"
     иначеЕсли НомерМесяца=5 тогда
    	Возврат "май"
     иначеЕсли НомерМесяца=6 тогда
    	Возврат "июнь"
     иначеЕсли НомерМесяца=7 тогда
    	Возврат "июль"
     иначеЕсли НомерМесяца=8 тогда
    	Возврат "август"
     иначеЕсли НомерМесяца=9 тогда
    	Возврат "сентябрь"
     иначеЕсли НомерМесяца=10 тогда
    	Возврат "октябрь"
     иначеЕсли НомерМесяца=11 тогда
    	Возврат "ноябрь"
      иначеЕсли НомерМесяца=12 тогда
    	Возврат "декабрь"	
      конецЕсли;
   конецЕсли;
   
КонецФункции

Функция ПолучитьЗначениеФО(ТекущаяОпция)
	
	Возврат ПолучитьФункциональнуюОпцию(ТекущаяОпция);
	
КонецФункции

#КонецОбласти

#КонецЕсли