////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ
&НаКлиенте
Перем ПараметрыТекущейСтроки;

&НаКлиенте
Перем ПараметрыТекущейСтрокиРемонтовОборудования;

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОбъектРемонтаДляОтбора") Тогда
		ОбъектРемонтаДляОтбора = Параметры.ОбъектРемонтаДляОтбора;
	КонецЕсли;
	
	ЗаполнитьПредписания();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ФлажокОбработанныеПриИзменении(Элемент)
	
	Если ФлажокОбработанные Тогда
		Элементы.Предписания.ОтборСтрок = Неопределено;
	Иначе
		Элементы.Предписания.ОтборСтрок = Новый ФиксированнаяСтруктура("Обработано", Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПредписания
&НаКлиенте
Процедура ПредписанияПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.Предписания.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено И НЕ ТекДанные.ID = Неопределено
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ВыявленныеДефекты.ПустаяСсылка") 
		И НЕ торо_ОбщегоНазначенияКлиент.СравнитьПараметрыТекущейСтроки("СтрРемОборудования", Элементы.Предписания.ТекущаяСтрока, ПараметрыТекущейСтрокиРемонтовОборудования) Тогда
		
		торо_ОбщегоНазначенияКлиент.ЗапомнитьПараметрыТекущейСтроки("СтрРемОборудования", Элементы.Предписания.ТекущаяСтрока, ПараметрыТекущейСтрокиРемонтовОборудования);
		
		СписокРО = Элементы.Предписания.ВыделенныеСтроки;
		ЗаполнитьДеревоРемонтныхРабот(СписокРО);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредписанияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыбрЗнач = Объект.Предписания.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если Не ВыбрЗнач = Неопределено И Не ВыбрЗнач.Обработано Тогда
		
		СтруктураПоиска = Новый Структура("РемонтыОборудования_ID", ВыбрЗнач.ID);
		
		СтруктураВыбора = Новый Структура();
		
		СтруктураВыбора.Вставить("ДокументОснование", ВыбрЗнач.ДокументОснование);
		СтрокаРемонтовОборудования = Новый Структура("ID, ПлановаяДата, Обработано, ОбъектРемонта, ОписаниеРемонта, Предписания",
		ВыбрЗнач.ID, ВыбрЗнач.ПлановаяДата, ВыбрЗнач.Обработано, ВыбрЗнач.ОбъектРемонта, ВыбрЗнач.ОписаниеРемонта, Истина);
		СтруктураВыбора.Вставить("СтрокаРемонтовОборудования", СтрокаРемонтовОборудования);
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПредписанияВыборЗавершение", ЭтотОбъект, Новый Структура("СтруктураВыбора, СтруктураПоиска", СтруктураВыбора, СтруктураПоиска)), НСтр("ru = 'Перенести все операции выбранного предписания?'"), РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПредписания()
	
	Объект.Предписания.Очистить();
	Объект.РемонтныеРаботы.Очистить();
	
	Запрос = Новый Запрос;
	
	МенеджерВремТаб = новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВремТаб;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_Предписания.Регистратор,
	|	торо_Предписания.НомерСтроки,
	|	торо_Предписания.ОбъектРемонта,
	|	торо_Предписания.ID,
	|	торо_Предписания.Описание,
	|	торо_Предписания.ПлановаяДатаРемонта,
	|	торо_Предписания.Обработано
	|ПОМЕСТИТЬ idПредписаний
	|ИЗ
	|	РегистрСведений.торо_ВнешниеОснованияДляРабот КАК торо_Предписания
	|ГДЕ
	|	торо_Предписания.Регистратор Ссылка Документ.торо_ВнешнееОснованиеДляРабот
	|	И торо_Предписания.ОбъектРемонта = &ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	idПредписаний.ОбъектРемонта,
	|	idПредписаний.ID,
	|	idПредписаний.Описание КАК ОписаниеРемонта,
	|	idПредписаний.ПлановаяДатаРемонта,
	|	торо_ПредписанияСрезПоследних.Обработано КАК Обработано,
	|	idПредписаний.Регистратор
	|ПОМЕСТИТЬ ТаблицаПредписания
	|ИЗ
	|	idПредписаний КАК idПредписаний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВнешниеОснованияДляРабот.СрезПоследних КАК торо_ПредписанияСрезПоследних
	|		ПО idПредписаний.ID = торо_ПредписанияСрезПоследних.ID
	|			И idПредписаний.ОбъектРемонта = торо_ПредписанияСрезПоследних.ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ *
	| ИЗ ТаблицаПредписания КАК ТаблицаПредписания";
	
	Запрос.УстановитьПараметр("ОбъектРемонта",ОбъектРемонтаДляОтбора);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		ДобавлятьРемонт = Истина;
		
		Если ЗначениеЗаполнено(ДатаНачала) Тогда
			Если Выборка.ПлановаяДатаРемонта < ДатаНачала Тогда
				ДобавлятьРемонт = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаОкончания) Тогда
			Если Выборка.ПлановаяДатаРемонта > ДатаОкончания Тогда
				ДобавлятьРемонт = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ДобавлятьРемонт Тогда 
			Продолжить;
		КонецЕсли;
		
		НовСтрокаРО = Объект.Предписания.Добавить();
		НовСтрокаРО.ID                = Выборка.ID;
		НовСтрокаРО.ОбъектРемонта     = Выборка.ОбъектРемонта;
		НовСтрокаРО.ПлановаяДата      = Выборка.ПлановаяДатаРемонта;
		НовСтрокаРО.ОписаниеРемонта   = Выборка.ОписаниеРемонта;
		НовСтрокаРО.ДокументОснование = Выборка.Регистратор;
		НовСтрокаРО.Обработано 		  = Выборка.Обработано;
		
	КонецЦикла;
	
	ЗапросОпер = Новый Запрос;
	ЗапросОпер.МенеджерВременныхТаблиц = МенеджерВремТаб;
	ЗапросОпер.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                   |	торо_Предписания.ID,
	                   |	торо_Предписания.ОбъектРемонта,
	                   |	торо_Предписания.ПлановаяДатаРемонта КАК ПлановаДата,
	                   |	торо_Предписания.ОписаниеРемонта
	                   |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
	                   |ИЗ
	                   |	ТаблицаПредписания КАК торо_Предписания
	                   |;
	                   |
	                   |////////////////////////////////////////////////////////////////////////////////
	                   |ВЫБРАТЬ
	                   |	торо_ЗаявкаНаРемонтРемонтныеРаботы.ID,
	                   |	торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота,
	                   |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Родитель_ID,
	                   |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Количество,
	                   |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Предписание_ID
	                   |ПОМЕСТИТЬ ТаблицаРемонтныхРабот
	                   |ИЗ
	                   |	РегистрСведений.торо_ОперацииВнешнихОснованийДляРабот КАК торо_ЗаявкаНаРемонтРемонтныеРаботы
	                   |ГДЕ
	                   |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Регистратор ССЫЛКА Документ.торо_ВнешнееОснованиеДляРабот
	                   |;
	                   |
	                   |////////////////////////////////////////////////////////////////////////////////
	                   |ВЫБРАТЬ
	                   |	ТаблицаРемонтныхРабот.ID,
	                   |	ТаблицаРемонтныхРабот.РемонтнаяРабота,
	                   |	ТаблицаРемонтныхРабот.Родитель_ID,
	                   |	ТаблицаРемонтныхРабот.Количество,
	                   |	ТаблицаРемонтныхРабот.Предписание_ID КАК РемонтыОборудования_ID
	                   |ИЗ
	                   |	ТаблицаРемонтныхРабот КАК ТаблицаРемонтныхРабот
	                   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
	                   |		ПО ТаблицаРемонтныхРабот.Предписание_ID = ТаблицаРемонтовОборудования.ID";
	
	
	ТаблицаРемонтныхРабот = ЗапросОпер.Выполнить().Выгрузить();
	
	
	Для Каждого СтрокаТЧ Из ТаблицаРемонтныхРабот Цикл 
		
		НовСтрокаРР = Объект.РемонтныеРаботы.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрокаРР, СтрокаТЧ);
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
// Процедура выполняет первоначальное заполнение элемента формы "ДеревоРемонтныхРабот".
//
Процедура ЗаполнитьДеревоРемонтныхРабот(СписокРемонтовОборудования)
		
	ДеревоЗначение = РеквизитФормыВЗначение("ДеревоРемонтныхРабот");
	
	ДеревоЗначение.Строки.Очистить();
	
	Для Каждого СтрокаРемОборудования Из СписокРемонтовОборудования Цикл
		
		СтрокаРемонтовОборудования = Объект.Предписания.НайтиПоИдентификатору(СтрокаРемОборудования);
		
		Если СтрокаРемонтовОборудования = Неопределено Тогда
			
			Для Каждого СтрокаТЧ Из Объект.Предписания Цикл
				
				// 0 - й уровень дерева
				КорневаяСтрока = ДеревоЗначение.Строки.Добавить();
				КорневаяСтрока.РемонтнаяРабота = "Ремонтные работы";
				КорневаяСтрока.Картинка = 4;
				КорневаяСтрока.РемонтыОборудования_ID = СтрокаТЧ.ID;
				
				МассивСтрок  = Объект.РемонтныеРаботы.НайтиСтроки(Новый Структура("РемонтыОборудования_ID", СтрокаТЧ.ID));
				ТаблицаСтрок = Объект.РемонтныеРаботы.Выгрузить(МассивСтрок);
				
				ТекущиеЗначения = Новый Структура("Родитель_ID, РемонтыОборудования_ID, ID", КорневаяСтрока.Родитель_ID, КорневаяСтрока.РемонтыОборудования_ID, КорневаяСтрока.ID);
				торо_Ремонты.СоздатьВетвьДереваПоТабличнойЧасти(ДеревоЗначение, ТекущиеЗначения, ТаблицаСтрок);
				
			КонецЦикла; 
			
		Иначе
			
			// 0 - й уровень дерева
			КорневаяСтрока = ДеревоЗначение.Строки.Добавить();
			КорневаяСтрока.РемонтнаяРабота = "Ремонтные работы";
			КорневаяСтрока.Картинка = 4;
			КорневаяСтрока.РемонтыОборудования_ID = СтрокаРемонтовОборудования.ID;
			
			МассивСтрок  = Объект.РемонтныеРаботы.НайтиСтроки(Новый Структура("РемонтыОборудования_ID", СтрокаРемонтовОборудования.ID));
			ТаблицаСтрок = Объект.РемонтныеРаботы.Выгрузить(МассивСтрок);
			
			ТекущиеЗначения = Новый Структура("Родитель_ID, РемонтыОборудования_ID, ID", КорневаяСтрока.Родитель_ID, КорневаяСтрока.РемонтыОборудования_ID, КорневаяСтрока.ID);
			торо_Ремонты.СоздатьВетвьДереваПоТабличнойЧасти(ДеревоЗначение, ТекущиеЗначения, ТаблицаСтрок);
			
		КонецЕсли; 
		
		Элементы.ДеревоРемонтныхРабот.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоЗначение, "ДеревоРемонтныхРабот");
	
КонецПроцедуры

&НаКлиенте
Процедура ПредписанияВыборЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    СтруктураВыбора = ДополнительныеПараметры.СтруктураВыбора;
    СтруктураПоиска = ДополнительныеПараметры.СтруктураПоиска;
    
    
    Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
        МассивСтрок = Объект.РемонтныеРаботы.НайтиСтроки(СтруктураПоиска);
        
        МассивСтрокРемонтныхРабот = Новый Массив;
        Для каждого Элем Из МассивСтрок Цикл
            СтруктураДобавления = Новый Структура("РемонтнаяРабота, Количество, Родитель_ID, РемонтыОборудования_ID, ID", Элем.РемонтнаяРабота, Элем.Количество, Элем.Родитель_ID, Элем.РемонтыОборудования_ID, Элем.ID);
            
            МассивСтрокРемонтныхРабот.Добавить(СтруктураДобавления);
            
        КонецЦикла;
        
        СтруктураВыбора.Вставить("МассивСтрокРемонтныхРабот", МассивСтрокРемонтныхРабот);
        
    КонецЕсли;
    
    ОповеститьОВыборе(СтруктураВыбора);
    
КонецПроцедуры

#КонецОбласти