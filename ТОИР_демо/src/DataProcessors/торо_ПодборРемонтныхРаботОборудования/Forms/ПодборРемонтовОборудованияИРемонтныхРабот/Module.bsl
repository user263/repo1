////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ
&НаКлиенте
Перем ПараметрыТекущейСтроки;
&НаКлиенте
Перем ПараметрыТекущейСтрокиРемонтовОборудования;

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("Владелец") Тогда
		Отказ = Истина;
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Обработка не предназначена для непосредственного использования.'"));
		возврат;
	КонецЕсли;
		
	Владелец = Параметры.Владелец;
	
	ИспользоватьОтборПоОрганизацииИПодразделению = Ложь;
	Если Параметры.Свойство("Организация") и ЗначениеЗаполнено(Параметры.Организация) Тогда
		ОрганизацияДляОтбора = Параметры.Организация;
		ИспользоватьОтборПоОрганизацииИПодразделению = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("Подразделение") и ЗначениеЗаполнено(Параметры.Подразделение) Тогда
		ПодразделениеДляОтбора = Параметры.Подразделение;
		ИспользоватьОтборПоОрганизацииИПодразделению = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ДокументыОснования") Тогда
		Для каждого Документ Из Параметры.ДокументыОснования Цикл
			Объект.ДокументыОснования.Добавить().ДокументОснование = Документ.Значение;
			ВернутьАдресВХранилище = Истина;
		КонецЦикла; 
	КонецЕсли;
	 
	Если ТипЗнч(Владелец.Ссылка) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") Тогда
		Элементы.ДеревоРемонтныхРабот.Видимость = Ложь;
		Элементы.ОтборОстановочные.Видимость = Ложь;
		Элементы.ФлажокЗавершенные.Видимость = Ложь;
		Элементы.флНеТолькоЗависимые.Видимость = Истина;
		ОРДляОтбораПоОстановочным = Параметры.ОР;
		ВРДляОтбораПоОстановочным = Параметры.ВР;
		Если ЗначениеЗаполнено(ОРДляОтбораПоОстановочным) Тогда
			СформироватьТаблицуОтбораЗависимыхОтОстановочныхРемонтов();
		Иначе
			Элементы.ДокументыОснованияВыбрать.Видимость = Ложь;
			Элементы.РемонтыОборудования.РежимВыделения = РежимВыделенияТаблицы.Одиночный;
		КонецЕсли;
	Иначе
		Элементы.ДеревоРемонтныхРабот.Видимость = Не ТипЗнч(Владелец.Ссылка) = Тип("ДокументСсылка.торо_АктПриемкиОборудования");
	КонецЕсли;			
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	флЗависимыеОтОстановочныхПриИзменении(Элементы.флЗависимыеОтОстановочных);
	Если ЗначениеЗаполнено(ОрганизацияДляОтбора) ИЛИ ЗначениеЗаполнено(ПодразделениеДляОтбора) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Отбираются объекты ремонта принадлежащие %1 %2'")
			,?(ЗначениеЗаполнено(ОрганизацияДляОтбора), "организации """ + ОрганизацияДляОтбора + """", ""),?(ЗначениеЗаполнено(ПодразделениеДляОтбора), " подразделению """ + ПодразделениеДляОтбора + """", ""));
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументОстановочныйПриИзменении(Элемент)
	
	ДокументОстановочныйПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДокументОстановочныйПриИзмененииНаСервере()
	
	IDОсновногоДляОтбораПоОстановочным = ДокументОстановочный.IDОсновногоРемонта;
	
КонецПроцедуры

&НаКлиенте
Процедура флЗависимыеОтОстановочныхПриИзменении(Элемент)
	
	Если Не флЗависимыеОтОстановочных Тогда
		ДокументОстановочный = Неопределено;
	КонецЕсли;
	#Если НЕ ВебКлиент Тогда
		// Убрать директиву, когда эта строчка в веб-клиенте перестанет 
		// вызывать платформенную ошибку "b.ta is null".
		Элементы.ДокументОстановочный.Доступность = флЗависимыеОтОстановочных;
	#Иначе
		Элементы.ДокументОстановочный.ТолькоПросмотр = НЕ флЗависимыеОтОстановочных;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура флНеТолькоЗависимыеПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДокументыОснования.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено И НЕ ТекДанные.ДокументОснование = Неопределено
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ВыявленныеДефекты.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ЗаявкаНаРемонт.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ПланГрафикРемонта.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ГрафикРегламентныхМероприятийТОиР.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_НарядНаРегламентноеМероприятие.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ВнешнееОснованиеДляРабот.ПустаяСсылка")
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_АктОВыполненииЭтапаРабот.ПустаяСсылка") Тогда
		
		ДокументОснование = ТекДанные.ДокументОснование;
		
		СписокДО = Элементы.ДокументыОснования.ВыделенныеСтроки;
		
		ЗаполнитьРемонтыОборудования(СписокДО);
		
		УстановитьВидимостьДоступность(ДокументОснование);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДокументыОснования
&НаКлиенте
Процедура ДокументыОснованияПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.ДокументыОснования.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено И НЕ ТекДанные.ДокументОснование = Неопределено
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ВыявленныеДефекты.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ЗаявкаНаРемонт.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ПланГрафикРемонта.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ГрафикРегламентныхМероприятийТОиР.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_НарядНаРегламентноеМероприятие.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ВнешнееОснованиеДляРабот.ПустаяСсылка")
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_АктОВыполненииЭтапаРабот.ПустаяСсылка")
		И НЕ торо_ОбщегоНазначенияКлиент.СравнитьПараметрыТекущейСтроки("СтрДокОснование", Элементы.ДокументыОснования.ТекущаяСтрока, ПараметрыТекущейСтроки) Тогда
		
		торо_ОбщегоНазначенияКлиент.ЗапомнитьПараметрыТекущейСтроки("СтрДокОснование", Элементы.ДокументыОснования.ТекущаяСтрока, ПараметрыТекущейСтроки);
		
		ДокументОснование = ТекДанные.ДокументОснование;
		
		СписокДО = Элементы.ДокументыОснования.ВыделенныеСтроки;
		
		ЗаполнитьРемонтыОборудования(СписокДО);
		
		УстановитьВидимостьДоступность(ДокументОснование);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеПриИзменении(Элемент)
	
	 ДокументыОснованияПриАктивизацииСтроки(Элементы.ДокументыОснования);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДокОсн = Элементы.ДокументыОснования.текущиеДанные.ДокументОснование;
	ФОИспользоватьСтатусыДокументов = ПолучитьЗначениеФОНаСервере("торо_ИспользоватьСтатусыДокументовТОиР");
	
	Если ТипЗнч(ДокОсн) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_ВыявленныеДефекты.ФормаВыбора",Новый Структура("ОтборПоПроведенным, ОтборПоСтатусам", Истина, ФОИспользоватьСтатусыДокументов),Элемент, ЭтотОбъект);
	ИначеЕсли ТипЗнч(ДокОсн) = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_ПланГрафикРемонта.ФормаВыбора",Новый Структура("ОтборПоПроведенным", Истина),Элемент, ЭтотОбъект);
    ИначеЕсли ТипЗнч(ДокОсн) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_ЗаявкаНаРемонт.ФормаВыбора",Новый Структура("ОтборПоПроведенным, ОтборПоСтатусам", Истина, ФОИспользоватьСтатусыДокументов),Элемент, ЭтотОбъект);
	ИначеЕсли ТипЗнч(ДокОсн) = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ФормаВыбора",Новый Структура("ОтборПоПроведенным, ОтборПоСтатусам", Истина, ФОИспользоватьСтатусыДокументов),Элемент, ЭтотОбъект);
	ИначеЕсли ТипЗнч(ДокОсн) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_НарядНаРегламентноеМероприятие.ФормаВыбора",Новый Структура("ОтборПоПроведенным, ОтборПоСтатусам", Истина, ФОИспользоватьСтатусыДокументов),Элемент, ЭтотОбъект);
	ИначеЕсли ТипЗнч(ДокОсн) = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_ГрафикРегламентныхМероприятийТОиР.ФормаВыбора",Новый Структура("ОтборПоПроведенным", Истина),Элемент, ЭтотОбъект);
	ИначеЕсли ТипЗнч(ДокОсн) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_ВнешнееОснованиеДляРабот.ФормаВыбора", Новый Структура("ОтборПоПроведенным, ОтборПоСтатусам", Истина, ФОИспользоватьСтатусыДокументов),Элемент, ЭтотОбъект);
	ИначеЕсли ТипЗнч(ДокОсн) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_АктОВыполненииЭтапаРабот.ФормаВыбора", Новый Структура("ОтборПоПроведенным", Истина),Элемент, ЭтотОбъект);		
	ИначеЕсли ДокОсн = Неопределено Тогда 
		СтандартнаяОбработка = Ложь;
		
		СписокВыбора = СформироватьСписокВыбораНаСервере(Владелец);
		
		СписокВыбора.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ДокументыОснованияДокументОснованиеНачалоВыбораЗавершение",ЭтотОбъект, Новый Структура("Элемент, ФОИспользоватьСтатусыДокументов", Элемент, ФОИспользоватьСтатусыДокументов)),НСтр("ru = 'Выбор типа данных'"));
	
	КонецЕсли;
	
	Если ДокОсн <> Неопределено Тогда
		ФормаВыбора.Открыть();
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Элемент = ДополнительныеПараметры.Элемент;
	ФОИспользоватьСтатусыДокументов = ДополнительныеПараметры.ФОИспользоватьСтатусыДокументов;
	ВыбЭлемент = ВыбранныйЭлемент;
	
	Если ВыбЭлемент = Неопределено Тогда
		Возврат;
	ИначеЕсли ВыбЭлемент.Значение = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_ВыявленныеДефекты.ФормаВыбора", Новый Структура("ОтборПоПроведенным, ОтборПоСтатусам", Истина, ФОИспользоватьСтатусыДокументов),Элемент, ЭтотОбъект);
	ИначеЕсли ВыбЭлемент.Значение = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_ПланГрафикРемонта.ФормаВыбора", Новый Структура("ОтборПоПроведенным", Истина),Элемент, ЭтотОбъект);
	ИначеЕсли ВыбЭлемент.Значение = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_ЗаявкаНаРемонт.ФормаВыбора", Новый Структура("ОтборПоПроведенным, ОтборПоСтатусам", Истина, ФОИспользоватьСтатусыДокументов),Элемент, ЭтотОбъект);
	ИначеЕсли ВыбЭлемент.Значение = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ФормаВыбора", Новый Структура("ОтборПоПроведенным, ОтборПоСтатусам", Истина, ФОИспользоватьСтатусыДокументов),Элемент, ЭтотОбъект);
	ИначеЕсли ВыбЭлемент.Значение = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_НарядНаРегламентноеМероприятие.ФормаВыбора", Новый Структура("ОтборПоПроведенным, ОтборПоСтатусам", Истина, ФОИспользоватьСтатусыДокументов),Элемент, ЭтотОбъект);
	ИначеЕсли ВыбЭлемент.Значение = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_ГрафикРегламентныхМероприятийТОиР.ФормаВыбора", Новый Структура("ОтборПоПроведенным", Истина),Элемент, ЭтотОбъект);
	ИначеЕсли ВыбЭлемент.Значение = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_ВнешнееОснованиеДляРабот.ФормаВыбора", Новый Структура("ОтборПоПроведенным, ОтборПоСтатусам", Истина, ФОИспользоватьСтатусыДокументов),Элемент, ЭтотОбъект);
	ИначеЕсли ВыбЭлемент.Значение = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
		ФормаВыбора = ПолучитьФорму("Документ.торо_АктОВыполненииЭтапаРабот.ФормаВыбора", Новый Структура("ОтборПоПроведенным", Истина),Элемент, ЭтотОбъект)
	КонецЕсли;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияПослеУдаления(Элемент)
	
	Если Объект.ДокументыОснования.Количество() = 0 Тогда
		Объект.РемонтыОборудования.Очистить();
		Объект.РемонтныеРаботы.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ОтменаРедактирования Тогда
		
		ТекДанные = Элементы.ДокументыОснования.ТекущиеДанные;
		
		Если НЕ ТекДанные = Неопределено Тогда
			МассивСтрок = Объект.ДокументыОснования.НайтиСтроки(Новый Структура("ДокументОснование", ТекДанные.ДокументОснование));
			Если МассивСтрок.Количество() > 1 Тогда
				Отказ = Истина;
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Указанный документ-основание уже выбран в другой строке!'"));
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРемонтыОборудования
&НаКлиенте
Процедура РемонтыОборудованияПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.РемонтыОборудования.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		ДеревоРемонтныхРабот.ПолучитьЭлементы().Очистить()		
	КонецЕсли;

	Если Не (ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_АктПриемкиОборудования") Или ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_ОстановочныеРемонты")) Тогда
		Если Не ТекДанные = Неопределено И НЕ ТекДанные.ID = Неопределено
			И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ВыявленныеДефекты.ПустаяСсылка") 
			И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ЗаявкаНаРемонт.ПустаяСсылка") 
			И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПустаяСсылка") 
			И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ПланГрафикРемонта.ПустаяСсылка") 
			И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ГрафикРегламентныхМероприятийТОиР.ПустаяСсылка") 
			И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_НарядНаРегламентноеМероприятие.ПустаяСсылка") 
			И НЕ торо_ОбщегоНазначенияКлиент.СравнитьПараметрыТекущейСтроки("СтрРемОборудования", Элементы.РемонтыОборудования.ТекущаяСтрока, ПараметрыТекущейСтрокиРемонтовОборудования) Тогда
			
			торо_ОбщегоНазначенияКлиент.ЗапомнитьПараметрыТекущейСтроки("СтрРемОборудования", Элементы.РемонтыОборудования.ТекущаяСтрока, ПараметрыТекущейСтрокиРемонтовОборудования);
			СписокРО = Элементы.РемонтыОборудования.ВыделенныеСтроки;
			ЗаполнитьДеревоРемонтныхРабот(СписокРО);
			
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ТекДанные = Неопределено И ДеревоРемонтныхРабот.ПолучитьЭлементы().Количество()>0 Тогда
		Элементы.ДеревоРемонтныхРабот.Развернуть(ДеревоРемонтныхРабот.ПолучитьЭлементы()[0].ПолучитьИдентификатор(),Истина)
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура РемонтыОборудованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДокОснование = Элементы.ДокументыОснования.ТекущиеДанные;
	Если ВыбраннаяСтрока <> Неопределено И ТекДокОснование <> Неопределено Тогда
		Строка = Объект.РемонтыОборудования.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если Строка <> Неопределено Тогда
			
			СтрокаРемонтовОборудования = Новый Структура("ID, ВидРемонтныхРабот, ДатаНачала, ДатаОкончания, Завершен, ОбъектРемонта, ОбъектРемонтаВладелец, ИнвНомер, ТехНомер, ЗаводскойНомер, ДокументОстановочный");
			ЗаполнитьЗначенияСвойств(СтрокаРемонтовОборудования, Строка);
			
			СтруктураПоиска = Новый Структура("РемонтыОборудования_ID", Строка.ID);
			
			МассивСтрок = Объект.РемонтныеРаботы.НайтиСтроки(СтруктураПоиска);
			
			МассивСтрокРемонтныхРабот = Новый Массив;
			
			Для каждого Элем Из МассивСтрок Цикл
				
				СтруктураДобавления = Новый Структура("РемонтнаяРабота, Количество, Родитель_ID, РемонтыОборудования_ID, ID, ТехКартаРемонта", Элем.РемонтнаяРабота, Элем.Количество, Элем.Родитель_ID, Элем.РемонтыОборудования_ID, Элем.ID, Элем.ТехКартаРемонта);
				
				МассивСтрокРемонтныхРабот.Добавить(СтруктураДобавления);
				
			КонецЦикла;
			
			СтруктураВыбора = Новый Структура();
			
			СтруктураВыбора.Вставить("ДокументОснование"         , Строка.ДокументОснование);
			СтруктураВыбора.Вставить("СтрокаРемонтовОборудования", СтрокаРемонтовОборудования);
			СтруктураВыбора.Вставить("МассивСтрокРемонтныхРабот" , МассивСтрокРемонтныхРабот);
			
			МасСтрок = Объект.Исполнители.НайтиСтроки(СтруктураПоиска);
			
			МассивСтрокИсполнителей = Новый Массив;
			Для каждого Элем Из МасСтрок Цикл
				СтруктураДобавления = Новый Структура("Квалификация, ДатаНачала, ДатаОкончания, Сотрудник, КТУ, РемонтыОборудования_ID, ID", Элем.Квалификация, Элем.ДатаНачала, Элем.ДатаОкончания, Элем.Сотрудник, Элем.КТУ,Элем.РемонтыОборудования_ID, Элем.ID);
				
				МассивСтрокИсполнителей.Добавить(СтруктураДобавления);
				
			КонецЦикла;
			
			СтруктураВыбора.Вставить("МассивСтрокИсполнителей", МассивСтрокИсполнителей);
			
			МасСтрокПодр = Объект.Подрядчики.НайтиСтроки(СтруктураПоиска);
			
			МассивСтрокПодрядчики = Новый Массив;
			Для каждого Элем Из МасСтрокПодр Цикл
				СтруктураДобавления = Новый Структура("Контрагент, ДатаНачала, ДатаОкончания, РемонтыОборудования_ID, ID, ДоговорКонтрагента", Элем.Контрагент, Элем.ДатаНачала, Элем.ДатаОкончания, Элем.РемонтыОборудования_ID, Элем.ID, Элем.ДоговорКонтрагента);
				
				МассивСтрокПодрядчики.Добавить(СтруктураДобавления);
				
			КонецЦикла;
			
			СтруктураВыбора.Вставить("МассивСтрокПодрядчики", МассивСтрокПодрядчики);
			
			ВводитьСвязанные = Ложь;
			ВладелецФормыСтарый = ВладелецФормы;
			Если ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") Тогда
				Если Не ЗначениеЗаполнено(ОРДляОтбораПоОстановочным) Тогда
					ВводитьСвязанные = Истина;
					ВладелецФормы = ВладелецФормы.Элементы.ДокументОснование;
					ОРДляОтбораПоОстановочным = СтруктураВыбора.СтрокаРемонтовОборудования.ОбъектРемонта;
					ВРДляОтбораПоОстановочным = СтруктураВыбора.СтрокаРемонтовОборудования.ВидРемонтныхРабот;
					СформироватьТаблицуОтбораЗависимыхОтОстановочныхРемонтов();
					
					МассивСтрокКУдалению = Новый Массив;
					ПустойВР = ПредопределенноеЗначение("Справочник.торо_ВидыРемонтов.ПустаяСсылка");
					Для Каждого Стр Из Объект.РемонтыОборудования Цикл
						Если ТаблицаДляОтбораПоОстановочным.НайтиСтроки(Новый Структура("СвязанныйОбъектРемонта, ВидРемонтаЗависимогоОбъекта", Стр.ОбъектРемонта, Стр.ВидРемонтныхРабот)).Количество() = 0
							И ТаблицаДляОтбораПоОстановочным.НайтиСтроки(Новый Структура("СвязанныйОбъектРемонта, ВидРемонтаЗависимогоОбъекта", Стр.ОбъектРемонта, ПустойВР)).Количество() = 0 Тогда
							МассивСтрокКУдалению.Добавить(Стр);
						КонецЕсли;
					КонецЦикла;
					Для Каждого Стр Из МассивСтрокКУдалению Цикл
						Объект.РемонтыОборудования.Удалить(Стр);
					КонецЦикла;
					
				Иначе
					ВладелецФормы = ВладелецФормы.Элементы.СвязанныеРемонты;
				КонецЕсли;
			КонецЕсли;
			
			Если типЗнч(Строка.ДокументОснование) = ТИп("ДокументСсылка.торо_ВыявленныеДефекты") тогда
				СтруктураВыбора.Вставить("НаправлениеНаУстранение", ПолучитьПричинуДефекта(Строка.ДокументОснование, Строка.ID));
			иначе
				СтруктураВыбора.Вставить("НаправлениеНаУстранение", "");
			КонецЕсли;
			
			ПолучитьМатИТрудЗатраты(СтруктураВыбора);
			ОповеститьОВыборе(СтруктураВыбора);
			ВладелецФормы = ВладелецФормыСтарый;
			
		КонецЕсли;
		
	Иначе
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Не выбран документ основание для подбора или ремонт!'"), 10);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоРемонтныхРабот
&НаКлиенте
Процедура ДеревоРемонтныхРаботВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДокОснование = Элементы.ДокументыОснования.ТекущиеДанные;
	СтрокаРО = Элементы.РемонтыОборудования.ТекущиеДанные;
	
	Если ВыбраннаяСтрока <> Неопределено И ТекДокОснование <> Неопределено И СтрокаРО <> Неопределено Тогда
		Строка = ДеревоРемонтныхРабот.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если Строка <> Неопределено И Строка.ПолучитьРодителя() <> Неопределено Тогда
			
			СтрокаРемонтовОборудования = Новый Структура("ID, ВидРемонтныхРабот, ДатаНачала, ДатаОкончания, Завершен, ОбъектРемонта, ОбъектРемонтаВладелец, ДокументОснование",
			СтрокаРО.ID, СтрокаРО.ВидРемонтныхРабот, СтрокаРО.ДатаНачала, СтрокаРО.ДатаОкончания, СтрокаРО.Завершен, СтрокаРО.ОбъектРемонта, СтрокаРО.ОбъектРемонтаВладелец, СтрокаРО.ДокументОснование);
			
			МассивСтрокРемонтныхРабот = Новый Массив;
			СтруктураДобавления = Новый Структура("РемонтнаяРабота, Количество, Родитель_ID, РемонтыОборудования_ID, ID", Строка.РемонтнаяРабота, Строка.Количество, Строка.Родитель_ID, Строка.РемонтыОборудования_ID, Строка.ID);
			
			МассивСтрокРемонтныхРабот.Добавить(СтруктураДобавления);
			
			Родитель = Строка.ПолучитьРодителя();  			
			
			Для Каждого ЭлементДерева Из Строка.ПолучитьЭлементы() Цикл				
				СтруктураДобавления = Новый Структура("РемонтнаяРабота, Количество, Родитель_ID, РемонтыОборудования_ID, ID", ЭлементДерева.РемонтнаяРабота, ЭлементДерева.Количество, ЭлементДерева.Родитель_ID, ЭлементДерева.РемонтыОборудования_ID, ЭлементДерева.ID);
				МассивСтрокРемонтныхРабот.Добавить(СтруктураДобавления);				
			КонецЦикла;
			
			
			
			Пока Родитель.РемонтнаяРабота <> "Ремонтные работы" Цикл
				
				СтруктураДобавления = Новый Структура("РемонтнаяРабота, Количество, Родитель_ID, РемонтыОборудования_ID, ID", Родитель.РемонтнаяРабота, Родитель.Количество, Родитель.Родитель_ID, Родитель.РемонтыОборудования_ID, Родитель.ID);
				
				МассивСтрокРемонтныхРабот.Добавить(СтруктураДобавления);
				
				Родитель = Родитель.ПолучитьРодителя();
				
			КонецЦикла;
			
			СтруктураВыбора = Новый Структура();
			
			СтруктураВыбора.Вставить("ДокументОснование", ТекДокОснование.ДокументОснование);
			СтруктураВыбора.Вставить("СтрокаРемонтовОборудования", СтрокаРемонтовОборудования);
			СтруктураВыбора.Вставить("МассивСтрокРемонтныхРабот", МассивСтрокРемонтныхРабот);
			
			СтруктураПоиска = Новый Структура("РемонтыОборудования_ID", СтрокаРО.ID);
			МасСтрок = Объект.Исполнители.НайтиСтроки(СтруктураПоиска);
			
			МассивСтрокИсполнителей = Новый Массив;
			Для каждого Элем Из МасСтрок Цикл
				СтруктураДобавления = Новый Структура("Квалификация, ДатаНачала, ДатаОкончания, Сотрудник, КТУ, РемонтыОборудования_ID, ID", Элем.Квалификация, Элем.ДатаНачала, Элем.ДатаОкончания, Элем.Сотрудник, Элем.КТУ,Элем.РемонтыОборудования_ID, Элем.ID);
				
				МассивСтрокИсполнителей.Добавить(СтруктураДобавления);
				
			КонецЦикла;
			
			СтруктураВыбора.Вставить("МассивСтрокИсполнителей", МассивСтрокИсполнителей);
			
			МасСтрокПодр = Объект.Подрядчики.НайтиСтроки(СтруктураПоиска);
			
			МассивСтрокПодрядчики = Новый Массив;
			Для каждого Элем Из МасСтрокПодр Цикл
				СтруктураДобавления = Новый Структура("Контрагент, ДатаНачала, ДатаОкончания, РемонтыОборудования_ID, ID, ДоговорКонтрагента", Элем.Контрагент, Элем.ДатаНачала, Элем.ДатаОкончания, Элем.РемонтыОборудования_ID, Элем.ID, Элем.ДоговорКонтрагента);
				
				МассивСтрокПодрядчики.Добавить(СтруктураДобавления);
				
			КонецЦикла;
			
			СтруктураВыбора.Вставить("МассивСтрокПодрядчики", МассивСтрокПодрядчики);
			
			Если типЗнч(СтрокаРемонтовОборудования.ДокументОснование) = ТИп("ДокументСсылка.торо_ВыявленныеДефекты") тогда
				СтруктураВыбора.Вставить("НаправлениеНаУстранение", 
					ПолучитьПричинуДефекта(СтрокаРемонтовОборудования.ДокументОснование, СтрокаРемонтовОборудования.ID));
			иначе
				СтруктураВыбора.Вставить("НаправлениеНаУстранение", "");
			КонецЕсли;			
			
			ПолучитьМатИТрудЗатраты(СтруктураВыбора);
			ОповеститьОВыборе(СтруктураВыбора);
			
		КонецЕсли;
		
	Иначе 
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Не выбран документ основание для подбора или ремонт!'"), 10);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Выбрать(Команда)
	
	ВладелецФормыСтарый = ВладелецФормы;
	Если ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") Тогда
		ВладелецФормы = ВладелецФормы.Элементы.СвязанныеРемонты;
	КонецЕсли;

	Если Элементы.ДокументыОснования.ВыделенныеСтроки.Количество() > 0 Тогда
		МассивВыбора = Новый Массив;
		Для Каждого СтрокаДокументыОснования Из Элементы.ДокументыОснования.ВыделенныеСтроки Цикл
			Строка = Объект.ДокументыОснования.НайтиПоИдентификатору(СтрокаДокументыОснования);
			Если Строка <> Неопределено Тогда
				СтруктураПоискаДО = Новый Структура("ДокументОснование", Строка.ДокументОснование);
				
				МассивРО = Объект.РемонтыОборудования.НайтиСтроки(СтруктураПоискаДО);
				Для Каждого ЭлементМассиваРО Из МассивРО Цикл
					Если (ЗначениеЗаполнено(ДатаНачала) И ЭлементМассиваРО.ДатаНачала < ДатаНачала) ИЛИ 
						(ЗначениеЗаполнено(ДатаОкончания) И ЭлементМассиваРО.ДатаОкончания > ДатаОкончания) Тогда
						Продолжить;
					КонецЕсли;
					Если НЕ ФлажокЗавершенные И ЭлементМассиваРО.Завершен Тогда
						Продолжить;
					КонецЕсли; 
					
					Если Не Элементы.РемонтыОборудования.ПроверитьСтроку(ЭлементМассиваРО.ПолучитьИдентификатор()) Тогда
						Продолжить;
					КонецЕсли;
					
					СтрокаРемонтовОборудования = Новый Структура("ID, ВидРемонтныхРабот, ДатаНачала, ДатаОкончания, Завершен, ОбъектРемонта, ОбъектРемонтаВладелец, ОписаниеРемонта",
							ЭлементМассиваРО.ID, ЭлементМассиваРО.ВидРемонтныхРабот, ЭлементМассиваРО.ДатаНачала, ЭлементМассиваРО.ДатаОкончания, ЭлементМассиваРО.Завершен, ЭлементМассиваРО.ОбъектРемонта, ЭлементМассиваРО.ОбъектРемонтаВладелец, ЭлементМассиваРО.ОписаниеРемонта);
					
					СтруктураПоиска = Новый Структура("РемонтыОборудования_ID", ЭлементМассиваРО.ID);
					
					МассивСтрок = Объект.РемонтныеРаботы.НайтиСтроки(СтруктураПоиска);
					
					МассивСтрокРемонтныхРабот = Новый Массив;
					Для каждого Элем Из МассивСтрок Цикл
						СтруктураДобавления = Новый Структура("РемонтнаяРабота, Количество, Родитель_ID, РемонтыОборудования_ID, ID, ТехКартаРемонта", Элем.РемонтнаяРабота, Элем.Количество, Элем.Родитель_ID, Элем.РемонтыОборудования_ID, Элем.ID, Элем.ТехКартаРемонта);
						
						МассивСтрокРемонтныхРабот.Добавить(СтруктураДобавления);
						
					КонецЦикла;
					
					СтруктураВыбора = Новый Структура();
					
					СтруктураВыбора.Вставить("ДокументОснование", ЭлементМассиваРО.ДокументОснование);
					СтруктураВыбора.Вставить("СтрокаРемонтовОборудования", СтрокаРемонтовОборудования);
					СтруктураВыбора.Вставить("МассивСтрокРемонтныхРабот", МассивСтрокРемонтныхРабот);
					
					МасСтрок = Объект.Исполнители.НайтиСтроки(СтруктураПоиска);
					
					МассивСтрокИсполнителей = Новый Массив;
					Для каждого Элем Из МасСтрок Цикл
						СтруктураДобавления = Новый Структура("Квалификация, ДатаНачала, ДатаОкончания, Сотрудник, КТУ, РемонтыОборудования_ID, ID", Элем.Квалификация, Элем.ДатаНачала, Элем.ДатаОкончания, Элем.Сотрудник, Элем.КТУ,Элем.РемонтыОборудования_ID, Элем.ID);
						
						МассивСтрокИсполнителей.Добавить(СтруктураДобавления);
						
					КонецЦикла;
					
					СтруктураВыбора.Вставить("МассивСтрокИсполнителей", МассивСтрокИсполнителей);
					
					МасСтрокПодр = Объект.Подрядчики.НайтиСтроки(СтруктураПоиска);
					
					МассивСтрокПодрядчики = Новый Массив;
					Для каждого Элем Из МасСтрокПодр Цикл
						СтруктураДобавления = Новый Структура("Контрагент, ДатаНачала, ДатаОкончания, РемонтыОборудования_ID, ID, ДоговорКонтрагента", Элем.Контрагент, Элем.ДатаНачала, Элем.ДатаОкончания, Элем.РемонтыОборудования_ID, Элем.ID, Элем.ДоговорКонтрагента);
						
						МассивСтрокПодрядчики.Добавить(СтруктураДобавления);
						
					КонецЦикла;
					
					СтруктураВыбора.Вставить("МассивСтрокПодрядчики", МассивСтрокПодрядчики);
					
					ПолучитьМатИТрудЗатраты(СтруктураВыбора);
					МассивВыбора.Добавить(СтруктураВыбора);
					
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		ОповеститьОВыборе(МассивВыбора);
		
	КонецЕсли;
	ВладелецФормы = ВладелецФормыСтарый;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере 
Процедура ПолучитьМатИТрудЗатраты(СтруктураВыбора)
	
	тз = Новый ТаблицаЗначений;
	ксИД = новый КвалификаторыСтроки(36);
	типС = Новый ОписаниеТипов("Строка",,,,ксид);
	тз.Колонки.Добавить("РемонтнаяРабота", Новый ОписаниеТипов("СправочникСсылка.торо_ТехнологическиеОперации"));
	тз.Колонки.Добавить("РемонтыОборудования_ID", типС);
	тз.Колонки.Добавить("ID", типС);
	
	Для каждого текСтрока из СтруктураВыбора.МассивСтрокРемонтныхРабот Цикл
		нс = тз.Добавить();
		ЗаполнитьЗначенияСвойств(нс, текСтрока);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.РемонтнаяРабота,
	               |	Таб.РемонтыОборудования_ID,
	               |	Таб.ID
	               |ПОМЕСТИТЬ Вт_Док
	               |ИЗ
	               |	&Табл КАК Таб
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ТехнологическиеОперацииМатериальныеЗатраты.Номенклатура,
	               |	торо_ТехнологическиеОперацииМатериальныеЗатраты.Характеристика,
	               |	торо_ТехнологическиеОперацииМатериальныеЗатраты.Качество,
	               |	торо_ТехнологическиеОперацииМатериальныеЗатраты.Количество,
	               |	торо_ТехнологическиеОперацииМатериальныеЗатраты.ЕдиницаИзмерения,
	               |	торо_ТехнологическиеОперацииМатериальныеЗатраты.Упаковка,
	               |	торо_ТехнологическиеОперацииМатериальныеЗатраты.КоличествоУпаковок,
	               |	Вт_Док.РемонтыОборудования_ID,
	               |	Вт_Док.ID
	               |ИЗ
	               |	Вт_Док КАК Вт_Док
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации.МатериальныеЗатраты КАК торо_ТехнологическиеОперацииМатериальныеЗатраты
	               |		ПО Вт_Док.РемонтнаяРабота = торо_ТехнологическиеОперацииМатериальныеЗатраты.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ТехнологическиеОперацииТрудовыеЗатраты.Квалификация,
	               |	торо_ТехнологическиеОперацииТрудовыеЗатраты.Количество,
	               |	торо_ТехнологическиеОперацииТрудовыеЗатраты.ВремяРаботы,
	               |	Вт_Док.РемонтыОборудования_ID,
	               |	Вт_Док.ID
	               |ИЗ
	               |	Вт_Док КАК Вт_Док
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации.ТрудовыеЗатраты КАК торо_ТехнологическиеОперацииТрудовыеЗатраты
	               |		ПО Вт_Док.РемонтнаяРабота = торо_ТехнологическиеОперацииТрудовыеЗатраты.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Вт_Док.РемонтыОборудования_ID,
	               |	Вт_Док.ID,
	               |	торо_ТехнологическиеОперацииИнструментыИТехника.Инструмент,
	               |	торо_ТехнологическиеОперацииИнструментыИТехника.Количество,
	               |	торо_ТехнологическиеОперацииИнструментыИТехника.ЕдиницаИзмерения,
	               |	торо_ТехнологическиеОперацииИнструментыИТехника.ВремяРаботы,
	               |	торо_ТехнологическиеОперацииИнструментыИТехника.Расценка,
	               |	торо_ТехнологическиеОперацииИнструментыИТехника.Валюта,
	               |	торо_ТехнологическиеОперацииИнструментыИТехника.Упаковка,
	               |	торо_ТехнологическиеОперацииИнструментыИТехника.КоличествоУпаковок
	               |ИЗ
	               |	Вт_Док КАК Вт_Док
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации.ИнструментыИТехника КАК торо_ТехнологическиеОперацииИнструментыИТехника
	               |		ПО Вт_Док.РемонтнаяРабота = торо_ТехнологическиеОперацииИнструментыИТехника.Ссылка";
				   
	Запрос.УстановитьПараметр("Табл", тз);
	
	Результат = Запрос.ВыполнитьПакет();
	
	матЗатраты = Результат[1].Выгрузить();
	трудЗатраты = Результат[2].Выгрузить();
	ИнструментыИТехника = Результат[3].Выгрузить();
	
	массивПараметров = Новый массив;
	Для каждого текСтрока из матЗатраты цикл
		струк = Новый Структура("Номенклатура, Характеристика, Качество, Количество, ЕдиницаИзмерения, Упаковка, КоличествоУпаковок,РемонтыОборудования_ID, ID");
		ЗаполнитьЗначенияСвойств(струк, текСтрока);
		массивПараметров.Добавить(струк);
	КонецЦикла;
	СтруктураВыбора.вставить("матЗатраты", массивПараметров);
	
	массивПараметров = Новый Массив;
	Для каждого текСтрока из трудЗатраты цикл
		струк = Новый Структура("Квалификация, Количество, ВремяРаботы,РемонтыОборудования_ID, ID");
		ЗаполнитьЗначенияСвойств(струк, текСтрока);
		массивПараметров.Добавить(струк);
	КонецЦикла;
	СтруктураВыбора.вставить("трудЗатраты", массивПараметров);
	
	массивПараметров = Новый Массив;
	Для каждого текСтрока из ИнструментыИТехника цикл
		струк = Новый Структура("Инструмент, Количество, ЕдиницаИзмерения, ВремяРаботы, Расценка, Валюта, Упаковка, 
			|КоличествоУпаковок, РемонтыОборудования_ID, ID");
		ЗаполнитьЗначенияСвойств(струк, текСтрока);
		массивПараметров.Добавить(струк);
	КонецЦикла;
	СтруктураВыбора.вставить("ИнструментыИТехника", массивПараметров);
	
КонецПроцедуры

&НаСервере 
Функция  ПолучитьПричинуДефекта(ДокументОснование, ID)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранение
	               |ИЗ
	               |	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
	               |ГДЕ
	               |	торо_ВыявленныеДефектыСписокДефектов.Ссылка = &Ссылка
	               |	И торо_ВыявленныеДефектыСписокДефектов.ID = &ID";
	   
	Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
	Запрос.УстановитьПараметр("ID", ID);
	 
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() тогда
		Возврат "";
	КонецЕсли;
	
	Выборка = Результат.Выбрать(); 
	Выборка.Следующий();
	Возврат Выборка.НаправлениеНаУстранение;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРемонтыОборудования(СписокДокументОснование)
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("ТехКарта");
	ТаблицаЗначений.Колонки.Добавить("ID");
	
	Объект.РемонтыОборудования.Очистить();
	Объект.РемонтныеРаботы.Очистить();
	Объект.Исполнители.Очистить();
	Объект.Подрядчики.Очистить();
	
	ТаблицаОтбора = новый ТаблицаЗначений;
	ТаблицаОтбора.Колонки.Добавить("ДокументОснование");
	
	ТипДокОснования = ТипЗнч(СписокДокументОснование);
	
	Если Документы.ТипВсеСсылки().СодержитТип(ТипДокОснования) Тогда
		Нс = ТаблицаОтбора.Добавить();
		Нс.ДокументОснование = СписокДокументОснование;
	ИначеЕсли ТипДокОснования = Тип("Массив") Тогда
		Для Каждого ТекСтрока Из СписокДокументОснование Цикл
			Строка = Объект.ДокументыОснования.НайтиПоИдентификатору(ТекСтрока);
			Если Строка <> Неопределено Тогда
				НС = ТаблицаОтбора.Добавить();
				НС.ДокументОснование = Строка.ДокументОснование;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не СписокДокументОснование = Неопределено Тогда
		
		Для Каждого Стр Из ТаблицаОтбора Цикл
			ДокументОснование = Стр.ДокументОснование;
			
			Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.торо_ПланГрафикРемонта") Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст =
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	&Ссылка КАК Ссылка
				|ПОМЕСТИТЬ ВТ_Ссылки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	торо_ПланГрафикРемонта.ID КАК ID
				|ПОМЕСТИТЬ ВТ_ID
				|ИЗ
				|	Документ.торо_ПланГрафикРемонта.ПланРемонтов КАК торо_ПланГрафикРемонта
				|ГДЕ
				|	торо_ПланГрафикРемонта.Ссылка В
				|			(ВЫБРАТЬ
				|				ВТ_Ссылки.Ссылка
				|			ИЗ
				|				ВТ_Ссылки)
				|	И НЕ торо_ПланГрафикРемонта.Ссылка В
				|				(ВЫБРАТЬ
				|					торо_ОтмененныеРемонтыСрезПоследних.ID КАК ID
				|				ИЗ
				|					РегистрСведений.торо_ОтмененныеРемонты.СрезПоследних КАК торо_ОтмененныеРемонтыСрезПоследних)
				|%УсловиеДляОтбора%
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	торо_ПлановыеРемонтныеРаботы.ID КАК ID,
				|	торо_ПлановыеРемонтныеРаботы.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
				|	торо_ПлановыеРемонтныеРаботы.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				|	торо_ПлановыеРемонтныеРаботы.ДатаНачалаРемонтныхРабот КАК ДатаНач,
				|	торо_ПлановыеРемонтныеРаботы.ДатаОкончанияРемонтныхРабот КАК ДатаКон,
				|	торо_ПлановыеРемонтныеРаботы.Период КАК Период,
				|	торо_ПлановыеРемонтныеРаботы.Исполнитель КАК Исполнитель,
				|	торо_ПлановыеРемонтныеРаботы.СпособВыполнения КАК СпособВыполнения
				|ПОМЕСТИТЬ ТаблицаРемонтовСрез
				|ИЗ
				|	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних(
				|			,
				|			Регистратор <> &СсылкаВладелец
				|				И ID В
				|					(ВЫБРАТЬ
				|						ВТ_ID.ID
				|					ИЗ
				|						ВТ_ID КАК ВТ_ID)) КАК торо_ПлановыеРемонтныеРаботы
				|ГДЕ
				|	НЕ торо_ПлановыеРемонтныеРаботы.Отменен
				|	И НЕ торо_ПлановыеРемонтныеРаботы.Замещен
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ID
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	торо_ОстановочныеРемонтыСрезПоследних.IDОсновного КАК IDОсновного,
				|	торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого КАК IDЗависимого
				|ПОМЕСТИТЬ РСОстРемонты
				|ИЗ
				|	РегистрСведений.торо_ОстановочныеРемонты.СрезПоследних(
				|			,
				|			IDЗависимого В
				|				(ВЫБРАТЬ
				|					ВТ_ID.ID
				|				ИЗ
				|					ВТ_ID КАК ВТ_ID)) КАК торо_ОстановочныеРемонтыСрезПоследних
				|ГДЕ
				|	НЕ торо_ОстановочныеРемонтыСрезПоследних.Отвязан
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаРемонтов.ID КАК ID,
				|	ТаблицаРемонтов.ОбъектРемонтныхРабот КАК ОбъектРемонта,
				|	ТаблицаРемонтов.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				|	ТаблицаРемонтов.ДатаНач КАК ДатаНачала,
				|	ТаблицаРемонтов.ДатаКон КАК ДатаОкончания,
				|	ТаблицаРемонтов.Период КАК Период,
				|	ВЫБОР
				|		КОГДА торо_ЗавершенныеРемонтныеРаботы.ID ЕСТЬ NULL
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ИСТИНА
				|	КОНЕЦ КАК Завершен,
				|	торо_ОстановочныеРемонтыСрезПоследних.IDОсновного КАК IDОсновного,
				|	ТаблицаРемонтов.Исполнитель КАК Исполнитель,
				|	ТаблицаРемонтов.СпособВыполнения КАК СпособВыполнения
				|ИЗ
				|	ТаблицаРемонтовСрез КАК ТаблицаРемонтов
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
				|		ПО ТаблицаРемонтов.ID = торо_ЗавершенныеРемонтныеРаботы.ID
				|		ЛЕВОЕ СОЕДИНЕНИЕ РСОстРемонты КАК торо_ОстановочныеРемонтыСрезПоследних
				|		ПО ТаблицаРемонтов.ID = торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого";
				
				ДополнитьТекстИПараметрыЗапросаДляНаложенияОтборов(Запрос, "торо_ПланГрафикРемонта.ОбъектРемонтныхРабот", Истина);

				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				Запрос.УстановитьПараметр("СсылкаВладелец", Владелец);
				ТаблицаПланаРемонтов = Запрос.Выполнить().Выгрузить();
				
				/////	
				ТаблицаПланаРемонтов.Сортировать("Период Возр");					
				СтруктураПоиска = Новый Структура;
				Для Каждого СтрокаТЗ Из ТаблицаПланаРемонтов Цикл
					СтруктураПоиска.Очистить();
					СтруктураПоиска.Вставить("ID", СтрокаТЗ.ID);
					МассивСтрок = ТаблицаПланаРемонтов.НайтиСтроки(СтруктураПоиска);
					Если МассивСтрок.Количество() > 1 Тогда
						Для Парам=0 По МассивСтрок.Количество()-2 Цикл
							ТаблицаПланаРемонтов.Удалить(МассивСтрок[Парам]);
						КонецЦИкла;	
					КонецЕсли;	
				КонецЦикла;
				/////
				
				Для Каждого СтрокаТЧ Из ТаблицаПланаРемонтов Цикл 
					
					ДобавлятьРемонт = Истина;
					
					ДобавлятьРемонт = ПроверитьРемонтНаДобавление(СтрокаТЧ);
					
					Если Не ДобавлятьРемонт Тогда 
						Продолжить;
					КонецЕсли;
					
					НовСтрокаРО = Объект.РемонтыОборудования.Добавить();
					НовСтрокаРО.ID                = СтрокаТЧ.ID;
					НовСтрокаРО.ОбъектРемонта     = СтрокаТЧ.ОбъектРемонта;
					НовСтрокаРО.ВидРемонтныхРабот = СтрокаТЧ.ВидРемонтныхРабот;
					НовСтрокаРО.ДатаНачала        = СтрокаТЧ.ДатаНачала;
					НовСтрокаРО.ДатаОкончания     = СтрокаТЧ.ДатаОкончания;
					НовСтрокаРО.ДокументОснование = ДокументОснование;
					НовСтрокаРО.Завершен		  = СтрокаТЧ.Завершен;
					НовСтрокаРО.IDОсновного		  = СтрокаТЧ.IDОсновного;
					
				КонецЦикла; 
				
				ОбъектЗначение = РеквизитФормыВЗначение("Объект");
				
				торо_Ремонты.ЗаполнитьРемонтныеРаботыПоНормативам(ОбъектЗначение, "РемонтыОборудования", "РемонтныеРаботы"); 
				
				ЗначениеВРеквизитФормы(ОбъектЗначение, "Объект");
				
				Для Каждого СтрокаРО Из ТаблицаПланаРемонтов Цикл 
					Если НЕ ЗначениеЗаполнено(СтрокаРО.Исполнитель) 
						ИЛИ СтрокаРО.СпособВыполнения <> Перечисления.СпособыСтроительства.Подрядный Тогда
						Продолжить;
					КонецЕсли;
					
					СтрокиРР  = Объект.РемонтныеРаботы.НайтиСтроки(Новый Структура("РемонтыОборудования_ID", СтрокаРО.ID));
					
					Для каждого СтрокаРР из СтрокиРР Цикл 
						Если ТипЗнч(СтрокаРР.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") Тогда
							НовСтрокаПодр = Объект.Подрядчики.Добавить();
							НовСтрокаПодр.РемонтыОборудования_ID	= СтрокаРР.РемонтыОборудования_ID;
							НовСтрокаПодр.ID 								= СтрокаРР.ID;
							НовСтрокаПодр.Контрагент 					= СтрокаРО.Исполнитель;
							НовСтрокаПодр.ДатаНачала        			= СтрокаТЧ.ДатаНачала;
							НовСтрокаПодр.ДатаОкончания     			= СтрокаТЧ.ДатаОкончания;
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
				
			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов.ID КАК ID,
				|	торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов.СписокОбъектовРемонта,
				|	торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов.ВидРемонтныхРабот,
				|	торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов.ДатаНач,
				|	торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов.ДатаКон,
				|	торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов.Исполнитель,
				|	торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов.СпособВыполнения
				|ПОМЕСТИТЬ ТаблицаРемонтов
				|ИЗ
				|	Документ.торо_ГрафикРегламентныхМероприятийТОиР.ПланРемонтов КАК торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов
				|ГДЕ
				|	торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов.Ссылка = &Ссылка
				|	И НЕ торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов.Отменен
				|	И НЕ торо_ГрафикРегламентныхМероприятияТОиРПланРемонтов.Замещен
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ID
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ТаблицаРемонтов.ID КАК ID,
				|	ТаблицаРемонтов.СписокОбъектовРемонта,
				|	ТаблицаРемонтов.ВидРемонтныхРабот,
				|	торо_ПлановыеМероприятия.ДатаНачала КАК ДатаНач,
				|	торо_ПлановыеМероприятия.ДатаОкончания КАК ДатаКон,
				|	ТаблицаРемонтов.Исполнитель,
				|	ТаблицаРемонтов.СпособВыполнения
				|ПОМЕСТИТЬ ТаблицаРемонтовСрез
				|ИЗ
				|	ТаблицаРемонтов КАК ТаблицаРемонтов
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПлановыеМероприятия.СрезПоследних(, ) КАК торо_ПлановыеМероприятия
				|		ПО ТаблицаРемонтов.ID = торо_ПлановыеМероприятия.ID
				|ГДЕ
				|	НЕ торо_ПлановыеМероприятия.Отменен
				|	И ТаблицаРемонтов.ID В
				|			(ВЫБРАТЬ
				|				ТаблицаРемонтов.ID
				|			ИЗ
				|				ТаблицаРемонтов КАК ТаблицаРемонтов)
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ID
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ТаблицаРемонтов.ID,
				|	ТаблицаРемонтов.СписокОбъектовРемонта,
				|	ТаблицаРемонтов.ВидРемонтныхРабот,
				|	ТаблицаРемонтов.ДатаНач,
				|	ТаблицаРемонтов.ДатаКон,
				|	ВЫБОР
				|		КОГДА торо_ЗавершенныеРемонтныеРаботы.ID ЕСТЬ NULL 
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ИСТИНА
				|	КОНЕЦ КАК Завершен,
				|	ТаблицаРемонтов.Исполнитель,
				|	ТаблицаРемонтов.СпособВыполнения
				|ИЗ
				|	ТаблицаРемонтовСрез КАК ТаблицаРемонтов
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеМероприятия КАК торо_ЗавершенныеРемонтныеРаботы
				|		ПО ТаблицаРемонтов.ID = торо_ЗавершенныеРемонтныеРаботы.ID";
				
										   
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаПланаРемонтов = Запрос.Выполнить().Выгрузить();
				
				/////	
				ТаблицаПланаРемонтов.Сортировать("ДатаНач Возр");					
				СтруктураПоиска = Новый Структура;
				Для Каждого СтрокаТЗ Из ТаблицаПланаРемонтов Цикл
					СтруктураПоиска.Очистить();
					СтруктураПоиска.Вставить("ID", СтрокаТЗ.ID);
					МассивСтрок = ТаблицаПланаРемонтов.НайтиСтроки(СтруктураПоиска);
					Если МассивСтрок.Количество() > 1 Тогда
						Для Парам=0 По МассивСтрок.Количество()-2 Цикл
							ТаблицаПланаРемонтов.Удалить(МассивСтрок[Парам]);
						КонецЦИкла;	
					КонецЕсли;	
				КонецЦикла;
				/////
				
				Для Каждого СтрокаТЧ Из ТаблицаПланаРемонтов Цикл 
										
					ДобавлятьРемонт = Истина;
					
					Если ЗначениеЗаполнено(ДатаНачала) Тогда
						Если СтрокаТЧ.ДатаНач < ДатаНачала Тогда
							ДобавлятьРемонт = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ДатаОкончания) Тогда
						Если СтрокаТЧ.ДатаКон > ДатаОкончания Тогда
							ДобавлятьРемонт = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если Не ДобавлятьРемонт Тогда 
						Продолжить;
					КонецЕсли;
					
					НовСтрокаРО = Объект.РемонтыОборудования.Добавить();
					НовСтрокаРО.ID                = СтрокаТЧ.ID;
					НовСтрокаРО.ОбъектРемонта     = СтрокаТЧ.СписокОбъектовРемонта;
					НовСтрокаРО.ВидРемонтныхРабот = СтрокаТЧ.ВидРемонтныхРабот;
					НовСтрокаРО.ДатаНачала        = СтрокаТЧ.ДатаНач;
					НовСтрокаРО.ДатаОкончания     = СтрокаТЧ.ДатаКон;
					НовСтрокаРО.ДокументОснование = ДокументОснование;
					НовСтрокаРО.Завершен		  = СтрокаТЧ.Завершен;
					
				КонецЦикла;
				
				ОбъектЗначение = РеквизитФормыВЗначение("Объект");
				
				торо_Ремонты.ЗаполнитьРемонтныеРаботыПоНормативам(ОбъектЗначение, "РемонтыОборудования", "РемонтныеРаботы"); 
				
				ЗначениеВРеквизитФормы(ОбъектЗначение, "Объект");
				
				Для Каждого СтрокаРО Из ТаблицаПланаРемонтов Цикл 
					Если НЕ ЗначениеЗаполнено(СтрокаРО.Исполнитель) 
						ИЛИ СтрокаРО.СпособВыполнения <> Перечисления.СпособыСтроительства.Подрядный Тогда
						Продолжить;
					КонецЕсли;
					
					СтрокиРР  = Объект.РемонтныеРаботы.НайтиСтроки(Новый Структура("РемонтыОборудования_ID", СтрокаРО.ID));
					
					Для каждого СтрокаРР из СтрокиРР Цикл
						Если ТипЗнч(СтрокаРР.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") Тогда
							НовСтрокаПодр = Объект.Подрядчики.Добавить();
							НовСтрокаПодр.РемонтыОборудования_ID	= СтрокаРР.РемонтыОборудования_ID;
							НовСтрокаПодр.ID 								= СтрокаРР.ID;
							НовСтрокаПодр.Контрагент 					= СтрокаРО.Исполнитель;
							НовСтрокаПодр.ДатаНачала        			= СтрокаТЧ.ДатаНач;
							НовСтрокаПодр.ДатаОкончания     			= СтрокаТЧ.ДатаКон;
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;

				
			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
				
				ВидРемРаботПоКонстанте = Константы.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Получить();
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_ВыявленныеДефектыСписокДефектов.ID КАК ID,
				               |	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта КАК ОбъектРемонта,
				               |	торо_ВыявленныеДефектыСписокДефектов.ВидРемонтов КАК ВидРемонтов,
				               |	торо_ВыявленныеДефектыСписокДефектов.ОтказавшийЭлемент КАК ОтказавшийЭлемент,
				               |	торо_ВыявленныеДефектыСписокДефектов.НаправлениеНаУстранение КАК НаправлениеНаУстранение
				               |ПОМЕСТИТЬ ТаблицаДефектов
				               |ИЗ
				               |	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
				               |ГДЕ
				               |	торо_ВыявленныеДефектыСписокДефектов.Ссылка = &Ссылка
				               |	И НЕ торо_ВыявленныеДефектыСписокДефектов.ID В
				               |				(ВЫБРАТЬ
				               |					торо_ОтмененныеРемонтыСрезПоследних.ID КАК ID
				               |				ИЗ
				               |					РегистрСведений.торо_ОтмененныеРемонты.СрезПоследних КАК торо_ОтмененныеРемонтыСрезПоследних)
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	ТаблицаДефектов.ID КАК ID,
				               |	ТаблицаДефектов.ОбъектРемонта КАК ОбъектРемонта,
				               |	ТаблицаДефектов.ВидРемонтов КАК ВидРемонтов,
				               |	ТаблицаДефектов.ОтказавшийЭлемент КАК ОтказавшийЭлемент,
				               |	ВЫБОР
				               |		КОГДА торо_ЗавершенныеРемонтныеРаботы.ID ЕСТЬ NULL
				               |			ТОГДА ЛОЖЬ
				               |		ИНАЧЕ ИСТИНА
				               |	КОНЕЦ КАК Завершен,
				               |	ТаблицаДефектов.НаправлениеНаУстранение КАК ОписаниеРемонта,
				               |	торо_ОстановочныеРемонтыСрезПоследних.IDОсновного КАК IDОсновного
				               |ИЗ
				               |	ТаблицаДефектов КАК ТаблицаДефектов
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
				               |		ПО ТаблицаДефектов.ID = торо_ЗавершенныеРемонтныеРаботы.ID
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОстановочныеРемонты.СрезПоследних(, ) КАК торо_ОстановочныеРемонтыСрезПоследних
				               |		ПО ТаблицаДефектов.ID = торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого
				               |			И (НЕ торо_ОстановочныеРемонтыСрезПоследних.Отвязан)
							   |%УсловиеДляОтбора%";

				ДополнитьТекстИПараметрыЗапросаДляНаложенияОтборов(Запрос, "ТаблицаДефектов.ОтказавшийЭлемент");
							   
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаДефектов = Запрос.Выполнить().Выгрузить();

				
				Для Каждого СтрокаТЧ Из ТаблицаДефектов Цикл 
					
					ДобавлятьРемонт = Истина;
					
					Если Не ДобавлятьРемонт Тогда 
						Продолжить;
					КонецЕсли;
					
					НовСтрокаРО = Объект.РемонтыОборудования.Добавить();
					
					НовСтрокаРО.ID                = СтрокаТЧ.ID;
					НовСтрокаРО.ДокументОснование = ДокументОснование;
					НовСтрокаРО.ОписаниеРемонта	  = СтрокаТЧ.ОписаниеРемонта;
					НовСтрокаРО.IDОсновного 	  = СтрокаТЧ.IDОсновного;
					
					
					Если ЗначениеЗаполнено(СтрокаТЧ.ОтказавшийЭлемент) Тогда				
						
						НовСтрокаРО.ОбъектРемонтаВладелец = СтрокаТЧ.ОбъектРемонта;
						
						НовСтрокаРО.ОбъектРемонта     = СтрокаТЧ.ОтказавшийЭлемент;
						
					Иначе
						
						НовСтрокаРО.ОбъектРемонта		= СтрокаТЧ.ОбъектРемонта;  
						
					КонецЕсли;
					
					НовСтрокаРО.ВидРемонтныхРабот = ?(ЗначениеЗаполнено(СтрокаТЧ.ВидРемонтов), СтрокаТЧ.ВидРемонтов, ВидРемРаботПоКонстанте);
					НовСтрокаРО.Завершен = СтрокаТЧ.Завершен;
					
				КонецЦикла; 
				
				ОбъектЗначение = РеквизитФормыВЗначение("Объект");
				торо_Ремонты.ЗаполнитьРемонтныеРаботыПоНормативам(ОбъектЗначение, "РемонтыОборудования", "РемонтныеРаботы"); 
				
				ЗначениеВРеквизитФормы(ОбъектЗначение, "Объект");
				
			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ID КАК ID,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала КАК ДатаНачала,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДокументИсточник КАК ДокументИсточник
				               |ПОМЕСТИТЬ ТабРОЗаявки
				               |ИЗ
				               |	Документ.торо_ЗаявкаНаРемонт.РемонтыОборудования КАК торо_ЗаявкаНаРемонтРемонтыОборудования
				               |ГДЕ
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.Ссылка = &Ссылка
				               |	И НЕ торо_ЗаявкаНаРемонтРемонтыОборудования.ID В
				               |				(ВЫБРАТЬ
				               |					торо_ОтмененныеРемонтыСрезПоследних.ID КАК ID
				               |				ИЗ
				               |					РегистрСведений.торо_ОтмененныеРемонты.СрезПоследних КАК торо_ОтмененныеРемонтыСрезПоследних)
				               |%УсловиеДляОтбора%
							   |
				               |ИНДЕКСИРОВАТЬ ПО
				               |	ID
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	торо_ЗаявкиПоРемонтамСрезПоследних.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
				               |	торо_ЗаявкиПоРемонтамСрезПоследних.ДатаОкончанияРемонтныхРабот КАК ДатаОкончанияРемонтныхРабот,
				               |	торо_ЗаявкиПоРемонтамСрезПоследних.Период КАК Период,
				               |	торо_ЗаявкиПоРемонтамСрезПоследних.IDРемонта КАК IDРемонта
				               |ПОМЕСТИТЬ РСЗаявкиНаРемонт
				               |ИЗ
				               |	РегистрСведений.торо_ЗаявкиПоРемонтам.СрезПоследних(
				               |			,
				               |			IDРемонта В
				               |				(ВЫБРАТЬ
				               |					ТабРОЗаявки.ID
				               |				ИЗ
				               |					ТабРОЗаявки КАК ТабРОЗаявки)) КАК торо_ЗаявкиПоРемонтамСрезПоследних
				               |ГДЕ
				               |	НЕ торо_ЗаявкиПоРемонтамСрезПоследних.Отменен
				               |
				               |ИНДЕКСИРОВАТЬ ПО
				               |	IDРемонта
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ID КАК ID,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала КАК ДатаНачала,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаОкончания КАК ДатаОкончания,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДокументИсточник КАК ДокументИсточник,
				               |	торо_ЗаявкиПоРемонтамСрезПоследних.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот,
				               |	торо_ЗаявкиПоРемонтамСрезПоследних.ДатаОкончанияРемонтныхРабот КАК ДатаОкончанияРемонтныхРабот,
				               |	торо_ЗаявкиПоРемонтамСрезПоследних.Период КАК Период
				               |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
				               |ИЗ
				               |	ТабРОЗаявки КАК торо_ЗаявкаНаРемонтРемонтыОборудования
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РСЗаявкиНаРемонт КАК торо_ЗаявкиПоРемонтамСрезПоследних
				               |		ПО торо_ЗаявкаНаРемонтРемонтыОборудования.ID = торо_ЗаявкиПоРемонтамСрезПоследних.IDРемонта
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	торо_ОстановочныеРемонтыСрезПоследних.IDОсновного КАК IDОсновного,
				               |	торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого КАК IDЗависимого
				               |ПОМЕСТИТЬ РСОстРемонты
				               |ИЗ
				               |	РегистрСведений.торо_ОстановочныеРемонты.СрезПоследних(
				               |			,
				               |			IDЗависимого В
				               |				(ВЫБРАТЬ
				               |					ТабРОЗаявки.ID
				               |				ИЗ
				               |					ТабРОЗаявки КАК ТабРОЗаявки)) КАК торо_ОстановочныеРемонтыСрезПоследних
				               |ГДЕ
				               |	НЕ торо_ОстановочныеРемонтыСрезПоследних.Отвязан
				               |
				               |ИНДЕКСИРОВАТЬ ПО
				               |	торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ТаблицаРемонтовОборудования.ID КАК ID,
				               |	ТаблицаРемонтовОборудования.ОбъектРемонта КАК ОбъектРемонта,
				               |	ТаблицаРемонтовОборудования.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
				               |	ТаблицаРемонтовОборудования.ДатаНачалаРемонтныхРабот КАК ДатаНачала,
				               |	ТаблицаРемонтовОборудования.ДатаОкончанияРемонтныхРабот КАК ДатаОкончания,
				               |	ТаблицаРемонтовОборудования.ДокументИсточник КАК ДокументИсточник,
				               |	ВЫБОР
				               |		КОГДА торо_ЗавершенныеРемонтныеРаботы.ID ЕСТЬ NULL
				               |			ТОГДА ЛОЖЬ
				               |		ИНАЧЕ ИСТИНА
				               |	КОНЕЦ КАК Завершен,
				               |	торо_ОстановочныеРемонтыСрезПоследних.IDОсновного КАК IDОсновного,
				               |	ТаблицаРемонтовОборудования.Период КАК Период
				               |ИЗ
				               |	ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
				               |		ПО ТаблицаРемонтовОборудования.ID = торо_ЗавершенныеРемонтныеРаботы.ID
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РСОстРемонты КАК торо_ОстановочныеРемонтыСрезПоследних
				               |		ПО ТаблицаРемонтовОборудования.ID = торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого";
							   
				ДополнитьТекстИПараметрыЗапросаДляНаложенияОтборов(Запрос, "торо_ЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта", Истина);
							   
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаРемонтовОборудования = Запрос.Выполнить().Выгрузить();
				
				/////	
				ТаблицаРемонтовОборудования.Сортировать("Период Возр");					
				СтруктураПоиска = Новый Структура;
				Для Каждого СтрокаТЗ Из ТаблицаРемонтовОборудования Цикл
					СтруктураПоиска.Очистить();
					СтруктураПоиска.Вставить("ID", СтрокаТЗ.ID);
					МассивСтрок = ТаблицаРемонтовОборудования.НайтиСтроки(СтруктураПоиска);
					Если МассивСтрок.Количество() > 1 Тогда
						Для Парам=0 По МассивСтрок.Количество()-2 Цикл
							ТаблицаРемонтовОборудования.Удалить(МассивСтрок[Парам]);
						КонецЦИкла;	
					КонецЕсли;	
				КонецЦикла;
				/////
				
				Для Каждого СтрокаТЧ Из ТаблицаРемонтовОборудования Цикл 
					
					ДобавлятьРемонт = Истина;
					
					Если ЗначениеЗаполнено(ДатаНачала) Тогда
						Если СтрокаТЧ.ДатаНачала < ДатаНачала Тогда
							ДобавлятьРемонт = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ДатаОкончания) Тогда
						Если СтрокаТЧ.ДатаОкончания > ДатаОкончания Тогда
							ДобавлятьРемонт = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					ДобавлятьРемонт = ПроверитьРемонтНаДобавление(СтрокаТЧ);
					
					Если Не ДобавлятьРемонт Тогда 
						Продолжить;
					КонецЕсли;
					
					НовСтрокаРО = Объект.РемонтыОборудования.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрокаРО, СтрокаТЧ);
					НовСтрокаРО.ДокументОснование = ДокументОснование;
					
				КонецЦикла; 
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ID,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ВидРемонтныхРабот,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаОкончания,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДокументИсточник
				               |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
				               |ИЗ
				               |	&ТаблицаРемонтовОборудования КАК торо_ЗаявкаНаРемонтРемонтыОборудования
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.ID,
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота,
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Родитель_ID,
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Количество,
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтыОборудования_ID
				               |ПОМЕСТИТЬ ТаблицаРемонтныхРабот
				               |ИЗ
				               |	Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтРемонтныеРаботы
				               |ГДЕ
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Ссылка = &Ссылка
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	ТаблицаРемонтныхРабот.ID,
				               |	ТаблицаРемонтныхРабот.РемонтнаяРабота,
				               |	ТаблицаРемонтныхРабот.Родитель_ID,
				               |	ТаблицаРемонтныхРабот.Количество,
				               |	ТаблицаРемонтныхРабот.РемонтыОборудования_ID,
				               |	ЕСТЬNULL(РодителиТехОпераций.РемонтнаяРабота, Значение(Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка)) КАК ТехКартаРемонта
				               |ИЗ
				               |	ТаблицаРемонтныхРабот КАК ТаблицаРемонтныхРабот
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ПО ТаблицаРемонтныхРабот.РемонтыОборудования_ID = ТаблицаРемонтовОборудования.ID
				               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРемонтныхРабот КАК РодителиТехОпераций
				               |		ПО ТаблицаРемонтныхРабот.Родитель_ID = РодителиТехОпераций.ID
				               |			И ТаблицаРемонтныхРабот.РемонтыОборудования_ID = РодителиТехОпераций.РемонтыОборудования_ID
				               |			И (ВЫРАЗИТЬ(РодителиТехОпераций.РемонтнаяРабота КАК Справочник.торо_ИдентификаторыТехКарт) ССЫЛКА Справочник.торо_ИдентификаторыТехКарт)";
							   
							   
				Запрос.УстановитьПараметр("ТаблицаРемонтовОборудования", ТаблицаРемонтовОборудования);
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаРемонтныхРабот = Запрос.Выполнить().Выгрузить();
				
				Для Каждого СтрокаТЧ Из ТаблицаРемонтныхРабот Цикл 
					
					НовСтрокаРР = Объект.РемонтныеРаботы.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрокаРР, СтрокаТЧ);
					
				КонецЦикла; 
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ID,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ВидРемонтныхРабот,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачала,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаОкончания,
				               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДокументИсточник
				               |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
				               |ИЗ
				               |	&ТаблицаРемонтовОборудования КАК торо_ЗаявкаНаРемонтРемонтыОборудования
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_ЗаявкаНаРемонтИсполнителиРемонтныхРабот.ID,
				               |	торо_ЗаявкаНаРемонтИсполнителиРемонтныхРабот.Исполнитель,
				               |	торо_ЗаявкаНаРемонтИсполнителиРемонтныхРабот.РемонтыОборудования_ID
				               |ПОМЕСТИТЬ ТаблицаИсполнителей
				               |ИЗ
				               |	Документ.торо_ЗаявкаНаРемонт.ИсполнителиРемонтныхРабот КАК торо_ЗаявкаНаРемонтИсполнителиРемонтныхРабот
				               |ГДЕ
				               |	торо_ЗаявкаНаРемонтИсполнителиРемонтныхРабот.Ссылка = &Ссылка
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ТаблицаИсполнителей.ID,
				               |	ТаблицаИсполнителей.Исполнитель КАК Сотрудник,
				               |	ТаблицаИсполнителей.РемонтыОборудования_ID
				               |ИЗ
				               |	ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаИсполнителей КАК ТаблицаИсполнителей
				               |		ПО ТаблицаРемонтовОборудования.ID = ТаблицаИсполнителей.РемонтыОборудования_ID";
							   
							   
				Запрос.УстановитьПараметр("ТаблицаРемонтовОборудования", ТаблицаРемонтовОборудования);
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаИсполнителей = Запрос.Выполнить().Выгрузить();
				
				Для каждого СтрТаб Из ТаблицаИсполнителей Цикл
					
					Если ТипЗнч(СтрТаб.Сотрудник) = Тип("СправочникСсылка.Сотрудники") Тогда
						
						НС = Объект.Исполнители.Добавить();
						
						ЗаполнитьЗначенияСвойств(НС, СтрТаб);
					ИначеЕсли ТипЗнч(СтрТаб.Сотрудник) = Тип("СправочникСсылка.Контрагенты") Тогда
						
						НС = Объект.Подрядчики.Добавить();
						
						ЗаполнитьЗначенияСвойств(НС, СтрТаб);
						
						НС.Контрагент = СтрТаб.Сотрудник;
					КонецЕсли;
					
				КонецЦикла;
				
			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот") Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_НарядРемонтыОборудования.ID,
				               |	торо_НарядРемонтыОборудования.ОбъектРемонта,
				               |	торо_НарядРемонтыОборудования.ВидРемонтныхРабот,
				               |	торо_НарядРемонтыОборудования.ДатаНачала,
				               |	торо_НарядРемонтыОборудования.ДатаОкончания,
				               |	торо_НарядРемонтыОборудования.ДокументИсточник
				               |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
				               |ИЗ
				               |	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК торо_НарядРемонтыОборудования
				               |ГДЕ
				               |	торо_НарядРемонтыОборудования.Ссылка = &Ссылка
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	ТаблицаРемонтовОборудования.ID,
				               |	ТаблицаРемонтовОборудования.ОбъектРемонта,
				               |	ТаблицаРемонтовОборудования.ВидРемонтныхРабот,
				               |	ТаблицаРемонтовОборудования.ДатаНачала,
				               |	ТаблицаРемонтовОборудования.ДатаОкончания,
				               |	ТаблицаРемонтовОборудования.ДокументИсточник,
				               |	ВЫБОР
				               |		КОГДА торо_ЗавершенныеРемонтныеРаботы.ID ЕСТЬ NULL 
				               |			ТОГДА ЛОЖЬ
				               |		ИНАЧЕ ИСТИНА
				               |	КОНЕЦ КАК Завершен,
				               |	торо_ОстановочныеРемонтыСрезПоследних.IDОсновного КАК IDОсновного
				               |ИЗ
				               |	ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
				               |		ПО ТаблицаРемонтовОборудования.ID = торо_ЗавершенныеРемонтныеРаботы.ID
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОстановочныеРемонты.СрезПоследних(, ) КАК торо_ОстановочныеРемонтыСрезПоследних
							   |		ПО (ТаблицаРемонтовОборудования.ID = торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого
							   |				И НЕ торо_ОстановочныеРемонтыСрезПоследних.Отвязан)
							   |%УсловиеДляОтбора%";

				ДополнитьТекстИПараметрыЗапросаДляНаложенияОтборов(Запрос, "ТаблицаРемонтовОборудования.ОбъектРемонта");
							   
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаРемонтовОборудования = Запрос.Выполнить().Выгрузить();
				
				Для Каждого СтрокаТЧ Из ТаблицаРемонтовОборудования Цикл 
					
					ДобавлятьРемонт = Истина;
					
					Если ЗначениеЗаполнено(ДатаНачала) Тогда
						Если СтрокаТЧ.ДатаНачала < ДатаНачала Тогда
							ДобавлятьРемонт = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ДатаОкончания) Тогда
						Если СтрокаТЧ.ДатаОкончания > ДатаОкончания Тогда
							ДобавлятьРемонт = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если Не ДобавлятьРемонт Тогда 
						Продолжить;
					КонецЕсли;
					
					НовСтрокаРО = Объект.РемонтыОборудования.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрокаРО, СтрокаТЧ);
					НовСтрокаРО.ДокументОснование = ДокументОснование;
				КонецЦикла; 
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
							   |	торо_НарядРемонтыОборудования.ID,
							   |	торо_НарядРемонтыОборудования.ОбъектРемонта,
							   |	торо_НарядРемонтыОборудования.ВидРемонтныхРабот,
							   |	торо_НарядРемонтыОборудования.ДатаНачала,
							   |	торо_НарядРемонтыОборудования.ДатаОкончания,
							   |	торо_НарядРемонтыОборудования.ДокументИсточник
							   |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
							   |ИЗ
							   |	&ТаблицаРемонтовОборудования КАК торо_НарядРемонтыОборудования
							   |;
							   |
							   |////////////////////////////////////////////////////////////////////////////////
							   |ВЫБРАТЬ РАЗРЕШЕННЫЕ
							   |	торо_НарядРемонтныеРаботы.ID,
							   |	торо_НарядРемонтныеРаботы.РемонтнаяРабота,
							   |	торо_НарядРемонтныеРаботы.Родитель_ID,
							   |	торо_НарядРемонтныеРаботы.РемонтыОборудования_ID,
							   |	торо_НарядРемонтныеРаботы.Количество
							   |ПОМЕСТИТЬ ТаблицаРемонтныхРабот
							   |ИЗ
							   |	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК торо_НарядРемонтныеРаботы
							   |ГДЕ
							   |	торо_НарядРемонтныеРаботы.Ссылка = &Ссылка
							   |;
							   |
							   |////////////////////////////////////////////////////////////////////////////////
							   |ВЫБРАТЬ
							   |	ТаблицаРемонтныхРабот.ID,
							   |	ТаблицаРемонтныхРабот.РемонтнаяРабота,
							   |	ТаблицаРемонтныхРабот.Родитель_ID,
							   |	ТаблицаРемонтныхРабот.РемонтыОборудования_ID,
							   |	ТаблицаРемонтныхРабот.Количество
							   |ИЗ
							   |	ТаблицаРемонтныхРабот КАК ТаблицаРемонтныхРабот
							   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
							   |		ПО ТаблицаРемонтныхРабот.РемонтыОборудования_ID = ТаблицаРемонтовОборудования.ID";
							   
							   
				Запрос.УстановитьПараметр("ТаблицаРемонтовОборудования", ТаблицаРемонтовОборудования);
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаРемонтныхРабот = Запрос.Выполнить().Выгрузить();
				
				Для Каждого СтрокаТЧ Из ТаблицаРемонтныхРабот Цикл 
					
					НовСтрокаРР = Объект.РемонтныеРаботы.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрокаРР, СтрокаТЧ);
					
				КонецЦикла; 
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_НарядРемонтыОборудования.ID,
				               |	торо_НарядРемонтыОборудования.ОбъектРемонта,
				               |	торо_НарядРемонтыОборудования.ВидРемонтныхРабот,
				               |	торо_НарядРемонтыОборудования.ДатаНачала,
				               |	торо_НарядРемонтыОборудования.ДатаОкончания,
				               |	торо_НарядРемонтыОборудования.ДокументИсточник
				               |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
				               |ИЗ
				               |	&ТаблицаРемонтовОборудования КАК торо_НарядРемонтыОборудования
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.ID,
				               |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.РемонтыОборудования_ID,
				               |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Квалификация,
				               |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.ДатаНачала,
				               |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.ДатаОкончания,
				               |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Сотрудник,
				               |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.КТУ
				               |ПОМЕСТИТЬ ТаблицаИсполнителей
				               |ИЗ
				               |	Документ.торо_НарядНаВыполнениеРемонтныхРабот.Исполнители КАК торо_НарядНаВыполнениеРемонтныхРаботИсполнители
				               |ГДЕ
				               |	торо_НарядНаВыполнениеРемонтныхРаботИсполнители.Ссылка = &Ссылка
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_НарядНаВыполнениеРемонтныхРаботПодрядчики.ID,
				               |	торо_НарядНаВыполнениеРемонтныхРаботПодрядчики.РемонтыОборудования_ID,
				               |	торо_НарядНаВыполнениеРемонтныхРаботПодрядчики.Контрагент,
							   |	торо_НарядНаВыполнениеРемонтныхРаботПодрядчики.ДоговорКонтрагента,							   
				               |	торо_НарядНаВыполнениеРемонтныхРаботПодрядчики.ДатаНачала,
				               |	торо_НарядНаВыполнениеРемонтныхРаботПодрядчики.ДатаОкончания
				               |ПОМЕСТИТЬ ТаблицаПодрядчики
				               |ИЗ
				               |	Документ.торо_НарядНаВыполнениеРемонтныхРабот.Подрядчики КАК торо_НарядНаВыполнениеРемонтныхРаботПодрядчики
				               |ГДЕ
				               |	торо_НарядНаВыполнениеРемонтныхРаботПодрядчики.Ссылка = &Ссылка
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	ТаблицаИсполнителей.ID,
				               |	ТаблицаИсполнителей.РемонтыОборудования_ID,
				               |	ТаблицаИсполнителей.Квалификация,
				               |	ТаблицаИсполнителей.ДатаНачала,
				               |	ТаблицаИсполнителей.ДатаОкончания,
				               |	ТаблицаИсполнителей.Сотрудник,
				               |	ТаблицаИсполнителей.КТУ
				               |ИЗ
				               |	ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаИсполнителей КАК ТаблицаИсполнителей
				               |		ПО ТаблицаРемонтовОборудования.ID = ТаблицаИсполнителей.РемонтыОборудования_ID
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ТаблицаПодрядчики.ID,
				               |	ТаблицаПодрядчики.РемонтыОборудования_ID,
				               |	ТаблицаПодрядчики.Контрагент,
							   |	ТаблицаПодрядчики.ДоговорКонтрагента,
				               |	ТаблицаПодрядчики.ДатаНачала,
				               |	ТаблицаПодрядчики.ДатаОкончания
				               |ИЗ
				               |	ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПодрядчики КАК ТаблицаПодрядчики
				               |		ПО ТаблицаРемонтовОборудования.ID = ТаблицаПодрядчики.РемонтыОборудования_ID";
							   
							   
				Запрос.УстановитьПараметр("ТаблицаРемонтовОборудования", ТаблицаРемонтовОборудования);
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ПакетЗапросов = Запрос.ВыполнитьПакет();
				
				ТаблицаИсполнителей = ПакетЗапросов[3].Выгрузить();
				ТаблицаПодрядчиков = ПакетЗапросов[4].Выгрузить();
				
				Для каждого СтрТаб Из ТаблицаИсполнителей Цикл
				
					НС = Объект.Исполнители.Добавить();
					ЗаполнитьЗначенияСвойств(НС, СтрТаб);
				
				КонецЦикла; 
				
				Для каждого СтрТаб Из ТаблицаПодрядчиков Цикл
				
					НС = Объект.Подрядчики.Добавить();
					ЗаполнитьЗначенияСвойств(НС, СтрТаб);
				
				КонецЦикла;
				
			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_НарядРемонтыОборудования.ID,
				               |	торо_НарядРемонтыОборудования.ОбъектРемонта,
				               |	торо_НарядРемонтыОборудования.ВидРемонтныхРабот,
				               |	торо_НарядРемонтыОборудования.ДатаНачала,
				               |	торо_НарядРемонтыОборудования.ДатаОкончания,
				               |	торо_НарядРемонтыОборудования.ДокументИсточник
				               |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
				               |ИЗ
				               |	Документ.торо_НарядНаРегламентноеМероприятие.РегламентныеМероприятия КАК торо_НарядРемонтыОборудования
				               |ГДЕ
				               |	торо_НарядРемонтыОборудования.Ссылка = &Ссылка
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	ТаблицаРемонтовОборудования.ID,
				               |	ТаблицаРемонтовОборудования.ОбъектРемонта,
				               |	ТаблицаРемонтовОборудования.ВидРемонтныхРабот,
				               |	ТаблицаРемонтовОборудования.ДатаНачала,
				               |	ТаблицаРемонтовОборудования.ДатаОкончания,
				               |	ТаблицаРемонтовОборудования.ДокументИсточник,
				               |	ВЫБОР
				               |		КОГДА торо_ЗавершенныеРемонтныеРаботы.ID ЕСТЬ NULL 
				               |			ТОГДА ЛОЖЬ
				               |		ИНАЧЕ ИСТИНА
				               |	КОНЕЦ КАК Завершен
				               |ИЗ
				               |	ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеМероприятия КАК торо_ЗавершенныеРемонтныеРаботы
				               |		ПО ТаблицаРемонтовОборудования.ID = торо_ЗавершенныеРемонтныеРаботы.ID
							   |%УсловиеДляОтбора%";
							   
				ДополнитьТекстИПараметрыЗапросаДляНаложенияОтборов(Запрос, "ТаблицаРемонтовОборудования.ОбъектРемонта");
							   
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаРемонтовОборудования = Запрос.Выполнить().Выгрузить();
				
				Для Каждого СтрокаТЧ Из ТаблицаРемонтовОборудования Цикл 
					
					ДобавлятьРемонт = Истина;
					
					Если ЗначениеЗаполнено(ДатаНачала) Тогда
						Если СтрокаТЧ.ДатаНачала < ДатаНачала Тогда
							ДобавлятьРемонт = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ДатаОкончания) Тогда
						Если СтрокаТЧ.ДатаОкончания > ДатаОкончания Тогда
							ДобавлятьРемонт = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если Не ДобавлятьРемонт Тогда 
						Продолжить;
					КонецЕсли;
					
					НовСтрокаРО = Объект.РемонтыОборудования.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрокаРО, СтрокаТЧ);
					НовСтрокаРО.ДокументОснование = ДокументОснование;
				КонецЦикла; 
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_НарядРемонтыОборудования.ID,
				               |	торо_НарядРемонтыОборудования.ОбъектРемонта,
				               |	торо_НарядРемонтыОборудования.ВидРемонтныхРабот,
				               |	торо_НарядРемонтыОборудования.ДатаНачала,
				               |	торо_НарядРемонтыОборудования.ДатаОкончания,
				               |	торо_НарядРемонтыОборудования.ДокументИсточник
				               |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
				               |ИЗ
				               |	&ТаблицаРемонтовОборудования КАК торо_НарядРемонтыОборудования
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_НарядРемонтныеРаботы.ID,
				               |	торо_НарядРемонтныеРаботы.РемонтнаяРабота,
				               |	торо_НарядРемонтныеРаботы.Родитель_ID,
				               |	торо_НарядРемонтныеРаботы.РемонтыОборудования_ID,
				               |	торо_НарядРемонтныеРаботы.Количество
				               |ПОМЕСТИТЬ ТаблицаРемонтныхРабот
				               |ИЗ
				               |	Документ.торо_НарядНаРегламентноеМероприятие.РемонтныеРаботы КАК торо_НарядРемонтныеРаботы
				               |ГДЕ
				               |	торо_НарядРемонтныеРаботы.Ссылка = &Ссылка
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	ТаблицаРемонтныхРабот.ID,
				               |	ТаблицаРемонтныхРабот.РемонтнаяРабота,
				               |	ТаблицаРемонтныхРабот.Родитель_ID,
				               |	ТаблицаРемонтныхРабот.РемонтыОборудования_ID,
				               |	ТаблицаРемонтныхРабот.Количество
				               |ИЗ
				               |	ТаблицаРемонтныхРабот КАК ТаблицаРемонтныхРабот
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ПО ТаблицаРемонтныхРабот.РемонтыОборудования_ID = ТаблицаРемонтовОборудования.ID";
							   
							   
				Запрос.УстановитьПараметр("ТаблицаРемонтовОборудования", ТаблицаРемонтовОборудования);
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаРемонтныхРабот = Запрос.Выполнить().Выгрузить();
				
				Для Каждого СтрокаТЧ Из ТаблицаРемонтныхРабот Цикл 
					
					НовСтрокаРР = Объект.РемонтныеРаботы.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрокаРР, СтрокаТЧ);
					
				КонецЦикла;
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_НарядРемонтыОборудования.ID,
				               |	торо_НарядРемонтыОборудования.ОбъектРемонта,
				               |	торо_НарядРемонтыОборудования.ВидРемонтныхРабот,
				               |	торо_НарядРемонтыОборудования.ДатаНачала,
				               |	торо_НарядРемонтыОборудования.ДатаОкончания,
				               |	торо_НарядРемонтыОборудования.ДокументИсточник
				               |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
				               |ИЗ
				               |	&ТаблицаРемонтовОборудования КАК торо_НарядРемонтыОборудования
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_НарядНаРегламентноеМероприятиеИсполнители.ID,
				               |	торо_НарядНаРегламентноеМероприятиеИсполнители.РемонтыОборудования_ID,
				               |	торо_НарядНаРегламентноеМероприятиеИсполнители.Квалификация,
				               |	торо_НарядНаРегламентноеМероприятиеИсполнители.ДатаНачала,
				               |	торо_НарядНаРегламентноеМероприятиеИсполнители.ДатаОкончания,
				               |	торо_НарядНаРегламентноеМероприятиеИсполнители.Сотрудник,
				               |	торо_НарядНаРегламентноеМероприятиеИсполнители.КТУ
				               |ПОМЕСТИТЬ ТаблицаИсполнителей
				               |ИЗ
				               |	Документ.торо_НарядНаРегламентноеМероприятие.Исполнители КАК торо_НарядНаРегламентноеМероприятиеИсполнители
				               |ГДЕ
				               |	торо_НарядНаРегламентноеМероприятиеИсполнители.Ссылка = &Ссылка
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_НарядНаРегламентноеМероприятиеПодрядчики.ID,
				               |	торо_НарядНаРегламентноеМероприятиеПодрядчики.РемонтыОборудования_ID,
				               |	торо_НарядНаРегламентноеМероприятиеПодрядчики.Контрагент,
							   |	торо_НарядНаРегламентноеМероприятиеПодрядчики.ДоговорКонтрагента,
				               |	торо_НарядНаРегламентноеМероприятиеПодрядчики.ДатаНачала,
				               |	торо_НарядНаРегламентноеМероприятиеПодрядчики.ДатаОкончания
				               |ПОМЕСТИТЬ ТаблицаПодрядчики
				               |ИЗ
				               |	Документ.торо_НарядНаРегламентноеМероприятие.Подрядчики КАК торо_НарядНаРегламентноеМероприятиеПодрядчики
				               |ГДЕ
				               |	торо_НарядНаРегламентноеМероприятиеПодрядчики.Ссылка = &Ссылка
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ТаблицаИсполнителей.ID,
				               |	ТаблицаИсполнителей.РемонтыОборудования_ID,
				               |	ТаблицаИсполнителей.Квалификация,
				               |	ТаблицаИсполнителей.ДатаНачала,
				               |	ТаблицаИсполнителей.ДатаОкончания,
				               |	ТаблицаИсполнителей.Сотрудник,
				               |	ТаблицаИсполнителей.КТУ
				               |ИЗ
				               |	ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаИсполнителей КАК ТаблицаИсполнителей
				               |		ПО ТаблицаРемонтовОборудования.ID = ТаблицаИсполнителей.РемонтыОборудования_ID
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ТаблицаПодрядчики.ID,
				               |	ТаблицаПодрядчики.РемонтыОборудования_ID,
				               |	ТаблицаПодрядчики.Контрагент,
							   |	ТаблицаПодрядчики.ДоговорКонтрагента,
				               |	ТаблицаПодрядчики.ДатаНачала,
				               |	ТаблицаПодрядчики.ДатаОкончания
				               |ИЗ
				               |	ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПодрядчики КАК ТаблицаПодрядчики
				               |		ПО ТаблицаРемонтовОборудования.ID = ТаблицаПодрядчики.РемонтыОборудования_ID";
							   
							   
				Запрос.УстановитьПараметр("ТаблицаРемонтовОборудования", ТаблицаРемонтовОборудования);
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ПакетЗапросов = Запрос.ВыполнитьПакет();
				
				ТаблицаИсполнителей = ПакетЗапросов[3].Выгрузить();
				ТаблицаПодрядчиков = ПакетЗапросов[4].Выгрузить();
				
				Для каждого СтрТаб Из ТаблицаИсполнителей Цикл
				
					НС = Объект.Исполнители.Добавить();
					ЗаполнитьЗначенияСвойств(НС, СтрТаб);
				
				КонецЦикла; 
				
				Для каждого СтрТаб Из ТаблицаПодрядчиков Цикл
				
					НС = Объект.Подрядчики.Добавить();
					ЗаполнитьЗначенияСвойств(НС, СтрТаб);
				
				КонецЦикла;
				
			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	торо_Предписания.Регистратор,
				|	торо_Предписания.НомерСтроки,
				|	торо_Предписания.ОбъектРемонта,
				|	торо_Предписания.ID,
				|	торо_Предписания.Описание,
				|	торо_Предписания.ПлановаяДатаРемонта,
				|	торо_Предписания.Обработано
				|ПОМЕСТИТЬ idПредписаний
				|ИЗ
				|	РегистрСведений.торо_ВнешниеОснованияДляРабот КАК торо_Предписания
				|ГДЕ
				|	торо_Предписания.Регистратор = &Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	idПредписаний.ОбъектРемонта,
				|	idПредписаний.ID,
				|	idПредписаний.Описание КАК ОписаниеРемонта,
				|	idПредписаний.ПлановаяДатаРемонта,
				|	торо_ПредписанияСрезПоследних.Обработано КАК Обработано,
				|	idПредписаний.Регистратор,
				|	торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Значение КАК ВидРемонтныхРабот,
				|	ВЫБОР
				|		КОГДА торо_ЗавершенныеРемонтныеРаботыСрезПоследних.Регистратор ЕСТЬ NULL 
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ИСТИНА
				|	КОНЕЦ КАК Завершено,
				|	торо_ОстановочныеРемонтыСрезПоследних.IDОсновного КАК IDОсновного
				|ИЗ
				|	idПредписаний КАК idПредписаний
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВнешниеОснованияДляРабот.СрезПоследних КАК торо_ПредписанияСрезПоследних
				|		ПО idПредписаний.ID = торо_ПредписанияСрезПоследних.ID
				|			И idПредписаний.ОбъектРемонта = торо_ПредписанияСрезПоследних.ОбъектРемонта
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеРемонтныеРаботы.СрезПоследних(
				|				&Дата,
				|				ID В
				|					(ВЫБРАТЬ
				|						idПредписаний.ID
				|					ИЗ
				|						idПредписаний КАК idПредписаний)) КАК торо_ЗавершенныеРемонтныеРаботыСрезПоследних
				|		ПО idПредписаний.ID = торо_ЗавершенныеРемонтныеРаботыСрезПоследних.ID
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОстановочныеРемонты.СрезПоследних(, ) КАК торо_ОстановочныеРемонтыСрезПоследних
				|		ПО (idПредписаний.ID = торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого
				|				И НЕ торо_ОстановочныеРемонтыСрезПоследних.Отвязан),
				|	Константа.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов КАК торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов
				|%УсловиеДляОтбора%";
				
				ДополнитьТекстИПараметрыЗапросаДляНаложенияОтборов(Запрос, "idПредписаний.ОбъектРемонта");
										   
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				Запрос.УстановитьПараметр("Дата",ТекущаяДата());
				ТаблицаПредписания = Запрос.Выполнить().Выгрузить();
				
				Для Каждого СтрокаТЧ Из ТаблицаПредписания Цикл 
					
					НовСтрокаРО = Объект.РемонтыОборудования.Добавить();
					НовСтрокаРО.ID                = СтрокаТЧ.ID;
					НовСтрокаРО.ОбъектРемонта     = СтрокаТЧ.ОбъектРемонта;
					НовСтрокаРО.ВидРемонтныхРабот = СтрокаТЧ.ВидРемонтныхРабот;
					НовСтрокаРО.ДатаНачала		  = СтрокаТЧ.ПлановаяДатаРемонта;
					НовСтрокаРО.ДатаОкончания     = СтрокаТЧ.ПлановаяДатаРемонта;
					НовСтрокаРО.ДокументОснование = СтрокаТЧ.Регистратор;
					НовСтрокаРО.Завершен 		  = СтрокаТЧ.Завершено;
					НовСтрокаРО.IDОсновного		  = СтрокаТЧ.IDОсновного;
					
				КонецЦикла; 
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_Предписания.ID,
				               |	торо_Предписания.ОбъектРемонта,
				               |	торо_Предписания.ПлановаяДатаРемонта КАК ПлановаДата,
				               |	торо_Предписания.ОписаниеРемонта
				               |ПОМЕСТИТЬ ТаблицаРемонтовОборудования
				               |ИЗ
				               |	&ТаблицаПредписания КАК торо_Предписания
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.ID,
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота,
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Родитель_ID,
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Количество,
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Предписание_ID
				               |ПОМЕСТИТЬ ТаблицаРемонтныхРабот
				               |ИЗ
				               |	РегистрСведений.торо_ОперацииВнешнихОснованийДляРабот КАК торо_ЗаявкаНаРемонтРемонтныеРаботы
				               |ГДЕ
				               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Регистратор = &Ссылка
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ТаблицаРемонтныхРабот.ID,
				               |	ТаблицаРемонтныхРабот.РемонтнаяРабота,
				               |	ТаблицаРемонтныхРабот.Родитель_ID,
				               |	ТаблицаРемонтныхРабот.Количество,
				               |	ТаблицаРемонтныхРабот.Предписание_ID КАК РемонтыОборудования_ID
				               |ИЗ
				               |	ТаблицаРемонтныхРабот КАК ТаблицаРемонтныхРабот
				               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРемонтовОборудования КАК ТаблицаРемонтовОборудования
				               |		ПО ТаблицаРемонтныхРабот.Предписание_ID = ТаблицаРемонтовОборудования.ID";
							   
							   
				Запрос.УстановитьПараметр("ТаблицаПредписания", ТаблицаПредписания);
				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаРемонтныхРабот = Запрос.Выполнить().Выгрузить();

				
				Для Каждого СтрокаТЧ Из ТаблицаРемонтныхРабот Цикл 
					
					НовСтрокаРР = Объект.РемонтныеРаботы.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрокаРР, СтрокаТЧ);
					
				КонецЦикла; 
				
			ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
				               |	торо_АктРемонтыОборудования.ID,
				               |	торо_АктРемонтыОборудования.ОбъектРемонта,
				               |	торо_АктРемонтыОборудования.ВидРемонтныхРабот,
				               |	торо_АктРемонтыОборудования.ДатаНачала,
				               |	торо_АктРемонтыОборудования.ДатаОкончания,
				               |	торо_АктРемонтыОборудования.ДокументИсточник,
				               |	торо_АктРемонтыОборудования.ЗавершитьРемонт КАК Завершен,
				               |	торо_ОстановочныеРемонтыСрезПоследних.IDОсновного КАК IDОсновного
				               |ИЗ
				               |	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктРемонтыОборудования
				               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОстановочныеРемонты.СрезПоследних(, ) КАК торо_ОстановочныеРемонтыСрезПоследних
							   |		ПО (торо_АктРемонтыОборудования.ID = торо_ОстановочныеРемонтыСрезПоследних.IDЗависимого
							   |				И НЕ торо_ОстановочныеРемонтыСрезПоследних.Отвязан)
				               |ГДЕ
				               |	торо_АктРемонтыОборудования.Ссылка = &Ссылка
							   |%УсловиеДляОтбора%";

				ДополнитьТекстИПараметрыЗапросаДляНаложенияОтборов(Запрос, "торо_АктРемонтыОборудования.ОбъектРемонта", Истина);

				Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
				ТаблицаРемонтовОборудования = Запрос.Выполнить().Выгрузить();
				
				Для Каждого СтрокаТЧ Из ТаблицаРемонтовОборудования Цикл 
					
					ДобавлятьРемонт = Истина;
					
					Если ЗначениеЗаполнено(ДатаНачала) Тогда
						Если СтрокаТЧ.ДатаНачала < ДатаНачала Тогда
							ДобавлятьРемонт = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ДатаОкончания) Тогда
						Если СтрокаТЧ.ДатаОкончания > ДатаОкончания Тогда
							ДобавлятьРемонт = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если Не ДобавлятьРемонт Тогда 
						Продолжить;
					КонецЕсли;
					
					НовСтрокаРО = Объект.РемонтыОборудования.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрокаРО, СтрокаТЧ);
					НовСтрокаРО.ДокументОснование = ДокументОснование;
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
	тз = Объект.РемонтыОборудования.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
       |	ВЫРАЗИТЬ(таб.ОбъектРемонта КАК Справочник.торо_ОбъектыРемонта) КАК ОбъектРемонта
       |ПОМЕСТИТЬ Вт_СписокОР
       |ИЗ
       |	&вт_таб КАК таб
       |;
       |
       |////////////////////////////////////////////////////////////////////////////////
       |ВЫБРАТЬ
       |	Вт_СписокОР.ОбъектРемонта.ЗаводскойНомер КАК ЗаводскойНомер,
       |	Вт_СписокОР.ОбъектРемонта.ИнвентарныйНомер КАК ИнвНомер,
       |	Вт_СписокОР.ОбъектРемонта.ТехНомер КАК ТехНомер,
       |	Вт_СписокОР.ОбъектРемонта
       |ИЗ
       |	Вт_СписокОР КАК Вт_СписокОР";
	Запрос.УстановитьПараметр("вт_таб", тз);
	   
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	стрПоиска = Новый Структура("ОбъектРемонта", неопределено);
	Пока Выборка.Следующий() Цикл
		
		стрПоиска.ОбъектРемонта = Выборка.ОбъектРемонта;
		списокСтрок = Объект.РемонтыОборудования.НайтиСтроки(стрПоиска);
		
		Для каждого ТекСтрока из списокСтрок цикл
			ТекСтрока.ЗаводскойНомер = Выборка.ЗаводскойНомер;
			ТекСтрока.ИнвНомер = Выборка.ИнвНомер;
			ТекСтрока.ТехНомер = Выборка.ТехНомер;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность(ДокументОснование = Неопределено)
	
	ВидимостьОбъектРемонтаВладелец = Ложь;
	
	Если Объект.ДокументыОснования.Количество() > 0 Тогда
		
		Если ТипЗнч(Объект.ДокументыОснования[0].ДокументОснование) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
			
			ВидимостьОбъектРемонтаВладелец = Истина;
			
		КонецЕсли;
		
		Если ТипЗнч(Объект.ДокументыОснования[0].ДокументОснование) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") ИЛИ ТипЗнч(Объект.ДокументыОснования[0].ДокументОснование) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") ИЛИ ТипЗнч(Объект.ДокументыОснования[0].ДокументОснование) = Тип("ДокументСсылка.торо_ГрафикРегламентныхМероприятийТОиР") Тогда
			
			Элементы.ДеревоРемонтныхРабот.ПодчиненныеЭлементы.ДеревоРемонтныхРаботЗаявка.Видимость = Ложь;
			
		КонецЕсли;		
		
	КонецЕсли;
	
	Если Объект.ДокументыОснования.Количество() > 0 Тогда
		Если НЕ ДокументОснование = Неопределено Тогда
			Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда
				ВидимостьОбъектРемонтаВладелец = Истина;
			Иначе	
				ВидимостьОбъектРемонтаВладелец = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	#Если НЕ ВебКлиент Тогда
	// Убрать директиву, когда эта строчка в веб-клиенте перестанет 
	// вызывать платформенную ошибку "b.ta is null".
	Если Элементы.РемонтыОборудованияОбъектРемонтаВладелец.Видимость <> ВидимостьОбъектРемонтаВладелец Тогда
		
		Элементы.РемонтыОборудованияОбъектРемонтаВладелец.Видимость = ВидимостьОбъектРемонтаВладелец;
			
	КонецЕсли;

	Если ВидимостьОбъектРемонтаВладелец Тогда
		
		Элементы.РемонтыОборудованияОбъектРемонта.Заголовок = НСтр("ru = 'Отказавший элемент'");
		
	Иначе
		
		Элементы.РемонтыОборудованияОбъектРемонта.Заголовок = НСтр("ru = 'Объект ремонта'");
		
	КонецЕсли;
	#КонецЕсли
		
КонецПроцедуры

&НаСервере
// Процедура выполняет первоначальное заполнение элемента формы "ДеревоРемонтныхРабот".
//
Процедура ЗаполнитьДеревоРемонтныхРабот(СписокРемонтовОборудования)
	
	ДополнитьТаблицуРемонтныхРабот(СписокРемонтовОборудования);
	
	ДеревоЗначение = РеквизитФормыВЗначение("ДеревоРемонтныхРабот");
	
	ДеревоЗначение.Строки.Очистить();
	
	Для Каждого СтрокаРемОборудования Из СписокРемонтовОборудования Цикл
		
		СтрокаРемонтовОборудования = Объект.РемонтыОборудования.НайтиПоИдентификатору(СтрокаРемОборудования);
		
		Если СтрокаРемонтовОборудования = Неопределено Тогда
			
			Для Каждого СтрокаТЧ Из Объект.РемонтыОборудования Цикл
				
				// 0 - й уровень дерева
				КорневаяСтрока = ДеревоЗначение.Строки.Добавить();
				КорневаяСтрока.РемонтнаяРабота = "Ремонтные работы";
				КорневаяСтрока.Картинка = 4;
				КорневаяСтрока.РемонтыОборудования_ID = СтрокаТЧ.ID;
				
				МассивСтрок  = Объект.РемонтныеРаботы.НайтиСтроки(Новый Структура("РемонтыОборудования_ID", СтрокаТЧ.ID));
				ТаблицаСтрок = Объект.РемонтныеРаботы.Выгрузить(МассивСтрок);
				
				ТекущиеЗначения = Новый Структура("Родитель_ID, РемонтыОборудования_ID, ID", КорневаяСтрока.Родитель_ID, КорневаяСтрока.РемонтыОборудования_ID, КорневаяСтрока.ID);
				торо_Ремонты.СоздатьВетвьДереваПоТабличнойЧасти(ДеревоЗначение, ТекущиеЗначения, ТаблицаСтрок);
				
			КонецЦикла; 
			
		Иначе
			
			// 0 - й уровень дерева
			КорневаяСтрока = ДеревоЗначение.Строки.Добавить();
			КорневаяСтрока.РемонтнаяРабота = "Ремонтные работы";
			КорневаяСтрока.Картинка = 4;
			КорневаяСтрока.РемонтыОборудования_ID = СтрокаРемонтовОборудования.ID;
			
			МассивСтрок  = Объект.РемонтныеРаботы.НайтиСтроки(Новый Структура("РемонтыОборудования_ID", СтрокаРемонтовОборудования.ID));
			ТаблицаСтрок = Объект.РемонтныеРаботы.Выгрузить(МассивСтрок);
			
			ТекущиеЗначения = Новый Структура("Родитель_ID, РемонтыОборудования_ID, ID", КорневаяСтрока.Родитель_ID, КорневаяСтрока.РемонтыОборудования_ID, КорневаяСтрока.ID);
			торо_Ремонты.СоздатьВетвьДереваПоТабличнойЧасти(ДеревоЗначение, ТекущиеЗначения, ТаблицаСтрок);
			
		КонецЕсли; 
		
		Элементы.ДеревоРемонтныхРабот.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоЗначение, "ДеревоРемонтныхРабот");
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьТаблицуРемонтныхРабот(СписокРемонтов)

	СписокРемонтовID = Новый СписокЗначений;
	Для Каждого СтрокаСРем Из СписокРемонтов Цикл
		
		СтрокаСРемонтом = Объект.РемонтыОборудования.НайтиПоИдентификатору(СтрокаСРем);
		Если НЕ СтрокаСРемонтом = Неопределено Тогда
			СписокРемонтовID.Добавить(СтрокаСРемонтом.ID);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	РемонтныеРаботы.ID,
	|	РемонтныеРаботы.РемонтыОборудования_ID,
	|	РемонтныеРаботы.Выполнено,
	|	РемонтныеРаботы.ПроцентВыполненияРабот,
	|	РемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
	|	РемонтныеРаботы.Родитель_ID
	|ПОМЕСТИТЬ ТаблицаРабот
	|ИЗ
	|	&РемонтныеРаботы КАК РемонтныеРаботы
	|ГДЕ
	|	РемонтныеРаботы.РемонтыОборудования_ID В(&СписокРемонтов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РемонтныеРаботы.РемонтыОборудования_ID,
	|	РемонтныеРаботы.ID";
	
	Запрос.УстановитьПараметр("РемонтныеРаботы", Объект.РемонтныеРаботы.Выгрузить());
	Запрос.УстановитьПараметр("СписокРемонтов",СписокРемонтовID);
	Запрос.Выполнить(); 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	торо_ЗапланированныеРемонтныеРаботы.IDРемонта КАК IDРемонта,
	|	торо_ЗапланированныеРемонтныеРаботы.IDОперации КАК IDОперации,
	|	торо_ЗапланированныеРемонтныеРаботы.Регистратор
	|ПОМЕСТИТЬ торо_ЗапланированныеРемонтныеРаботы
	|ИЗ
	|	РегистрНакопления.торо_ЗапланированныеРемонтныеРаботы КАК торо_ЗапланированныеРемонтныеРаботы
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРабот КАК ТаблицаРабот
	|	ПО торо_ЗапланированныеРемонтныеРаботы.IDРемонта = ТаблицаРабот.РемонтыОборудования_ID
	|		И торо_ЗапланированныеРемонтныеРаботы.IDОперации = ТаблицаРабот.ID
	|ГДЕ
	|	ВЫРАЗИТЬ(торо_ЗапланированныеРемонтныеРаботы.Регистратор КАК Документ.торо_ЗаявкаНаРемонт) ССЫЛКА Документ.торо_ЗаявкаНаРемонт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDРемонта,
	|	IDОперации
	|
	|;
	|";
	
	Если ТипЗнч(Владелец.Ссылка) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") 
		ИЛИ ТипЗнч(Владелец.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		
		ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
		|	торо_Ремонты.ID КАК ID,
		|	торо_Ремонты.Регистратор
		|ПОМЕСТИТЬ торо_Ремонты
		|ИЗ
		|	РегистрСведений.торо_Ремонты КАК торо_Ремонты
		|ГДЕ
		|	торо_Ремонты.ID В
		|			(ВЫБРАТЬ
		|				ТР.РемонтыОборудования_ID
		|			ИЗ
		|				ТаблицаРабот КАК ТР)
		|	И торо_Ремонты.Регистратор <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_Ремонты.ID,
		|	торо_Ремонты.Регистратор
		|ПОМЕСТИТЬ торо_ВыполняемыеРемонтныеРаботыНаряды
		|ИЗ
		|	торо_Ремонты КАК торо_Ремонты
		|ГДЕ
		|	ВЫРАЗИТЬ(торо_Ремонты.Регистратор КАК Документ.торо_НарядНаРегламентноеМероприятие) ССЫЛКА Документ.торо_НарядНаРегламентноеМероприятие
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	торо_Ремонты.ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_Ремонты.ID,
		|	торо_Ремонты.Регистратор
		|ПОМЕСТИТЬ торо_ВыполняемыеРемонтныеРаботыАкты
		|ИЗ
		|	торо_Ремонты КАК торо_Ремонты
		|ГДЕ
		|	ВЫРАЗИТЬ(торо_Ремонты.Регистратор КАК Документ.торо_АктОВыполненииРегламентногоМероприятия) ССЫЛКА Документ.торо_АктОВыполненииРегламентногоМероприятия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	торо_Ремонты.ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ЗавершенныеМероприятия.Регистратор,
		|	торо_ЗавершенныеМероприятия.ID
		|ПОМЕСТИТЬ торо_ЗавершенныеМероприятия
		|ИЗ
		|	РегистрСведений.торо_ЗавершенныеМероприятия КАК торо_ЗавершенныеМероприятия
		|ГДЕ
		|	торо_ЗавершенныеМероприятия.ID В
		|			(ВЫБРАТЬ
		|				ТР.РемонтыОборудования_ID
		|			ИЗ
		|				ТаблицаРабот КАК ТР)
		|	И торо_ЗавершенныеМероприятия.Регистратор <> &Ссылка";
		
	Иначе
		
		ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
		|	торо_ВыполняемыеРемонтныеРаботы.IDРемонта КАК IDРемонта,
		|	торо_ВыполняемыеРемонтныеРаботы.IDОперации КАК IDОперации,
		|	торо_ВыполняемыеРемонтныеРаботы.Регистратор
		|ПОМЕСТИТЬ торо_ВыполняемыеРемонтныеРаботы
		|ИЗ
		|	РегистрНакопления.торо_ВыполняемыеРемонтныеРаботы КАК торо_ВыполняемыеРемонтныеРаботы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРабот КАК ТаблицаРабот
		|		ПО торо_ВыполняемыеРемонтныеРаботы.IDРемонта = ТаблицаРабот.РемонтыОборудования_ID
		|			И торо_ВыполняемыеРемонтныеРаботы.IDОперации = ТаблицаРабот.ID
		|
		|;
		|
		|ВЫБРАТЬ
		|	торо_ВыполняемыеРемонтныеРаботы.IDРемонта,
		|	торо_ВыполняемыеРемонтныеРаботы.IDОперации,
		|	торо_ВыполняемыеРемонтныеРаботы.Регистратор
		|ПОМЕСТИТЬ торо_ВыполняемыеРемонтныеРаботыНаряды
		|ИЗ
		|	торо_ВыполняемыеРемонтныеРаботы КАК торо_ВыполняемыеРемонтныеРаботы
		|ГДЕ
		|	ВЫРАЗИТЬ(торо_ВыполняемыеРемонтныеРаботы.Регистратор КАК Документ.торо_НарядНаВыполнениеРемонтныхРабот) ССЫЛКА Документ.торо_НарядНаВыполнениеРемонтныхРабот
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	торо_ВыполняемыеРемонтныеРаботы.IDРемонта,
		|	торо_ВыполняемыеРемонтныеРаботы.IDОперации
		|
		|;
		|
		|ВЫБРАТЬ
		|	торо_ВыполняемыеРемонтныеРаботы.IDРемонта,
		|	торо_ВыполняемыеРемонтныеРаботы.IDОперации,
		|	торо_ВыполняемыеРемонтныеРаботы.Регистратор
		|ПОМЕСТИТЬ торо_ВыполняемыеРемонтныеРаботыАкты
		|ИЗ
		|	торо_ВыполняемыеРемонтныеРаботы КАК торо_ВыполняемыеРемонтныеРаботы
		|ГДЕ
		|	ВЫРАЗИТЬ(торо_ВыполняемыеРемонтныеРаботы.Регистратор КАК Документ.торо_АктОВыполненииЭтапаРабот) ССЫЛКА Документ.торо_АктОВыполненииЭтапаРабот
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	торо_ВыполняемыеРемонтныеРаботы.IDРемонта,
		|	торо_ВыполняемыеРемонтныеРаботы.IDОперации
		|
		|;
		|
		|ВЫБРАТЬ
		|	торо_ЗавершенныеРемонтныеРаботы.Регистратор,
		|	торо_ЗавершенныеРемонтныеРаботы.ID
		|ПОМЕСТИТЬ торо_ЗавершенныеРемонтныеРаботы
		|ИЗ
		|	РегистрСведений.торо_ЗавершенныеРемонтныеРаботы.СрезПоследних(
		|			,
		|			ID В
		|					(ВЫБРАТЬ
		|						ТР.РемонтыОборудования_ID
		|					ИЗ
		|						ТаблицаРабот КАК ТР)
		|				И Регистратор <> &Ссылка) КАК торо_ЗавершенныеРемонтныеРаботы";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаРабот.ID,
	|	ТаблицаРабот.РемонтыОборудования_ID,
	|	ВЫБОР
	|		КОГДА НЕ торо_ЗапланированныеРемонтныеРаботы.Регистратор ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Заявка,
	|	ВЫБОР
	|		КОГДА НЕ торо_ВыполняемыеРемонтныеРаботыНаряды.Регистратор ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Наряд,
	|	ВЫБОР
	|		КОГДА НЕ торо_ВыполняемыеРемонтныеРаботыАкты.Регистратор ЕСТЬ NULL 
	|				ИЛИ НЕ торо_ЗавершенныеРемонтныеРаботы.Регистратор ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Акт,
	|	ВЫБОР
	|		КОГДА НЕ торо_ЗавершенныеРемонтныеРаботы.Регистратор ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Завершена
	|ИЗ
	|	ТаблицаРабот КАК ТаблицаРабот
	|		ЛЕВОЕ СОЕДИНЕНИЕ торо_ЗапланированныеРемонтныеРаботы КАК торо_ЗапланированныеРемонтныеРаботы
	|		ПО ТаблицаРабот.РемонтыОборудования_ID = торо_ЗапланированныеРемонтныеРаботы.IDРемонта
	|			И ТаблицаРабот.ID = торо_ЗапланированныеРемонтныеРаботы.IDОперации";
	
	Если ТипЗнч(Владелец.Ссылка) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") 
		ИЛИ ТипЗнч(Владелец.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ торо_ВыполняемыеРемонтныеРаботыНаряды КАК торо_ВыполняемыеРемонтныеРаботыНаряды
		|		ПО ТаблицаРабот.РемонтыОборудования_ID = торо_ВыполняемыеРемонтныеРаботыНаряды.ID
		|		ЛЕВОЕ СОЕДИНЕНИЕ торо_ВыполняемыеРемонтныеРаботыАкты КАК торо_ВыполняемыеРемонтныеРаботыАкты
		|		ПО ТаблицаРабот.РемонтыОборудования_ID = торо_ВыполняемыеРемонтныеРаботыАкты.ID
		|		ЛЕВОЕ СОЕДИНЕНИЕ торо_ЗавершенныеМероприятия КАК торо_ЗавершенныеРемонтныеРаботы
		|		ПО ТаблицаРабот.РемонтыОборудования_ID = торо_ЗавершенныеРемонтныеРаботы.ID
		|		";
		
	Иначе
		
		ТекстЗапроса = ТекстЗапроса + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
		|		ПО ТаблицаРабот.РемонтыОборудования_ID = торо_ЗавершенныеРемонтныеРаботы.ID
		|		ЛЕВОЕ СОЕДИНЕНИЕ торо_ВыполняемыеРемонтныеРаботыНаряды КАК торо_ВыполняемыеРемонтныеРаботыНаряды
		|		ПО ТаблицаРабот.РемонтыОборудования_ID = торо_ВыполняемыеРемонтныеРаботыНаряды.IDРемонта
		|			И ТаблицаРабот.ID = торо_ВыполняемыеРемонтныеРаботыНаряды.IDОперации
		|		ЛЕВОЕ СОЕДИНЕНИЕ торо_ВыполняемыеРемонтныеРаботыАкты КАК торо_ВыполняемыеРемонтныеРаботыАкты
		|		ПО ТаблицаРабот.РемонтыОборудования_ID = торо_ВыполняемыеРемонтныеРаботыАкты.IDРемонта
		|			И ТаблицаРабот.ID = торо_ВыполняемыеРемонтныеРаботыАкты.IDОперации";
		
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
		
	Запрос.УстановитьПараметр("Ссылка", Владелец.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ТЗПроверки = РезультатЗапроса.Выгрузить();
	
	Для Каждого СтрокаТЧ Из Объект.РемонтныеРаботы Цикл
		
		СтрокиПроверки = ТЗПроверки.НайтиСтроки(Новый Структура("ID, РемонтыОборудования_ID", СтрокаТЧ.ID, СтрокаТЧ.РемонтыОборудования_ID));
		
		Если СтрокиПроверки.Количество() > 0 Тогда
			СтрокаПроверки = СтрокиПроверки[0];
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтрокаПроверки);
		КонецЕсли;
		
		Если ТипЗнч(СтрокаТЧ.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") И ТЗПроверки.НайтиСтроки(Новый Структура("Акт, РемонтыОборудования_ID", Истина, СтрокаТЧ.РемонтыОборудования_ID)).Количество() > 0 Тогда
			СтрокаТЧ.Акт = Истина;
		КонецЕсли;	
		
		Если ТипЗнч(СтрокаТЧ.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") И ТЗПроверки.НайтиСтроки(Новый Структура("Заявка, РемонтыОборудования_ID", Истина, СтрокаТЧ.РемонтыОборудования_ID)).Количество() > 0 Тогда
			СтрокаТЧ.Заявка = Истина;
		КонецЕсли;	
		
		Если ТипЗнч(СтрокаТЧ.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") И ТЗПроверки.НайтиСтроки(Новый Структура("Наряд, РемонтыОборудования_ID", Истина, СтрокаТЧ.РемонтыОборудования_ID)).Количество() > 0 Тогда
			СтрокаТЧ.Наряд = Истина;
		КонецЕсли;
				
	КонецЦикла;
	
	Если ТипЗнч(Владелец.Ссылка) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		
		МенеджерВТ = Новый МенеджерВременныхТаблиц;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТаблицаВыбранныхРабот ИЗ &ТЗПроверки КАК ТЗПроверки";
		Запрос.УстановитьПараметр("ТЗПроверки", ТЗПроверки);
		Запрос.Выполнить();
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ТаблицаВыбранныхРабот.ID,
		|	ТаблицаВыбранныхРабот.РемонтыОборудования_ID,
		|	ЛОЖЬ КАК Наряд,
		|	ЛОЖЬ КАК Акт,
		|	ЛОЖЬ КАК АктЗакрывающийРаботы
		|ИЗ
		|	ТаблицаВыбранныхРабот КАК ТаблицаВыбранныхРабот
		|ГДЕ
		|	(ТаблицаВыбранныхРабот.Заявка
		|			ИЛИ ТаблицаВыбранныхРабот.Наряд
		|			ИЛИ ТаблицаВыбранныхРабот.Акт)";
		
		ТЗВыделяемыеРаботыЗначение = РеквизитФормыВЗначение("ТЗВыделяемыеРаботы");
		ТЗВыделяемыеРаботыЗначение = Запрос.Выполнить().Выгрузить();
		ЗначениеВРеквизитФормы(ТЗВыделяемыеРаботыЗначение, "ТЗВыделяемыеРаботы");
		
	ИначеЕсли ТипЗнч(Владелец.Ссылка) = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот") Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ТаблицаРабот.ID,
		|	ТаблицаРабот.РемонтыОборудования_ID,
		|	ВЫБОР
		|		КОГДА (НЕ торо_НарядыПоРемонтам.Регистратор ЕСТЬ NULL )
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Наряд,
		|	ВЫБОР
		|		КОГДА (НЕ торо_АктыПоРемонтам.Регистратор ЕСТЬ NULL )
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Акт,
		|	ВЫБОР
		|		КОГДА (НЕ торо_ЗавершенныеРемонтныеРаботы.Регистратор ЕСТЬ NULL )
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК АктЗакрывающийРаботы
		|ПОМЕСТИТЬ ТаблицаПроверки
		|ИЗ
		|	ТаблицаРабот КАК ТаблицаРабот
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_НарядыПоРемонтам КАК торо_НарядыПоРемонтам
		|		ПО ТаблицаРабот.РемонтыОборудования_ID = торо_НарядыПоРемонтам.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктыПоРемонтам КАК торо_АктыПоРемонтам
		|		ПО ТаблицаРабот.ID = торо_АктыПоРемонтам.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
		|		ПО ТаблицаРабот.РемонтыОборудования_ID = торо_ЗавершенныеРемонтныеРаботы.ID
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПроверки.ID,
		|	ТаблицаПроверки.РемонтыОборудования_ID,
		|	ТаблицаПроверки.Наряд,
		|	ТаблицаПроверки.Акт,
		|	ТаблицаПроверки.АктЗакрывающийРаботы
		|ИЗ
		|	ТаблицаПроверки КАК ТаблицаПроверки
		|ГДЕ
		|	(ТаблицаПроверки.Наряд
		|			ИЛИ ТаблицаПроверки.Акт
		|			ИЛИ ТаблицаПроверки.АктЗакрывающийРаботы)";
		
		
		Запрос.УстановитьПараметр("Ссылка", Владелец.Ссылка);
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Владелец.Дата), Владелец.Дата, ТекущаяДата()));
		
		ТЗВыделяемыеРаботыЗначение = РеквизитФормыВЗначение("ТЗВыделяемыеРаботы");
		ТЗВыделяемыеРаботыЗначение = Запрос.Выполнить().Выгрузить();
		ЗначениеВРеквизитФормы(ТЗВыделяемыеРаботыЗначение, "ТЗВыделяемыеРаботы");
				
	ИначеЕсли ТипЗнч(Владелец.Ссылка) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = 
		
		"ВЫБРАТЬ
		|	ТаблицаРабот.ID,
		|	ТаблицаРабот.РемонтыОборудования_ID,
		|	ВЫБОР 
		|		КОГДА (НЕ торо_АктыПоРемонтам.Регистратор ЕСТЬ NULL ) ИЛИ (НЕ торо_ЗавершенныеРемонтныеРаботы.Регистратор ЕСТЬ NULL )
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Акт
		|ПОМЕСТИТЬ ТаблицаПроверки
		|ИЗ
		|	ТаблицаРабот КАК ТаблицаРабот                                      
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_АктыПоРемонтам КАК торо_АктыПоРемонтам
		|		ПО ТаблицаРабот.ID = торо_АктыПоРемонтам.IDРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
		|		ПО ТаблицаРабот.РемонтыОборудования_ID = торо_ЗавершенныеРемонтныеРаботы.ID;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПроверки.ID,
		|	ТаблицаПроверки.РемонтыОборудования_ID,
		|	ЛОЖЬ КАК Наряд,
		|	ТаблицаПроверки.Акт,
		|	ЛОЖЬ КАК АктЗакрывающийРаботы
		|ИЗ
		|	ТаблицаПроверки КАК ТаблицаПроверки
		|ГДЕ
		|	ТаблицаПроверки.Акт";
		
		Запрос.УстановитьПараметр("Дата", ?(ЗначениеЗаполнено(Владелец.Дата), Владелец.Дата, ТекущаяДата()));
		Запрос.УстановитьПараметр("Ссылка", Владелец.Ссылка);
		
		ТЗВыделяемыеРаботыЗначение = РеквизитФормыВЗначение("ТЗВыделяемыеРаботы");
		ТЗВыделяемыеРаботыЗначение = Запрос.Выполнить().Выгрузить();
		ЗначениеВРеквизитФормы(ТЗВыделяемыеРаботыЗначение, "ТЗВыделяемыеРаботы");
		
	КонецЕсли;	

КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьСписокВыбораНаСервере(Владелец)
	
	СписокВыбора = Новый СписокЗначений;
	
	Если ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_ЗаявкаНаРемонт") Тогда
		Для каждого ТипОснования Из Метаданные.Документы.торо_ЗаявкаНаРемонт.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип.Типы() Цикл
			
			СписокВыбора.Добавить(ТипОснования);
		КонецЦикла;
	ИначеЕсли ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_НарядНаВыполнениеРемонтныхРабот") Тогда
		Для каждого ТипОснования Из Метаданные.Документы.торо_НарядНаВыполнениеРемонтныхРабот.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип.Типы() Цикл
			
			СписокВыбора.Добавить(ТипОснования);
		КонецЦикла;
	ИначеЕсли ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
		Для каждого ТипОснования Из Метаданные.Документы.торо_АктОВыполненииЭтапаРабот.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип.Типы() Цикл
			СписокВыбора.Добавить(ТипОснования);
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_НарядНаРегламентноеМероприятие") Тогда
		Для каждого ТипОснования Из Метаданные.Документы.торо_НарядНаРегламентноеМероприятие.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип.Типы() Цикл
			СписокВыбора.Добавить(ТипОснования);
		КонецЦикла;
	ИначеЕсли ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		Для каждого ТипОснования Из Метаданные.Документы.торо_АктОВыполненииРегламентногоМероприятия.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип.Типы() Цикл
			СписокВыбора.Добавить(ТипОснования);
		КонецЦикла;
	ИначеЕсли ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_АктПриемкиОборудования") Тогда
		Для каждого ТипОснования Из Метаданные.Документы.торо_АктПриемкиОборудования.ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип.Типы() Цикл
			СписокВыбора.Добавить(ТипОснования);
		КонецЦикла;
	ИначеЕсли ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") Тогда
		Для каждого ТипОснования Из Метаданные.Документы.торо_ОстановочныеРемонты.Реквизиты.ДокументОснование.Тип.Типы() Цикл
			СписокВыбора.Добавить(ТипОснования);
		КонецЦикла;
	КонецЕсли;
	
	// Строки добавлены для учета настроек ввода на основании
	
	НаборЗаписейВводНаОсновании = РегистрыСведений.торо_ВводНаОсновании.СоздатьНаборЗаписей();
	НаборЗаписейВводНаОсновании.Отбор.ДокументВводимый.Значение = Владелец.Метаданные().Имя;
	НаборЗаписейВводНаОсновании.Отбор.ДокументВводимый.Использование = Истина;
	НаборЗаписейВводНаОсновании.Прочитать();
	
	Для каждого ЗаписьРегистр из НаборЗаписейВводНаОсновании Цикл
		Если НЕ ЗаписьРегистр.Значение Тогда
			СтрокаЛишняя = СписокВыбора.НайтиПоЗначению(Тип("ДокументСсылка."+ЗаписьРегистр.ДокументОснование));		
			Если СтрокаЛишняя <> Неопределено Тогда
				СписокВыбора.Удалить(СтрокаЛишняя);	
			КонецЕсли;
		КонецЕсли;			
	КонецЦикла;
	
	Если СписокВыбора.Количество() = 0 Тогда
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ввод данного документа на основании запрещен настройками ввода на основании.
		|Настройка и администрирование -> Настройка параметров подсистемы ТОиР -> Интерфейс и ввод документов.'"));
	КонецЕсли;
	
	Возврат СписокВыбора;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеФОНаСервере(ИмяФО)
	
	Возврат ПолучитьФункциональнуюОпцию(ИмяФО);
	
КонецФункции

&НаСервере
Процедура СформироватьТаблицуОтбораЗависимыхОтОстановочныхРемонтов()
	
	ТаблицаДляОтбораПоОстановочным.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	торо_РемонтыОсновногоЗависимогоОборудования.СвязанныйОбъектРемонта,
	|	торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаЗависимогоОбъекта
	|ИЗ
	|	РегистрСведений.торо_РемонтыОсновногоЗависимогоОборудования КАК торо_РемонтыОсновногоЗависимогоОборудования
	|ГДЕ
	|	торо_РемонтыОсновногоЗависимогоОборудования.ОсновнойОбъектРемонта = &ОсновнойОбъектРемонта
	|	И торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаОсновногоОбъекта = &ВидРемонтаОсновногоОбъекта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	торо_РемонтыОсновногоЗависимогоОборудования.СвязанныйОбъектРемонта,
	|	торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаЗависимогоОбъекта
	|ИЗ
	|	РегистрСведений.торо_РемонтыОсновногоЗависимогоОборудования КАК торо_РемонтыОсновногоЗависимогоОборудования
	|ГДЕ
	|	торо_РемонтыОсновногоЗависимогоОборудования.ОсновнойОбъектРемонта = &ОсновнойОбъектРемонта
	|	И торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаОсновногоОбъекта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)");
	Запрос.УстановитьПараметр("ОсновнойОбъектРемонта", ОРДляОтбораПоОстановочным);
	Запрос.УстановитьПараметр("ВидРемонтаОсновногоОбъекта", ВРДляОтбораПоОстановочным);
	
	Зависимые = Запрос.Выполнить().Выгрузить();
	
	ПолучитьЗависимыеРемонтыДляОтбора(Зависимые);
	
	ТаблицаДляОтбораПоОстановочным.Загрузить(Зависимые);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЗависимыеРемонтыДляОтбора(Основные) 
	
	Если Основные.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	торо_РемонтыОсновногоЗависимогоОборудования.СвязанныйОбъектРемонта КАК ОсновнойОбъектРемонта,
		|	торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаЗависимогоОбъекта КАК ВидРемонтаОсновногоОбъекта
		|ПОМЕСТИТЬ Основные
		|ИЗ
		|	&Основные КАК торо_РемонтыОсновногоЗависимогоОборудования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_РемонтыОсновногоЗависимогоОборудования.СвязанныйОбъектРемонта,
		|	торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаЗависимогоОбъекта
		|ИЗ
		|	Основные КАК Основные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_РемонтыОсновногоЗависимогоОборудования КАК торо_РемонтыОсновногоЗависимогоОборудования
		|		ПО Основные.ОсновнойОбъектРемонта = торо_РемонтыОсновногоЗависимогоОборудования.ОсновнойОбъектРемонта
		|			И Основные.ВидРемонтаОсновногоОбъекта = торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаОсновногоОбъекта
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	торо_РемонтыОсновногоЗависимогоОборудования.СвязанныйОбъектРемонта,
		|	торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаЗависимогоОбъекта
		|ИЗ
		|	Основные КАК Основные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_РемонтыОсновногоЗависимогоОборудования КАК торо_РемонтыОсновногоЗависимогоОборудования
		|		ПО Основные.ОсновнойОбъектРемонта = торо_РемонтыОсновногоЗависимогоОборудования.ОсновнойОбъектРемонта
		|			И (торо_РемонтыОсновногоЗависимогоОборудования.ВидРемонтаОсновногоОбъекта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
		|				ИЛИ Основные.ВидРемонтаОсновногоОбъекта = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка))";
		Запрос.УстановитьПараметр("Основные", Основные);
		Зависимые = Запрос.Выполнить().Выгрузить();
		Для Каждого Строка Из Зависимые Цикл
			НС = Основные.Добавить();
			ЗаполнитьЗначенияСвойств(НС, Строка);
		КонецЦикла; 
		ПолучитьЗависимыеРемонтыДляОтбора(Зависимые);
	КонецЕсли;
	
КонецПроцедуры	
	
&НаСервере
Функция ПроверитьРемонтНаДобавление(СтрокаТЧ)
	
	ДобавлятьРемонт = Истина;
	
	Если ЗначениеЗаполнено(ДатаНачала) Тогда
		Если СтрокаТЧ.ДатаНачала < ДатаНачала Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаОкончания) Тогда
		Если СтрокаТЧ.ДатаОкончания > ДатаОкончания Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") И ЗначениеЗаполнено(ОРДляОтбораПоОстановочным) И Не флНеТолькоЗависимые Тогда
		Если ТаблицаДляОтбораПоОстановочным.НайтиСтроки(Новый Структура("СвязанныйОбъектРемонта, ВидРемонтаЗависимогоОбъекта", СтрокаТЧ.ОбъектРемонта, СтрокаТЧ.ВидРемонтныхРабот)).Количество() = 0
			И ТаблицаДляОтбораПоОстановочным.НайтиСтроки(Новый Структура("СвязанныйОбъектРемонта, ВидРемонтаЗависимогоОбъекта", СтрокаТЧ.ОбъектРемонта, Справочники.торо_ВидыРемонтов.ПустаяСсылка())).Количество() = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДобавлятьРемонт;
	
КонецФункции

&НаСервере 
Процедура ДополнитьТекстИПараметрыЗапросаДляНаложенияОтборов(Запрос, ИмяОР, БезГде = Ложь)
		
	ДобавляемоеУсловие = "";
	Если ИспользоватьОтборПоОрганизацииИПодразделению Тогда
		Если ЗначениеЗаполнено(ОрганизацияДляОтбора) Тогда
			ДобавляемоеУсловие = имяОР + ".Организация = &Организация";
			Запрос.УстановитьПараметр("Организация", ОрганизацияДляОтбора);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПодразделениеДляОтбора) Тогда
			Если ДобавляемоеУсловие <> "" Тогда
				ДобавляемоеУсловие = ДобавляемоеУсловие + " и ";
			КонецЕсли;
			ДобавляемоеУсловие = ДобавляемоеУсловие + ИмяОР + ".Подразделение В ИЕРАРХИИ (&Подразделение)";
			Запрос.УстановитьПараметр("Подразделение", ПодразделениеДляОтбора);
		КонецЕсли;
		
		Если ДобавляемоеУсловие <> "" Тогда
			Если БезГде тогда
				ДобавляемоеУсловие = "и (" + имяОР + ".ЭтоГруппа ИЛИ ( " + ДобавляемоеУсловие + ") или " + имяОР + ".ВнешнийОбъект = Истина )";
			Иначе
				ДобавляемоеУсловие = "ГДЕ " + ИмяОР + ".ЭтоГруппа ИЛИ ( " + ДобавляемоеУсловие + ") или " + имяОР + ".ВнешнийОбъект = Истина";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеДляОтбора%", ДобавляемоеУсловие);
		
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ ЗначениеЗаполнено(ОРДляОтбораПоОстановочным) и Объект.ДокументыОснования.Количество() >= 1 И ТипЗнч(Владелец) = Тип("ДокументСсылка.торо_ОстановочныеРемонты") Тогда
		Отказ = Истина;
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'При выборе остановочного ремонта можно выбирать только один документ.'"));
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДокументыОснования.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено И НЕ ТекДанные.ДокументОснование = Неопределено
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ВыявленныеДефекты.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ЗаявкаНаРемонт.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ПланГрафикРемонта.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ГрафикРегламентныхМероприятийТОиР.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_НарядНаРегламентноеМероприятие.ПустаяСсылка") 
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_ВнешнееОснованиеДляРабот.ПустаяСсылка")
		И НЕ ТекДанные.ДокументОснование = ПредопределенноеЗначение("Документ.торо_АктОВыполненииЭтапаРабот.ПустаяСсылка") Тогда
		
		ДокументОснование = ТекДанные.ДокументОснование;
		
		СписокДО = Элементы.ДокументыОснования.ВыделенныеСтроки;
		
		ЗаполнитьРемонтыОборудования(СписокДО);
		
		УстановитьВидимостьДоступность(ДокументОснование);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоОрганизацииИПодразделениюПриИзменении(Элемент)
	ДокументыОснованияПриИзменении(Элементы.ДокументыОснования)
КонецПроцедуры

#КонецОбласти