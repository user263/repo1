#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ДатаАктуальности") Тогда
		Объект.ДатаАктуальности = Параметры.ДатаАктуальности;
	Иначе
		Объект.ДатаАктуальности = ТекущаяДата();
	КонецЕсли;
	
	Если Параметры.Свойство("Владелец") Тогда
		Владелец = Параметры.Владелец;
	КонецЕсли;
	
	Если Параметры.Свойство("ДоступностьКнопкиЗаполнить") Тогда
		Элементы.ЗакрываемыеРемонтыЗаполнитьПлановыеРемонты.Доступность = Параметры.ДоступностьКнопкиЗаполнить;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗакрываемыеРемонты") Тогда
		
		Для каждого Стр Из Параметры.ЗакрываемыеРемонты Цикл
			
			НС = Объект.ЗакрываемыеРемонты.Добавить();
			ЗаполнитьЗначенияСвойств(НС, Стр);
			
		КонецЦикла;
		
	Иначе
		
		ЗаполнитьПлановыеРемонтыНаСервере();
		
	КонецЕсли;
	
	ФОИспользоватьППР = ПолучитьФункциональнуюОпцию("торо_ИспользоватьППР");
	ФОИспользоватьВД = ПолучитьФункциональнуюОпцию("торо_УчетВыявленныхДефектовОборудования");
	
	Элементы.ГруппаЗакрываемыеРемонты.Видимость = ФОИспользоватьППР;
	Элементы.ГруппаАварийныеРемонты.Видимость = ФОИспользоватьВД;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗакрываемыеРемонты
&НаКлиенте
Процедура ЗакрываемыеРемонтыПередНачаломИзменения(Элемент, Отказ)
	Если Элементы.ЗакрываемыеРемонты.ТекущийЭлемент.Имя <> "ЗакрываемыеРемонтыОбрабатывать" Тогда
		Отказ = (Не Элементы.ЗакрываемыеРемонты.ТекущиеДанные.Обрабатывать);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАварийныеРемонты
&НаКлиенте
Процедура АварийныеРемонтыПередНачаломИзменения(Элемент, Отказ)
	Если Элементы.АварийныеРемонты.ТекущийЭлемент.Имя <> "АварийныеРемонтыОбрабатывать" Тогда
		Отказ = (Не Элементы.АварийныеРемонты.ТекущиеДанные.Обрабатывать);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
	
	отказ = ВыполнитьОбработкуНаСервере();
	
	ПричиныНеЗаполнены = Ложь;
	Для Каждого Строка Из ОбрабатываемыеСтроки Цикл
		Если (Строка.Отменен или Строка.ЕстьЗаявка) и не ЗначениеЗаполнено(Строка.ПричинаЗакрытия) Тогда
			Если ЗначениеЗаполнено(Владелец) Тогда
				ПоказатьПредупреждение(Неопределено,НСтр("ru = 'Не для всех закрываемых ремонтов (Смет ремонта(Заявок на ремонт) указана Причина закрытия! Обработка не выполнена!'"));
			Иначе
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не для всех закрываемых ремонтов (Смет ремонта(Заявок на ремонт) указана Причина закрытия! Обработка не выполнена!'"));
			КонецЕсли;
			
			ПричиныНеЗаполнены = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если отказ или ПричиныНеЗаполнены Тогда
		Возврат;
	КонецЕсли;
	
	МассивНезаполненныхСтрок = ОбрабатываемыеСтроки.НайтиСтроки(Новый Структура("Обрабатывать, Отменен, Перенесен", Истина, Ложь, Ложь));
	Если МассивНезаполненныхСтрок.Количество()>0 Тогда
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ВыполнитьОбработкуЗавершение", ЭтотОбъект, Новый Структура("МассивНезаполненныхСтрок", МассивНезаполненныхСтрок)), НСтр("ru = 'Не для всех обрабатываемых строк указан вид обработки ремонта (отменен или перенесен). Все равно выполнить обработку?'"), РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	// Выполняем создание нового документа торо_ЗакрытиеЗаявокИРемонтов.
	ВыполнитьОбработкуФрагмент(МассивНезаполненныхСтрок);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПлановыеРемонты(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ДатаАктуальности) Тогда
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Невозможно заполнить табличную часть, т.к. не заполнена дата актуальности!'"));
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПлановыеРемонтыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАварийныеРемонты(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ДатаАктуальности) Тогда
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Невозможно заполнить табличную часть, т.к. не заполнена дата актуальности!'"));
		Возврат;
	КонецЕсли;
	
	ЗаполнитьАварийныеРемонтыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсеПлановые(Команда)
	Для каждого Стр Из Объект.ЗакрываемыеРемонты Цикл
	
		Стр.Обрабатывать = Истина;
	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеПлановые(Команда)
	Для каждого Стр Из Объект.ЗакрываемыеРемонты Цикл
	
		Стр.Обрабатывать = Ложь;
	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсеАварийные(Команда)
	Для каждого Стр Из Объект.АварийныеРемонты Цикл
	
		Стр.Обрабатывать = Истина;
	
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеАварийные(Команда)
	Для каждого Стр Из Объект.АварийныеРемонты Цикл
	
		Стр.Обрабатывать = Ложь;
	
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаполнитьАварийныеРемонтыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_Ремонты.Регистратор КАК Регистратор,
	               |	торо_Ремонты.ID КАК ID,
	               |	торо_Ремонты.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_Ремонты.ВидРемонта КАК ВидРемонта
	               |ПОМЕСТИТЬ РемонтыЗаявок
	               |ИЗ
	               |	РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |ГДЕ
	               |	ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_ЗаявкаНаРемонт)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РемонтыЗаявок.ID КАК ID,
	               |	РемонтыЗаявок.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ РемонтыСАктамиНарядами
	               |ИЗ
	               |	РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РемонтыЗаявок КАК РемонтыЗаявок
	               |		ПО торо_Ремонты.ID = РемонтыЗаявок.ID
	               |ГДЕ
	               |	(ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_НарядНаВыполнениеРемонтныхРабот)
	               |			ИЛИ ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_АктОВыполненииЭтапаРабот))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_Ремонты.ID КАК ID,
	               |	РемонтыСАктамиНарядами.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ РемонтыЗаявокСАктамиНарядами
	               |ИЗ
	               |	РемонтыСАктамиНарядами КАК РемонтыСАктамиНарядами
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |		ПО (торо_Ремонты.Регистратор = РемонтыСАктамиНарядами.Регистратор)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_Ремонты.ID КАК ID,
	               |	торо_Ремонты.Регистратор КАК Регистратор,
	               |	торо_Ремонты.ДатаНачалаПлан КАК ДатаНачалаПлан
	               |ПОМЕСТИТЬ РемонтыПлановыеИДефекты
	               |ИЗ
	               |	РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |ГДЕ
	               |	ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_ВыявленныеДефекты)
	               |	И НЕ торо_Ремонты.ID В
	               |				(ВЫБРАТЬ
	               |					торо_ОтмененныеРемонтыСрезПоследних.ID
	               |				ИЗ
	               |					РегистрСведений.торо_ОтмененныеРемонты.СрезПоследних КАК торо_ОтмененныеРемонтыСрезПоследних
	               |				ГДЕ
	               |					торо_ОтмененныеРемонтыСрезПоследних.Отменен)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РемонтыПлановыеИДефекты.ID КАК ID
	               |ПОМЕСТИТЬ РемонтыПлановыеСПодчиненными
	               |ИЗ
	               |	РемонтыПлановыеИДефекты КАК РемонтыПлановыеИДефекты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |		ПО РемонтыПлановыеИДефекты.ID = торо_Ремонты.ID
	               |			И (ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_НарядНаВыполнениеРемонтныхРабот)
	               |				ИЛИ ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_АктОВыполненииЭтапаРабот))
	               |ГДЕ
	               |	торо_Ремонты.Регистратор ЕСТЬ NULL
	               |	И НЕ РемонтыПлановыеИДефекты.ID В
	               |				(ВЫБРАТЬ
	               |					РемонтыЗаявокСАктамиНарядами.ID
	               |				ИЗ
	               |					РемонтыЗаявокСАктамиНарядами КАК РемонтыЗаявокСАктамиНарядами)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РемонтыЗаявок.Регистратор КАК Регистратор,
	               |	РемонтыЗаявок.ID КАК ID,
	               |	РемонтыЗаявок.ОбъектРемонта КАК ОбъектРемонта,
	               |	РемонтыЗаявок.ВидРемонта КАК ВидРемонта
	               |ПОМЕСТИТЬ Заявки
	               |ИЗ
	               |	РемонтыЗаявок КАК РемонтыЗаявок
	               |ГДЕ
	               |	НЕ РемонтыЗаявок.ID В
	               |				(ВЫБРАТЬ
	               |					РемонтыЗаявокСАктамиНарядами.ID
	               |				ИЗ
	               |					РемонтыЗаявокСАктамиНарядами КАК РемонтыЗаявокСАктамиНарядами)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ВыявленныеДефектыСрезПоследних.ID КАК ID,
	               |	торо_ВыявленныеДефектыСрезПоследних.ОтказавшийЭлемент КАК ОбъектРемонта,
	               |	торо_Ремонты.ВидРемонта КАК ВидРемонта,
	               |	ВЫБОР
	               |		КОГДА Заявки.Регистратор ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЕстьЗаявка,
	               |	Заявки.Регистратор КАК Заявка,
	               |	торо_ВыявленныеДефектыСрезПоследних.Регистратор КАК Регистратор,
	               |	Константы.торо_ОтменятьЗакрытиеЗаявок КАК Отменен,
	               |	Константы.торо_ПричинаЗакрытияЗаявок КАК ПричинаЗакрытия,
	               |	торо_ВыявленныеДефектыСрезПоследних.Регистратор КАК ДокументОснование
	               |ИЗ
	               |	РемонтыПлановыеСПодчиненными КАК РемонтыПлановыеСПодчиненными
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыявленныеДефекты.СрезПоследних КАК торо_ВыявленныеДефектыСрезПоследних
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |			ПО торо_ВыявленныеДефектыСрезПоследних.ID = торо_Ремонты.ID
	               |				И торо_ВыявленныеДефектыСрезПоследних.Регистратор = торо_Ремонты.Регистратор
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Заявки КАК Заявки
	               |			ПО торо_ВыявленныеДефектыСрезПоследних.ID = Заявки.ID
	               |		ПО РемонтыПлановыеСПодчиненными.ID = торо_ВыявленныеДефектыСрезПоследних.ID,
	               |	Константы КАК Константы
	               |ГДЕ
	               |	торо_ВыявленныеДефектыСрезПоследних.Период <= &ДатаАктуальности
	               |	И ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_ВыявленныеДефекты)";
				   
	Запрос.УстановитьПараметр("ДатаАктуальности", Объект.ДатаАктуальности);
	Результат = Запрос.Выполнить();
	
	Объект.АварийныеРемонты.Очистить();
	Объект.АварийныеРемонты.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПлановыеРемонтыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_Ремонты.Регистратор КАК Регистратор,
	               |	торо_Ремонты.ID КАК ID,
	               |	торо_Ремонты.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_Ремонты.ВидРемонта КАК ВидРемонта
	               |ПОМЕСТИТЬ РемонтыЗаявок
	               |ИЗ
	               |	РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |ГДЕ
	               |	ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_ЗаявкаНаРемонт)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РемонтыЗаявок.ID КАК ID,
	               |	РемонтыЗаявок.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ РемонтыСАктамиНарядами
	               |ИЗ
	               |	РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РемонтыЗаявок КАК РемонтыЗаявок
	               |		ПО торо_Ремонты.ID = РемонтыЗаявок.ID
	               |ГДЕ
	               |	(ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_НарядНаВыполнениеРемонтныхРабот)
	               |			ИЛИ ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_АктОВыполненииЭтапаРабот))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_Ремонты.ID КАК ID,
	               |	РемонтыСАктамиНарядами.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ РемонтыЗаявокСАктамиНарядами
	               |ИЗ
	               |	РемонтыСАктамиНарядами КАК РемонтыСАктамиНарядами
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |		ПО (торо_Ремонты.Регистратор = РемонтыСАктамиНарядами.Регистратор)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ID КАК ID,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.Регистратор КАК Регистратор,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРемонтныхРабот КАК ДатаНачалаРемонтныхРабот
	               |ПОМЕСТИТЬ РемонтыПлановыеИДефекты
	               |ИЗ
	               |	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних КАК торо_ПлановыеРемонтныеРаботыСрезПоследних
	               |ГДЕ
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРемонтныхРабот <= &ДатаАктуальности
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РемонтыПлановыеИДефекты.ID КАК ID,
	               |	РемонтыПлановыеИДефекты.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ РемонтыПлановыеСПодчиненными
	               |ИЗ
	               |	РемонтыПлановыеИДефекты КАК РемонтыПлановыеИДефекты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |		ПО РемонтыПлановыеИДефекты.ID = торо_Ремонты.ID
	               |			И (ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_НарядНаВыполнениеРемонтныхРабот)
	               |				ИЛИ ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_АктОВыполненииЭтапаРабот))
	               |ГДЕ
	               |	торо_Ремонты.Регистратор ЕСТЬ NULL
	               |	И НЕ РемонтыПлановыеИДефекты.ID В
	               |				(ВЫБРАТЬ
	               |					РемонтыЗаявокСАктамиНарядами.ID
	               |				ИЗ
	               |					РемонтыЗаявокСАктамиНарядами КАК РемонтыЗаявокСАктамиНарядами)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РемонтыЗаявок.Регистратор КАК Регистратор,
	               |	РемонтыЗаявок.ID КАК ID,
	               |	РемонтыЗаявок.ОбъектРемонта КАК ОбъектРемонта,
	               |	РемонтыЗаявок.ВидРемонта КАК ВидРемонта
	               |ПОМЕСТИТЬ Заявки
	               |ИЗ
	               |	РемонтыЗаявок КАК РемонтыЗаявок
	               |ГДЕ
	               |	НЕ РемонтыЗаявок.ID В
	               |				(ВЫБРАТЬ
	               |					РемонтыЗаявокСАктамиНарядами.ID
	               |				ИЗ
	               |					РемонтыЗаявокСАктамиНарядами КАК РемонтыЗаявокСАктамиНарядами)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ID КАК ID,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ВидРемонтныхРабот КАК ВидРемонта,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРемонтныхРабот КАК ДатаНачала,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаОкончанияРемонтныхРабот КАК ДатаОкончания,
	               |	ВЫБОР
	               |		КОГДА Заявки.Регистратор ЕСТЬ NULL
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЕстьЗаявка,
	               |	Заявки.Регистратор КАК Заявка,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.Регистратор КАК Регистратор,
	               |	Константы.торо_ПричинаЗакрытияЗаявок КАК ПричинаЗакрытия,
	               |	Константы.торо_ОтменятьЗакрытиеЗаявок КАК Отменен,
	               |	РемонтыПлановыеСПодчиненными.Регистратор КАК ДокументОснование
	               |ИЗ
	               |	РемонтыПлановыеСПодчиненными КАК РемонтыПлановыеСПодчиненными
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних КАК торо_ПлановыеРемонтныеРаботыСрезПоследних
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Заявки КАК Заявки
	               |			ПО торо_ПлановыеРемонтныеРаботыСрезПоследних.ID = Заявки.ID
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ОтмененныеРемонты.СрезПоследних КАК торо_ОтмененныеРемонтыСрезПоследних
	               |			ПО (НЕ торо_ОтмененныеРемонтыСрезПоследних.Отменен)
	               |				И торо_ПлановыеРемонтныеРаботыСрезПоследних.ID = торо_ОтмененныеРемонтыСрезПоследних.ID
	               |		ПО РемонтыПлановыеСПодчиненными.ID = торо_ПлановыеРемонтныеРаботыСрезПоследних.ID,
	               |	Константы КАК Константы
	               |ГДЕ
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРемонтныхРабот <= &ДатаАктуальности
	               |	И НЕ торо_ПлановыеРемонтныеРаботыСрезПоследних.Замещен
	               |	И НЕ торо_ПлановыеРемонтныеРаботыСрезПоследних.Отменен
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаНачала";
	
	Запрос.УстановитьПараметр("ДатаАктуальности", Объект.ДатаАктуальности);
	
	Результат = Запрос.Выполнить();
	
	Объект.ЗакрываемыеРемонты.Очистить();
	Объект.ЗакрываемыеРемонты.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    МассивНезаполненныхСтрок = ДополнительныеПараметры.МассивНезаполненныхСтрок;
    
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;
    
    ВыполнитьОбработкуФрагмент(МассивНезаполненныхСтрок);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбработкуФрагмент(Знач МассивНезаполненныхСтрок)
    
    Перем ДокументСоздан, Строка;
    
    Для Каждого Строка Из МассивНезаполненныхСтрок Цикл
        ОбрабатываемыеСтроки.Удалить(Строка);
    КонецЦикла;
    
    Если ОбрабатываемыеСтроки.Количество()=0 Тогда
        торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ни для одного выбранного для обработки ремонта не указан вид обработки (отменен или перенесен)! Обработка не выполнена!'"));
        Возврат;
    КонецЕсли;
    
    ДокументСоздан = СоздатьДокументЗакрытияЗаявокНаСервере();
    
    Если ДокументСоздан Тогда
        
        Если НЕ ЗначениеЗаполнено(Владелец) Тогда
            Оповестить("ВыполненПереносРемонтов", ЭтаФорма.КлючУникальности, ЭтаФорма);
        КонецЕсли;
        
    КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СоздатьДокументЗакрытияЗаявокНаСервере()
	
	ТаблицаЗакрываемыхРемонтов = ОбрабатываемыеСтроки.Выгрузить();
	ТаблицаЗакрываемыхЗаявок = ОбрабатываемыеСтроки.Выгрузить(Новый Структура("ЕстьЗаявка", Истина), "Заявка, ПричинаЗакрытия");
	
	ДокументЗакрытиеЗаявокИРемонтов = Документы.торо_ЗакрытиеЗаявокИРемонтов.СоздатьДокумент();
	
	Если ЗначениеЗаполнено(Владелец) Тогда
		ДокументЗакрытиеЗаявокИРемонтов.ППРИнициатор = Владелец;
	КонецЕсли;
	ДокументЗакрытиеЗаявокИРемонтов.ЗакрываемыеЗаявки.Загрузить(ТаблицаЗакрываемыхЗаявок);
	ДокументЗакрытиеЗаявокИРемонтов.ЗакрываемыеРемонты.Загрузить(ТаблицаЗакрываемыхРемонтов);
	ДокументЗакрытиеЗаявокИРемонтов.ДатаАктуальности = Объект.ДатаАктуальности;
	ДокументЗакрытиеЗаявокИРемонтов.Дата = ТекущаяДата();
	
	ДокументЗакрытиеЗаявокИРемонтов.Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнаяОрганизация", Истина);
	ДокументЗакрытиеЗаявокИРемонтов.Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойОтветственный", Справочники.Пользователи.ПустаяСсылка());	
	
	ДокументЗакрытиеЗаявокИРемонтов.ДополнительныеСвойства.Вставить("ИзОбработки", Истина);
	Попытка
		
		ДокументЗакрытиеЗаявокИРемонтов.Записать(РежимЗаписиДокумента.Проведение);
		
		мУдаления = Новый Массив;
		Для каждого текСтрока из Объект.ЗакрываемыеРемонты Цикл
			Если текСтрока.Обрабатывать и (текСтрока.Отменен или текСтрока.Перенесен) тогда
				мУдаления.Добавить(текСтрока);
			КонецЕсли;
		КонецЦикла;
		Для каждого текСтрока из мУдаления Цикл
			Объект.ЗакрываемыеРемонты.Удалить(текСтрока);
		КонецЦикла;
		
		мУдаления.Очистить();
		Для каждого текСтрока из Объект.АварийныеРемонты Цикл
			Если текСтрока.Обрабатывать и текСтрока.Отменен тогда
				мУдаления.Добавить(текСтрока);
			КонецЕсли;
		КонецЦикла;
		Для каждого текСтрока из мУдаления Цикл
			Объект.АварийныеРемонты.Удалить(текСтрока);
		КонецЦикла;
		
		Возврат Истина;
		
	Исключение
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось записать документ ""Закрытие заявок и ремонтов""! '") + ОписаниеОшибки());
		Возврат Ложь
	КонецПопытки;
	
КонецФункции

&НаСервере
Функция ВыполнитьОбработкуНаСервере()
	
	ОбрабатываемыеСтроки.Загрузить(Объект.ЗакрываемыеРемонты.Выгрузить(Новый Структура("Обрабатывать", Истина)));
	
	НовыеДатыЗаполнены = Истина;
	Для Каждого Строка Из ОбрабатываемыеСтроки Цикл
		Если Строка.Перенесен И Не ЗначениеЗаполнено(Строка.НоваяДатаНачала) и Не ЗначениеЗаполнено(Строка.НоваяДатаОкончания) Тогда
			НовыеДатыЗаполнены = Ложь;
			НомерСтроки = ОбрабатываемыеСтроки.Индекс(Строка) + 1;
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке № %1 не заполнен новый период ремонта!'"),НомерСтроки));
		ИначеЕсли Строка.Перенесен И (Строка.НоваяДатаНачала > Строка.НоваяДатаОкончания 
			ИЛИ (Не ЗначениеЗаполнено(Строка.НоваяДатаНачала) И ЗначениеЗаполнено(Строка.НоваяДатаОкончания))) Тогда
			НовыеДатыЗаполнены = Ложь;
			НомерСтроки = ОбрабатываемыеСтроки.Индекс(Строка) + 1;
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В строке № %1 неверно заполнен новый период ремонта!'"),НомерСтроки));
		КонецЕсли;
	КонецЦикла;
	
	Если не НовыеДатыЗаполнены Тогда
		Возврат Истина;
	КонецЕсли;
	
	ОбрабатываемыеАварийныеРемонты = Объект.АварийныеРемонты.Выгрузить(Новый Структура("Обрабатывать", Истина));
	Для Каждого Строка Из ОбрабатываемыеАварийныеРемонты Цикл
		НовСтрока = ОбрабатываемыеСтроки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Строка);
		НовСтрока.Перенесен = Ложь;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ЗакрываемыеРемонтыОтмененПриИзменении(Элемент)
	ТекСтрока = Элементы.ЗакрываемыеРемонты.ТекущиеДанные;
	Если ТекСтрока.Отменен И ТекСтрока.Перенесен Тогда
		ТекСтрока.Перенесен = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрываемыеРемонтыПеренесенПриИзменении(Элемент)
	ТекСтрока = Элементы.ЗакрываемыеРемонты.ТекущиеДанные;
	Если ТекСтрока.Перенесен И ТекСтрока.Отменен Тогда
		ТекСтрока.Отменен = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти