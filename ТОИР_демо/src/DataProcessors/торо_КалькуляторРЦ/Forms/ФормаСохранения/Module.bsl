#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДеревоРемонтовОсновное = ЭтаФорма.Параметры.Дерево;
	
	
	ОбъектыРемонтаТЗ = Новый ТаблицаЗначений;
	ОбъектыРемонтаТЗ.Колонки.Добавить("ОбъектРемонтныхРабот",   Новый ОписаниеТипов("СправочникСсылка.торо_ОбъектыРемонта"));
	ОбъектыРемонтаТЗ.Колонки.Добавить("ВидРемонтныхРабот",      Новый ОписаниеТипов("СправочникСсылка.торо_ВидыРемонтов"));
	ОбъектыРемонтаТЗ.Колонки.Добавить("ТиповойОР",              Новый ОписаниеТипов("СправочникСсылка.торо_ТиповыеОР"));
	ОбъектыРемонтаТЗ.Колонки.Добавить("ОР",                     Новый ОписаниеТипов("Число"));
	ОбъектыРемонтаТЗ.Колонки.Добавить("РГ",                     Новый ОписаниеТипов("Число"));
	ОбъектыРемонтаТЗ.Колонки.Добавить("Источник",               Новый ОписаниеТипов("Строка"));
	ОбъектыРемонтаТЗ.Колонки.Добавить("ДублированиеЗаписей",    Новый ОписаниеТипов("Число"));
	ОбъектыРемонтаТЗ.Колонки.Добавить("НомерКартинкиСостояний", Новый ОписаниеТипов("Число"));
	
	Если ЭтаФорма.Параметры.Свойство("МассивСтрок") Тогда
		МассивВыбранныхСтрок = ЭтаФорма.Параметры.МассивСтрок;
		Для Каждого ИдентификаторСтроки Из МассивВыбранныхСтрок Цикл
			СтрокаДерева = ДеревоРемонтовОсновное.НайтиПоИдентификатору(ИдентификаторСтроки);
			ЗаписатьСтрокуДереваВТаблицуЗначений(СтрокаДерева, ОбъектыРемонтаТЗ);
		КонецЦикла;
	Иначе
		Для Каждого СтрокаДерева Из ДеревоРемонтовОсновное.ПолучитьЭлементы() Цикл
			ЗаписатьСтрокуДереваВТаблицуЗначений(СтрокаДерева, ОбъектыРемонтаТЗ);
		КонецЦикла;
	КонецЕсли;
	ЗаполнитьДеревоНаСервере(ОбъектыРемонтаТЗ);
	НомерДублированнойСтроки = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьПолеДублированиеЗаписей(НомерДублированнойСтроки,Ложь);
	
	Для Каждого Элемент Из ДеревоВидовРемонта.ПолучитьЭлементы() Цикл
		Элементы.ДеревоВидовРемонта.Развернуть(Элемент.ПолучитьИдентификатор(),Истина);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоВидовРемонта
&НаКлиенте
Процедура ДеревоВидовРемонтаРГПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоВидовРемонта.ТекущиеДанные;
	
	Если ТекущиеДанные.РГ = 2 Тогда
		ТекущиеДанные.РГ = 0;
	КонецЕсли;
	Если ТипЗнч(ТекущиеДанные.Ремонты) = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
		Если ТекущиеДанные.РГ = 0 И ТекущиеДанные.ОР = 2 Тогда
			ТекущиеДанные.РГ = 1;
		КонецЕсли;
		ТекущиеДанные.ОР = НЕ ТекущиеДанные.РГ;
		Для Каждого Строка ИЗ ТекущиеДанные.ПолучитьЭлементы() Цикл
			Строка.РГ = ТекущиеДанные.РГ;
			Строка.ОР = ТекущиеДанные.ОР;
		КонецЦикла;
	Иначе
		Если ТекущиеДанные.РГ = 1 Тогда
			ТекущиеДанные.ОР = 0;
		КонецЕсли;
		ТекущиеДанные.ПолучитьРодителя().ОР = 2;
		ТекущиеДанные.ПолучитьРодителя().РГ = 2;
	КонецЕсли;
	
	
	НомерДублированнойСтроки = 1;
	ЗаполнитьПолеДублированиеЗаписей(НомерДублированнойСтроки,Истина);
	
	ЗаполнитьПолеНетРГ(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВидовРемонтаОРПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоВидовРемонта.ТекущиеДанные;
	
	Если ТекущиеДанные.ОР = 2 Тогда
		ТекущиеДанные.ОР = 0;
	КонецЕсли;

	Если ТипЗнч(ТекущиеДанные.Ремонты) = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
		Если ТекущиеДанные.ОР = 0 И ТекущиеДанные.РГ = 2 Тогда
			ТекущиеДанные.ОР = 1;
		КонецЕсли;
		ТекущиеДанные.РГ = НЕ ТекущиеДанные.ОР;
		Для Каждого Строка ИЗ ТекущиеДанные.ПолучитьЭлементы() Цикл
			Строка.РГ = ТекущиеДанные.РГ;
			Строка.ОР = ТекущиеДанные.ОР;
		КонецЦикла;
	Иначе
		Если ТекущиеДанные.ОР = 1 Тогда
			ТекущиеДанные.РГ = 0;
		КонецЕсли;
		ТекущиеДанные.ПолучитьРодителя().ОР = 2;
		ТекущиеДанные.ПолучитьРодителя().РГ = 2;
	КонецЕсли;
	
	
	НомерДублированнойСтроки = 1;
	ЗаполнитьПолеДублированиеЗаписей(НомерДублированнойСтроки,Истина);
	
	ЗаполнитьПолеНетРГ(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВидовРемонтаПослеУдаления(Элемент)
	
	ЗаполнитьПолеДублированиеЗаписей(НомерДублированнойСтроки,Истина)
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	НетРГ = Ложь;
	Дублирование = Ложь;
	Для Каждого СтрокаОР Из ДеревоВидовРемонта.ПолучитьЭлементы() Цикл
		Если СтрокаОР.ДублированиеЗаписей = 2 Тогда
			Дублирование = Истина;
		КонецЕсли;	
		Если СтрокаОР.НетРГ Тогда
			НетРГ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Дублирование ИЛИ НетРГ Тогда
		ТекстПредупреждения = Символы.Таб + НСтр("ru = 'Не верно заданы параметры сохранения.'") + Символы.ПС + Символы.ПС;
		
		Если Дублирование Тогда
			ТекстПредупреждения = ТекстПредупреждения + Символы.Таб + Символы.Таб + НСтр("ru = ' - для выделенных жирным видов ремонта измените настройки сохранения так, чтобы в каждую ремонтную группу записывался только один вариант вида ремонта.'") + Символы.ПС + Символы.ПС;
		КонецЕсли;
		
		Если НетРГ Тогда
			ТекстПредупреждения = ТекстПредупреждения + Символы.Таб + Символы.Таб + НСтр("ru = ' - выделенные подчеркиванием виды ремонта не входят ни в одну ремонтную группу. Измените настройки сохранения или добавьте объект ремонта в ремонтную группу.'"); 
		КонецЕсли;
	
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаОР Из ДеревоВидовРемонта.ПолучитьЭлементы() Цикл
		Для Каждого СтрокаВР Из СтрокаОР.ПолучитьЭлементы() Цикл
			Если СтрокаВР.Источник = "ОбъектРемонта" И СтрокаВР.РГ = 1 Тогда
				Ответ = Неопределено;
				ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для вида ремонта %1 объекта ремонта %2 выбран режим записи нормативов ""В ремонтную группу"".
					|Удалить эти нормативы из данных объекта ремонта?'"),Строка(СтрокаВР.Ремонты),Строка(СтрокаВР.ОбъектРемонта));
				ПоказатьВопрос(Новый ОписаниеОповещения("СохранитьЗавершение", ЭтотОбъект, Новый Структура("СтрокаВР", СтрокаВР)), ТекстВопроса,РежимДиалогаВопрос.ДаНет);
                Возврат;
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;

	СохранитьФрагмент();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаписатьСтрокуДереваВТаблицуЗначений(СтрокаДерева, ОбъектыРемонтаОбъект)
	
	Если ТипЗнч(СтрокаДерева.Ремонты) = Тип("СправочникСсылка.торо_ВидыРемонтов")Тогда
		СтруктураОтбора = Новый Структура("ОбъектРемонтныхРабот, ВидРемонтныхРабот",СтрокаДерева.ПолучитьРодителя().Ремонты,СтрокаДерева.Ремонты);
		МассивНайденныхСтрок = ОбъектыРемонтаОбъект.НайтиСтроки(СтруктураОтбора);
		Если НЕ ЗначениеЗаполнено(МассивНайденныхСтрок) Тогда
			НоваяСтрокаТЗ = ОбъектыРемонтаОбъект.Добавить();
			НоваяСтрокаТЗ.ВидРемонтныхРабот      = СтрокаДерева.Ремонты;
			НоваяСтрокаТЗ.ОбъектРемонтныхРабот   = СтрокаДерева.ПолучитьРодителя().Ремонты;
			НоваяСтрокаТЗ.ТиповойОР              = СтрокаДерева.ТиповойОР;
			НоваяСтрокаТЗ.НомерКартинкиСостояний = СтрокаДерева.НомерКартинкиСостояний;
			Если СтрокаДерева.Источник = "ТиповойОР" Тогда
				НоваяСтрокаТЗ.РГ = 1;
				НоваяСтрокаТЗ.ОР = 0;
				НоваяСтрокаТЗ.Источник = "ТиповойОР";
			ИначеЕсли СтрокаДерева.Источник = "ОбъектРемонта" Тогда
				НоваяСтрокаТЗ.РГ = 0;
				НоваяСтрокаТЗ.ОР = 1;
				НоваяСтрокаТЗ.Источник = "ОбъектРемонта";
			Иначе	
				НоваяСтрокаТЗ.РГ = 0;
				НоваяСтрокаТЗ.ОР = 0;
				НоваяСтрокаТЗ.Источник = "Обработка";
			КонецЕсли;
		КонецЕсли;
	Иначе
		Для Каждого Строка Из СтрокаДерева.ПолучитьЭлементы() Цикл
			ЗаписатьСтрокуДереваВТаблицуЗначений(Строка, ОбъектыРемонтаОбъект)
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоНаСервере(ОбъектыРемонтаТЗ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОбъектыРемонта.ВидРемонтныхРабот,
	               |	ОбъектыРемонта.ОбъектРемонтныхРабот,
	               |	ОбъектыРемонта.ОР,
	               |	ОбъектыРемонта.РГ,
	               |	ОбъектыРемонта.ТиповойОР,
	               |	ОбъектыРемонта.Источник,
	               |	ОбъектыРемонта.НомерКартинкиСостояний
	               |ПОМЕСТИТЬ ОбъектыРемонта
	               |ИЗ
	               |	&ТаблицаОбъектыРемонта КАК ОбъектыРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъектыРемонта.ВидРемонтныхРабот,
	               |	ОбъектыРемонта.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	               |	ОбъектыРемонта.ОР,
	               |	ОбъектыРемонта.РГ,
	               |	ОбъектыРемонта.ТиповойОР,
	               |	ОбъектыРемонта.Источник,
	               |	ОбъектыРемонта.НомерКартинкиСостояний
	               |ИЗ
	               |	ОбъектыРемонта КАК ОбъектыРемонта
	               |ИТОГИ ПО
	               |	ОбъектРемонтныхРабот";
	ДеревоВидовРемонта.ПолучитьЭлементы().Очистить();
   	Запрос.УстановитьПараметр("ТаблицаОбъектыРемонта", ОбъектыРемонтаТЗ);

	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаВР = Новый ТаблицаЗначений;
	ТаблицаВР.Колонки.Добавить("ВидРемонтныхРабот",      Новый ОписаниеТипов("СправочникСсылка.торо_ВидыРемонтов"));
	ТаблицаВР.Колонки.Добавить("ОР",                     Новый ОписаниеТипов("Число"));
	ТаблицаВР.Колонки.Добавить("РГ",                     Новый ОписаниеТипов("Число"));
	ТаблицаВР.Колонки.Добавить("ТиповойОР",              Новый ОписаниеТипов("СправочникСсылка.торо_ТиповыеОР"));
	ТаблицаВР.Колонки.Добавить("ОбъектРемонта",          Новый ОписаниеТипов("СправочникСсылка.торо_ОбъектыРемонта"));
	ТаблицаВР.Колонки.Добавить("Источник",               Новый ОписаниеТипов("Строка"));
	ТаблицаВР.Колонки.Добавить("НомерКартинкиСостояний", Новый ОписаниеТипов("Число"));
	
	Для Каждого ОР Из Дерево.Строки Цикл
		ТаблицаВР.Очистить();
		Для Каждого ВР Из ОР.Строки Цикл
			НоваяСтрока = ТаблицаВР.Добавить();
			НоваяСтрока.ВидРемонтныхРабот      = ВР.ВидРемонтныхРабот;
			НоваяСтрока.ОР                     = ВР.ОР;
			НоваяСтрока.РГ                     = ВР.РГ;
			НоваяСтрока.ТиповойОР              = ВР.ТиповойОР;
			НоваяСтрока.ОбъектРемонта          = ВР.ОбъектРемонтныхРабот;
			НоваяСтрока.Источник               = ВР.Источник;
			НоваяСтрока.НомерКартинкиСостояний = ВР.НомерКартинкиСостояний;
		КонецЦикла;
		ДополнитьДеревоРемонтовНаСервере(ОР.ОбъектРемонтныхРабот,ТаблицаВР);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДополнитьДеревоРемонтовНаСервере(ОбъектРемонта, ТаблицаВР)
	
	ДеревоВидовРемонтаОбъект = РеквизитФормыВЗначение("ДеревоВидовРемонта");
	
	НайденнаяСтрока = ДеревоВидовРемонтаОбъект.Строки.Найти(ОбъектРемонта, "Ремонты", Истина);
	Если НайденнаяСтрока = Неопределено Тогда
		НовСтрокаОбъект = ДеревоВидовРемонтаОбъект.Строки.Добавить();
		НовСтрокаОбъект.Ремонты       = ОбъектРемонта;
		НовСтрокаОбъект.НомерКартинки = 0;
		СтрокаДерева = НовСтрокаОбъект;
	Иначе
		СтрокаДерева = НайденнаяСтрока;	
	КонецЕсли;
	
	ОР = 0;
	РГ = 0;
	Для Каждого СтрокаВР Из ТаблицаВР Цикл
			
		НовСтрокаВидРемРабот = СтрокаДерева.Строки.Добавить();
		НовСтрокаВидРемРабот.Ремонты                = СтрокаВР.ВидРемонтныхРабот;
		НовСтрокаВидРемРабот.НомерКартинки          = 7;
		НовСтрокаВидРемРабот.ОР                     = СтрокаВР.ОР;
		НовСтрокаВидРемРабот.РГ                     = СтрокаВР.РГ;
		НовСтрокаВидРемРабот.ТиповойОР              = СтрокаВР.ТиповойОР;
		НовСтрокаВидРемРабот.ОбъектРемонта          = СтрокаВР.ОбъектРемонта;
		НовСтрокаВидРемРабот.Источник               = СтрокаВР.Источник;
		НовСтрокаВидРемРабот.НомерКартинкиСостояний = СтрокаВР.НомерКартинкиСостояний;
		ОР = ОР + СтрокаВР.ОР;
		РГ = РГ + СтрокаВР.РГ;
		
	КонецЦикла;

	Если ОР = 0 Тогда
		СтрокаДерева.РГ = 1;
	ИначеЕсли РГ = 0 Тогда
		СтрокаДерева.ОР = 1;
	Иначе
		СтрокаДерева.ОР = 2;
		СтрокаДерева.РГ = 2;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДеревоВидовРемонтаОбъект, "ДеревоВидовРемонта");

КонецФункции

&НаКлиенте
Процедура ЗаполнитьПолеДублированиеЗаписей(НомерДублированнойСтроки,Очистить)
	
	Если Очистить Тогда
		Для Каждого ЭлементОР1 Из ДеревоВидовРемонта.ПолучитьЭлементы() Цикл
			Для Каждого ЭлементВР1 Из ЭлементОР1.ПолучитьЭлементы() Цикл
				ЭлементВР1.ДублированиеЗаписей = 0;
				ЭлементОР1.ДублированиеЗаписей = 0;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;

	Для Каждого ЭлементОР1 Из ДеревоВидовРемонта.ПолучитьЭлементы() Цикл
		Для Каждого ЭлементВР1 Из ЭлементОР1.ПолучитьЭлементы() Цикл
			Для Каждого ЭлементОР2 Из ДеревоВидовРемонта.ПолучитьЭлементы() Цикл
				Для Каждого ЭлементВР2 Из ЭлементОР2.ПолучитьЭлементы() Цикл
					Если ЭлементОР1.Ремонты <> ЭлементОР2.Ремонты И ЭлементВР2.Ремонты = ЭлементВР1.Ремонты И ЭлементВР2.РемонтнаяГруппа = ЭлементВР1.РемонтнаяГруппа Тогда
						Если ЭлементВР2.РГ = 1 И ЭлементВР1.РГ = 1 Тогда
							ЭлементВР1.ДублированиеЗаписей = 2;
							ЭлементВР2.ДублированиеЗаписей = 2;
							ЭлементОР1.ДублированиеЗаписей = 2;
							ЭлементОР2.ДублированиеЗаписей = 2;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
 		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПолеНетРГ(Очистить)
	
	Если Очистить Тогда
		Для Каждого ЭлементОР1 Из ДеревоВидовРемонта.ПолучитьЭлементы() Цикл
			Для Каждого ЭлементВР1 Из ЭлементОР1.ПолучитьЭлементы() Цикл
				ЭлементВР1.НетРГ = Ложь;
				ЭлементОР1.НетРГ = Ложь;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого ЭлементОР Из ДеревоВидовРемонта.ПолучитьЭлементы() Цикл
		Для Каждого ЭлементВР Из ЭлементОР.ПолучитьЭлементы() Цикл
			Если Не ЗначениеЗаполнено(ЭлементВР.ТиповойОР) И ЭлементВР.РГ = 1 Тогда
				
				ЭлементВР.НетРГ = Истина;
				ЭлементОР.НетРГ = Истина;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    СтрокаВР = ДополнительныеПараметры.СтрокаВР;
    
    
    Ответ = РезультатВопроса;
    Если Ответ = КодВозвратаДиалога.Нет Тогда
        СтрокаВР.ОР = 1;
    КонецЕсли;
    
    СохранитьФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура СохранитьФрагмент()
    
    Закрыть(ДеревоВидовРемонта);

КонецПроцедуры

#КонецОбласти



