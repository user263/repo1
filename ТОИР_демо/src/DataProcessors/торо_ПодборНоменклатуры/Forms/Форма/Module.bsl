#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗапрашиватьКоличество = Истина; 
	
	Если ЭтаФорма.КлючНазначенияИспользования = "ПростойПодборНоменклатуры" Тогда
		
		ЗапрашиватьЦены = Ложь;
		ЗапрашиватьОстаток = Ложь;
		
		Элементы.КорзинаВидЦены.Видимость = Ложь;
		Элементы.КорзинаСумма.Видимость = Ложь;
		Элементы.КорзинаЦена.Видимость = Ложь;
		
		// Может быть указан как конкретный тип номенклатуры для отбора, а может массив типов.
		ПараметрОтбораПоТипу = Неопределено;
		Если Параметры.Свойство("ОтборПоТипуНоменклатуры", ПараметрОтбораПоТипу) И ПараметрОтбораПоТипу <> Неопределено Тогда
			ЭлементОтбора = СписокНоменклатура.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));			
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Номенклатура.ТипНоменклатуры");
			Если ТипЗнч(ПараметрОтбораПоТипу) = Тип("Массив") Тогда
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
			Иначе
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			КонецЕсли;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.ПравоеЗначение = ПараметрОтбораПоТипу;
		ИначеЕсли Параметры.свойство("ОтборПоУслугам") Тогда 
			
			ЭлементОтбора = СписокНоменклатура.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));			
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Номенклатура.ТипНоменклатуры");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.ПравоеЗначение = Перечисления.ТипыНоменклатуры.Услуга;
			
		КонецЕсли;
		
		Если Параметры.Свойство("ЗапрашиватьКоличество") Тогда
			Если  Параметры.ЗапрашиватьКоличество = Ложь Тогда
				ЗапрашиватьКоличество = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЭтаФорма.КлючНазначенияИспользования = "ПодборСЦенами" Тогда
		
		ЗапрашиватьЦены = Истина;
		ЗапрашиватьОстаток = Истина;
		Валюта = Параметры.Валюта;
		ЗапрашиватьОстаток = Истина;
		
	КонецЕсли; 
	
	Склад = ЭтаФорма.Параметры.Склад;
	
	фПеренестиВДокумент = Ложь;
	ВопросПриЗакрытии = Истина;
	
	ФО_ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("торо_ИспользоватьХарактеристикиНоменклатуры");
	Элементы.СписокНоменклатура.ПодчиненныеЭлементы.СписокНоменклатураХарактеристика.Видимость = ФО_ИспользоватьХарактеристикиНоменклатуры;
	СписокНоменклатура.Параметры.УстановитьЗначениеПараметра("ФОИспользоватьХарактеристикиНоменклатуры", ФО_ИспользоватьХарактеристикиНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	фПеренестиВДокумент = Истина;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если фПеренестиВДокумент или Объект.Корзина.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ВопросПриЗакрытии Тогда
		Отказ = Истина;
		Если Не ЗавершениеРаботы Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Подобранная номенклатура не перенесена. Перенести?'"), РежимДиалогаВопрос.ДаНетОтмена);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		фПеренестиВДокумент = Истина;
	КонецЕсли;

	Если Результат <> КодВозвратаДиалога.Отмена Тогда 
		ВопросПриЗакрытии = Ложь;
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если фПеренестиВДокумент И Не ЗавершениеРаботы Тогда
		ЗакрытьСПереносом();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИерархияНоменклатуры
&НаКлиенте
Процедура ИерархияНоменклатурыПриАктивизацииСтроки(Элемент)
	
	УстановитьОтборВСпискеНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСписокНоменклатура

&НаКлиенте
Процедура СписокНоменклатураПриАктивизацииСтроки(Элемент)
	
	текДанные = Элемент.текущиеДанные;
	
	Если текДанные <> Неопределено Тогда
		ЗаполнитьОстаткиТоваров(Склад, текДанные.Номенклатура, текДанные.Характеристика);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатураВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Если Не ЗапрашиватьКоличество Тогда
			СписокНоменклатураВыборЗавершение(1,Новый Структура("ТекДанные", ТекДанные));
		Иначе
			ВыбЗнач = 0;
			ПоказатьВводЗначения(Новый ОписаниеОповещения("СписокНоменклатураВыборЗавершение", ЭтотОбъект, Новый Структура("ТекДанные", ТекДанные)), ВыбЗнач, НСтр("ru = 'Введите количество'"), Новый ОписаниеТипов("Число",,,новый КвалификаторыЧисла(12,3)));
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатураВыборЗавершение(Значение, ДополнительныеПараметры) Экспорт
	
	ТекДанные = ДополнительныеПараметры.ТекДанные;
	
	Если Значение = Неопределено ИЛИ Значение = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НайС = Объект.Корзина.НайтиСтроки(Новый структура("Номенклатура, Характеристика", ТекДанные.Номенклатура, ТекДанные.Характеристика));
	Если НайС.Количество() = 0 Тогда
		нс = Объект.Корзина.Добавить();
		ЗаполнитьЗначенияСвойств(нс, ТекДанные);
		нс.КоличествоУпаковок = Значение;
		нс.Склад = Склад;
	Иначе
		текСтрока = НайС[0];
		текСтрока.КоличествоУпаковок = текСтрока.КоличествоУпаковок + Значение;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКорзина

&НаКлиенте
Процедура КорзинаУпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗаполнитьДанныеВыбораУпаковки(Элементы.Корзина.ТекущиеДанные.Номенклатура, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьДанныеВыбораУпаковки(Номенклатура, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыВыбораУпаковки = Новый Структура("Номенклатура", Номенклатура);
	СтандартнаяОбработка = Ложь;
	ЗаполнитьДанныеВыбораУпаковкиСервер(ДанныеВыбора, ПараметрыВыбораУпаковки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДанныеВыбораУпаковкиСервер(ДанныеВыбора, ПараметрыВыбора)

	ДанныеВыбора = Справочники.УпаковкиНоменклатуры.ПолучитьДанныеВыбора(ПараметрыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборВСпискеНоменклатуры()

	Если Элементы.ИерархияНоменклатуры.ТекущаяСтрока = Неопределено Тогда
		ОтборПоИерархииНоменклатуры = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	Иначе
		ОтборПоИерархииНоменклатуры = Элементы.ИерархияНоменклатуры.ТекущаяСтрока;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокНоменклатура, "Родитель", ОтборПоИерархииНоменклатуры, 
		ВидСравненияКомпоновкиДанных.Равно, "Родитель", Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);

КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьОстаткиТоваров(Склад, Номенклатура, Характеристика = Неопределено)
	
	ОстаткиТоваров.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК ВНаличииОстаток
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			,
	               |			Номенклатура = &Номенклатура
	               |				И (Склад = &Склад
	               |					ИЛИ &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	               |				И (&Характеристика = НЕОПРЕДЕЛЕНО
	               |					ИЛИ Характеристика = &Характеристика)) КАК ТоварыНаСкладахОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладахОстатки.Номенклатура";
				   
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать(); 
	Выборка.Следующий();
	
	нс = ЭтаФорма.ОстаткиТоваров.Добавить();
	нс.Склад = Склад;
	нс.Доступно = Выборка.ВНаличииОстаток;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТзВоВременноеХранилище()
	Номенклатура = Объект.Корзина.Выгрузить();
	АдресНоменклатуруВХранилище = ПоместитьВоВременноеХранилище(Номенклатура, УникальныйИдентификатор);
	Возврат АдресНоменклатуруВХранилище;
КонецФункции

&НаКлиенте 
Процедура ЗакрытьСПереносом()
	Если Объект.Корзина.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	АдресНоменклатуруВХранилище = ПоместитьТзВоВременноеХранилище();
	ОповеститьОВыборе(АдресНоменклатуруВХранилище);
КонецПроцедуры

#КонецОбласти