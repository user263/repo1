#Область ОбработчикиСобытийФормы
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Подразделение) Тогда
		
		Подразделение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР",
		"ОсновноеПодразделение",
		Справочники.СтруктураПредприятия.ПустаяСсылка());
		
	КонецЕсли;
	Склад = Подразделение.Склад;
	
	Период.Вариант = ВариантСтандартногоПериода.СледующийМесяц;
	ОбновитьДанные();
	
	УстановитьУсловноеОформление();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ОбновитьДанныеОбработчикОжидания", 90, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ОбновитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ОбновитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеСкладПриИзменении(Элемент)
	ОбновитьДанные();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМатериалы
&НаКлиенте
Процедура МатериалыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("Ремонты", НСтр("ru = 'Ремонты где требуется ""'")+ ДанныеСтроки.Номенклатура + """" + ?(ЗначениеЗаполнено(ДанныеСтроки.Характеристика), " """ + ДанныеСтроки.Характеристика + """", ""));
	СписокВыбора.Добавить("Заказы", НСтр("ru = 'Заказы где присутствует ""'")+ ДанныеСтроки.Номенклатура + """" + ?(ЗначениеЗаполнено(ДанныеСтроки.Характеристика), " """ + ДанныеСтроки.Характеристика + """", ""));
	СписокВыбора.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("МатериалыВыборЗавершение", ЭтотОбъект, Новый Структура("ДанныеСтроки", ДанныеСтроки)));
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыВыборЗавершение(ВыбранныйЭлемент, Параметры) Экспорт
	
	ДанныеСтроки = Параметры.ДанныеСтроки;
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Если ВыбранныйЭлемент.Значение = "Ремонты" Тогда
			
			НайденныеСтроки = Объект.Ремонты.НайтиСтроки(Новый Структура("Номенклатура, ХарактеристикаНоменклатуры", ДанныеСтроки.Номенклатура, ДанныеСтроки.Характеристика));
			МассивСтрок = Новый Массив;
			Для Каждого Строка Из НайденныеСтроки Цикл
				СтруктураСтроки = Новый Структура("Документ, ОбъектРемонта, ВидРемонта, ДатаНачала, РемонтВыполняется, ЕстьДокументыЗаказа, ВЗаказеЕстьВсеПозиции, ID_Ремонта, ТребуемоеКоличество");
				ЗаполнитьЗначенияСвойств(СтруктураСтроки, Строка);
				МассивСтрок.Добавить(СтруктураСтроки);
			КонецЦикла;
			
			Форма = ОткрытьФорму("Обработка.торо_ПолучениеИВозвратМатериалов.Форма.СписокРемонтов", Новый Структура("МассивСтрок, Номенклатура, Характеристика", МассивСтрок, ДанныеСтроки.Номенклатура, ДанныеСтроки.Характеристика), Объект, Объект,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		ИначеЕсли ВыбранныйЭлемент.Значение = "Заказы" Тогда
			
			НайденныеСтроки = Объект.Заказы.НайтиСтроки(Новый Структура("Номенклатура, ХарактеристикаНоменклатуры", ДанныеСтроки.Номенклатура, ДанныеСтроки.Характеристика));
			МассивСтрок = Новый Массив;
			Для Каждого Строка Из НайденныеСтроки Цикл
				СтруктураСтроки = Новый Структура("ДокументЗаказа, ЗаказанноеКоличество");
				ЗаполнитьЗначенияСвойств(СтруктураСтроки, Строка);
				МассивСтрок.Добавить(СтруктураСтроки);
			КонецЦикла;
			
			Форма = ОткрытьФорму("Обработка.торо_ПолучениеИВозвратМатериалов.Форма.СписокЗаказов", Новый Структура("МассивСтрок, Номенклатура, Характеристика", МассивСтрок, ДанныеСтроки.Номенклатура, ДанныеСтроки.Характеристика), Объект, Объект,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереместитьИзлишкиНаДругойСклад(Команда)
	
	Форма = ПолучитьФорму("Документ.ПеремещениеТоваров.ФормаОбъекта");
	Форма.Объект.СкладОтправитель = Склад;
		
	Для Каждого ВыделеннаяСтрока Из Элементы.Материалы.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Материалы.ДанныеСтроки(ВыделеннаяСтрока);
		Если ДанныеСтроки.ПланируемыйИзлишекДефицит > 0 Тогда
			НС = Форма.Объект.Товары.Добавить();
			НС.Номенклатура = ДанныеСтроки.Номенклатура;
			НС.Характеристика = ДанныеСтроки.Характеристика;
			НС.КоличествоУпаковок = ДанныеСтроки.ПланируемыйИзлишекДефицит;
		КонецЕсли;
		
	КонецЦикла;
	
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстранитьДефицитЗаказами(Команда)
	
	Форма = ПолучитьФорму("Документ.ЗаказНаВнутреннееПотребление.ФормаОбъекта");
	Форма.Объект.Склад = Склад;
	
	ДатаОтгрузки = Период.ДатаОкончания;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Материалы.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Материалы.ДанныеСтроки(ВыделеннаяСтрока);
		Если ДанныеСтроки.ПланируемыйИзлишекДефицит < 0 Тогда
			НС = Форма.Объект.Товары.Добавить();
			НС.Номенклатура = ДанныеСтроки.Номенклатура;
			НС.Характеристика = ДанныеСтроки.Характеристика;
			НС.КоличествоУпаковок = 0 - ДанныеСтроки.ПланируемыйИзлишекДефицит;
			НС.Количество = 0 - ДанныеСтроки.ПланируемыйИзлишекДефицит;
			
			НайденныеСтроки = Объект.Ремонты.НайтиСтроки(Новый Структура("Номенклатура, ХарактеристикаНоменклатуры", ДанныеСтроки.Номенклатура, ДанныеСтроки.Характеристика));
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ДатаОтгрузки = ?(НайденнаяСтрока.ДатаНачала < ДатаОтгрузки, НайденнаяСтрока.ДатаНачала, ДатаОтгрузки);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	ТекДата = ТекущаяДата();
	ДатаОтгрузки = ?(ТекДата >= ДатаОтгрузки, ТекДата, ДатаОтгрузки);
	Форма.Объект.ДатаОтгрузки = ДатаОтгрузки;
	
	Форма.Объект.Дата = ?(ТекДата < ДатаОтгрузки, ТекДата, ДатаОтгрузки);
	
	Форма.Открыть();
		
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура СортироватьМатериалыПоВозрастанию(Команда)
	СортироватьМатериалы(" Возр");
КонецПроцедуры

&НаКлиенте
Процедура СортироватьМатериалыПоУбыванию(Команда)
	СортироватьМатериалы(" Убыв");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьДанныеОбработчикОжидания()
	
	ОбновитьДанные();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанные()
	
	ТекСтрока = Элементы.Материалы.ТекущаяСтрока;
	МассивВыделенных = Новый Массив;
	
	Если ТекСтрока <> Неопределено Тогда
		ТекДанные = Объект.Материалы.НайтиПоИдентификатору(ТекСтрока);
		ВыделенныеСтроки = Элементы.Материалы.ВыделенныеСтроки;
		
		Для Каждого ИдВыделеннойСтроки Из ВыделенныеСтроки Цикл
			ДанныеВыделенной = Объект.Материалы.НайтиПоИдентификатору(ИдВыделеннойСтроки);
			МассивВыделенных.Добавить(Новый Структура("Номенклатура, Характеристика", ДанныеВыделенной.Номенклатура, ДанныеВыделенной.Характеристика));
		КонецЦикла;
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика", ТекДанные.Номенклатура, ТекДанные.Характеристика);
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРемонтныхРабот,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.Исполнитель КАК Подразделение,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.Регистратор,
	               |	торо_ВерсииТехКартСрезПоследних.ТехКарта,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ID,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	               |	торо_ПлановыеРемонтныеРаботыСрезПоследних.ВидРемонтныхРабот КАК ВидРемонта
	               |ПОМЕСТИТЬ ППР
	               |ИЗ
	               |	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних КАК торо_ПлановыеРемонтныеРаботыСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |		ПО (торо_Ремонты.Регистратор ССЫЛКА Документ.торо_ЗаявкаНаРемонт)
	               |			И торо_ПлановыеРемонтныеРаботыСрезПоследних.ID = торо_Ремонты.ID
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт.СрезПоследних КАК торо_ВерсииТехКартСрезПоследних
	               |			ПО торо_НормативныеРемонтыОборудования.НормативныйРемонт = торо_ВерсииТехКартСрезПоследних.ИдентификаторТехКарты
	               |		ПО торо_ПлановыеРемонтныеРаботыСрезПоследних.ОбъектРемонтныхРабот = торо_НормативныеРемонтыОборудования.ОбъектРемонта
	               |			И торо_ПлановыеРемонтныеРаботыСрезПоследних.ВидРемонтныхРабот = торо_НормативныеРемонтыОборудования.ВидРемонта
	               |			И (торо_НормативныеРемонтыОборудования.Приоритет)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
	               |		ПО торо_ПлановыеРемонтныеРаботыСрезПоследних.ID = торо_ЗавершенныеРемонтныеРаботы.ID
	               |ГДЕ
	               |	торо_Ремонты.Регистратор ЕСТЬ NULL 
	               |	И торо_ЗавершенныеРемонтныеРаботы.ID ЕСТЬ NULL 
	               |	И НЕ торо_ПлановыеРемонтныеРаботыСрезПоследних.Отменен
	               |	И НЕ торо_ПлановыеРемонтныеРаботыСрезПоследних.Замещен
	               |	И торо_ПлановыеРемонтныеРаботыСрезПоследних.ДатаНачалаРемонтныхРабот МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И (&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	               |				И ТИПЗНАЧЕНИЯ(торо_ПлановыеРемонтныеРаботыСрезПоследних.Исполнитель) = ТИП(Справочник.СтруктураПредприятия)
	               |			ИЛИ торо_ПлановыеРемонтныеРаботыСрезПоследних.Исполнитель = &Подразделение)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ID,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачалаПлан КАК ДатаНачала,
	               |	ВЫБОР
	               |		КОГДА торо_Ремонты.ID ЕСТЬ NULL 
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК РемонтВыполняется,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ОбъектРемонта,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ВидРемонта,
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.Регистратор КАК Документ
	               |ПОМЕСТИТЬ IDРемонтов
	               |ИЗ
	               |	РегистрСведений.торо_Ремонты КАК торо_ЗаявкаНаРемонтРемонтыОборудования
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |		ПО торо_ЗаявкаНаРемонтРемонтыОборудования.ID = торо_Ремонты.ID
	               |			И (торо_Ремонты.Регистратор ССЫЛКА Документ.торо_НарядНаВыполнениеРемонтныхРабот
	               |				ИЛИ торо_Ремонты.Регистратор ССЫЛКА Документ.торо_АктОВыполненииЭтапаРабот)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
	               |		ПО торо_ЗаявкаНаРемонтРемонтыОборудования.ID = торо_ЗавершенныеРемонтныеРаботы.ID
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_ЗаявкаНаРемонт.ИсполнителиРемонтныхРабот КАК торо_ЗаявкаНаРемонтИсполнителиРемонтныхРабот
	               |		ПО торо_ЗаявкаНаРемонтРемонтыОборудования.Регистратор = торо_ЗаявкаНаРемонтИсполнителиРемонтныхРабот.Ссылка
	               |ГДЕ
	               |	торо_ЗаявкаНаРемонтРемонтыОборудования.ДатаНачалаПлан МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И торо_ЗавершенныеРемонтныеРаботы.ID ЕСТЬ NULL 
	               |	И (&Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	               |				И ТИПЗНАЧЕНИЯ(торо_ЗаявкаНаРемонтИсполнителиРемонтныхРабот.Исполнитель) = ТИП(Справочник.СтруктураПредприятия)
	               |			ИЛИ торо_ЗаявкаНаРемонтИсполнителиРемонтныхРабот.Исполнитель = &Подразделение)
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ППР.ID,
	               |	ППР.ДатаНачалаРемонтныхРабот,
	               |	ВЫБОР
	               |		КОГДА торо_Ремонты.ID ЕСТЬ NULL 
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ,
	               |	ППР.ОбъектРемонта,
	               |	ППР.ВидРемонта,
	               |	ППР.Регистратор
	               |ИЗ
	               |	ППР КАК ППР
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |		ПО ППР.ID = торо_Ремонты.ID
	               |			И (торо_Ремонты.Регистратор ССЫЛКА Документ.торо_НарядНаВыполнениеРемонтныхРабот
	               |				ИЛИ торо_Ремонты.Регистратор ССЫЛКА Документ.торо_АктОВыполненииЭтапаРабот)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ППР.Регистратор КАК ДокументПлан,
	               |	ППР.ID КАК ID_Ремонта,
	               |	торо_ТехКартыМатериальныеЗатраты.Номенклатура,
	               |	торо_ТехКартыМатериальныеЗатраты.Количество КАК ТребуемоеКоличество,
	               |	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	               |	IDРемонтов.ДатаНачала КАК ПлановаяДатаРемонта,
	               |	IDРемонтов.РемонтВыполняется
	               |ПОМЕСТИТЬ Требуемые
	               |ИЗ
	               |	ППР КАК ППР
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.МатериальныеЗатраты КАК торо_ТехКартыМатериальныеЗатраты
	               |		ПО ППР.ТехКарта = торо_ТехКартыМатериальныеЗатраты.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ IDРемонтов КАК IDРемонтов
	               |		ПО ППР.ID = IDРемонтов.ID
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ППР.Регистратор,
	               |	ППР.ID,
	               |	торо_ТехКартыМатериальныеЗатраты.Номенклатура,
	               |	торо_ТехКартыМатериальныеЗатраты.Количество,
	               |	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	               |	IDРемонтов.ДатаНачала,
	               |	IDРемонтов.РемонтВыполняется
	               |ИЗ
	               |	ППР КАК ППР
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СоставИерархическихТехКартРемонтов КАК торо_СоставИерархическихТехКартРемонтов
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.МатериальныеЗатраты КАК торо_ТехКартыМатериальныеЗатраты
	               |			ПО торо_СоставИерархическихТехКартРемонтов.Состав = торо_ТехКартыМатериальныеЗатраты.Ссылка
	               |		ПО ППР.ТехКарта = торо_СоставИерархическихТехКартРемонтов.ТехКарта
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ IDРемонтов КАК IDРемонтов
	               |		ПО ППР.ID = IDРемонтов.ID
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ППР.Регистратор,
	               |	ППР.ID,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Номенклатура,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Количество,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Характеристика,
	               |	IDРемонтов.ДатаНачала,
	               |	IDРемонтов.РемонтВыполняется
	               |ИЗ
	               |	ППР КАК ППР
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормыЗапчастейНаОбъектыРемонта КАК торо_НормыЗапчастейНаОбъектыРемонта
	               |		ПО (торо_НормыЗапчастейНаОбъектыРемонта.Приоритет)
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ IDРемонтов КАК IDРемонтов
	               |		ПО ППР.ID = IDРемонтов.ID
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Регистратор,
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.РемонтыОборудования_ID,
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Номенклатура,
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.Количество,
	               |	торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.ХарактеристикаНоменклатуры,
	               |	IDРемонтов.ДатаНачала,
	               |	IDРемонтов.РемонтВыполняется
	               |ИЗ
	               |	IDРемонтов КАК IDРемонтов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.торо_ПлановыеМатериальныеЗатратыРемонтныхРабот КАК торо_ПлановыеМатериальныеЗатратыРемонтныхРабот
	               |		ПО IDРемонтов.ID = торо_ПлановыеМатериальныеЗатратыРемонтныхРабот.РемонтыОборудования_ID
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	торо_ПлановыеЗатратыЗапчастей.Регистратор,
	               |	торо_ПлановыеЗатратыЗапчастей.РемонтыОборудования_ID,
	               |	торо_ПлановыеЗатратыЗапчастей.Номенклатура,
	               |	торо_ПлановыеЗатратыЗапчастей.Количество,
	               |	торо_ПлановыеЗатратыЗапчастей.ХарактеристикаНоменклатуры,
	               |	IDРемонтов.ДатаНачала,
	               |	IDРемонтов.РемонтВыполняется
	               |ИЗ
	               |	РегистрНакопления.торо_ПлановыеЗатратыЗапчастей КАК торо_ПлановыеЗатратыЗапчастей
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ IDРемонтов КАК IDРемонтов
	               |		ПО торо_ПлановыеЗатратыЗапчастей.РемонтыОборудования_ID = IDРемонтов.ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Требуемые.ДокументПлан,
	               |	Требуемые.ID_Ремонта,
	               |	Требуемые.Номенклатура,
	               |	СУММА(Требуемые.ТребуемоеКоличество) КАК ТребуемоеКоличество,
	               |	Требуемые.ХарактеристикаНоменклатуры,
	               |	Требуемые.ПлановаяДатаРемонта,
	               |	Требуемые.РемонтВыполняется
	               |ПОМЕСТИТЬ ТребуемыеСумма
	               |ИЗ
	               |	Требуемые КАК Требуемые
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Требуемые.ДокументПлан,
	               |	Требуемые.ID_Ремонта,
	               |	Требуемые.Номенклатура,
	               |	Требуемые.ХарактеристикаНоменклатуры,
	               |	Требуемые.ПлановаяДатаРемонта,
	               |	Требуемые.РемонтВыполняется
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗаказыНаВнутреннееПотребление.ЗаказНаВнутреннееПотребление КАК ДокументЗаказа,
	               |	ЗаказыНаВнутреннееПотребление.Номенклатура КАК Номенклатура,
	               |	ЗаказыНаВнутреннееПотребление.Характеристика КАК ХарактеристикаНоменклатуры,
	               |	ЗаказыНаВнутреннееПотребление.КОформлениюОстаток КАК ЗаказанноеКоличество,
	               |	IDРемонтов.ID КАК ID_Ремонта
	               |ПОМЕСТИТЬ Заказанные
	               |ИЗ
	               |	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки КАК ЗаказыНаВнутреннееПотребление
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ИнтеграцияДокументов КАК торо_ИнтеграцияДокументов
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ IDРемонтов КАК IDРемонтов
	               |			ПО (IDРемонтов.ID = торо_ИнтеграцияДокументов.ID)
	               |		ПО (торо_ИнтеграцияДокументов.ДокументЕРП = ЗаказыНаВнутреннееПотребление.ЗаказНаВнутреннееПотребление)
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление КАК ДокументЗаказНаВнутреннееПотребление
	               |		ПО ЗаказыНаВнутреннееПотребление.ЗаказНаВнутреннееПотребление = ДокументЗаказНаВнутреннееПотребление.Ссылка
	               |ГДЕ
	               |	(&НеОтбиратьПоСкладу
	               |			ИЛИ ЗаказыНаВнутреннееПотребление.Склад = &Склад)
	               |	И (ДокументЗаказНаВнутреннееПотребление.ДатаОтгрузки МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |				И IDРемонтов.ID ЕСТЬ NULL 
	               |			ИЛИ НЕ IDРемонтов.ID ЕСТЬ NULL )
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика КАК ХарактеристикаНоменклатуры,
	               |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК Количество
	               |ПОМЕСТИТЬ ИмеющиесяВсего
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки КАК ТоварыНаСкладахОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика КАК ХарактеристикаНоменклатуры,
	               |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК Количество
	               |ПОМЕСТИТЬ Имеющиеся
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			&ДатаОкончания,
	               |			&НеОтбиратьПоСкладу
	               |				ИЛИ Склад = &Склад) КАК ТоварыНаСкладахОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТребуемыеСумма.Номенклатура,
	               |	ТребуемыеСумма.ХарактеристикаНоменклатуры,
	               |	СУММА(ТребуемыеСумма.ТребуемоеКоличество) КАК ТребуемоеКоличество,
	               |	СУММА(ВЫБОР
	               |			КОГДА ТребуемыеСумма.РемонтВыполняется
	               |				ТОГДА ТребуемыеСумма.ТребуемоеКоличество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ТребуетсяПоВыполняемым
	               |ПОМЕСТИТЬ ТребуемыеСуммаГр
	               |ИЗ
	               |	ТребуемыеСумма КАК ТребуемыеСумма
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТребуемыеСумма.Номенклатура,
	               |	ТребуемыеСумма.ХарактеристикаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Заказанные.Номенклатура,
	               |	Заказанные.ХарактеристикаНоменклатуры,
	               |	СУММА(Заказанные.ЗаказанноеКоличество) КАК ЗаказанноеКоличество
	               |ПОМЕСТИТЬ ЗаказанныеГр
	               |ИЗ
	               |	Заказанные КАК Заказанные
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Заказанные.Номенклатура,
	               |	Заказанные.ХарактеристикаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТребуемыеСумма.ДокументПлан КАК Документ,
	               |	IDРемонтов.ОбъектРемонта,
	               |	IDРемонтов.ВидРемонта,
	               |	ВЫБОР
	               |		КОГДА IDРемонтов.РемонтВыполняется
	               |			ТОГДА 0
	               |		ИНАЧЕ 1
	               |	КОНЕЦ КАК РемонтВыполняется,
	               |	IDРемонтов.ДатаНачала,
	               |	ВЫБОР
	               |		КОГДА СУММА(ВЫБОР
	               |					КОГДА Заказанные1.ДокументЗаказа ЕСТЬ NULL 
	               |						ТОГДА 0
	               |					ИНАЧЕ 1
	               |				КОНЕЦ) > 0
	               |			ТОГДА 0
	               |		ИНАЧЕ 1
	               |	КОНЕЦ КАК ЕстьДокументыЗаказа,
	               |	ВЫБОР
	               |		КОГДА СУММА(ВЫБОР
	               |					КОГДА Заказанные.Номенклатура ЕСТЬ NULL 
	               |						ТОГДА 1
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) > 0
	               |			ТОГДА 1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ВЗаказеЕстьВсеПозиции,
	               |	ТребуемыеСумма.ID_Ремонта
	               |ПОМЕСТИТЬ НаличиеЗаказовПоРемонтам
	               |ИЗ
	               |	ТребуемыеСумма КАК ТребуемыеСумма
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Заказанные КАК Заказанные
	               |		ПО ТребуемыеСумма.ID_Ремонта = Заказанные.ID_Ремонта
	               |			И ТребуемыеСумма.Номенклатура = Заказанные.Номенклатура
	               |			И ТребуемыеСумма.ХарактеристикаНоменклатуры = Заказанные.ХарактеристикаНоменклатуры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ IDРемонтов КАК IDРемонтов
	               |		ПО ТребуемыеСумма.ID_Ремонта = IDРемонтов.ID
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Заказанные КАК Заказанные1
	               |		ПО ТребуемыеСумма.ID_Ремонта = Заказанные1.ID_Ремонта
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВЫБОР
	               |		КОГДА IDРемонтов.РемонтВыполняется
	               |			ТОГДА 0
	               |		ИНАЧЕ 1
	               |	КОНЕЦ,
	               |	ТребуемыеСумма.ДокументПлан,
	               |	IDРемонтов.ВидРемонта,
	               |	IDРемонтов.ОбъектРемонта,
	               |	IDРемонтов.ДатаНачала,
	               |	ТребуемыеСумма.ID_Ремонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТребуемыеСумма.Номенклатура,
	               |	ТребуемыеСумма.ХарактеристикаНоменклатуры КАК Характеристика,
	               |	СпрНоменклатура.ЕдиницаИзмерения,
	               |	ЕСТЬNULL(Имеющиеся.Количество, 0) КАК ОстатокНаСкладе,
	               |	ЕСТЬNULL(ИмеющиесяВсего.Количество, 0) КАК ОстатокВсего,
	               |	ЕСТЬNULL(Имеющиеся.Количество, 0) - ЕСТЬNULL(ТребуемыеСумма.ТребуетсяПоВыполняемым, 0) КАК ТекущийИзлишекДефицит,
	               |	ЕСТЬNULL(Имеющиеся.Количество, 0) + ЕСТЬNULL(Заказанные.ЗаказанноеКоличество, 0) - ЕСТЬNULL(ТребуемыеСумма.ТребуемоеКоличество, 0) КАК ПланируемыйИзлишекДефицит
	               |ИЗ
	               |	ТребуемыеСуммаГр КАК ТребуемыеСумма
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	               |		ПО ТребуемыеСумма.Номенклатура = СпрНоменклатура.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказанныеГр КАК Заказанные
	               |		ПО ТребуемыеСумма.Номенклатура = Заказанные.Номенклатура
	               |			И ТребуемыеСумма.ХарактеристикаНоменклатуры = Заказанные.ХарактеристикаНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Имеющиеся КАК Имеющиеся
	               |		ПО ТребуемыеСумма.Номенклатура = Имеющиеся.Номенклатура
	               |			И ТребуемыеСумма.ХарактеристикаНоменклатуры = Имеющиеся.ХарактеристикаНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ИмеющиесяВсего КАК ИмеющиесяВсего
	               |		ПО ТребуемыеСумма.Номенклатура = ИмеющиесяВсего.Номенклатура
	               |			И ТребуемыеСумма.ХарактеристикаНоменклатуры = ИмеющиесяВсего.ХарактеристикаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НаличиеЗаказовПоРемонтам.Документ,
	               |	НаличиеЗаказовПоРемонтам.ОбъектРемонта,
	               |	НаличиеЗаказовПоРемонтам.ВидРемонта,
	               |	НаличиеЗаказовПоРемонтам.ДатаНачала,
	               |	НаличиеЗаказовПоРемонтам.РемонтВыполняется,
	               |	НаличиеЗаказовПоРемонтам.ЕстьДокументыЗаказа,
	               |	НаличиеЗаказовПоРемонтам.ВЗаказеЕстьВсеПозиции,
	               |	ТребуемыеСумма.Номенклатура,
	               |	ТребуемыеСумма.ХарактеристикаНоменклатуры,
	               |	ТребуемыеСумма.ID_Ремонта,
				   |	ТребуемыеСумма.ТребуемоеКоличество
	               |ИЗ
	               |	НаличиеЗаказовПоРемонтам КАК НаличиеЗаказовПоРемонтам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТребуемыеСумма КАК ТребуемыеСумма
	               |		ПО НаличиеЗаказовПоРемонтам.ID_Ремонта = ТребуемыеСумма.ID_Ремонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Заказанные.ДокументЗаказа,
	               |	СУММА(Заказанные.ЗаказанноеКоличество) КАК ЗаказанноеКоличество,
	               |	Заказанные.Номенклатура,
	               |	Заказанные.ХарактеристикаНоменклатуры
	               |ИЗ
	               |	Заказанные КАК Заказанные
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Заказанные.Номенклатура,
	               |	Заказанные.ХарактеристикаНоменклатуры,
	               |	Заказанные.ДокументЗаказа";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("НеОтбиратьПоСкладу", Не ЗначениеЗаполнено(Склад));
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("НеОтбиратьПоПодразделению", Не ЗначениеЗаполнено(Подразделение));
	Запрос.УстановитьПараметр("Подразделение", Подразделение);

	Результат = Запрос.ВыполнитьПакет();
	Объект.Материалы.Загрузить(Результат[10].Выгрузить());
	Объект.Ремонты.Загрузить(Результат[11].Выгрузить());
	Объект.Заказы.Загрузить(Результат[12].Выгрузить());
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.Материалы,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются")));
			
	Если СтруктураПоиска <> Неопределено Тогда
		НайденныеСтроки = Объект.Материалы.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденнаяСтрока = НайденныеСтроки[0];
			Элементы.Материалы.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
	Если МассивВыделенных.Количество() > 0 Тогда
		Для Каждого СтруктураПоиска Из МассивВыделенных Цикл
			НайденныеСтроки = Объект.Материалы.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				НайденнаяСтрока = НайденныеСтроки[0];
				Элементы.Материалы.ВыделенныеСтроки.Добавить(НайденнаяСтрока.ПолучитьИдентификатор());
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.МатериалыХарактеристика.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Материалы.ХарактеристикиИспользуются");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<характеристики не используются>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаСервере
Процедура СортироватьМатериалы(Направление)
	
	Объект.Материалы.Сортировать(СтрЗаменить(Элементы.Материалы.ТекущийЭлемент.Имя, "Материалы", "") + Направление);
	Элементы.Материалы.Обновить();
	
КонецПроцедуры

#КонецОбласти