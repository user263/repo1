#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивВыделенныхСтрок         = ?(Параметры.Свойство("МассивВыделенныхСтрок")        , Параметры.МассивВыделенныхСтрок, Новый Массив);
	АдресТаблицаЗаявок            = ?(Параметры.Свойство("ТаблицаЗаявок")                , Параметры.ТаблицаЗаявок, Неопределено);
	АдресТаблицаНарядов           = ?(Параметры.Свойство("ТаблицаНарядов")               , Параметры.ТаблицаНарядов, Неопределено);
	СоответствиеДоступноПоРемонту = ?(Параметры.Свойство("СоответствиеДоступноПоРемонту"), Параметры.СоответствиеДоступноПоРемонту, Неопределено);
	
	ТаблицаЗаявок = Неопределено;
	
	Если Не АдресТаблицаЗаявок = Неопределено Тогда
	    ТаблицаЗаявок = ПолучитьИзВременногоХранилища(АдресТаблицаЗаявок); 
	КонецЕсли;
	
	ТаблицаНарядов = Неопределено;
	
	Если Не АдресТаблицаНарядов = Неопределено Тогда
	    ТаблицаНарядов = ПолучитьИзВременногоХранилища(АдресТаблицаНарядов); 
	КонецЕсли;
	
	
	Для Каждого Строка Из МассивВыделенныхСтрок Цикл
		
		МассивСтрокСвязДокументовЗаявок = Новый Массив;
		
		Если Не ТаблицаЗаявок = Неопределено Тогда
			
			Строки = ТаблицаЗаявок.НайтиСтроки(Новый Структура("ID", Строка.ID_Ремонта));
			
			Для Каждого СтрокаЗаявки Из Строки Цикл
				Структ = Новый Структура("Документ, ID, ТипДокумента", СтрокаЗаявки.Документ, СтрокаЗаявки.ID);
				МассивСтрокСвязДокументовЗаявок.Добавить(Структ);
			КонецЦикла;
			
		КонецЕсли;
		
		МассивСтрокСвязДокументовНарядов = Новый Массив;
		
		Если Не ТаблицаНарядов = Неопределено Тогда
			
			Строки = ТаблицаНарядов.НайтиСтроки(Новый Структура("ID", Строка.ID_Ремонта));
			
			Для Каждого СтрокаНаряда Из Строки Цикл
				Структ = Новый Структура("Документ, ID, ТипДокумента", СтрокаНаряда.Документ, СтрокаНаряда.ID);
				МассивСтрокСвязДокументовНарядов.Добавить(Структ);
			КонецЦикла;

		КонецЕсли;
		
		СтрокаДерева = ДеревоРемонтов.ПолучитьЭлементы().Добавить();
		СтрокаДерева.ОбъектРемонта = Строка.ОбъектРемонта;
		СтрокаДерева.ВидРемонта    = Строка.ВидРемонта;
		СтрокаДерева.ДатаРемонта   = Строка.ПланируемаяДатаНачалаРемонта;
		СтрокаДерева.ID            = Строка.ID_Ремонта;
		СтрокаДерева.Уровень       = 0;
		
		ДоступноПоРемонту = СоответствиеДоступноПоРемонту.Получить(Строка.ID_Ремонта);
		
		Если Не ДоступноПоРемонту = Неопределено И ДоступноПоРемонту Тогда
			СтрокаВторогоУровня = СтрокаДерева.ПолучитьЭлементы().Добавить();
			СтрокаВторогоУровня.Документ     = Строка.Документ;
			СтрокаВторогоУровня.ID           = Строка.ID_Ремонта;
			СтрокаВторогоУровня.Уровень      = 1;
			
		КонецЕсли;
		
		Для Каждого СтрокаЗаявки Из МассивСтрокСвязДокументовЗаявок Цикл
			СтрокаВторогоУровня = СтрокаДерева.ПолучитьЭлементы().Добавить();
			СтрокаВторогоУровня.Документ     = СтрокаЗаявки.Документ;
			СтрокаВторогоУровня.ID           = СтрокаЗаявки.ID;
			СтрокаВторогоУровня.Уровень      = 1;
			
		КонецЦикла;					
		
		
		Для Каждого СтрокаНаряда Из МассивСтрокСвязДокументовНарядов Цикл
			СтрокаВторогоУровня = СтрокаДерева.ПолучитьЭлементы().Добавить();
			СтрокаВторогоУровня.Документ     = СтрокаНаряда.Документ;
			СтрокаВторогоУровня.ID           = СтрокаНаряда.ID;
			СтрокаВторогоУровня.Уровень      = 1;
		КонецЦикла;						
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭлементыДерева = ДеревоРемонтов.ПолучитьЭлементы();
	
	Для каждого Элемент Из ЭлементыДерева Цикл
		
		Элементы.ДеревоРемонтов.Развернуть(Элемент.ПолучитьИдентификатор(),Истина); 

	КонецЦикла; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоРемонтов

&НаКлиенте
Процедура ДеревоРемонтовВыбранПриИзменении(Элемент)
	
	ТекСтрокаДерева = Элементы.ДеревоРемонтов.ТекущиеДанные;
	
	ТекДокумент = ?(ТекСтрокаДерева.Выбран, ТекСтрокаДерева.Документ, Неопределено);
	
	Родитель = ТекСтрокаДерева.ПолучитьРодителя();
	
	Если Не ТекДокумент = Неопределено Тогда
		Для каждого ЭлементДерева Из Родитель.ПолучитьЭлементы() Цикл
			 Если Не ЭлементДерева.Документ = ТекДокумент Тогда
			 	 ЭлементДерева.Выбран = Ложь;
			 КонецЕсли; 
		КонецЦикла;
	Иначе
		Родитель.Выбран = Ложь;
	КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти

#Область Команды

&НаКлиенте
Процедура ПередатьВыбранные(Команда)
	МассивРемонтов = Новый Массив;
	ЭлементыДерева = ДеревоРемонтов.ПолучитьЭлементы();
	
	Для каждого Элемент Из ЭлементыДерева Цикл
		
		ЭлементыДокументы = Элемент.ПолучитьЭлементы();
		
		Для каждого Строка Из ЭлементыДокументы Цикл
			Если Строка.Выбран И ЗначениеЗаполнено(Строка.Документ) Тогда
				Структура = Новый Структура("ID_Ремонта, Документ", Строка.ID,Строка.Документ);
				МассивРемонтов.Добавить(Структура);
			КонецЕсли; 
		КонецЦикла;
		
	КонецЦикла; 
		
	Закрыть(МассивРемонтов);
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе(Команда)
	Для каждого Стр Из ДеревоРемонтов.ПолучитьЭлементы() Цикл
		
		СвернутьПодчиненные(Стр);
		Элементы.ДеревоРемонтов.Свернуть(Стр.ПолучитьИдентификатор());
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсе(Команда)
	
	Для каждого Стр Из ДеревоРемонтов.ПолучитьЭлементы() Цикл
		Элементы.ДеревоРемонтов.Развернуть(Стр.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

&НаКлиенте
Процедура СвернутьПодчиненные(Строка)
	
	Для каждого Стр Из Строка.ПолучитьЭлементы() Цикл
		
		СвернутьПодчиненные(Стр);
		Элементы.ДеревоРемонтов.Свернуть(Стр.ПолучитьИдентификатор());
		
	КонецЦикла; 	
	
КонецПроцедуры

#КонецОбласти
 







