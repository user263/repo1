#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("ОткрытаИзНастроек") Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Форму можно открыть если ранее Вы не использовали документы принятия и списания объектов ремонта.'");
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли; 
	
	Если Не Отказ Тогда
		ЗаполнитьДеревоОбъектовРемонта(Отказ);
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР",
		"ОсновнаяОрганизация",
		Истина);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Подразделение) Тогда
		
		Подразделение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиТОиР",
		"ОсновноеПодразделение",
		Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоОбъектовРемонта(Отказ)
	
	ОсновнаяИерархия = Константы.торо_ИерархияДляВводаНовыхОР.Получить();
	
	Если Не ЗначениеЗаполнено(ОсновнаяИерархия) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не заполнена константа ""Иерархия для ввода новых ОР"".'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли; 
	
	Если ОсновнаяИерархия.ИзменяетсяДокументами Тогда
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	торо_ИерархическиеСтруктурыОР.РодительИерархии,
		|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии КАК ОбъектРемонта,
		|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии.ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
		|	НЕ торо_ИерархическиеСтруктурыОР.ОбъектИерархии.ЭтоГруппа КАК ДоступноРедактирование
		|ИЗ
		|	РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
		|ГДЕ
		|	торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &СтруктураИерархии";
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("СтруктураИерархии", ОсновнаяИерархия);
	
	ТаблицаИерархии = Запрос.Выполнить().Выгрузить();
	
	МассивСтрок = ТаблицаИерархии.НайтиСтроки(Новый Структура("РодительИерархии", Справочники.торо_ОбъектыРемонта.ПустаяСсылка()));
	
	Для каждого Строка Из МассивСтрок Цикл
		
		НС = ТаблицаСОбъектамиРемонта.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НС,Строка);
		ДобавитьСтрокиВДеревоПоТаблице(НС, ТаблицаИерархии);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ДобавитьСтрокиВДеревоПоТаблице(СтрокаДерева, Таблица)
	
	МассивСтрок = Таблица.НайтиСтроки(Новый Структура("РодительИерархии", СтрокаДерева.ОбъектРемонта));
	
	Если Не СтрокаДерева.ДоступноРедактирование Тогда
		СтрокаДерева.ИндексКартинки = 5;
	ИначеЕсли МассивСтрок.Количество() > 0 Тогда 
		СтрокаДерева.ИндексКартинки = 2;
	КонецЕсли; 
	
	Для каждого Строка Из МассивСтрок Цикл
		
		НС = СтрокаДерева.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НС,Строка);
		ДобавитьСтрокиВДеревоПоТаблице(НС, Таблица);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьДокументыПринятияКУчетуНаСервере(МассивОбъектов, Организация, Подразделение, ВсеДокументыСозданы)
	
	Ответственный = Пользователи.АвторизованныйПользователь();
	Комментарий   = "Документ создан системой при установке флага ""Использовать документы принятия и списания оборудования""";
	
	СписокВсехОбъектовРемонта = Новый СписокЗначений;
	
	Для каждого ЭлементМассива Из МассивОбъектов Цикл
		СписокВсехОбъектовРемонта.Добавить(ЭлементМассива.ОбъектРемонта);		
	КонецЦикла; 
		
	Запрос = Новый Запрос;
	Запрос.Текст = "
				   |ВЫБРАТЬ
	               |	торо_СтатусыОбъектовРемонтаВУчете.Регистратор,
	               |	торо_СтатусыОбъектовРемонтаВУчете.ОбъектРемонта
	               |ИЗ
	               |	РегистрСведений.торо_СтатусыОбъектовРемонтаВУчете КАК торо_СтатусыОбъектовРемонтаВУчете
	               |ГДЕ
	               |	торо_СтатусыОбъектовРемонтаВУчете.ОбъектРемонта В
	               |			(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", СписокВсехОбъектовРемонта);
	
	ИмеющиесяДокументы = Запрос.Выполнить().Выгрузить();
	
	Для каждого ЭлементМассива Из МассивОбъектов Цикл
		
		ОбъектРемонта          = ЭлементМассива.ОбъектРемонта;
		ДатаВводаВЭксплуатацию = ЭлементМассива.ДатаВводаВЭксплуатацию;
		
		МассивИмеющихся = ИмеющиесяДокументы.НайтиСтроки(Новый Структура("ОбъектРемонта", ОбъектРемонта));
		
		Если МассивИмеющихся.Количество() > 0 Тогда
			ДокментОбъект  = МассивИмеющихся[0].Регистратор.ПолучитьОбъект();
		Иначе
			ДокументОбъект = Документы.торо_ПринятиеОРКУчету.СоздатьДокумент();
		КонецЕсли; 
		
		ДокументОбъект.ДатаВводаВЭксплуатацию = ДатаВводаВЭксплуатацию;
		ДокументОбъект.ОбъектРемонта          = ОбъектРемонта;
		ДокументОбъект.Организация            = Организация;
		ДокументОбъект.Подразделение          = Подразделение;
		ДокументОбъект.Дата                   = ТекущаяДата();
		ДокументОбъект.Ответственный          = Ответственный;
		ДокументОбъект.Комментарий            = Комментарий;
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Объект ремонта <%1> принят к учету.'"),ОбъектРемонта);
			Сообщение.Сообщить();
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось провести документ <Принятие объекта ремонта к учету> для объекта ремонта <%1>'"),ОбъектРемонта);
			Сообщение.Сообщить();
			ВсеДокументыСозданы = Ложь;
		КонецПопытки; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументыПринятияКУчету(Команда)
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не заполнено поле <Организация>.'");
		Сообщение.Поле  = "Организация";
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Сообщить();
		
		Отказ = Истина;
		
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не заполнено поле <Подразделение>.'");
		Сообщение.Поле  = "Подразделение";
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Сообщить();
		
		Отказ = Истина;
		
	КонецЕсли; 
	
	Если Не Отказ Тогда
		
		МассивСтруктур       = Новый Массив;
		ЗначениеПринятКУчету = ПредопределенноеЗначение("Перечисление.торо_СтатусыОРВУчете.ПринятоКУчету");
		ЭлементыДерева       = ТаблицаСОбъектамиРемонта.ПолучитьЭлементы();
		
		Для каждого СтрокаДерева Из ЭлементыДерева Цикл
			Если СтрокаДерева.СтатусВУчете = ЗначениеПринятКУчету Тогда
				Структура = Новый Структура("ОбъектРемонта, ДатаВВодаВЭксплуатацию", СтрокаДерева.ОбъектРемонта, СтрокаДерева.ДатаВВодаВЭксплуатацию);
				МассивСтруктур.Добавить(Структура);
			КонецЕсли;
			
			ДополнитьМассивОбъектовДляПринятияКУчету(СтрокаДерева, МассивСтруктур, ЗначениеПринятКУчету);
			
		КонецЦикла; 
		
		ВсеДокументыСозданы = Истина;
		
		СоздатьДокументыПринятияКУчетуНаСервере(МассивСтруктур, Организация, Подразделение, ВсеДокументыСозданы);
		
		Если ВсеДокументыСозданы Тогда
			Закрыть();
		Иначе
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Для части объектов ремонта не удалось создать документы принятия объектов ремонта к учету.
								|Исправьте замечания и повторите попытку.'");
			Сообщение.Сообщить(); 
		КонецЕсли; 
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьМассивОбъектовДляПринятияКУчету(СтрокаДереваОбъектов, МассивСтруктур, ЗначениеПринятКУчету)
	
	ЭлементыДерева = СтрокаДереваОбъектов.ПолучитьЭлементы();
	
	Для каждого СтрокаДерева Из ЭлементыДерева Цикл
		
		Если СтрокаДерева.СтатусВУчете = ЗначениеПринятКУчету Тогда
			Структура = Новый Структура("ОбъектРемонта, ДатаВВодаВЭксплуатацию", СтрокаДерева.ОбъектРемонта, СтрокаДерева.ДатаВВодаВЭксплуатацию);
			МассивСтруктур.Добавить(Структура);
		КонецЕсли; 
		
		ДополнитьМассивОбъектовДляПринятияКУчету(СтрокаДерева, МассивСтруктур, ЗначениеПринятКУчету);
		
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти