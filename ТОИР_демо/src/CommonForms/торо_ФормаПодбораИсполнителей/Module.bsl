
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТаблицаИсполнителей.Параметры.УстановитьЗначениеПараметра("НачалоПериода", ТекущаяДата());
	
	ЭлементОтбора = ТаблицаБригады.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = Параметры.Подразделение;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.Квалификация,
	               |	Таб.Сотрудник КАК Сотрудник,
	               |	Таб.ID КАК ID,
	               |	Таб.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	Таб.КТУ,
	               |	Таб.ДатаНачала,
	               |	Таб.ДатаОкончания
	               |ПОМЕСТИТЬ Вт_Данные
	               |ИЗ
	               |	&Таб КАК Таб
	               |ГДЕ
	               |	&Парам1
	               |	И &Парам2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Вт_Данные.Квалификация,
	               |	МАКСИМУМ(Вт_Данные.Сотрудник) КАК Сотрудник
	               |ИЗ
	               |	Вт_Данные КАК Вт_Данные
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Вт_Данные.Квалификация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Вт_Данные.Квалификация,
	               |	Вт_Данные.ID,
	               |	Вт_Данные.РемонтыОборудования_ID,
	               |	Вт_Данные.КТУ,
	               |	Вт_Данные.ДатаНачала,
	               |	Вт_Данные.ДатаОкончания
	               |ИЗ
	               |	Вт_Данные КАК Вт_Данные";
	
	тз = Параметры.НеобходимыеКвалификации.Выгрузить(,"Квалификация, Сотрудник, ID, РемонтыОборудования_ID, КТУ, ДатаНачала, ДатаОкончания");
	Запрос.УстановитьПараметр("Таб", тз);
	
	Если Параметры.ID = Неопределено Тогда
		Запрос.УстановитьПараметр("Парам1", Истина);
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Парам1", "Таб.ID В (&ID)");
		Запрос.УстановитьПараметр("ID", Параметры.ID);
	КонецЕсли;
	
	Если Параметры.РемонтыОборудования_ID = Неопределено Тогда
		Запрос.УстановитьПараметр("Парам2", Истина);
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Парам2", "Таб.РемонтыОборудования_ID = &РемонтыОборудования_ID");
		Запрос.УстановитьПараметр("РемонтыОборудования_ID", Параметры.РемонтыОборудования_ID);
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	
	НужныеКвалификации = Результат[1].Выгрузить();
	ИсходныеДанные.Загрузить(Результат[2].Выгрузить());
	
	
	ТаблицаВыбранныеИсполнители.Загрузить(НужныеКвалификации);
КонецПроцедуры

#КонецОбласти
 
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаБригадыПриАктивизацииСтроки(Элемент)
	
	текСтрока = Элементы.ТаблицаБригады.ТекущиеДанные;
	ТаблицаИсполнителей.Отбор.Элементы.Очистить();
	
	Если текСтрока = Неопределено тогда
		ЭлементОтбора = ТаблицаИсполнителей.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РемонтнаяБригада");
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = "";
	Иначе
		ЭлементОтбора = ТаблицаИсполнителей.Отбор.Элементы.Добавить(тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РемонтнаяБригада");
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = текСтрока.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбранныеИсполнителиПередУдалением(Элемент, Отказ)
	отказ = Истина;
	
	ТекСтрока = Элемент.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		ТекСтрока.Сотрудник = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсполнителейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	текСтрока = Элемент.ТекущиеДанные;
	Если текСтрока <> Неопределено Тогда
		ДобавитьИсполнителяКвалификации(текСтрока.Квалификация, текСтрока.Исполнитель);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикКомандФормы

&НаКлиенте
Процедура ВыполнитьПодбор(Команда)
	ОповеститьОВыборе(ПоложитьТЗВоВременноеХранилище());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере 
Процедура ДобавитьИсполнителяКвалификации(Квалификация, Сотрудник)
	
	мас = ТаблицаВыбранныеИсполнители.НайтиСтроки(Новый структура("Квалификация", Квалификация));
	СотрудникДобавлен = Ложь;
	Для каждого текСтрока из Мас Цикл
		ТекСтрока.Сотрудник = Сотрудник;
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере 
Функция ПоложитьТЗВоВременноеХранилище()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.Квалификация,
	               |	Таб.ID КАК ID,
	               |	Таб.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	Таб.КТУ,
	               |	Таб.ДатаНачала,
	               |	Таб.ДатаОкончания
	               |ПОМЕСТИТЬ Вт_Данные
	               |ИЗ
	               |	&Таб КАК Таб
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Таб2.Квалификация,
	               |	Таб2.Сотрудник
	               |ПОМЕСТИТЬ Вт_Исполнители
	               |ИЗ
	               |	&Таб2 КАК Таб2
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Вт_Данные.Квалификация КАК Квалификация,
	               |	Вт_Данные.ID КАК ID,
	               |	Вт_Данные.РемонтыОборудования_ID КАК РемонтыОборудования_ID,
	               |	Вт_Данные.КТУ КАК КТУ,
	               |	Вт_Данные.ДатаНачала КАК ДатаНачала,
	               |	Вт_Данные.ДатаОкончания,
	               |	Вт_Исполнители.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	Вт_Данные КАК Вт_Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Вт_Исполнители КАК Вт_Исполнители
	               |		ПО Вт_Данные.Квалификация = Вт_Исполнители.Квалификация
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаНачала
	               |ИТОГИ
	               |	СРЕДНЕЕ(КТУ),
	               |	МИНИМУМ(ДатаНачала),
	               |	МАКСИМУМ(Сотрудник)
	               |ПО
	               |	РемонтыОборудования_ID,
	               |	ID,
	               |	Квалификация";
				   
	тз = ИсходныеДанные.Выгрузить();
	Запрос.УстановитьПараметр("Таб", тз);
	Запрос.УстановитьПараметр("Таб2", ТаблицаВыбранныеИсполнители.Выгрузить());
	
	тзВозврата = тз.СкопироватьКолонки();
	тзВозврата.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	
	Выборка = Запрос.Выполнить();
	Если Выборка.Пустой() тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВыборкаПоРемонтамОборудования = Выборка.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	Для каждого текРемонт из ВыборкаПоРемонтамОборудования.Строки Цикл
		
		ВыборкаПоИД = текРемонт.Строки;
		Для каждого ТекИД из ВыборкаПоИД Цикл
			
			ВыборкаПоКвалификации = ТекИД.Строки;
			Для каждого ТекКвалификация из ВыборкаПоКвалификации Цикл
				ДетЗаписи = ТекКвалификация.Строки;
				нс = тзВозврата.Добавить();
				
				ЗаполнитьЗначенияСвойств(нс, ТекКвалификация); 
				Дельта = 0;
				
				Для каждого текЗапись из ДетЗаписи Цикл
					Дельта = Дельта + (ТекЗапись.ДатаОкончания - ТекЗапись.ДатаНачала);
				КонецЦикла;
				
				нс.ДатаОкончания = нс.ДатаНачала + Дельта;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(тзВозврата, Новый УникальныйИдентификатор);
	
КонецФункции 

#КонецОбласти