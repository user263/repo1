#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗакрыватьПриВыборе = Константы.торо_ИспользоватьУпрощеннуюФормуДефекта.Получить();
	ЗакрыватьПриЗакрытииВладельца = Истина;
	
	ФОИспользоватьУпрощеннуюФормуДефекта = ПолучитьФункциональнуюОпцию("торо_ИспользоватьУпрощеннуюФормуДефекта");
	
	ДокументОснование = Параметры.ДокОснование;
	Если ТипЗнч(Параметры.ДокОснование) = Тип("ДокументСсылка.торо_СостоянияОбъектовРемонта") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	таб.ОбъектРемонта КАК ОР,
		               |	таб.ОбъектРемонта.ПодразделениеИсполнитель КАК Исполнитель
		               |ИЗ
		               |	Документ.торо_СостоянияОбъектовРемонта.ОбъектыРемонта КАК таб
		               |ГДЕ
		               |	таб.Ссылка = &Ссылка";
					   
		запрос.УстановитьПараметр("Ссылка", Параметры.ДокОснование);
		выборка = Запрос.Выполнить().Выгрузить();
		СписокОР.Загрузить(выборка);
		
	ИначеЕсли ТипЗнч(Параметры.ДокОснование) = Тип("ДокументСсылка.торо_УчетКонтролируемыхПоказателей") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ДокТЧ.ОбъектРемонта КАК ОР,
		               |	ДокТЧ.ОбъектРемонта.ПодразделениеИсполнитель КАК Исполнитель
		               |ИЗ
		               |	Документ.торо_УчетКонтролируемыхПоказателей.Показатели КАК ДокТЧ
		               |ГДЕ
		               |	ДокТЧ.Ссылка = &Ссылка";
					   
		запрос.УстановитьПараметр("Ссылка", Параметры.ДокОснование);
		выборка = Запрос.Выполнить().Выгрузить();
		СписокОР.Загрузить(выборка);
		
	ИначеЕсли ТипЗнч(Параметры.ДокОснование) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		Запрос = Новый Запрос;
		Запрос.текст = "ВЫБРАТЬ
		               |	торо_АктОВыполненииРегламентногоМероприятияМероприятия.ОбъектРемонта КАК ОбъектРемонта,
		               |	торо_АктОВыполненииРегламентногоМероприятияМероприятия.ВидРемонтныхРабот КАК ВидРемонтныхРабот
		               |ПОМЕСТИТЬ ДокТЧ
		               |ИЗ
		               |	Документ.торо_АктОВыполненииРегламентногоМероприятия.Мероприятия КАК торо_АктОВыполненииРегламентногоМероприятияМероприятия
		               |ГДЕ
		               |	торо_АктОВыполненииРегламентногоМероприятияМероприятия.Ссылка = &Ссылка
		               |
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	торо_ВыходныеДокументы.СписокОбъектов КАК СписокОбъектов
		               |ПОМЕСТИТЬ рсВыходныеДокументы
		               |ИЗ
		               |	РегистрСведений.торо_ВыходныеДокументы КАК торо_ВыходныеДокументы
		               |ГДЕ
		               |	торо_ВыходныеДокументы.ВыходнойДокумент = &ВыходнойДокумент
		               |	И (торо_ВыходныеДокументы.СписокОбъектов, торо_ВыходныеДокументы.ВидМероприятия) В
		               |			(ВЫБРАТЬ
		               |				Таб.ОбъектРемонта,
		               |				Таб.ВидРемонтныхРабот
		               |			ИЗ
		               |				ДокТЧ КАК Таб)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	СписокОбъектов
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	торо_МаршрутыРегламентныхМероприятий.ОбъектРемонта КАК ОР,
					      |	торо_МаршрутыРегламентныхМероприятий.ОбъектРемонта.ПодразделениеИсполнитель КАК Исполнитель
		               |ИЗ
		               |	рсВыходныеДокументы КАК рсВыходныеДокументы
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_МаршрутыРегламентныхМероприятий КАК торо_МаршрутыРегламентныхМероприятий
		               |		ПО рсВыходныеДокументы.СписокОбъектов = торо_МаршрутыРегламентныхМероприятий.СписокОбъектов";
					   
		Запрос.УстановитьПараметр("Ссылка", Параметры.ДокОснование);
		Запрос.УстановитьПараметр("ВыходнойДокумент", Параметры.ТипВыходногоДок);
		 
		выборка = Запрос.Выполнить().Выгрузить();
		СписокОР.Загрузить(выборка);
	ИначеЕсли ТипЗнч(Параметры.ДокОснование) = Тип("ДокументСсылка.торо_ВнешнееОснованиеДляРабот") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОбследованноеОборудование.ОбъектРемонта КАК ОР,
		               |	ОбследованноеОборудование.ID,
		               |	ОбследованноеОборудование.ТиповойДефект,
		               |	ОбследованноеОборудование.Исполнитель,
		               |	торо_ТиповыеДефектыОборудования.ВидДефекта,
		               |	торо_ТиповыеДефектыОборудования.КритичностьДефекта,
		               |	торо_ТиповыеДефектыОборудования.ОписаниеДефекта КАК ДефектОписание,
		               |	ОбследованноеОборудование.Ссылка КАК ДефектВыявленВПроцессе,
		               |	торо_ТиповыеДефектыОборудования.ПричиныВозникновенияДефекта.(
		               |		Причина КАК ДефектПричина
		               |	) КАК ПричиныВозникновенияДефекта
		               |ИЗ
		               |	Документ.торо_ВнешнееОснованиеДляРабот.ОбследованноеОборудование КАК ОбследованноеОборудование
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТиповыеДефектыОборудования КАК торо_ТиповыеДефектыОборудования
		               |		ПО ОбследованноеОборудование.ТиповойДефект = торо_ТиповыеДефектыОборудования.Ссылка
		               |ГДЕ
		               |	ОбследованноеОборудование.Ссылка = &Ссылка";
					   
		запрос.УстановитьПараметр("Ссылка", Параметры.ДокОснование);
		выборка = Запрос.Выполнить().Выгрузить();
		
		Для каждого текСтрока из Выборка цикл
			нс = СписокОр.Добавить();
			ЗаполнитьЗначенияСвойств(нс, текСтрока);
			
			Причины = текСтрока.ПричиныВозникновенияДефекта;
			Если Причины.Количество() >= 1 Тогда
				нс.ДефектПричина = Причины[0].ДефектПричина;
			КонецЕсли;
		КонецЦикла;
					   
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СписокОРКоличество = СписокОР.Количество();
	Если СписокОРКоличество = 0 Тогда
		Закрыть();
	ИначеЕсли СписокОРКоличество = 1 Тогда
		СписокОР[0].Флажок = Истина;
		ПеренестиВДокумент(1);
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокОРВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	текСтрока = СписокОР.НайтиПоИдентификатору(ВыбраннаяСтрока);
	масОР = Новый Массив();
	МасОр.Добавить(текСтрока);
	ПередатьВДокумент(масОР);
КонецПроцедуры

&НаКлиенте
Процедура СписокОРФлажокПриИзменении(Элемент)
	
	МассовыйВыбор = НЕ ФОИспользоватьУпрощеннуюФормуДефекта;
	
	Если НЕ МассовыйВыбор Тогда
		Если Элементы.СписокОР.ТекущиеДанные.Флажок = Истина Тогда
			Для каждого текСтрока из СписокОР Цикл
				ТекСтрока.Флажок = Ложь;
			КонецЦикла;
			Элементы.СписокОР.ТекущиеДанные.Флажок = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработкаКоманд

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	масОР = СписокОР.НайтиСтроки(Новый Структура("Флажок", Истина));
	ПередатьВДокумент(масОР);
КонецПроцедуры

#КонецОбласти
 
#Область ОбщегоНазначения

&НаКлиенте 
Процедура ПередатьВДокумент(МасОР)
	МасВозврата = ПреобразоватьДанныеДляВозвращения(МасОР);
	
	стрВозврата = новый структура;
	стрВозврата.Вставить("Описание", "НовоеЗаполнение");
	стрВозврата.Вставить("ДокОснование", ДокументОснование);
	стрВозврата.Вставить("Данные", МасВозврата);
	
	ОповеститьОВыборе(стрВозврата);
КонецПроцедуры

&НаКлиенте
Функция ПреобразоватьДанныеДляВозвращения(МасОР)
	
	МасВозврата = Новый Массив;
	Для каждого текЭлем из МасОР Цикл
		стрВозврата = Новый Структура("ОбъектРемонта, ID, ПодразделениеИсполнитель, ТиповойДефект, ВидДефекта, КритичностьДефекта, 
				|ДефектВыявленВПроцессе, ДефектОписание, ДефектПричина");
		ЗаполнитьЗначенияСвойств(стрВозврата, текЭлем);
		стрВозврата.ОбъектРемонта = текЭлем.Ор;
		стрВозврата.ID = текЭлем.ID;
		стрВозврата.ПодразделениеИсполнитель = текЭлем.Исполнитель;
		МасВозврата.Добавить(стрВозврата);
	КонецЦикла;
	
	возврат МасВозврата;
	
КонецФункции 

#КонецОбласти
