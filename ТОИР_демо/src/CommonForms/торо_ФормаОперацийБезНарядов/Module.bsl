////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ
&НаКлиенте
Перем СозданыАкты;

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ДокОснование") Тогда
		ДокОснование = Параметры.ДокОснование;
	КонецЕсли;
	Если Параметры.Свойство("ТабОперацийБезНаряда") Тогда
		
		ТабОперацийБезНаряда = Параметры.ТабОперацийБезНаряда.Выгрузить();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Таб.ВводитьНаряд,
		|	Таб.ОбъектРемонта,
		|	Таб.ВидРемонта,
		|	Таб.РемонтнаяРабота,
		|	Таб.ДатаНачалаРемонта,
		|	Таб.ДатаОкончанияРемонта,
		|	Таб.ID
		|ПОМЕСТИТЬ ТабОперацийБезНаряда
		|ИЗ
		|	&ТабОперацийБезНаряда КАК Таб
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабОперацийБезНаряда.ВводитьНаряд,
		|	ТабОперацийБезНаряда.ОбъектРемонта КАК ОбъектРемонта,
		|	ТабОперацийБезНаряда.ВидРемонта КАК ВидРемонта,
		|	ТабОперацийБезНаряда.РемонтнаяРабота,
		|	ТабОперацийБезНаряда.ДатаНачалаРемонта КАК ДатаНачалаРемонта,
		|	ТабОперацийБезНаряда.ДатаОкончанияРемонта КАК ДатаОкончанияРемонта,
		|	ТабОперацийБезНаряда.ID
		|ИЗ
		|	ТабОперацийБезНаряда КАК ТабОперацийБезНаряда
		|ИТОГИ ПО
		|	ОбъектРемонта,
		|	ДатаНачалаРемонта,
		|	ВидРемонта";
		
		Запрос.УстановитьПараметр("ТабОперацийБезНаряда", ТабОперацийБезНаряда);
		Результат = Запрос.Выполнить();
		ВыборкаОбъектРемонта = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Дерево = РеквизитФормыВЗначение("РемонтныеРаботы");
		
		Пока ВыборкаОбъектРемонта.Следующий() Цикл
			
			НоваяСтрока = Дерево.Строки.Добавить();
			НоваяСтрока.Объект = ВыборкаОбъектРемонта.ОбъектРемонта;
			
			ВыборкаДатаНачала = ВыборкаОбъектРемонта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаДатаНачала.Следующий() Цикл
				
				НС = НоваяСтрока.Строки.Добавить();
				НС.ДатаНачала = ВыборкаДатаНачала.ДатаНачалаРемонта;
				
				ВыборкаВидРемонта = ВыборкаДатаНачала.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаВидРемонта.Следующий() Цикл
					
					НС.Объект = ВыборкаВидРемонта.ВидРемонта;
					
					ВыборкаДетЗаписи = ВыборкаВидРемонта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаДетЗаписи.Следующий() Цикл
						
						НС.ДатаОкончания = ВыборкаДетЗаписи.ДатаОкончанияРемонта;
						
						НовСтр = НС.Строки.Добавить();
						НовСтр.Объект = ВыборкаДетЗаписи.РемонтнаяРабота;	
						НовСтр.ID = ВыборкаДетЗаписи.ID;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ЗначениеВРеквизитФормы(Дерево, "РемонтныеРаботы");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Развернуть(Команды.Развернуть);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если Не СозданыАкты Тогда
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Невозможно создать ""Акт о выполнении этапа работ"" поскольку документ-основание содержит ремонты с работами повышенной опасности. Требуется обязательно ввести документ ""Наряд на выполнение ремонтных работ""!'"), СтатусСообщения.Важное);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРемонтныеРаботы

&НаКлиенте
Процедура РемонтныеРаботыВыбранПриИзменении(Элемент)
	
	ТекСтрока = Элементы.РемонтныеРаботы.ТекущиеДанные;
	
	Если НЕ ТекСтрока = Неопределено Тогда
		
		ПроставитьГалочкиПоВеткеВниз (ТекСтрока, ТекСтрока.Выбран);
		ПроставитьГалочкиПоВеткеВверх(ТекСтрока, ТекСтрока.Выбран);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ВвестиНаряды(Команда)
	
	МассивРемонтов = ВвестиНарядыНаСервере();
	
	Если МассивРемонтов <> Неопределено Тогда 
		
		ФормаДокНаряд = ПолучитьФорму("Документ.торо_НарядНаВыполнениеРемонтныхРабот.ФормаОбъекта");
		
		ФормаДокНаряд.Объект.Организация = торо_ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(ДокОснование, "Организация");
		ФормаДокНаряд.Объект.Подразделение = торо_ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(ДокОснование, "Подразделение");
		
		НС = ФормаДокНаряд.Объект.ДокументыОснования.Добавить();
		НС.ДокументОснование = ДокОснование;
		
		Для каждого Ремонт Из ВыбранныеОперации Цикл
			
			НС = ФормаДокНаряд.Объект.РемонтыОборудования.Добавить();
			НС.ОбъектРемонта = Ремонт.ОбъектРемонта;
			НС.ВидРемонтныхРабот = Ремонт.ВидРемонта;
			НС.ДатаНачала = Ремонт.ДатаНачалаРемонта;
			НС.ДатаОкончания = Ремонт.ДатаОкончанияРемонта;
			НС.ID = Ремонт.ID;
			НС.ДокументИсточник = ДокОснование;
			
		КонецЦикла;
		
		Для каждого Стр Из МассивРемонтов Цикл
			
			НС = ФормаДокНаряд.Объект.РемонтныеРаботы.Добавить();
			ЗаполнитьЗначенияСвойств(НС, Стр);
			
		КонецЦикла;
		
		ФормаДокНаряд.Открыть();
		СозданыАкты = Истина;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделение(Команда)
	
	Для каждого Стр Из РемонтныеРаботы.ПолучитьЭлементы() Цикл
		
		Стр.Выбран = Ложь;
		ПроставитьГалочкиПоВеткеВниз (Стр, Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	
	Для каждого Стр Из РемонтныеРаботы.ПолучитьЭлементы() Цикл
		
		Стр.Выбран = Истина;
		ПроставитьГалочкиПоВеткеВниз (Стр, Истина);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Развернуть(Команда)
	
	Для Каждого ТекСтрока Из РемонтныеРаботы.ПолучитьЭлементы() Цикл
		Элементы.РемонтныеРаботы.Развернуть(ТекСтрока.ПолучитьИдентификатор(), Истина);
	КонецЦикла
	
КонецПроцедуры

&НаКлиенте
Процедура Свернуть(Команда)
	
	Для каждого Стр Из РемонтныеРаботы.ПолучитьЭлементы() Цикл
		
		СвернутьПодчиненные(Стр);
		Элементы.РемонтныеРаботы.Свернуть(Стр.ПолучитьИдентификатор());
		
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Функция ВвестиНарядыНаСервере()
	
	Дерево = РеквизитФормыВЗначение("РемонтныеРаботы");
	
	Рез = Дерево.Строки.Найти(Истина, "Выбран", Истина); 
	
	Если Рез <> Неопределено Тогда
		
		Для каждого СтрокаДерева Из Дерево.Строки Цикл
			
			Если СтрокаДерева.Выбран Тогда
				
				НС = ВыбранныеОперации.Добавить();
				НС.ОбъектРемонта = СтрокаДерева.Объект;
				
				ЗаписатьСтрокуДерева(СтрокаДерева, НС);
				
			КонецЕсли;	
		КонецЦикла;
		
		Если ВыбранныеОперации.Количество() Тогда
			
			ТабID = ВыбранныеОперации.Выгрузить(,"ID");
			ТабID.Свернуть("ID");
			МассивID = ТабID.ВыгрузитьКолонку("ID");
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Таб.РемонтыОборудования_ID,
			|	Таб.ID,
			|	Таб.РемонтнаяРабота,
			|	Таб.Родитель_ID,
			|	Таб.Количество
			|ПОМЕСТИТЬ ТабРемРаб
			|ИЗ
			|	&Таб КАК Таб
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТабРемРаб.РемонтыОборудования_ID,
			|	ТабРемРаб.ID,
			|	ТабРемРаб.РемонтнаяРабота,
			|	ТабРемРаб.Родитель_ID,
			|	ТабРемРаб.Количество
			|ИЗ
			|	ТабРемРаб КАК ТабРемРаб
			|ГДЕ
			|	ТабРемРаб.РемонтыОборудования_ID В(&МассивРемонтыОборудования_ID)";
			
			Запрос.УстановитьПараметр("МассивРемонтыОборудования_ID", МассивID);
			Запрос.УстановитьПараметр("Таб", ДокОснование.РемонтныеРаботы);
			
			Результат = Запрос.Выполнить();
			
			Выборка = Результат.Выбрать();
			
			МассивВозврата = Новый Массив;
			Пока Выборка.Следующий() Цикл
				
				Ремонт = Новый Структура("ID, РемонтыОборудования_ID, РемонтнаяРабота, Родитель_ID, Количество");
				ЗаполнитьЗначенияСвойств(Ремонт, Выборка);
				МассивВозврата.Добавить(Ремонт);
				
			КонецЦикла;
			
			Возврат МассивВозврата;
			
		КонецЕсли;
		
	Иначе
		
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Вы не выбрали ни одного ремонта!'"), СтатусСообщения.Важное);
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура ЗаписатьСтрокуДерева(СтрокаДерева, НоваяСтрока)
	
	Для каждого СтрДерева ИЗ СтрокаДерева.Строки Цикл
		
		Если СтрДерева.Выбран Тогда
			
			Если ЗначениеЗаполнено(НоваяСтрока.ID) И НЕ СтрокаДерева.Объект = НоваяСтрока.ВидРемонта Тогда
				
				НовСтрока = ВыбранныеОперации.Добавить();
				НовСтрока.ОбъектРемонта = НоваяСтрока.ОбъектРемонта;
				НовСтрока.ВидРемонта = СтрДерева.Объект;
				НовСтрока.ДатаНачалаРемонта = СтрДерева.ДатаНачала;
				НовСтрока.ДатаОкончанияРемонта = СтрДерева.ДатаОкончания;
				
				ЗаписатьСтрокуДерева(СтрДерева, НовСтрока);
				
			ИначеЕсли НЕ ЗначениеЗаполнено(НоваяСтрока.ВидРемонта) Тогда
				
				НоваяСтрока.ВидРемонта = СтрДерева.Объект;
				НоваяСтрока.ДатаНачалаРемонта = СтрДерева.ДатаНачала;
				НоваяСтрока.ДатаОкончанияРемонта = СтрДерева.ДатаОкончания;
				
				ЗаписатьСтрокуДерева(СтрДерева, НоваяСтрока);
				
			Иначе
				
				НоваяСтрока.ID = СтрДерева.ID;
				ЗаписатьСтрокуДерева(СтрДерева, НоваяСтрока);
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьГалочкиПоВеткеВниз(СтрокаДерева, ЗначГалки)
	
	Для Каждого Элем Из СтрокаДерева.ПолучитьЭлементы() Цикл
		
		Элем.Выбран = ЗначГалки;
		ПроставитьГалочкиПоВеткеВниз(Элем, ЗначГалки);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьГалочкиПоВеткеВверх(СтрокаДерева, ЗначГалки)
	
	СтрРодитель = СтрокаДерева.ПолучитьРодителя();
	
	Если СтрРодитель <> Неопределено Тогда 
		Если ТипЗнч(СтрокаДерева.Объект) = Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда
			ПодчиненныеСтроки = СтрРодитель.ПолучитьЭлементы();
			Если ПодчиненныеСтроки.Количество() > 1 Тогда
				Для каждого Стр Из ПодчиненныеСтроки Цикл
					Стр.Выбран = ЗначГалки;
					ПроставитьГалочкиПоВеткеВниз(Стр, ЗначГалки);
				КонецЦикла;
			КонецЕсли;
			
			СтрРодитель.Выбран = ЗначГалки;
			ПроставитьГалочкиПоВеткеВверх(СтрРодитель, ЗначГалки);
		Иначе 
			СтрРодитель.Выбран = ЗначГалки;
			ПроставитьГалочкиПоВеткеВверх(СтрРодитель, ЗначГалки);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьПодчиненные(Строка)
	
	Для каждого Стр Из Строка.ПолучитьЭлементы() Цикл
		
		СвернутьПодчиненные(Стр);
		Элементы.РемонтныеРаботы.Свернуть(Стр.ПолучитьИдентификатор());
		
	КонецЦикла; 	
	
КонецПроцедуры

#Если Клиент Тогда
	СозданыАкты = Ложь;
#КонецЕсли

#КонецОбласти



