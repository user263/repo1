////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ
&НаКлиенте
Перем ИзмеряемыйПоказательДобавляется;

#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Видимость и отбор значений.
	Элементы.Панель.ПодчиненныеЭлементы.ЗначенияИзмеряемогоПоказателя.Доступность
	= Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.торо_ЗначенияИзмеряемыхПоказателейОбъектовРемонта"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокЗначенийИзмеряемогоПоказателя, "Владелец", Объект.Ссылка,,,,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ОбработатьИзменениеТипаЗначения();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ТипЗначения = Новый ОписаниеТипов("Число");
	КонецЕсли;
	
	Элементы.Панель.ПодчиненныеЭлементы.ГраницыДопустимыхЗначений.Доступность = Объект.ТипЗначения.СодержитТип(Тип("Число"));
	
	ЗаполнитьТаблицуОР();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПроверкаГраницПоказателей(Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокЗначенийИзмеряемогоПоказателя, "Владелец", Объект.Ссылка,,,,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	Элементы.Панель.ПодчиненныеЭлементы.ЗначенияИзмеряемогоПоказателя.Доступность = Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.торо_ЗначенияИзмеряемыхПоказателейОбъектовРемонта"));
	Элементы.Панель.ПодчиненныеЭлементы.ГраницыДопустимыхЗначений.Доступность = Объект.ТипЗначения.СодержитТип(Тип("Число"));
	Если НЕ Элементы.Панель.ПодчиненныеЭлементы.ЗначенияИзмеряемогоПоказателя.Доступность
		И  Элементы.Панель.ТекущаяСтраница.Имя = "ЗначенияИзмеряемогоПоказателя" Тогда
		Элементы.Панель.ТекущаяСтраница = Элементы.Панель.Подчиненные[0];
	КонецЕсли;
	
	ОбработатьИзменениеТипаЗначения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъектыРемонта
&НаКлиенте
Процедура ОбъектыРемонтаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока И Не ОтменаРедактирования Тогда
	
		Элемент.ТекущиеДанные.Показатель = Объект.Ссылка;
		МодифицированностьОбъектовРемонта = Истина;
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.ОбъектыРемонта.ТекущиеДанные;
	ИмяФормыОбъекта = ?(ТипЗнч(ТекДанные.ОбъектРемонта)=Тип("СправочникСсылка.торо_ОбъектыРемонта"),"Справочник.торо_ОбъектыРемонта.ФормаОбъекта","Справочник.торо_ТиповыеОР.ФормаОбъекта");
	ОткрытьФорму(ИмяФормыОбъекта,Новый Структура("Ключ",ТекДанные.ОбъектРемонта));
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура ОбновитьСписокОР(Команда)
	
	ОбъектыРемонта.Очистить();
	ЗаполнитьТаблицуОР();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокЗначенийИзмеряемогоПоказателя
&НаКлиенте
Процедура СписокЗначенийИзмеряемогоПоказателяПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Вопрос = НСтр("ru = 'Показатель еще не записан! Записать?'");
		Если Не ИзмеряемыйПоказательДобавляется Тогда
			Отказ = Истина;
			ПоказатьВопрос(Новый ОписаниеОповещения("СписокЗначенийИзмеряемогоПоказателяПередНачаломДобавленияЗавершение",ЭтотОбъект),
							Вопрос,РежимДиалогаВопрос.ОКОтмена);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроверкаПриЗаписи

&НаКлиенте
Процедура ПроверкаГраницПоказателей(Отказ)

	ТекстСообщения = "";
	Если ТипЗнч(Объект.КритическийМинимум) = Тип("Число") 
		И ТипЗнч(Объект.ДопустимыйМинимум) = Тип("Число") 
		И ТипЗнч(Объект.ДопустимыйМаксимум) = Тип("Число") 
		И ТипЗнч(Объект.КритическийМаксимум) = Тип("Число") Тогда
		Если Объект.КритическийМинимум > Объект.ДопустимыйМинимум Тогда
			Отказ = Истина;
			ТекстСообщения = ТекстСообщения + НСтр("ru = 'Критический минимум превышает допустимый минимум! '");
		КонецЕсли;
		Если Объект.ДопустимыйМинимум > Объект.ДопустимыйМаксимум Тогда
			Отказ = Истина;
			ТекстСообщения = ТекстСообщения + НСтр("ru = 'Допустимый минимум превышает допустимый максимум! '");
		КонецЕсли;
		Если Объект.ДопустимыйМаксимум > Объект.КритическийМаксимум Тогда
			Отказ = Истина;
			ТекстСообщения = ТекстСообщения + НСтр("ru = 'Допустимый максимум превышает критический максимум! '");
		КонецЕсли;
	КонецЕсли;
	Если ТекстСообщения <> "" Тогда
		ТекстСообщения = ТекстСообщения + НСтр("ru = 'Запись невозможна! Попробуйте отредактировать границы допустимых значений!'");
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

&НаКлиенте
Процедура СписокЗначенийИзмеряемогоПоказателяПередНачаломДобавленияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ  = РезультатВопроса;
	Отказ = Ложь;
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		ЗначениеВозврата = ЗаписатьЭлементНаСервере();
		Если ЗначениеВозврата <> Неопределено Тогда
			Отказ = Истина;
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());			
		КонецЕсли;
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Если Не Отказ Тогда
		Элементы.СписокЗначенийИзмеряемогоПоказателя.ДобавитьСтроку();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ЗаписатьЭлементНаСервере()
	
	Попытка
		Отказ = НЕ Записать();
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуОР()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта,
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель,
		|	ВЫБОР
		|		КОГДА торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта ССЫЛКА Справочник.торо_ТиповыеОР
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ТиповойОР
		|ИЗ
		|	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК торо_ИзмеряемыеПоказателиОбъектовРемонта
		|ГДЕ
		|	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель = &Показатель
		|	И НЕ торо_ИзмеряемыеПоказателиОбъектовРемонта.Удален";
		Запрос.УстановитьПараметр("Показатель", Объект.Ссылка);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НС = ОбъектыРемонта.Добавить();
			
			ЗаполнитьЗначенияСвойств(НС, Выборка);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеТипаЗначения()
	
	Если Объект.ТипЗначения.Типы().Количество() > 1 Тогда
		Если ТипЗнч(Объект.ДопустимыйМаксимум) <> Тип("Число") Тогда
			Объект.ДопустимыйМаксимум = 0;
		КонецЕсли;
		Если ТипЗнч(Объект.ДопустимыйМинимум) <> Тип("Число") Тогда
			Объект.ДопустимыйМинимум = 0;
		КонецЕсли;
		Если ТипЗнч(Объект.КритическийМаксимум) <> Тип("Число") Тогда
			Объект.КритическийМаксимум = 0;
		КонецЕсли;
		Если ТипЗнч(Объект.КритическийМинимум) <> Тип("Число") Тогда
			Объект.КритическийМинимум = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

ИзмеряемыйПоказательДобавляется = Ложь;
#КонецОбласти

