#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Обеспечение

// Функция - Текст запроса заказов к обеспечению
//
// Параметры:
//  ЕстьФильтр	 - Булево - Если ложь, тогда не выполняется отбор
//							по заказам на внутреннее потребление.
// Возвращаемое значение:
//  Строка - Текст запроса.
Функция ТекстЗапросаЗаказовКОбеспечению(ЕстьФильтр) Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Т.ЗаказНаВнутреннееПотребление КАК Заказ,
		|	Т.КодСтроки                    КАК КодСтроки,
		|	Т.ЗаказаноОстаток              КАК Количество
		|ПОМЕСТИТЬ ВтРегистрЗаказыНаВнутреннееПотребление
		|ИЗ
		|	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(,
		|		{Склад.* КАК Склад,
		|		ЗаказНаВнутреннееПотребление.* КАК Заказ} ЗаказНаВнутреннееПотребление В (&Заказы)) КАК Т
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ, КодСтроки
		|;
		|
		|////////////////////////////////////////////
		|";

	Если Не ЕстьФильтр Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " ЗаказНаВнутреннееПотребление В (&Заказы)", "");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

// Функция - Текст запроса заказов номенклатуры
// Возвращаемое значение:
//  Строка - Текст запроса.
Функция ТекстЗапросаЗаказовНоменклатуры() Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Т.ЗаказНаВнутреннееПотребление КАК Заказ
		|ИЗ
		|	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(,
		|		{Склад.* КАК Склад, Номенклатура.* КАК Номенклатура}) КАК Т";

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УП 2.0.2.16
// Заполняет измерение "Склад".
//
Процедура ЗаполнитьСкладВРегистре() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Период,
	|	Движения.Регистратор КАК Регистратор,
	|	Движения.НомерСтроки,
	|	Движения.Активность,
	|	Движения.ВидДвижения,
	|	Движения.ЗаказНаВнутреннееПотребление,
	|	Движения.Номенклатура,
	|	Движения.Характеристика,
	|	Движения.КодСтроки,
	|	ВЫРАЗИТЬ(Движения.ЗаказНаВнутреннееПотребление КАК Документ.ЗаказНаВнутреннееПотребление).Склад КАК Склад,
	|	Движения.Заказано,
	|	Движения.КОформлению
	|ИЗ
	|	РегистрНакопления.ЗаказыНаВнутреннееПотребление КАК Движения
	|ГДЕ
	|	Движения.Регистратор В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Движения.Регистратор
	|			ИЗ
	|				РегистрНакопления.ЗаказыНаВнутреннееПотребление КАК Движения
	|			ГДЕ
	|				Движения.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				И Движения.ЗаказНаВнутреннееПотребление ССЫЛКА Документ.ЗаказНаВнутреннееПотребление)
	|ИТОГИ ПО
	|	Регистратор";
	
	Результат = Запрос.Выполнить();
	ВыборкаРегистратор = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НаборЗаписей = РегистрыНакопления.ЗаказыНаВнутреннееПотребление.СоздатьНаборЗаписей();
	Пока ВыборкаРегистратор.Следующий() Цикл
		
		НаборЗаписей.Очистить();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистратор.Регистратор);
		
		Выборка = ВыборкаРегистратор.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли