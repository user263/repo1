#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Наряд на выполнение огневых работ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядНаВыполнениеОгневыхРабот";
	КомандаПечати.Представление = НСтр("ru = 'Наряд на выполнение огневых работ'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Наряд-допуск для работы в электроустановках
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядДопускДляРаботыВЭлектроустановках";
	КомандаПечати.Представление = НСтр("ru = 'Наряд-допуск для работы в электроустановках'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Наряд на производство работ повышенной опасности
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядНаПроизводствоРаботПовышеннойОпасности";
	КомандаПечати.Представление = НСтр("ru = 'Наряд на производство работ повышенной опасности'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_НарядНаВыполнениеРемонтныхРабот";
	КомандаПечати.Идентификатор = "НарядНаРаботы_НеОпасные";
	КомандаПечати.Представление = НСтр("ru = 'Наряд на работы'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядНаВыполнениеОгневыхРабот") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"НарядНаВыполнениеОгневыхРабот", 
		"Наряд на выполнение огневых работ", 
		ПечатьНарядНаВыполнениеОгневыхРабот(МассивОбъектов, ПараметрыПечати));		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядДопускДляРаботыВЭлектроустановках") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"НарядДопускДляРаботыВЭлектроустановках", 
		"Наряд допуск для работы в электроустановках", 
		ПечатьНарядДопускДляРаботыВЭлектроустановках(МассивОбъектов,ПараметрыПечати));		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядНаПроизводствоРаботПовышеннойОпасности") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"НарядНаПроизводствоРаботПовышеннойОпасности", 
		"Наряд на производство работ повышенной опасности", 
		ПечатьНарядНаПроизводствоРаботПовышеннойОпасности(МассивОбъектов, ПараметрыПечати));		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НарядНаРаботы_НеОпасные") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"НарядНаРаботы_НеОпасные", 
		"Наряд на производство работ", 
		НарядНаРаботы_НеОпасные(МассивОбъектов, ПараметрыПечати));		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиРаботы(МассивСтрок,тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном,Комментарии,КолВо)
	Для каждого СписокРабот Из МассивСтрок Цикл
		СтрокаТаблицыРабот.Параметры.Номер = Ном;
		СтрокаТаблицыРабот.Параметры.Работа = СписокРабот.Работа;
		Если КолВо = Истина Тогда
    		СтрокаТаблицыРабот.Параметры.Количество=СписокРабот.Количество; 
		КонецЕсли;	
		Если Комментарии = Истина Тогда
			СтрокаТаблицыРабот.Параметры.Комментарий = СписокРабот.Комментарий;
		КонецЕсли;
		ТабДок.Вывести(СтрокаТаблицыРабот);
		МассивID.Добавить(СписокРабот.ID);
		ВывестиРаботы(тзСписокРабот.НайтиСтроки(Новый Структура("Родитель_ID",СписокРабот.ID)),тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном + ".1",Комментарии,КолВо);
		Ном = Лев(Ном,СтрДлина(Ном)-1) + Строка(Число(Прав(Ном,1)) + 1);
	КонецЦикла;
КонецПроцедуры

Функция ПечатьНарядНаВыполнениеОгневыхРабот(МассивОбъектов, ПараметрыПечати)
	
	МетаданныеДокумента=ПараметрыПечати.Док.Метаданные();
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = МетаданныеДокумента.Имя;
	
	Макет = ПолучитьМакет("НарядНаВыполнениеОгневыхРабот");
	
	Наряд = ПараметрыПечати.Док;
	ID = 	ПараметрыПечати.ID;
	
	Шапка = Макет.ПолучитьОбласть("ШапкаДокумента");
	Шапка.Параметры.Организация = Наряд.Организация;
	Шапка.Параметры.ПодразделениеОрганизации = Наряд.Подразделение;
	ТабДок.Вывести(Шапка);
	
	ПерваяРемонтнаяРабота = Макет.ПолучитьОбласть("ПерваяРемонтнаяРабота");
	РемонтнаяРабота       = Макет.ПолучитьОбласть("РемонтнаяРабота");
	
	РемонтОборудования = Наряд.РемонтыОборудования.Выгрузить(Новый Структура("ID", ID));
	
	Отбор = Новый Структура;
	Отбор.Вставить("РемонтыОборудования_ID", РемонтОборудования[0].ID);
	СтрокиТекущегоОтбора = Наряд.РемонтныеРаботы.НайтиСтроки(Отбор);
	
	ПерваяРабота = Истина;
	Для Каждого СтрокаОтбора Из СтрокиТекущегоОтбора Цикл
		Если ТипЗнч(СтрокаОтбора.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда  
			Если ПерваяРабота Тогда 
				ПерваяРемонтнаяРабота.Параметры.РемонтнаяРабота = СтрокаОтбора.РемонтнаяРабота.Наименование;
				ПерваяРабота = Ложь;
				ТабДок.Вывести(ПерваяРемонтнаяРабота);
			Иначе
				РемонтнаяРабота.Параметры.РемонтнаяРабота = СтрокаОтбора.РемонтнаяРабота.Наименование;
				ТабДок.Вывести(РемонтнаяРабота);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	ШапкаТаблицыИсполнители = Макет.ПолучитьОбласть("ШапкаТаблицыИсполнители");
	ТабДок.Вывести(ШапкаТаблицыИсполнители);       	
	
	СтрокаТаблицыИсполнители = Макет.ПолучитьОбласть("СтрокаТаблицыИсполнители");
	
	ТЗ = Наряд.Исполнители.Выгрузить(, "Сотрудник,Квалификация");
	ТЗ.Свернуть("Сотрудник,Квалификация");
	ПП = 0;
	
	Для Каждого Стр Из ТЗ Цикл
		ПП = ПП+1;
		СтрокаТаблицыИсполнители.Параметры.Заполнить(Стр);
		СтрокаТаблицыИсполнители.Параметры.ПП = ПП;
		ТабДок.Вывести(СтрокаТаблицыИсполнители);
	КонецЦикла;
	
	Пункт5_10 = Макет.ПолучитьОбласть("Пункт5_10");
	ДатаНачала = РемонтОборудования[0].ДатаНачала;
	ДатаОкончания = РемонтОборудования[0].ДатаОкончания;
	
	Пункт5_10.Параметры.ВремяНачало	 =	Формат(ДатаНачала,"ДФ=чч:мм");
	Пункт5_10.Параметры.ДатаНачало     =  Формат(ДатаНачала,"ДФ=dd.MM.yyyy");
	Пункт5_10.Параметры.ВремяОкончание =  Формат(ДатаОкончания ,"ДФ=чч:мм");
	Пункт5_10.Параметры.ДатаОкончание  =  Формат(ДатаОкончания,"ДФ=dd.MM.yyyy");
	
	ТабДок.Вывести(Пункт5_10);
	Пункт11_12 = Макет.ПолучитьОбласть("Пункт11_12");
	ТабДок.Вывести(Пункт11_12);
	
	Заголовок = МетаданныеДокумента.Синоним + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru = ' № %1 от %2'"),Наряд.Номер,Наряд.Дата);
	
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;	
	
КонецФункции
	
Функция ПечатьНарядДопускДляРаботыВЭлектроустановках(МассивОбъектов, ПараметрыПечати)
	
	МетаданныеДокумента=ПараметрыПечати.Док.Метаданные();
	Наряд = ПараметрыПечати.Док;
	ID = 	ПараметрыПечати.ID;	
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = МетаданныеДокумента.Имя;
	
	Макет = ПолучитьМакет("НарядДопускДляРаботыВЭлектроустановках");
	
	Шапка = Макет.ПолучитьОбласть("ШапкаДокумента");
	Шапка.Параметры.Организация = Наряд.Организация;
	Шапка.Параметры.ПодразделениеОрганизации = Наряд.Подразделение;
	Шапка.Параметры.Дата = Формат(Наряд.Дата,"ДФ=dd.MM.yyyy");
	Шапка.Параметры.Номер = Наряд.Номер;
	ТабДок.Вывести(Шапка);
	
	ТЗ = Наряд.Исполнители.Выгрузить(, "Сотрудник, Квалификация");
	ТЗ.Свернуть("Сотрудник, Квалификация");
	
	ПервыйЧленБригады = Макет.ПолучитьОбласть("ПервыйЧленБригады");
	ЧленБригады       = Макет.ПолучитьОбласть("ЧленБригады");
	
	ЭтоПервый = Истина;
	
	Для Каждого Стр Из ТЗ Цикл
		
		Если ЭтоПервый Тогда 
			ПервыйЧленБригады.Параметры.СоставБригады = Стр.Сотрудник.Наименование + " (" + Стр.Квалификация + ")";
			
			ЭтоПервый = Ложь;
			ТабДок.Вывести(ПервыйЧленБригады);
		Иначе 
			
			ЧленБригады.Параметры.СоставБригады = Стр.Сотрудник.Наименование + " (" + Стр.Квалификация + ")";
			ТабДок.Вывести(ЧленБригады);
		КонецЕсли;
		
	КонецЦикла;
	
	ПерваяРемонтнаяРабота = Макет.ПолучитьОбласть("ПерваяРемонтнаяРабота");
	РемонтнаяРабота       = Макет.ПолучитьОбласть("РемонтнаяРабота");
	
	РемонтОборудования = Наряд.РемонтыОборудования.Выгрузить(Новый Структура("ID", ID));
	
	Отбор = Новый Структура;
	Отбор.Вставить("РемонтыОборудования_ID", РемонтОборудования[0].ID);
	СтрокиТекущегоОтбора = Наряд.РемонтныеРаботы.НайтиСтроки(Отбор);		
	
	ПерваяРабота = Истина;
	Для Каждого СтрокаОтбора Из СтрокиТекущегоОтбора Цикл
		Если ТипЗнч(СтрокаОтбора.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда  
			Если ПерваяРабота Тогда 
				ПерваяРемонтнаяРабота.Параметры.РемонтнаяРабота = СтрокаОтбора.РемонтнаяРабота.Наименование;
				ПерваяРабота = Ложь;
				ТабДок.Вывести(ПерваяРемонтнаяРабота);
			Иначе
				РемонтнаяРабота.Параметры.РемонтнаяРабота = СтрокаОтбора.РемонтнаяРабота.Наименование;
				ТабДок.Вывести(РемонтнаяРабота);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Часть0 = Макет.ПолучитьОбласть("Часть0");
	ДатаНачала = РемонтОборудования[0].ДатаНачала;
	ДатаОкончания = РемонтОборудования[0].ДатаОкончания;
	Часть0.Параметры.ВремяНачало	=  Формат(ДатаНачала,"ДЛФ=T");
	Часть0.Параметры.ДатаНачало     =  Формат(ДатаНачала,"ДФ=dd.MM.yyyy");
	Часть0.Параметры.ВремяОкончание =  Формат(ДатаОкончания ,"ДЛФ=T");
	Часть0.Параметры.ДатаОкончание  =  Формат(ДатаОкончания,"ДФ=dd.MM.yyyy");
	ТабДок.Вывести(Часть0);
	
	Часть1 = Макет.ПолучитьОбласть("Часть1");
	ТабДок.Вывести(Часть1);
	
	Часть2 = Макет.ПолучитьОбласть("Часть2");
	ТабДок.Вывести(Часть2);
	
	Часть3 = Макет.ПолучитьОбласть("Часть3");
	ТабДок.Вывести(Часть3);
	
	Заголовок = МетаданныеДокумента.Синоним + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru = ' № %1 от %2'"),Наряд.Номер,Наряд.Дата);
	
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;
	
КонецФункции
	
Функция ПечатьНарядНаПроизводствоРаботПовышеннойОпасности(МассивОбъектов, ПараметрыПечати)
	
	МетаданныеДокумента=ПараметрыПечати.Док.Метаданные();
	Наряд = ПараметрыПечати.Док;
	ID = 	ПараметрыПечати.ID;	
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = МетаданныеДокумента.Имя;
	
	Макет = ПолучитьМакет("НарядНаПроизводствоРаботПовышеннойОпасности");
	
	Шапка = Макет.ПолучитьОбласть("ШапкаДокумента");
	Шапка.Параметры.Организация = Наряд.Организация;
	Шапка.Параметры.ПодразделениеОрганизации = Наряд.Подразделение;
	
	Шапка.Параметры.Дата = Формат(Наряд.Дата,"ДФ=dd.MM.yyyy");
	Шапка.Параметры.Номер = Наряд.Номер;
	ТабДок.Вывести(Шапка);
	
	ПерваяРемонтнаяРабота = Макет.ПолучитьОбласть("ПерваяРемонтнаяРабота");
	РемонтнаяРабота       = Макет.ПолучитьОбласть("РемонтнаяРабота");
	
	РемонтОборудования = Наряд.РемонтыОборудования.Выгрузить(Новый Структура("ID", ID));
	
	Отбор = Новый Структура;
	Отбор.Вставить("РемонтыОборудования_ID", РемонтОборудования[0].ID);
	СтрокиТекущегоОтбора = Наряд.РемонтныеРаботы.НайтиСтроки(Отбор);
	
	ПерваяРабота = Истина;
	Для Каждого СтрокаОтбора Из СтрокиТекущегоОтбора Цикл
		Если ТипЗнч(СтрокаОтбора.РемонтнаяРабота) = Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда  
			Если ПерваяРабота Тогда 
				ПерваяРемонтнаяРабота.Параметры.РемонтнаяРабота = СтрокаОтбора.РемонтнаяРабота.Наименование;
				ПерваяРабота = Ложь;
				ТабДок.Вывести(ПерваяРемонтнаяРабота);
			Иначе
				РемонтнаяРабота.Параметры.РемонтнаяРабота = СтрокаОтбора.РемонтнаяРабота.Наименование;
				ТабДок.Вывести(РемонтнаяРабота);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Пункт3_4 = Макет.ПолучитьОбласть("Пункт3_4");
	
	ДатаНачала = РемонтОборудования[0].ДатаНачала;
	ДатаОкончания = РемонтОборудования[0].ДатаОкончания;
	
	Пункт3_4.Параметры.ЧасНачало	 =	Формат(ДатаНачала,"ДФ=HH");
	Пункт3_4.Параметры.МинутаНачало     =  Формат(ДатаНачала,"ДФ=мм");
	Пункт3_4.Параметры.ДатаНачало     =  Формат(ДатаНачала,"ДФ=dd.MM.yyyy");
	
	Пункт3_4.Параметры.ЧасОкончание	 =	Формат(ДатаОкончания,"ДФ=HH");
	Пункт3_4.Параметры.МинутаОкончание     =  Формат(ДатаОкончания,"ДФ=мм");
	Пункт3_4.Параметры.ДатаОкончание    =  Формат(ДатаОкончания,"ДФ=dd.MM.yyyy");
	
	ТабДок.Вывести(Пункт3_4);
	
	
	Пункт5_6 = Макет.ПолучитьОбласть("Пункт5_6");
	
	ТабДок.Вывести(Пункт5_6);
	
	СтрокаТаблицыИсполнители = Макет.ПолучитьОбласть("СтрокаТаблицыИсполнители");
	
	ТЗ = Наряд.Исполнители.Выгрузить(, "Сотрудник,Квалификация");
	ТЗ.Свернуть("Сотрудник,Квалификация");
	ПП = 0;
	
	Для Каждого Стр Из ТЗ Цикл
		ПП = ПП+1;
		СтрокаТаблицыИсполнители.Параметры.Заполнить(Стр);
		СтрокаТаблицыИсполнители.Параметры.ПП = ПП;
		ТабДок.Вывести(СтрокаТаблицыИсполнители);
	КонецЦикла;
	
	Пункт7_11 = Макет.ПолучитьОбласть("Пункт7_11");
	ТабДок.Вывести(Пункт7_11);
	
	Заголовок = МетаданныеДокумента.Синоним + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru = ' № %1 от %2'"),Наряд.Номер,Наряд.Дата);
	
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;
	
КонецФункции

Функция НарядНаРаботы_НеОпасные(МассивОбъектов, ПараметрыПечати)
	
	МетаданныеДокумента = ПараметрыПечати.Док.Метаданные();
	Наряд = ПараметрыПечати.Док;
	ID = ПараметрыПечати.ID;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Наряд.Дата,
	               |	Наряд.Номер,
	               |	Наряд.Организация,
	               |	Наряд.Подразделение,
	               |	Наряд.Ответственный
	               |ИЗ
	               |	Документ.торо_НарядНаВыполнениеРемонтныхРабот КАК Наряд
	               |ГДЕ
	               |	Наряд.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	тчРемонтыОборудования.ОбъектРемонта КАК ОР,
	               |	тчРемонтыОборудования.ОбъектРемонта.Наименование КАК Наименование,
	               |	тчРемонтыОборудования.ОбъектРемонта.АдресМестонахождения КАК АдресМестонахождения,
	               |	тчРемонтыОборудования.ВидРемонтныхРабот,
	               |	тчРемонтыОборудования.ДатаНачала,
	               |	тчРемонтыОборудования.ДатаОкончания
	               |ИЗ
	               |	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтыОборудования КАК тчРемонтыОборудования
	               |ГДЕ
	               |	тчРемонтыОборудования.Ссылка = &Ссылка
	               |	И тчРемонтыОборудования.ID = &ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	тчРемонтныеРаботы.РемонтнаяРабота КАК РемонтнаяРабота,
	               |	ЕСТЬNULL(тчРемонтныеРаботы.РемонтнаяРабота.СодержаниеРабот, """") КАК СодержаниеРабот,
	               |	тчРемонтныеРаботы.Родитель_ID КАК Родитель_ID,
	               |	тчРемонтныеРаботы.ID
	               |ИЗ
	               |	Документ.торо_НарядНаВыполнениеРемонтныхРабот.РемонтныеРаботы КАК тчРемонтныеРаботы
	               |ГДЕ
	               |	тчРемонтныеРаботы.Ссылка = &Ссылка
	               |	И тчРемонтныеРаботы.РемонтыОборудования_ID = &ID
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Родитель_ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Исполнители.Сотрудник,
	               |	Исполнители.Квалификация
	               |ИЗ
	               |	Документ.торо_НарядНаВыполнениеРемонтныхРабот.Исполнители КАК Исполнители
	               |ГДЕ
	               |	Исполнители.Ссылка = &Ссылка
	               |	И Исполнители.РемонтыОборудования_ID = &ID";				   
				   
	Запрос.УстановитьПараметр("Ссылка", Наряд);
	Запрос.УстановитьПараметр("Дата", Наряд.Дата);
	Запрос.УстановитьПараметр("ID", ID);
	РезЗапроса = Запрос.ВыполнитьПакет();
	
	тчШапка = РезЗапроса[0].выбрать();
	тчРемРаботыСтрока = РезЗапроса[1].выбрать();
	тчРемРаботы = РезЗапроса[2].выгрузить();
	тчСотрудникиИКвалификация = РезЗапроса[3].выбрать();
	
	НайС = тчРемРаботы.НайтиСтроки(Новый Структура("Родитель_ID", ""));
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("РемонтнаяРабота");
	Дерево.Колонки.Добавить("РемонтыОборудования_ID");
	Дерево.Колонки.Добавить("ID");
	
	Для каждого текСтрока из НайС Цикл
		нс = Дерево.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(нс, текСтрока);
		СобратьДерево(нс, тчРемРаботы);
	КонецЦикла;
	
	стрЗатрат = торо_Ремонты.ПолучитьНормыЗатратИзВетвиДереваОпераций(Дерево,,, ТекущаяДата(), ТекущаяДата());
	
	тчМатЗатраты = Новый ТаблицаЗначений;
	тчМатЗатраты.Колонки.Добавить("Наименование");
	тчМатЗатраты.Колонки.Добавить("ЕдИзм");
	тчМатЗатраты.Колонки.Добавить("Количество");
	
	тчИнструменты = Новый ТаблицаЗначений;
	тчИнструменты.Колонки.Добавить("Наименование");
	тчИнструменты.Колонки.Добавить("ЕдИзм");
	тчИнструменты.Колонки.Добавить("Количество");
	
	Для каждого текСтрока из СтрЗатрат Цикл
		
		МатЗатраты = текСтрока.СтруктураТаблиц.МатериальныеЗатраты;
		Инструменты = текСтрока.СтруктураТаблиц.ИнструментыИТехника;
		
		Для каждого текСтрокаТЧ из МатЗатраты Цикл
			нс = тчМатЗатраты.Добавить();
			нс.Наименование = текСтрокаТЧ.Номенклатура;
			нс.ЕдИзм = ?(ЗначениеЗаполнено(текСтрокаТЧ.ЕдиницаИзмерения), текСтрокаТЧ.ЕдиницаИзмерения, текСтрокаТЧ.Номенклатура.ЕдиницаИзмерения);
			нс.Количество = текСтрокаТЧ.Количество;
		КонецЦикла;
		 
		Для каждого текСтрокаТЧ из Инструменты Цикл
			нс = тчИнструменты.Добавить();
			нс.Наименование = текСтрокаТЧ.Инструмент;
			нс.ЕдИзм = ?(ЗначениеЗаполнено(текСтрокаТЧ.ЕдиницаИзмерения), текСтрокаТЧ.ЕдиницаИзмерения, текСтрокаТЧ.Инструмент.ЕдиницаИзмерения);
			нс.Количество = текСтрокаТЧ.Количество;
		КонецЦикла;
	КонецЦикла;
	
	тчМатЗатраты.Свернуть("Наименование, ЕдИзм", "Количество");
	тчИнструменты.Свернуть("Наименование, ЕдИзм", "Количество");
	
	тчШапка.Следующий();
	тчРемРаботыСтрока.Следующий();
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = МетаданныеДокумента.Имя;
	ТабДок.ТолькоПросмотр = Истина;
	
	Макет = ПолучитьМакет("НарядНаРаботы_НеОпасные");
	
	обШапка = Макет.ПолучитьОбласть("Шапка");
	
	обШапка.Параметры.Организация = тчШапка.Организация;
	обШапка.Параметры.Подразделение = тчШапка.Подразделение;
	
	обШапка.Параметры.ДатаОткрытия = Формат(тчШапка.Дата,"ДФ=dd.MM.yyyy");
	обШапка.Параметры.Номер = тчШапка.Номер;
	
	обШапка.Параметры.ДатаНачала = Формат(тчРемРаботыСтрока.ДатаНачала,"ДФ=dd.MM.yyyy");
	обШапка.Параметры.ДатаОкончания = Формат(тчРемРаботыСтрока.ДатаОкончания,"ДФ=dd.MM.yyyy");
	
	ПерваяСтрока = Истина;
	массивПроверки = Новый Массив;
	Пока тчСотрудникиИКвалификация.Следующий() Цикл
		Если перваяСтрока Тогда
			ПерваяСтрока = Ложь;
			обШапка.Параметры.СотрудникИКвалификация = Строка(тчСотрудникиИКвалификация.Сотрудник) + " (" + тчСотрудникиИКвалификация.Квалификация + ")";
			обШапка.Параметры.Сотрудник = тчСотрудникиИКвалификация.Сотрудник;
			ТабДок.Вывести(обШапка);
			Продолжить;
		КонецЕсли;
		
		обСотрудник = Макет.ПолучитьОбласть("Сотрудник");
		обСотрудник.Параметры.СотрудникИКвалификация = Строка(тчСотрудникиИКвалификация.Сотрудник) + " (" + тчСотрудникиИКвалификация.Квалификация + ")";
		обСотрудник.Параметры.Сотрудник = тчСотрудникиИКвалификация.Сотрудник;
		
		ПроверитьИВывести(ТабДок, обСотрудник);
			
	КонецЦикла;
	
	Если ПерваяСтрока Тогда
		ТабДок.Вывести(обШапка);
	КонецЕсли;
	
	обОписаниеОР = Макет.ПолучитьОбласть("ОписаниеОР");
	обОписаниеОР.Параметры.ОР = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(тчРемРаботыСтрока.ор);
	обОписаниеОР.Параметры.Местонахождение = тчРемРаботыСтрока.АдресМестонахождения;
	обОписаниеОР.Параметры.Описание = тчРемРаботыСтрока.ВидРемонтныхРабот;
	ПроверитьИВывести(ТабДок, обОписаниеОР);

	обШапкаТЧСостав = Макет.ПолучитьОбласть("ШапкаТЧСостав");
	ПроверитьИВывести(ТабДок, обШапкаТЧСостав);
	
	СтрокиВКорне = тчРемРаботы.НайтиСтроки(Новый структура("Родитель_ID", ""));
	ВывестиРекурсивно(Макет, тчРемРаботы, СтрокиВКорне, ТабДок, "СтрокаТЧСостав", "");
	
	обШапкаТЧМатериалы = Макет.ПолучитьОбласть("ШапкаТЧМатериалы");
	ПроверитьИВывести(ТабДок, обШапкаТЧМатериалы);
	
	номерПП = 1;
	Для каждого текСтрока из тчМатЗатраты Цикл
		обСтрокаТЧМатериалы = Макет.ПолучитьОбласть("СтрокаТЧМатериалы");
		обСтрокаТЧМатериалы.Параметры.Ном = НомерПП;
		обСтрокаТЧМатериалы.Параметры.Наименование = текСтрока.Наименование;
		обСтрокаТЧМатериалы.Параметры.ЕдИзм = текСтрока.ЕдИзм;
		обСтрокаТЧМатериалы.Параметры.Количество = текСтрока.Количество;
		
		НомерПП = НомерПП + 1;
		ПроверитьИВывести(ТабДок, обСтрокаТЧМатериалы);
	КонецЦикла;
	
	обШапкаТЧИнструменты = Макет.ПолучитьОбласть("ШапкаТЧИнструменты");
	ПроверитьИВывести(ТабДок, обШапкаТЧИнструменты);
	
	НомерПП = 1;
	Для каждого ТекСтрока из тчИнструменты Цикл 
		обСтрокаТЧИнструменты = Макет.ПолучитьОбласть("СтрокаТЧИнструменты");
		обСтрокаТЧИнструменты.Параметры.Ном = НомерПП;
		обСтрокаТЧИнструменты.Параметры.Наименование = ТекСтрока.Наименование;
		обСтрокаТЧИнструменты.Параметры.ЕдИзм = ТекСтрока.ЕдИзм;
		обСтрокаТЧИнструменты.Параметры.Количество = ТекСтрока.Количество;
		
		НомерПП = НомерПП + 1;
		ПроверитьИВывести(ТабДок, обСтрокаТЧИнструменты);
	КонецЦикла;
	
	обОтветственный = Макет.ПолучитьОбласть("Ответственный");
	обОтветственный.Параметры.Сотрудник = тчШапка.Ответственный;
	обОтветственный.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
	ПроверитьИВывести(ТабДок, обОтветственный);
	
	ПерваяСтрока = Истина;
	обИсполнительСЗаголовоком = Макет.ПолучитьОбласть("ИсполнительСЗаголовоком");
	
	тчСотрудникиИКвалификация.Сбросить();
	Пока тчСотрудникиИКвалификация.Следующий() Цикл
		Если ПерваяСтрока Тогда
			ПерваяСтрока = Ложь;
			обИсполнительСЗаголовоком.Параметры.Сотрудник = тчСотрудникиИКвалификация.Сотрудник;
			обИсполнительСЗаголовоком.Параметры.Дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
			ПроверитьИВывести(ТабДок, обИсполнительСЗаголовоком);
			Продолжить;
		КонецЕсли;
		
		обИсполнитель = Макет.ПолучитьОбласть("Исполнитель");
		обИсполнитель.Параметры.Сотрудник = тчСотрудникиИКвалификация.Сотрудник;
		обИсполнитель.Параметры.дата = Формат(ТекущаяДата(),"ДФ='''""''dd''""'' MMMM yyyy ""г.""'");
		ПроверитьИВывести(ТабДок, обИсполнитель);
	КонецЦикла;
	
	Если ПерваяСтрока Тогда
		ПроверитьИВывести(ТабДок, обИсполнительСЗаголовоком);
	КонецЕсли;
	
	возврат ТабДок;
	
КонецФункции

Процедура ВывестиРекурсивно(Макет, ТЧ, Мас, ТабДок, ИмяОбластиВМакете, НомерРодителя)
	
	НомерСтроки = 1;
	Для каждого текСтрока из Мас Цикл
		НомерСтрокой = НомерРодителя + Строка(НомерСтроки);
		
		обСтрокаТЧСостав = Макет.ПолучитьОбласть(ИмяОбластиВМакете);
		обСтрокаТЧСостав.Параметры.Ном = НомерСтрокой;
		обСтрокаТЧСостав.Параметры.Наименование = текСтрока.РемонтнаяРабота;
		обСтрокаТЧСостав.Параметры.СодержаниеРабот = текСтрока.СодержаниеРабот;
		ПроверитьИВывести(ТабДок, обСтрокаТЧСостав);
		
		подСтроки = тч.НайтиСтроки(Новый структура("Родитель_ID", текСтрока.ID));
		ВывестиРекурсивно(Макет, тч, подСтроки, ТабДок, ИмяОбластиВМакете, НомерСтрокой + ".");
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьИВывести(ТабДок, ТекБлок)
	
	Если НЕ ТабДок.ПроверитьВывод(ТекБлок) Тогда
		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ТабДок.Вывести(ТекБлок);	
	
КонецПроцедуры

Процедура СобратьДерево(Корень, Выгрузка)
	
	НайС = Выгрузка.НайтиСтроки(Новый Структура("Родитель_ID", Корень.ID));
	Для каждого текСтрока из НайС Цикл
		нс = Корень.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(нс, текСтрока);
		СобратьДерево(нс, Выгрузка);
	КонецЦикла;
	
КонецПроцедуры	

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Истина;
	
КонецПроцедуры

Процедура ПриПолученииСлужебныхРеквизитов(Реквизиты) Экспорт
	
	Реквизиты.Добавить("СтатусДокумента");
	Реквизиты.Добавить("ИсторияСтатусов.*");
	Реквизиты.Добавить("Согласующие.*");
		
КонецПроцедуры


#КонецОбласти

#КонецЕсли