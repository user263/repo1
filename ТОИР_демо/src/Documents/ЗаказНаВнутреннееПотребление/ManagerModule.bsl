#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
#Область Проведение

// Процедура - Инициализировать данные документа.
// Предназначена для вызова процедуры ИнициализироватьТаблицыДляДвижений общего модуля
// ПроведениеСервер с нужными параметрами.
//
// Параметры:
//  ДокументСсылка		 - ДокументСсылка.ЗаказНаВнутреннееПотребление - Ссылка на документ.
//  ДополнительныеСвойства - Структура - По ключу структуры "ТаблицыДляДвижений" 
//										можно получить таблицы для движений 
//										после выполнения процедуры.
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);

	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаЗаказыНаВнутреннееПотребление(), "ТаблицаЗаказыНаВнутреннееПотребление");

	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений);

КонецПроцедуры
#КонецОбласти

// Формирует структуру для создания внутреннего потребления по одному
// или нескольким заказам на внутреннее потребление.
//
// Параметры:
//		МассивСсылок - Массив - заказы на внутреннее потребление,
//							по которым необходимо ввести внутреннее потребление товаров.
// 	ТекстПредупреждения - Строка - строка, в которую будет помещено сообщение
//									поясняющее почему нельзя оформить документ.
//
// Возвращаемое значение:
//		Структура - структура, в которую будут помещены реквизиты шапки из массива заказов.
//
Функция ПараметрыОформленияВнутреннегоПотребления(МассивСсылок, ТекстПредупреждения) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(Заказ.Организация)                        КАК Организация,
	|	МИНИМУМ(Заказ.Склад)                              КАК Склад,
	|	МИНИМУМ(Заказ.Подразделение)                      КАК Подразделение,
	|	МИНИМУМ(Заказ.Сделка)                             КАК Сделка,
	|	МИНИМУМ(Заказ.ХозяйственнаяОперация)              КАК ХозяйственнаяОперация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.Организация)           КАК РазличныхОрганизаций,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.Склад)                 КАК РазличныхСкладов,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.Подразделение)         КАК РазличныхПодразделений,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.Сделка)                КАК РазличныхСделок,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заказ.ХозяйственнаяОперация) КАК РазличныхХозяйственныхОпераций
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление КАК Заказ
	|ГДЕ
	|	Заказ.Ссылка В(&МассивСсылок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказ.Ссылка КАК Заказ,
	|	Заказ.Статус КАК Статус,
	|	(НЕ Заказ.Проведен) КАК ЕстьОшибкиПроведен,
	|	ВЫБОР
	|		КОГДА Заказ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт)
	|				ИЛИ Заказ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСтатус
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление КАК Заказ
	|ГДЕ
	|	Заказ.Ссылка В(&МассивСсылок)
	|	И ((НЕ Заказ.Проведен)
	|			ИЛИ Заказ.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению)
	|				И Заказ.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт))");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[0].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	ШаблонСообщения = НСтр("ru='У выделенных распоряжений отличается поле ""%ПредставлениеПоля%""'");
	ТекстСообщения = "";
	
	Если ВыборкаРеквизитыШапки.РазличныхОрганизаций > 1 Тогда
		ТекстСообщения = ТекстСообщения
							+ ?(ТекстСообщения = "", "", Символы.ПС)
							+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Организация""'"));
		
		Отказ = Истина;
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.РазличныхСкладов > 1 Тогда
		ТекстСообщения = ТекстСообщения
							+ ?(ТекстСообщения = "", "", Символы.ПС)
							+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Склад""'"));
		
		Отказ = Истина;
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.РазличныхПодразделений > 1 Тогда
		ТекстСообщения = ТекстСообщения
							+ ?(ТекстСообщения = "", "", Символы.ПС)
							+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Подразделение""'"));
		
		Отказ = Истина;
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.РазличныхСделок > 1 Тогда
		ТекстСообщения = ТекстСообщения
							+ ?(ТекстСообщения = "", "", Символы.ПС)
							+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Сделка""'"));
		
		Отказ = Истина;
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.РазличныхХозяйственныхОпераций > 1 Тогда
		ТекстСообщения = ТекстСообщения
							+ ?(ТекстСообщения = "", "", Символы.ПС)
							+ СтрЗаменить(ШаблонСообщения, "%ПредставлениеПоля%", НСтр("ru='""Операция""'"));
		
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		ТекстПредупреждения = НСтр("ru='Невозможно оформить внутреннее потребление на основании выбранных распоряжений.'")
								+ Символы.ПС
								+ ТекстСообщения;
								
		Возврат Неопределено;
		
	КонецЕсли;
	
	Если Не РезультатЗапроса[1].Пустой() Тогда
		
		ВыборкаЗаказы = РезультатЗапроса[1].Выбрать();
		
		Пока ВыборкаЗаказы.Следующий() Цикл
			
			Если ВыборкаЗаказы.ЕстьОшибкиПроведен Тогда
				
				ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.Заказ);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,
					,
					,
					,
					Отказ);
				
			ИначеЕсли ВыборкаЗаказы.ЕстьОшибкиСтатус Тогда
				
				ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусах ""К выполнению"", ""Закрыт"".'");
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаказы.Заказ);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%",   ВыборкаЗаказы.Статус);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,
					,
					,
					,
					Отказ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПараметрыОформления = Новый Структура;
	ПараметрыОформления.Вставить("Организация",           ВыборкаРеквизитыШапки.Организация);
	ПараметрыОформления.Вставить("Склад",                 ВыборкаРеквизитыШапки.Склад);
	ПараметрыОформления.Вставить("ХозяйственнаяОперация", ВыборкаРеквизитыШапки.ХозяйственнаяОперация);
	ПараметрыОформления.Вставить("Подразделение",         ВыборкаРеквизитыШапки.Подразделение);
	ПараметрыОформления.Вставить("Сделка",                ВыборкаРеквизитыШапки.Сделка);
	
	Возврат ПараметрыОформления;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#Область Проведение
Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеШапки.Дата       КАК Период,
		|	ДанныеШапки.Склад      КАК Склад
		|ИЗ
		|	Документ.ЗаказНаВнутреннееПотребление КАК ДанныеШапки
		|ГДЕ
		|	ДанныеШапки.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",     Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад",      Реквизиты.Склад);

КонецПроцедуры

Функция ТекстЗапросаТаблицаЗаказыНаВнутреннееПотребление()

	ТекстЗапроса = "ВЫБРАТЬ
                   |    МАКСИМУМ(ВложенныйЗапрос.Порядок)                КАК Порядок,
                   |    МАКСИМУМ(ВложенныйЗапрос.НомерСтроки)            КАК НомерСтроки,
                   |    ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
                   |    ВложенныйЗапрос.Период                           КАК Период,
                   |    ВложенныйЗапрос.ЗаказНаВнутреннееПотребление     КАК ЗаказНаВнутреннееПотребление,
                   |    ВложенныйЗапрос.Номенклатура                     КАК Номенклатура,
                   |    ВложенныйЗапрос.Характеристика                   КАК Характеристика,
                   |    ВложенныйЗапрос.КодСтроки                        КАК КодСтроки,
                   |    &Склад                                           КАК Склад,
                   |    СУММА(ВложенныйЗапрос.КОформлению)               КАК КОформлению
                   |ИЗ
                   |    (ВЫБРАТЬ
                   |        1 КАК Порядок,
                   |        ТаблицаТовары.НомерСтроки                    КАК НомерСтроки,
                   |        НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)                 КАК Период,
                   |        ТаблицаТовары.Ссылка                         КАК ЗаказНаВнутреннееПотребление,
                   |        ТаблицаТовары.Номенклатура                   КАК Номенклатура,
                   |        ТаблицаТовары.Характеристика                 КАК Характеристика,
                   |        ТаблицаТовары.КодСтроки                      КАК КодСтроки,
                   |        ТаблицаТовары.Количество                     КАК КОформлению
                   |    ИЗ
                   |        Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
                   |    ГДЕ
                   |        ТаблицаТовары.Ссылка = &Ссылка) КАК ВложенныйЗапрос
                   |
                   |СГРУППИРОВАТЬ ПО
                   |    ВложенныйЗапрос.Характеристика,
                   |    ВложенныйЗапрос.Номенклатура,
                   |    ВложенныйЗапрос.ЗаказНаВнутреннееПотребление,
                   |    ВложенныйЗапрос.Период,
                   |    ВложенныйЗапрос.КодСтроки
                   |
                   |ОБЪЕДИНИТЬ ВСЕ
                   |
                   |ВЫБРАТЬ
                   |    2,
                   |    ТаблицаТовары.НомерСтроки,
                   |    ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
                   |    &Период,
                   |    ТаблицаТовары.Ссылка,
                   |    ТаблицаТовары.Номенклатура,
                   |    ТаблицаТовары.Характеристика,
                   |    ТаблицаТовары.КодСтроки,
                   |    &Склад,
                   |    -ТаблицаТовары.Количество
                   |ИЗ
                   |    Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТаблицаТовары
                   |ГДЕ
                   |    ТаблицаТовары.Ссылка = &Ссылка
                   |    И ТаблицаТовары.Отменено
                   |
                   |УПОРЯДОЧИТЬ ПО
                   |    НомерСтроки,
                   |    Порядок";

	Возврат ТекстЗапроса;

КонецФункции
#КонецОбласти

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Истина;
	
КонецПроцедуры

Процедура ПриПолученииСлужебныхРеквизитов(Реквизиты) Экспорт
	
	Реквизиты.Добавить("МаксимальныйКодСтроки");
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли