#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа
перем СтруктураДанных Экспорт;  // Структура, хранящая данные для работы с уведомлениями.
	
#Область ОбработчикиСобытий
Процедура ОбработкаПроведения(Отказ, Режим)
	
	СписокТЧ = Новый Структура();
	СписокТЧ.Вставить("КлючевыеПоказатели", НСтр("ru = 'Ключевые показатели'"));
	торо_ОбщегоНазначения.ПроверитьЗаполненностьТабличныхЧастей(ЭтотОбъект, СписокТЧ, Отказ);
	Если отказ тогда возврат; КонецЕсли;
	
	масОшибок = Новый Массив;
	Для Каждого ТекСтрока Из КлючевыеПоказатели Цикл
		Если текСтрока.ЗначениеПоказателяОграниченоПоВремени = Истина
			И текСтрока.ДатаПо < Дата тогда
			
			Отказ = истина;
			масОшибок.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для показателя %1 указана дата меньше даты документа. Документ не может быть проведен!'"),ТекСтрока.Показатель));
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ = Истина Тогда
		Для каждого текОшибка из масОшибок цикл
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(текОшибка);
		КонецЦикла;
	КонецЕсли;
	
	Движения.торо_ЦелевыеЗначенияKPI.Записывать = Истина;
	Движения.торо_ЦелевыеЗначенияKPI.Очистить();
	Для Каждого ТекСтрока Из КлючевыеПоказатели Цикл
		Движение = Движения.торо_ЦелевыеЗначенияKPI.Добавить();
		Движение.Период = Дата;
		Движение.Организация = ТекСтрока.Организация;
		Движение.Подразделение = ТекСтрока.Подразделение;
		Движение.ОбъектРемонта = ТекСтрока.ОбъектРемонта;
		Движение.Показатель = ТекСтрока.Показатель;
		Движение.Значение = ТекСтрока.ЗначениеПоказателя;
		Движение.КритическоеЗначение = ТекСтрока.КритическоеЗначениеПоказателя;
		Движение.ДатаПо = ?(ТекСтрока.ЗначениеПоказателяОграниченоПоВремени, ТекСтрока.ДатаПО, '39991231235959');
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойОтветственный");
	Если НЕ ЗначениеЗаполнено(Ответственный) тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;

КонецПроцедуры
#КонецОбласти

#КонецЕсли