#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Печать
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновнаяОрганизация",
			Истина);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Ответственный) тогда
			Объект.Ответственный = Пользователи.ТекущийПользователь();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ЗаполнитьДополнительныеРеквизитыТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	ИндексСтроки = 0;
	ШаблонСообщения = НСтр("ru='В строке %1 табличной части не заполнено ни одно из полей ""Организация"", ""Подразделение"", ""Объект ремонта"".'");

	Для каждого Строка из Объект.КлючевыеПоказатели Цикл
		Если НЕ ЗначениеЗаполнено(Строка.Организация) 
			И НЕ ЗначениеЗаполнено(Строка.Подразделение)
			И НЕ ЗначениеЗаполнено(Строка.ОбъектРемонта) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ИндексСтроки+1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.КлючевыеПоказатели["+ИндексСтроки+"].Организация",, Отказ);
		КонецЕсли;
		ИндексСтроки = ИндексСтроки + 1;
	КонецЦикла;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ЗапросДублей = Новый Запрос;
	ЗапросДублей.Текст =
	"ВЫБРАТЬ
	|	КлючевыеПоказатели.Показатель,
	|	КлючевыеПоказатели.Организация,
	|	КлючевыеПоказатели.Подразделение,
	|	КлючевыеПоказатели.ОбъектРемонта,
	|	1 КАК КоличествоСтрок
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	&КлючевыеПоказатели КАК КлючевыеПоказатели
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Показатель,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Подразделение,
	|	ТаблицаДокумента.ОбъектРемонта,
	|	СУММА(ТаблицаДокумента.КоличествоСтрок) КАК КоличествоСтрок
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Показатель,
	|	ТаблицаДокумента.Организация,
	|	ТаблицаДокумента.Подразделение,
	|	ТаблицаДокумента.ОбъектРемонта
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаДокумента.КоличествоСтрок) > 1";
	
	ЗапросДублей.УстановитьПараметр("КлючевыеПоказатели", Объект.КлючевыеПоказатели.Выгрузить());
	ВыборкаДублей = ЗапросДублей.Выполнить().Выбрать();
	
	ШаблонСообщения = НСтр("ru='В таблице дублируются строки с аналитикой: Показатель=""%1"", Организация=""%2"", Подразделение=""%3"", Объект ремонта=""%4"".'");
	Пока ВыборкаДублей.Следующий() Цикл
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ВыборкаДублей.Показатель, ВыборкаДублей.Организация, ВыборкаДублей.Подразделение, ВыборкаДублей.ОбъектРемонта);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ТекущийОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаполнитьДополнительныеРеквизитыТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КлючевыеПоказателиПоказательПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.КлючевыеПоказатели.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ЗаполнитьДополнительныеРеквизитыСтрокиТаблицы(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КлючевыеПоказателиПриИзменении(Элемент)
	
	текСтрока = Элементы.КлючевыеПоказатели.ТекущиеДанные;
	Если текСтрока <> Неопределено 
		И текСтрока.ЗначениеПоказателяОграниченоПоВремени = Ложь тогда
		текСтрока.ДатаПо = '00010101000000';
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
    УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ЗаполнитьДополнительныеРеквизитыТаблицы()
	
	Для каждого СтрокаТаблицы из Объект.КлючевыеПоказатели Цикл
		ЗаполнитьДополнительныеРеквизитыСтрокиТаблицы(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДополнительныеРеквизитыСтрокиТаблицы(СтрокаТаблицы)
	
	ТипПоказателя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТаблицы.Показатель, "ТипПоказателя");
	СтрокаТаблицы.ДоступноПодразделение = (ТипПоказателя = ПредопределенноеЗначение("Перечисление.торо_ТипыПоказателейKPI.ПоказательПодразделения") 
														ИЛИ ТипПоказателя = ПредопределенноеЗначение("Перечисление.торо_ТипыПоказателейKPI.ПоказательОбъектаРемонта"));
	СтрокаТаблицы.ДоступенОР = (ТипПоказателя = ПредопределенноеЗначение("Перечисление.торо_ТипыПоказателейKPI.ПоказательОбъектаРемонта"));
	
	Если НЕ СтрокаТаблицы.ДоступноПодразделение Тогда
		СтрокаТаблицы.Подразделение = Неопределено;
	КонецЕсли;
	
	Если НЕ СтрокаТаблицы.ДоступенОР Тогда
		СтрокаТаблицы.ОбъектРемонта = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
