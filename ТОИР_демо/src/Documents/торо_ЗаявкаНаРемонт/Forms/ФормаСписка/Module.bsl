#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// Ограничение ввода на основании
	торо_СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка, Новый Структура("ОграничитьВводНаОсновании, ДокументыОснования, УстановитьСвойствоЭлементовФормыОтПрав",Истина,Истина, Истина));	
	// Конец ограничение ввода на основании

	ЭтаФорма.Элементы.Список.ПодчиненныеЭлементы.СтатусДокумента.Видимость = ПолучитьФункциональнуюОпцию("торо_ИспользоватьСтатусыДокументовТОиР");
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПАРАМЕТРЫ_ПЕЧАТИ_Заявка" И Источник = ЭтаФорма Тогда
		Если Параметр = Неопределено ИЛИ НЕ Параметр.Количество() Тогда			
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо выбрать хотя бы 1 ремонт!'"), СтатусСообщения.Важное);			
		Иначе			
			Для каждого Элем Из Параметр Цикл
				СтруктураПараметровКоманды = Новый Структура("Док, ID", Элементы.Список.ТекущиеДанные.Ссылка, Элем);
				МассивПараметровКоманды = Новый Массив();
				МассивПараметровКоманды.Добавить(Элементы.Список.ТекущиеДанные.Ссылка);
				торо_Печать.НапечататьДокумент("Документ.торо_ЗаявкаНаРемонт", "Заявка", МассивПараметровКоманды, СтруктураПараметровКоманды);
			КонецЦикла; 			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти