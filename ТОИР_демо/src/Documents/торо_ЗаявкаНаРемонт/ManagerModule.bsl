#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Заявка на ремонт
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_ЗаявкаНаРемонт";
	КомандаПечати.Идентификатор = "Заявка";
	КомандаПечати.Представление = НСтр("ru = 'Смета ремонта (Заявка на ремонт)'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заявка");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"Заявка",
		НСтр("ru = 'Смета ремонта (Заявка на ремонт)'"),
		ПечатьЗаявки(МассивОбъектов, ПараметрыПечати),
		,
		"Документ.торо_ЗаявкаНаРемонт.Заявка");
	КонецЕсли;
	
КонецПроцедуры

// Процедура вывода на экран печатной формы документа
// торо_ЗаявкаНаРемонт.
//
//  Параметры:
//   Заявка - ссылка на текущий документ торо_ЗаявкаНаРемонт.  
Функция ПечатьЗаявки(МассивОбъектов, ПараметрыПечати) 
	
	Заявка = ПараметрыПечати.Док;
	ID =  ПараметрыПечати.ID;
	
	РемонтыОборудования = Заявка.РемонтыОборудования.Выгрузить(Новый Структура("ID", ID));
	РемонтОборудования  = РемонтыОборудования[0];
		
	ЕстьКомментарий = Метаданные.Имя <> "УправлениеРемонтнымПредприятием";

	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	
	Макет = ПолучитьМакет("Заявка");
    ШапкаДокумента                = Макет.ПолучитьОбласть("ШапкаДокумента");
    ШапкаСоставРабот              = ?(ЕстьКомментарий,Макет.ПолучитьОбласть("ШапкаСоставРаботКомментарий"),Макет.ПолучитьОбласть("ШапкаСоставРабот"));
    ШапкаНоменклатуры             = Макет.ПолучитьОбласть("ШапкаНоменклатура");
    ШапкаМерыБезопасности         = Макет.ПолучитьОбласть("ШапкаМерыБезопасности");
    ШапкаТрудозатраты             = Макет.ПолучитьОбласть("ШапкаТрудозатраты");
    ШапкаЗапчасти                 = Макет.ПолучитьОбласть("ШапкаЗапчасти");
    ШапкаИнструменты              = Макет.ПолучитьОбласть("ШапкаИнструменты");
    СтрокаТаблицыРабот            = ?(ЕстьКомментарий,Макет.ПолучитьОбласть("СтрокаТаблицыРаботКомментарий"),Макет.ПолучитьОбласть("СтрокаТаблицыРабот"));
    СтрокаТаблицыНоменклатуры     = Макет.ПолучитьОбласть("СтрокаТаблицыНоменклатуры");
    СтрокаТаблицыМерыБезопасности = Макет.ПолучитьОбласть("СтрокаТаблицыМерыБезопасности");
    СтрокаТаблицыТрудозатрат      = Макет.ПолучитьОбласть("СтрокаТаблицыТрудозатрат");
    СтрокаТаблицыЗапчастей        = Макет.ПолучитьОбласть("СтрокаТаблицыЗапчастей");
    СтрокаТаблицыИнструментов     = Макет.ПолучитьОбласть("СтрокаТаблицыИнструментов");
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
    ШапкаДокумента.Параметры.Организация                 = Заявка.Организация;
    ШапкаДокумента.Параметры.Подразделение               = Заявка.Подразделение;
    ШапкаДокумента.Параметры.ДатаНачалаРемонтныхРабот    = РемонтОборудования.ДатаНачала;
    ШапкаДокумента.Параметры.ДатаОкончанияРемонтныхРабот = РемонтОборудования.ДатаОкончания;
    ШапкаДокумента.Параметры.ИнвНомер                    = РемонтОборудования.ОбъектРемонта.ИнвентарныйНомер;
    ШапкаДокумента.Параметры.ВидРемонтныхРабот           = торо_ЗаполнениеДокументов.ПолучитьПредоставленияВРДляПечати(РемонтОборудования.ВидРемонтныхРабот);
    ШапкаДокумента.Параметры.Номер                       = Заявка.Номер;
    ШапкаДокумента.Параметры.ДатаНомерЗаявки             = Формат(Заявка.Дата,"ДФ=dd.MM.yyyy");
	
	ОбъектРемонта = РемонтОборудования.ОбъектРемонта; 
	ШапкаДокумента.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ОбъектРемонта);
	// Заполнить поле Ответственный
    Если Заявка.Ответственный.Наименование = "" Тогда
    	Подвал.Параметры.Ответственный = "                                           ";
 	Иначе
  		Подвал.Параметры.Ответственный = Заявка.Ответственный.Наименование;
 	КонецЕсли;
	
	
	ТабДок.Вывести(ШапкаДокумента);
	ТабДок.Вывести(ШапкаСоставРабот);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота КАК Работа,
				   |	торо_ЗаявкаНаРемонтРемонтныеРаботы.ID,
				   |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Родитель_ID,
				   |	торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтыОборудования_ID,
				   |    торо_ЗаявкаНаРемонтРемонтныеРаботы.Количество";
				   Если ЕстьКомментарий Тогда
					   Запрос.Текст = Запрос.Текст + ", ТехнологическиеОперации.СодержаниеРабот КАК Комментарий";
				   КонецЕсли;
				   Запрос.Текст = Запрос.Текст +"
	               |ИЗ
	               |	Документ.торо_ЗаявкаНаРемонт.РемонтныеРаботы КАК торо_ЗаявкаНаРемонтРемонтныеРаботы
				   |    ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК ТехнологическиеОперации
				   |    ПО торо_ЗаявкаНаРемонтРемонтныеРаботы.РемонтнаяРабота = ТехнологическиеОперации.Ссылка
	               |ГДЕ
	               |	торо_ЗаявкаНаРемонтРемонтныеРаботы.Ссылка = &Заявка";
	
	Запрос.УстановитьПараметр("Заявка", Заявка);	
	
	тзСписокРаботИсх = Запрос.Выполнить().Выгрузить();
	
	// Накладываем отбор по РемонтуОборудования. Если делать это в запросе - теряется последовательность ремонтов.
	ПараметрыОтбора = Новый Структура("РемонтыОборудования_ID",РемонтОборудования.ID);
	тзСписокРабот = тзСписокРаботИсх.Скопировать(ПараметрыОтбора);	
	Ном = "1";
	МассивID = Новый Массив;
	
	МассивСтрок = тзСписокРабот.НайтиСтроки(Новый Структура("Родитель_ID",""));
	
	
	// Определяем используются ли комментарии или нет
	ВывестиРаботы(МассивСтрок,тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном,ЕстьКомментарий,Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ЗаявкаНаРемонтТрудовыеЗатраты.Квалификация,
	               |	СУММА(торо_ЗаявкаНаРемонтТрудовыеЗатраты.ВремяРаботы * торо_ЗаявкаНаРемонтТрудовыеЗатраты.Количество) КАК ВремяРаботы
	               |ИЗ
	               |	Документ.торо_ЗаявкаНаРемонт.ТрудовыеЗатраты КАК торо_ЗаявкаНаРемонтТрудовыеЗатраты
	               |ГДЕ
	               |	торо_ЗаявкаНаРемонтТрудовыеЗатраты.РемонтыОборудования_ID = &РемонтыОборудования_ID
	               |	И торо_ЗаявкаНаРемонтТрудовыеЗатраты.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	торо_ЗаявкаНаРемонтТрудовыеЗатраты.Квалификация";
				   
	Запрос.УстановитьПараметр("Ссылка", Заявка.Ссылка);
	Запрос.УстановитьПараметр("РемонтыОборудования_ID", РемонтОборудования.ID); 
	СтрокиТрудозатрат = Запрос.Выполнить().Выгрузить();
	Если СтрокиТрудозатрат.Количество() > 0 Тогда
		ТабДок.Вывести(ШапкаТрудозатраты);
	КонецЕсли;
	
	Ном = 1;
	Для Каждого Стр Из СтрокиТрудозатрат Цикл
		СтрокаТаблицыТрудозатрат.Параметры.Номер = Ном;
		СтрокаТаблицыТрудозатрат.Параметры.Квалификация = Стр.Квалификация;
		СтрокаТаблицыТрудозатрат.Параметры.ВремяРаботы = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(Стр.ВремяРаботы);
		ТабДок.Вывести(СтрокаТаблицыТрудозатрат);
		Ном = Ном +1;
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	торо_ЗаявкаНаРемонтМатериальныеЗатраты.Номенклатура КАК Номенклатура,
	|	торо_ЗаявкаНаРемонтМатериальныеЗатраты.Количество КАК Количество,
	|	торо_ЗаявкаНаРемонтМатериальныеЗатраты.Номенклатура.ЕдиницаИзмерения КАК ЕдИзм
	|ИЗ
	|	Документ.торо_ЗаявкаНаРемонт.МатериальныеЗатраты КАК торо_ЗаявкаНаРемонтМатериальныеЗатраты
	|ГДЕ
	|	торо_ЗаявкаНаРемонтМатериальныеЗатраты.Ссылка = &Заявка
	|	И торо_ЗаявкаНаРемонтМатериальныеЗатраты.РемонтыОборудования_ID = &РемонтыОборудования_ID
	|";
	
	Запрос.УстановитьПараметр("Заявка",Заявка);
	Запрос.УстановитьПараметр("РемонтыОборудования_ID", РемонтОборудования.ID);

	Выборка = Запрос.Выполнить();
	ТЗ = Выборка.Выгрузить();
	ТЗ.Свернуть("Номенклатура,ЕдИзм","Количество");
	
	Если ТЗ.Количество()>0 Тогда
		ТабДок.Вывести(ШапкаНоменклатуры);
	КонецЕсли;
	
	Ном = 0;
	Для Каждого Стр Из ТЗ Цикл
		Ном = Ном + 1;
		СтрокаТаблицыНоменклатуры.Параметры.Номер = Ном; 
		СтрокаТаблицыНоменклатуры.Параметры.Заполнить(Стр);
		ТабДок.Вывести(СтрокаТаблицыНоменклатуры);
	КонецЦикла;
	
	СтрокиЗапчастей = Заявка.ЗапчастиРемонта.НайтиСтроки(Новый Структура("РемонтыОборудования_ID", РемонтОборудования.ID)); 
	ТаблицаЗапчастей = Заявка.ЗапчастиРемонта.Выгрузить(СтрокиЗапчастей);
	ТаблицаЗапчастей.Свернуть("Номенклатура,ЕдиницаИзмерения","Количество");
	Если ТаблицаЗапчастей.Количество()>0 Тогда
		ТабДок.Вывести(ШапкаЗапчасти);
	КонецЕсли;
	
	Ном = 0;
	Для Каждого Стр Из ТаблицаЗапчастей Цикл
		Ном = Ном + 1;
		СтрокаТаблицыЗапчастей.Параметры.Номер = Ном;
		СтрокаТаблицыЗапчастей.Параметры.Наименование = Стр.Номенклатура;
		СтрокаТаблицыЗапчастей.Параметры.ЕдИзм = Стр.ЕдиницаИзмерения;
		СтрокаТаблицыЗапчастей.Параметры.Количество = Стр.Количество;
		ТабДок.Вывести(СтрокаТаблицыЗапчастей);
	КонецЦикла;
	
	СтрокиИнструментов = Заявка.Инструменты.НайтиСтроки(Новый Структура("РемонтыОборудования_ID", РемонтОборудования.ID));
	ТаблицаИнструментов = Заявка.Инструменты.Выгрузить(СтрокиИнструментов);
	ТаблицаИнструментов.Свернуть("Инструмент,ЕдиницаИзмерения","Количество");
	Если ТаблицаИнструментов.Количество()>0 Тогда
		ТабДок.Вывести(ШапкаИнструменты);
	КонецЕсли;
	
	Ном = 0;
	Для Каждого Стр Из ТаблицаИнструментов Цикл
		Ном = Ном + 1;
		СтрокаТаблицыИнструментов.Параметры.Номер = Ном;
		СтрокаТаблицыИнструментов.Параметры.Наименование = Стр.Инструмент;
		СтрокаТаблицыИнструментов.Параметры.ЕдИзм = ?(ЗначениеЗаполнено(Стр.ЕдиницаИзмерения), Стр.ЕдиницаИзмерения, Стр.Инструмент.ЕдиницаИзмерения);
		СтрокаТаблицыИнструментов.Параметры.Количество = Стр.Количество;
		ТабДок.Вывести(СтрокаТаблицыИнструментов);
	КонецЦикла;
	
	Если Заявка.МерыБезопасности.Количество()>0 Тогда
		ТабДок.Вывести(ШапкаМерыБезопасности);
	КонецЕсли;

	Для Каждого Стр Из Заявка.МерыБезопасности Цикл
		СтрокаТаблицыМерыБезопасности.Параметры.Номер = Стр.НомерСтроки;
		СтрокаТаблицыМерыБезопасности.Параметры.МерыБезопасности = Стр.МерыБезопасности;
		ТабДок.Вывести(СтрокаТаблицыМерыБезопасности);   
	КонецЦикла;
	 
	ТабДок.Вывести(Подвал);
	 
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;	

КонецФункции

Процедура ВывестиРаботы(МассивСтрок,тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном,Комментарии,КолВо)
	Для каждого СписокРабот Из МассивСтрок Цикл
		СтрокаТаблицыРабот.Параметры.Номер = Ном;
		СтрокаТаблицыРабот.Параметры.Работа = СписокРабот.Работа;
		Если КолВо = Истина Тогда
    		СтрокаТаблицыРабот.Параметры.Количество=СписокРабот.Количество; 
		КонецЕсли;	
		Если Комментарии = Истина Тогда
			СтрокаТаблицыРабот.Параметры.Комментарий = СписокРабот.Комментарий;
		КонецЕсли;
		ТабДок.Вывести(СтрокаТаблицыРабот);
		МассивID.Добавить(СписокРабот.ID);
		ВывестиРаботы(тзСписокРабот.НайтиСтроки(Новый Структура("Родитель_ID",СписокРабот.ID)),тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном + ".1",Комментарии,КолВо);
		Ном = Лев(Ном,СтрДлина(Ном)-1) + Строка(Число(Прав(Ном,1)) + 1);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти

#КонецЕсли