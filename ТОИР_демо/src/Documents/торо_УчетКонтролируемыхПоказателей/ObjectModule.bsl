#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ

перем СтруктураДанных Экспорт;  // Структура, хранящая данные для работы с уведомлениями.
Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа.

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(Основание)
	
	Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойОтветственный");
	Если НЕ ЗначениеЗаполнено(Ответственный) тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;	
	
	Если Основание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Основание) 
		И НЕ ТипЗнч(Основание) = Тип("Структура") 
		И НЕ ТипЗнч(Основание) = Тип("СправочникСсылка.торо_ОбъектыРемонта")
		И НЕ Основание.Проведен Тогда
		мВведенНаОснованииНепроведенного=Истина;
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Основание)=Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
		Организация			= Основание.Организация;
		Подразделение		= Основание.Подразделение;
		
		
		ОбъектыРемонта= Новый ТаблицаЗначений;
		
		Запрос = Новый Запрос;        
		Запрос.Текст=
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта
			|ИЗ
			|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
			|ГДЕ
			|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Основание);
		Результат=Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		МассивОР = Новый Массив;
		Пока Выборка.Следующий() Цикл
			
			МассивОР.Добавить(Выборка.ОбъектРемонта);
			
		КонецЦикла;
		
		МассивПоказателей = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(МассивОР,,Истина);
		Для Каждого СтруктураПоказателей Из МассивПоказателей Цикл
			ЗаполнитьЗначенияСвойств(Показатели.Добавить(), СтруктураПоказателей);
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда	
		
		Организация 	  = Основание.Организация;
		Подразделение	  = Основание.Подразделение;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта
		               |ИЗ
		               |	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
		               |ГДЕ
		               |	торо_ВыявленныеДефектыСписокДефектов.Ссылка = &Ссылка";
		
		
		Запрос.УстановитьПараметр("Ссылка", Основание);
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		МассивОР = Новый Массив;
		Пока Выборка.Следующий() Цикл
			
			МассивОР.Добавить(Выборка.ОбъектРемонта);
			
		КонецЦикла;
		
		Дата = Основание.ДатаОбнаружения;
		МассивПоказателей = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(МассивОР,,Истина);
		Для Каждого СтруктураПоказателей Из МассивПоказателей Цикл
			НС = Показатели.Добавить();
			ЗаполнитьЗначенияСвойств(НС,СтруктураПоказателей);
			НС.ДатаКонтроля = Дата;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		
		Организация = Основание.Организация;
		Подразделение = Основание.Подразделение;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ВыходныеДокументы.СписокОбъектов,
		|	торо_АктОВыполненииРегламентногоМероприятияМероприятия.ID
		|ПОМЕСТИТЬ СпискиОР
		|ИЗ
		|	Документ.торо_АктОВыполненииРегламентногоМероприятия.Мероприятия КАК торо_АктОВыполненииРегламентногоМероприятияМероприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыходныеДокументы КАК торо_ВыходныеДокументы
		|		ПО торо_АктОВыполненииРегламентногоМероприятияМероприятия.ВидРемонтныхРабот = торо_ВыходныеДокументы.ВидМероприятия
		|ГДЕ
		|	торо_ВыходныеДокументы.ВыходнойДокумент = &ВыходнойДокумент
		|	И торо_АктОВыполненииРегламентногоМероприятияМероприятия.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов.ОбъектРемонта
		|ИЗ
		|	СпискиОР КАК СпискиОР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииРегламентногоМероприятия.МероприятияОбъектов КАК торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов
		|		ПО СпискиОР.ID = торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов.Мероприятие_ID
		|ГДЕ
		|	торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов.Ссылка = &Ссылка
		|	И торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов.Выполнено = ИСТИНА";
		
		
		
		Запрос.УстановитьПараметр("ВыходнойДокумент", Перечисления.торо_ВидыВыходныхДокументов.УчетКонтролируемыхПоказателей);
		Запрос.УстановитьПараметр("Ссылка", Основание);
		
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		Выборка = Результат.Выбрать();
		МассивОР = Новый Массив;
		Пока Выборка.Следующий() Цикл
			
			МассивОР.Добавить(Выборка.ОбъектРемонта);
			
		КонецЦикла;
		
		Дата = ТекущаяДата();
		МассивПоказателей = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(МассивОР,,Истина);
		Для Каждого СтруктураПоказателей Из МассивПоказателей Цикл
			НС = Показатели.Добавить();
			ЗаполнитьЗначенияСвойств(НС,СтруктураПоказателей);
			НС.ДатаКонтроля = Дата;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание)=Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
           |	торо_ОбъектыРемонта.Организация,
           |	торо_ОбъектыРемонта.Подразделение
           |ИЗ
           |	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
           |ГДЕ
           |	торо_ОбъектыРемонта.Ссылка = &Ссылка";
		   
		Запрос.УстановитьПараметр("Ссылка", Основание);
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() тогда
			Возврат;
		КонецЕсли;
		Реквизиты = Результат.Выбрать();
		Реквизиты.Следующий();
		
		Дата = ТекущаяДата();
		Если ЗначениеЗаполнено(Реквизиты.Организация) Тогда
			 Организация = Реквизиты.Организация;
		КонецЕсли;
		Если ЗначениеЗаполнено(Реквизиты.Подразделение) Тогда
			 Подразделение = Реквизиты.Подразделение;
		КонецЕсли;
		
		МассивПоказателей = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьСтруктуруИзмеряемыхПоказателейОбъектовРемонта(Основание,,Истина);
		Для каждого текПоказатель из МассивПоказателей цикл
			НС = Показатели.Добавить();
			НС.ДатаКонтроля = Дата;
			ЗаполнитьЗначенияСвойств(НС, текПоказатель);
			НС.ОбъектРемонта = Основание;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("Структура") Тогда
		Если Основание.Свойство("ТекущийПоказатель") И ЗначениеЗаполнено(Основание.ТекущийПоказатель)Тогда
			Показатель = Основание.ТекущийПоказатель;
			КритическийМаксимум = Основание.КритическийМаксимум;
			ДопустимыйМаксимум = Основание.ДопустимыйМаксимум;
			ДопустимыйМинимум = Основание.ДопустимыйМинимум;
			КритическийМинимум = Основание.КритическийМинимум;
		ИначеЕсли Основание.Свойство("Основание") Тогда
			ФормаВыбораПоказателя = ПланыВидовХарактеристик.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолучитьФормуВыбора();
			НаборЗаписейПР = РегистрыСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта.СоздатьНаборЗаписей();
			НаборЗаписейПР.Отбор.ОбъектРемонта.Установить(Основание.Основание);
			НаборЗаписейПР.Прочитать();
			СписокОтбора = Новый СписокЗначений;
			Для Каждого ЗаписьНабора Из НаборЗаписейПР Цикл
				СписокОтбора.Добавить(ЗаписьНабора.Показатель);
			КонецЦикла; 
			ФормаВыбораПоказателя.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
			ФормаВыбораПоказателя.Отбор.Ссылка.Значение = СписокОтбора;
			ФормаВыбораПоказателя.Отбор.Ссылка.Использование = Истина;
			
			Показатель = ФормаВыбораПоказателя.ОткрытьМодально();
		КонецЕсли;
		Если Основание.Свойство("Основание") Тогда 
			НС = Показатели.Добавить();
			НС.ДатаКонтроля = ТекущаяДата();
			НС.Показатель = Показатель;
			НС.ОбъектРемонта = Основание.Основание;
			НС.КритическийМаксимум = КритическийМаксимум;
			НС.ДопустимыйМаксимум = ДопустимыйМаксимум;
			НС.ДопустимыйМинимум = ДопустимыйМинимум;
			НС.КритическийМинимум = КритическийМинимум;
			НС.Значение = НС.Показатель.ТипЗначения.ПривестиЗначение(НС.Значение);
		КонецЕсли;
	КонецЕсли; 
	
	Если НЕ ТипЗнч(Основание) = Тип("Структура") Тогда 
		ДокументОснование = Основание.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	СписокТЧ = Новый Структура();
	СписокТЧ.Вставить("Показатели", "Показатели");
	торо_ОбщегоНазначения.ПроверитьЗаполненностьТабличныхЧастей(ЭтотОбъект, СписокТЧ, Отказ);
	Если отказ тогда возврат; КонецЕсли;	
	
	ФО_ИспользоватьСтандартныеОповещенияОПревышенииПоказателей = Константы.торо_ИспользоватьСтандартныеОповещенияОПревышенииПоказателей.Получить();
	
	// регистр торо_ЗначенияКонтролируемыхПоказателей
	Движения.торо_ЗначенияКонтролируемыхПоказателей.Записывать = Истина;
	Для Каждого ТекСтрокаПоказатели Из Показатели Цикл
		Движение = Движения.торо_ЗначенияКонтролируемыхПоказателей.Добавить();
		Движение.Период        = Дата;
		Движение.ДатаКонтроля  = ТекСтрокаПоказатели.ДатаКонтроля;
		Движение.ОбъектРемонта = ТекСтрокаПоказатели.ОбъектРемонта;
		Движение.Показатель    = ТекСтрокаПоказатели.Показатель;
		Движение.Значение      = ТекСтрокаПоказатели.Значение;
		Если ФО_ИспользоватьСтандартныеОповещенияОПревышенииПоказателей Тогда
			ПроверитьЗначениеПоказателя(ТекСтрокаПоказатели);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Для каждого ТекСтрокаПоказатели Из Показатели Цикл
		ТекСтрокаПоказатели.ДатаКонтроля = Дата;
	КонецЦикла; 	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет проверку показателей и формирует сообщения 
// в случае выхода за рамки критических показателей.
//
Процедура ПроверитьЗначениеПоказателя(СтрокаПроверки)
	
	Показатель	 = СтрокаПроверки.Показатель;
	Значение	 = СтрокаПроверки.Значение;
	ОР			 = СтрокаПроверки.ОбъектРемонта;
	
	КритическийМаксимум	 = СтрокаПроверки.КритическийМаксимум;
	ДопустимыйМаксимум	 = СтрокаПроверки.ДопустимыйМаксимум;
	ДопустимыйМинимум	 = СтрокаПроверки.ДопустимыйМинимум;
	КритическийМинимум	 = СтрокаПроверки.КритическийМинимум;
	
	Если ПолучитьФункциональнуюОпцию("торо_ИспользоватьУведомленияОСобытияхСистемы") И ПолучитьФункциональнуюОпцию("торо_ИспользоватьРемонтыПоСостоянию") Тогда
		НаборЗаписей = РегистрыСведений.торо_ПараметрыОповещенияОСостоянииОборудования.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектРемонта.Установить(ОР);
		НаборЗаписей.Отбор.Показатель.Установить(Показатель);
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			Если ЗначениеЗаполнено(Запись.СобытиеВозникновенияОповещения) Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ТипЗнч(Значение) = Тип("Число") 
		ИЛИ НЕ ТипЗнч(КритическийМаксимум) = Тип("Число")
		ИЛИ НЕ ТипЗнч(ДопустимыйМаксимум) = Тип("Число")
		ИЛИ НЕ ТипЗнч(ДопустимыйМинимум) = Тип("Число")
		ИЛИ НЕ ТипЗнч(КритическийМинимум) = Тип("Число")
		Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	ТекстСообщения = "";
	Если Значение > КритическийМаксимум И ЗначениеЗаполнено(КритическийМаксимум) Тогда
		ТекстСообщения = "превышает критический максимум";
	ИначеЕсли (Значение > ДопустимыйМаксимум) и (Значение <= КритическийМаксимум) И ЗначениеЗаполнено(КритическийМаксимум + ДопустимыйМаксимум) Тогда
		ТекстСообщения = "превышает допустимый максимум";
	ИначеЕсли (Значение < ДопустимыйМинимум) и (Значение >= КритическийМинимум) И ЗначениеЗаполнено(ДопустимыйМинимум + КритическийМинимум)  Тогда
		ТекстСообщения = "ниже допустимого минимума";
	ИначеЕсли (Значение < КритическийМинимум) И ЗначениеЗаполнено(КритическийМинимум) Тогда
		ТекстСообщения = "ниже критического минимума";
	КонецЕсли;
	
	Если ТекстСообщения <> "" Тогда
		ТекстСообщения = "Значение показателя '"  + Показатель.Наименование + "' " + ТекстСообщения;
		
		НаборЗаписей = РегистрыСведений.торо_ОчередьУведомлений.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать(); //отборов нет
		
		НС = НаборЗаписей.Добавить();
		
		
		НС.ТемаПисьма        = ОР;
		НС.ТелоПисьма        = ТекстСообщения;
		
		НС.ID_уведомления    = Новый УникальныйИдентификатор;
		НС.Источник          = Ссылка;
		НС.Пользователь      = Пользователи.ТекущийПользователь();
		НС.СпособУведомления = Перечисления.торо_СпособыУведомленияПользователей.УведомлениеВВидеВсплывающейПодсказки;
		
		НаборЗаписей.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти   

#КонецЕсли






