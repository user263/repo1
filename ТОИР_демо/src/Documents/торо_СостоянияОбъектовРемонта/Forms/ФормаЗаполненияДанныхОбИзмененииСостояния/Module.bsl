&НаКлиенте
Перем ВидПускаПростой;

&НаКлиенте
Перем ВидТипЭксплуатацияНаПериод;

&НаКлиенте
Перем ТекТипЭксплуатацииНаПериод;

&НаКлиенте
Перем ТекТипЭксплуатации;

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицуОбъектовПоМассивуСтруктур(Параметры.МассивСтруктурСтрокТЧ);
	УстановитьЗначенияПоУмолчанию();
	ЗаполнитьТекстДокумента(Параметры.Ссылка);
	ВидОперацииДокумента = Параметры.ВидОперации;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьИНаименованияКолонокОтВидаОперации();
	ИзменитьЗначенияФлажков(Истина);
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ВидЭксплуатацииНаПериодПриИзменении(Элемент)
	
	ТекТипЭксплуатацииНаПериод = ПолучитьТипЭксплуатацииДляВидаЭксплуатации(ВидЭксплуатацииНаПериод);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЭксплуатацииПриИзменении(Элемент)
	
	ТекТипЭксплуатации = ПолучитьТипЭксплуатацииДляВидаЭксплуатации(ВидЭксплуатации);
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъектыРемонта

&НаКлиенте
Процедура ОбъектыРемонтаВидЭксплуатацииНаПериодПриИзменении(Элемент)
	
	ТекДанные = Элементы.ОбъектыРемонта.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекДанные.ТипЭксплуатацииНаПериод = ПолучитьТипЭксплуатацииДляВидаЭксплуатации(ТекДанные.ВидЭксплуатацииНаПериод);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаВидЭксплуатацииПриИзменении(Элемент)
	
	ТекДанные = Элементы.ОбъектыРемонта.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ТекДанные.ТипЭксплуатации = ПолучитьТипЭксплуатацииДляВидаЭксплуатации(ТекДанные.ВидЭксплуатации);
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ИзменитьЗначенияФлажков(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	ИзменитьЗначенияФлажков(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьФлажки(Команда)
	ИзменитьЗначенияФлажков();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанные(Команда)
	
	Для Каждого Строка Из ОбъектыРемонта Цикл
		Если Строка.Пометка Тогда
			
			Если НЕ НеМенятьЗаполненныеЗначенияДат
				ИЛИ НЕ (ЗначениеЗаполнено(Строка.ДатаОкончания) И НеМенятьЗаполненныеЗначенияДат) Тогда
				
				Строка.ДатаОкончания = ДатаОкончания;
			КонецЕсли;

			Если НЕ НеМенятьЗаполненныеВидыЭксплуатации
				ИЛИ НЕ (ЗначениеЗаполнено(Строка.ВидЭксплуатации) И НеМенятьЗаполненныеВидыЭксплуатации) Тогда
				
				Строка.ВидЭксплуатации = ВидЭксплуатации;
				Строка.ТипЭксплуатации = ТекТипЭксплуатации;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.ВидЭксплуатации) 
				И НЕ Строка.ТипЭксплуатации = ВидПускаПростой
				И (НЕ НеМенятьЗаполненныеВидыПуска ИЛИ НЕ (ЗначениеЗаполнено(Строка.ВидПуска) И НеМенятьЗаполненныеВидыПуска)) Тогда
				
				Строка.ВидПуска = ВидПуска;
			КонецЕсли;
			
			Если НЕ НеМенятьЗаполненныеПримечания
				ИЛИ Не (ЗначениеЗаполнено(Строка.Примечание) И НеМенятьЗаполненныеПримечания) Тогда
				Строка.Примечание = Примечание;
			КонецЕсли;
			Если ВидОперацииДокумента = ВидТипЭксплуатацияНаПериод Тогда
				
				Если НЕ НеМенятьЗаполненныеЗначенияДат
					ИЛИ НЕ (ЗначениеЗаполнено(Строка.ДатаНачала) И НеМенятьЗаполненныеЗначенияДат) Тогда
					
					Строка.ДатаНачала = ДатаНачала;
				КонецЕсли; 
				
				Если НЕ НеМенятьЗаполненныеВидыЭксплуатацииНаПериод
					ИЛИ НЕ (ЗначениеЗаполнено(Строка.ВидЭксплуатацииНаПериод) И НеМенятьЗаполненныеВидыЭксплуатацииНаПериод) Тогда
					
					Строка.ВидЭксплуатацииНаПериод = ВидЭксплуатацииНаПериод;
					Строка.ТипЭксплуатацииНаПериод = ТекТипЭксплуатацииНаПериод;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Строка.ВидЭксплуатацииНаПериод) 
					И НЕ Строка.ТипЭксплуатацииНаПериод = ВидПускаПростой
					И (НЕ НеМенятьЗаполненныеВидыПускаНаПериод ИЛИ НЕ (ЗначениеЗаполнено(Строка.ВидПускаНаПериод) И НеМенятьЗаполненныеВидыПускаНаПериод)) Тогда
					
					Строка.ВидПускаНаПериод = ВидПускаНаПериод;
				КонецЕсли;
				
				Если ((ЗначениеЗаполнено(Строка.ВидЭксплуатацииНаПериод)
							И Строка.ТипЭксплуатацииНаПериод = ВидПускаПростой)
						ИЛИ ЗначениеЗаполнено(Строка.ВидЭксплуатации) 
							И Строка.ТипЭксплуатации = ВидПускаПростой)
					И (НЕ НеМенятьЗаполненныеПричиныПростоя ИЛИ НЕ (ЗначениеЗаполнено(Строка.ПричинаПростоя) И НеМенятьЗаполненныеПричиныПростоя)) Тогда
					
						Строка.ПричинаПростоя = ПричинаПростоя;
				КонецЕсли;
			Иначе
				Если ЗначениеЗаполнено(Строка.ВидЭксплуатации) И Строка.ТипЭксплуатации = ВидПускаПростой
					И (НЕ НеМенятьЗаполненныеПричиныПростоя ИЛИ НЕ (ЗначениеЗаполнено(Строка.ПричинаПростоя) И НеМенятьЗаполненныеПричиныПростоя)) Тогда
					
					Строка.ПричинаПростоя = ПричинаПростоя;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	МассивСтруктур = Новый Массив;
	КолонкиТЧ = "НомерСтроки, ДатаОкончания, ДатаНачала, ОбъектРемонта, ПричинаПростоя, ВидЭксплуатации, ВидПуска, ВидЭксплуатацииНаПериод, ВидПускаНаПериод, Примечание, ТипЭксплуатации, ТипЭксплуатацииНаПериод";
	
	Для каждого СтрокаТЧ Из ОбъектыРемонта Цикл
	
		СтруктураСтрокиТЧ = Новый Структура(КолонкиТЧ);
		ЗаполнитьЗначенияСвойств(СтруктураСтрокиТЧ, СтрокаТЧ);
		МассивСтруктур.Добавить(СтруктураСтрокиТЧ);
		
	КонецЦикла;
	Закрыть(МассивСтруктур);
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИзменениеРеквизитовФормы
&НаСервере
Процедура ЗаполнитьТекстДокумента(Ссылка)

	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Документ = НСтр("ru='Состояния объектов ремонта (Новый)'");
	Иначе
		Документ = Строка(Ссылка);
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура УстановитьЗначенияПоУмолчанию()

	ЗначенияФлаговНеизменности = Истина;
	
	НеМенятьЗаполненныеВидыПуска				= ЗначенияФлаговНеизменности;
	НеМенятьЗаполненныеВидыПускаНаПериод		= ЗначенияФлаговНеизменности;
	НеМенятьЗаполненныеВидыЭксплуатации			= ЗначенияФлаговНеизменности;
	НеМенятьЗаполненныеВидыЭксплуатацииНаПериод	= ЗначенияФлаговНеизменности;
	НеМенятьЗаполненныеЗначенияДат				= ЗначенияФлаговНеизменности;
	НеМенятьЗаполненныеПримечания				= ЗначенияФлаговНеизменности;
	НеМенятьЗаполненныеПричиныПростоя			= ЗначенияФлаговНеизменности;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗначенияФлажков(НовоеЗначение = Неопределено)

	Для каждого СтрокаТЧ Из ОбъектыРемонта Цикл
		СтрокаТЧ.Пометка = ?(НовоеЗначение = Неопределено, Не СтрокаТЧ.Пометка, НовоеЗначение);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОбъектовПоМассивуСтруктур(МассивСтруктурСтрок)
	
	Для Каждого СтруктураСтроки Из МассивСтруктурСтрок Цикл
		НС = ОбъектыРемонта.Добавить();
		ЗаполнитьЗначенияСвойств(НС, СтруктураСтроки);
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти

&НаСервереБезКонтекста
Функция ПолучитьТипЭксплуатацииДляВидаЭксплуатации(ВидЭксплуатацииСсылка)

	Возврат ВидЭксплуатацииСсылка.ТипЭксплуатации;

КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьИНаименованияКолонокОтВидаОперации()

	ВидНаПериод = ВидОперацииДокумента = ПредопределенноеЗначение("Перечисление.торо_ВидыОперацийОтклоненияВРаботеОборудования.ВидЭксплуатацииНаПериод");
	ЗаголовокДатыОкончания = ?(ВидНаПериод,НСтр("ru = 'Окончание периода'"),НСтр("ru = 'Дата изменения состояния'"));
	
	Элементы.ДатаНачала.Видимость												= ВидНаПериод;
	Элементы.ДатаОкончания.Заголовок											= ЗаголовокДатыОкончания;
	Элементы.ВидЭксплуатацииНаПериод.Видимость									= ВидНаПериод;
	Элементы.НеМенятьЗаполненныеВидыЭксплуатацииНаПериод.Видимость				= ВидНаПериод;
	Элементы.ВидПускаНаПериод.Видимость											= ВидНаПериод;
	Элементы.НеМенятьЗаполненныеВидыПускаНаПериод.Видимость						= ВидНаПериод;
	
	Элементы.ОбъектыРемонтаДатаНачала.Видимость									= ВидНаПериод;
	Элементы.ОбъектыРемонтаДатаНачала.АвтоОтметкаНезаполненного					= ВидНаПериод;
	Элементы.ОбъектыРемонтаВидЭксплуатацииНаПериод.Видимость					= ВидНаПериод;
	Элементы.ОбъектыРемонтаВидЭксплуатацииНаПериод.АвтоОтметкаНезаполненного	= ВидНаПериод;
	Элементы.ОбъектыРемонтаДатаОкончания.Заголовок								= ЗаголовокДатыОкончания;
	
КонецПроцедуры

#КонецОбласти

#Область ОператорыОсновнойПрограммы

#Если НаКлиенте Тогда 
ВидПускаПростой = ПредопределенноеЗначение("Перечисление.торо_ТипЭксплуатации.Простой");
ВидТипЭксплуатацияНаПериод = ПредопределенноеЗначение("Перечисление.торо_ВидыОперацийОтклоненияВРаботеОборудования.ВидЭксплуатацииНаПериод");
#КонецЕсли

#КонецОбласти

