#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс
// Функция предназначена для обновления доступности документа для редактирования.
//
// Параметры:
//	Ссылка			- ДокументСсылка - ссылка на документ, 
//	ВидОперации		- ПеречислениеСсылка - вид операции документа,
//	ПланРемонтов	- ТаблицаЗначений - план ремонтов документа.
//
// Возвращаемое значение: 
//		Массив - массив доступных для корректировки строк.
Функция ОбновитьДоступностьДляРедактирования(Ссылка, ВидОперации, ПланРемонтов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаID.ID
	               |ПОМЕСТИТЬ ТаблицаID
	               |ИЗ
	               |	&ТаблицаID КАК ТаблицаID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_СоответствиеКорректировокДокументамППР.Корректировка
	               |ПОМЕСТИТЬ торо_СоответствиеКорректировокДокументамППР
	               |ИЗ
	               |	РегистрСведений.торо_СоответствиеКорректировокДокументамППР КАК торо_СоответствиеКорректировокДокументамППР
	               |ГДЕ
	               |	торо_СоответствиеКорректировокДокументамППР.Корректируемый = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID
	               |ПОМЕСТИТЬ РемонтыКорректировок
	               |ИЗ
	               |	Документ.торо_ПланГрафикРемонта.ПланРемонтов КАК торо_ПланГрафикРемонтаПланРемонтов
	               |ГДЕ
	               |	торо_ПланГрафикРемонтаПланРемонтов.Ссылка В
	               |			(ВЫБРАТЬ
	               |				торо_СоответствиеКорректировокДокументамППР.Корректировка
	               |			ИЗ
	               |				торо_СоответствиеКорректировокДокументамППР КАК торо_СоответствиеКорректировокДокументамППР)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	торо_ОстановочныеРемонты.IDЗависимого
	               |ИЗ
	               |	РегистрСведений.торо_ОстановочныеРемонты КАК торо_ОстановочныеРемонты
	               |ГДЕ
	               |	торо_ОстановочныеРемонты.Регистратор В
	               |			(ВЫБРАТЬ
	               |				торо_СоответствиеКорректировокДокументамППР.Корректировка
	               |			ИЗ
	               |				торо_СоответствиеКорректировокДокументамППР КАК торо_СоответствиеКорректировокДокументамППР)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаID.ID КАК ID
	               |ПОМЕСТИТЬ РемонтыСКорректировкой
	               |ИЗ
	               |	ТаблицаID КАК ТаблицаID
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РемонтыКорректировок КАК РемонтыКорректировок
	               |		ПО ТаблицаID.ID = РемонтыКорректировок.ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаID.ID,
	               |	МИНИМУМ(ВЫБОР
	               |			КОГДА НЕ(ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_ЗаявкаНаРемонт)
	               |						ИЛИ ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_НарядНаВыполнениеРемонтныхРабот)
	               |						ИЛИ ТИПЗНАЧЕНИЯ(торо_Ремонты.Регистратор) = ТИП(Документ.торо_АктОВыполненииЭтапаРабот)
	               |						ИЛИ НЕ РемонтыСКорректировкой.ID ЕСТЬ NULL )
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА торо_Ремонты.Регистратор ЕСТЬ NULL 
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ ЛОЖЬ
	               |				КОНЕЦ
	               |		КОНЕЦ) КАК ДоступенДляРедактирования
	               |ИЗ
	               |	ТаблицаID КАК ТаблицаID
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК торо_Ремонты
	               |		ПО ТаблицаID.ID = торо_Ремонты.ID
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РемонтыСКорректировкой КАК РемонтыСКорректировкой
	               |		ПО (РемонтыСКорректировкой.ID = торо_Ремонты.ID)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаID.ID";
	
	Запрос.УстановитьПараметр("ТаблицаID", ПланРемонтов.Скопировать(,"ID"));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
	
	МассивДоступныхДляКорректировкиСтрок = Запрос.Выполнить().Выгрузить();
	
	Возврат МассивДоступныхДляКорректировкиСтрок;
КонецФункции

// Функция - Заполнить доступность для редактирования полная.
//
// Параметры:
//  парамПланРемонтов							 - ТаблицаЗначений - все строки плана ремонтов;
//  парамМассивДоступныхДляКорректировкиСтрок	 - ТаблицаЗначений - Доступные для редактирования строки.
// Возвращаемое значение:
//  ТаблицаЗначений - результат запроса с указанием доступных для редактирования ремонтов.
Функция ЗаполнитьДоступностьДляРедактированияПолная(парамПланРемонтов,парамМассивДоступныхДляКорректировкиСтрок) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	торо_ПланГрафикРемонтаПланРемонтов.ID,
	|	торо_ПланГрафикРемонтаПланРемонтов.ВидРемонтныхРабот,
	|	торо_ПланГрафикРемонтаПланРемонтов.ДатаКонСт КАК ДатаКон,
	|	торо_ПланГрафикРемонтаПланРемонтов.ДатаНачСт КАК ДатаНач,
	|	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот,
	|	торо_ПланГрафикРемонтаПланРемонтов.СпособВыполнения,
	|	торо_ПланГрафикРемонтаПланРемонтов.Отменен,
	|	торо_ПланГрафикРемонтаПланРемонтов.Замещен,
	|	торо_ПланГрафикРемонтаПланРемонтов.ЗамещенСт,
	|	торо_ПланГрафикРемонтаПланРемонтов.ID_базы_расчета,
	|	торо_ПланГрафикРемонтаПланРемонтов.ID_замещающего,
	|	торо_ПланГрафикРемонтаПланРемонтов.Исполнитель,
	|	торо_ПланГрафикРемонтаПланРемонтов.Перенесенный
	|ПОМЕСТИТЬ торо_ПланГрафикРемонтаПланРемонтов
	|ИЗ
	|	&ПланРемонтов КАК торо_ПланГрафикРемонтаПланРемонтов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДоступенДляРедакторования.ID,
	|	ТаблицаДоступенДляРедакторования.ДоступенДляРедактирования
	|ПОМЕСТИТЬ ТаблицаДоступенДляРедакторования
	|ИЗ
	|	&ТаблицаДоступенДляРедакторования КАК ТаблицаДоступенДляРедакторования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ПланГрафикРемонтаПланРемонтов.ID,
	|	торо_ПланГрафикРемонтаПланРемонтов.ВидРемонтныхРабот,
	|	торо_ПланГрафикРемонтаПланРемонтов.ДатаКон,
	|	торо_ПланГрафикРемонтаПланРемонтов.ДатаНач,
	|	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот,
	|	торо_ПланГрафикРемонтаПланРемонтов.СпособВыполнения,
	|	торо_ПланГрафикРемонтаПланРемонтов.Отменен,
	|	торо_ПланГрафикРемонтаПланРемонтов.Замещен,
	|	торо_ПланГрафикРемонтаПланРемонтов.ЗамещенСт,
	|	торо_ПланГрафикРемонтаПланРемонтов.ID_базы_расчета,
	|	торо_ПланГрафикРемонтаПланРемонтов.ID_замещающего,
	|	торо_ПланГрафикРемонтаПланРемонтов.Исполнитель,
	|	торо_ПланГрафикРемонтаПланРемонтов.Перенесенный,
	|	ЕстьNULL(ТаблицаДоступенДляРедакторования.ДоступенДляРедактирования,Истина) КАК ДоступенДляРедактирования
	|ИЗ
	|	торо_ПланГрафикРемонтаПланРемонтов КАК торо_ПланГрафикРемонтаПланРемонтов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДоступенДляРедакторования КАК ТаблицаДоступенДляРедакторования
	|		ПО торо_ПланГрафикРемонтаПланРемонтов.ID = ТаблицаДоступенДляРедакторования.ID";
	
	Запрос.УстановитьПараметр("ПланРемонтов",парамПланРемонтов);
	Запрос.УстановитьПараметр("ТаблицаДоступенДляРедакторования",парамМассивДоступныхДляКорректировкиСтрок);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Функция предназначена для рассчета стоимости ремонтов.
//
// Параметры:
//		ПланРемонтов							- ТаблицаЗначений - план ремонтов документа,
//		Ссылка									- ДокументССылка - ссылка на документ,
//		МассивДоступныхДляКорректировкиСтрок	- Массив - массив доступных для корректировки строк.
//		ТекущаяСтрока - ДанныеФормыЭлементКоллеции, Структура - текущая строка плана ремонтов.
//
// Возвращаемое значение: 
//		ТаблицаЗначений - план ремонтов с рассчитанной стоимостью.
Функция РассчитатьСтоимостиРемонтов(ПланРемонтов, Ссылка, МассивДоступныхДляКорректировкиСтрок, ТекущаяСтрока = Неопределено) Экспорт
	
	ВремТаб = Новый  МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВремТаб;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ПланГрафикРемонтаПланРемонтов.ID,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ВидРемонтныхРабот,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ДатаНач КАК Период,
	               |	торо_ПланГрафикРемонтаПланРемонтов.Исполнитель,
	               |	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот КАК Объект,
	               |	торо_ПланГрафикРемонтаПланРемонтов.СпособВыполнения
	               |ПОМЕСТИТЬ ТЧПланРемонтов
	               |ИЗ
	               |	&ПланРемонтов КАК торо_ПланГрафикРемонтаПланРемонтов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МассивДоступныхДляКорректировкиСтрок.ID,
	               |	МассивДоступныхДляКорректировкиСтрок.ДоступенДляРедактирования
	               |ПОМЕСТИТЬ МассивДоступныхДляКорректировкиСтрок
	               |ИЗ
	               |	&МассивДоступныхДляКорректировкиСтрок КАК МассивДоступныхДляКорректировкиСтрок
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЧПланРемонтов.ID,
	               |	ТЧПланРемонтов.ВидРемонтныхРабот,
	               |	ТЧПланРемонтов.Период,
	               |	ТЧПланРемонтов.Исполнитель,
	               |	ТЧПланРемонтов.Объект,
	               |	ТЧПланРемонтов.СпособВыполнения
	               |ПОМЕСТИТЬ ТабДанные
	               |ИЗ
	               |	ТЧПланРемонтов КАК ТЧПланРемонтов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МассивДоступныхДляКорректировкиСтрок КАК МассивДоступныхДляКорректировкиСтрок
	               |		ПО ТЧПланРемонтов.ID = МассивДоступныхДляКорректировкиСтрок.ID
	               |			И (МассивДоступныхДляКорректировкиСтрок.ДоступенДляРедактирования)
	               |ГДЕ
	               |	ТЧПланРемонтов.СпособВыполнения = ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Хозспособ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабДанные.Период КАК ДатаНач,
	               |	КурсыВалют.Период,
	               |	КурсыВалют.Кратность,
	               |	КурсыВалют.Курс,
	               |	КурсыВалют.Валюта
	               |ПОМЕСТИТЬ ТабДатВалют
	               |ИЗ
	               |	ТабДанные КАК ТабДанные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	               |		ПО (КурсыВалют.Период <= ТабДанные.Период)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабДатВалют.ДатаНач,
	               |	ТабДатВалют.Валюта,
	               |	МАКСИМУМ(ТабДатВалют.Период) КАК Период
	               |ПОМЕСТИТЬ ТабМаксДатВалют
	               |ИЗ
	               |	ТабДатВалют КАК ТабДатВалют
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабДатВалют.ДатаНач,
	               |	ТабДатВалют.Валюта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ТабДатВалют.ДатаНач,
	               |	ТабДатВалют.Курс,
	               |	ТабДатВалют.Кратность,
	               |	ТабДатВалют.Валюта,
	               |	ТабДатВалют.Период
	               |ПОМЕСТИТЬ ТабКурсовВалют
	               |ИЗ
	               |	ТабДатВалют КАК ТабДатВалют
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабМаксДатВалют КАК ТабМаксДатВалют
	               |		ПО ТабДатВалют.ДатаНач = ТабМаксДатВалют.ДатаНач
	               |			И ТабДатВалют.Период = ТабМаксДатВалют.Период
	               |			И ТабДатВалют.Валюта = ТабМаксДатВалют.Валюта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаРемРабот.Период КАК ДатаНач,
	               |	Квалификации.Период,
	               |	Квалификации.Стоимость,
	               |	Квалификации.Валюта,
	               |	Квалификации.Квалификация
	               |ПОМЕСТИТЬ ТабДатКвалификаций
	               |ИЗ
	               |	ТабДанные КАК ТаблицаРемРабот
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СтоимостьЧасаКвалификации КАК Квалификации
	               |		ПО (Квалификации.Период <= ТаблицаРемРабот.Период)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабДатКвалификаций.ДатаНач,
	               |	ТабДатКвалификаций.Квалификация,
	               |	МАКСИМУМ(ТабДатКвалификаций.Период) КАК Период
	               |ПОМЕСТИТЬ ТабМаксДатКвалификаций
	               |ИЗ
	               |	ТабДатКвалификаций КАК ТабДатКвалификаций
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабДатКвалификаций.ДатаНач,
	               |	ТабДатКвалификаций.Квалификация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ТабДатКвалификаций.ДатаНач,
	               |	ТабДатКвалификаций.Валюта,
	               |	ТабДатКвалификаций.Стоимость,
	               |	ТабДатКвалификаций.Квалификация
	               |ПОМЕСТИТЬ ТабСтоимостейКвалификаций
	               |ИЗ
	               |	ТабДатКвалификаций КАК ТабДатКвалификаций
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабМаксДатКвалификаций КАК ТабМаксДатКвалификаций
	               |		ПО ТабДатКвалификаций.ДатаНач = ТабМаксДатКвалификаций.ДатаНач
	               |			И ТабДатКвалификаций.Период = ТабМаксДатКвалификаций.Период
	               |			И ТабДатКвалификаций.Квалификация = ТабМаксДатКвалификаций.Квалификация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	ТабДанные.Объект КАК ОбъектРемонтныхРабот,
	               |	ТабДанные.ВидРемонтныхРабот КАК ВидРемонта,
	               |	ТабДанные.Период,
	               |	ТабДанные.ID,
	               |	торо_НормативныеРемонтыОборудования.ГрафикРемонтныхРабот,
	               |	торо_ВерсииТехКартСрезПоследних.ТехКарта КАК Ремонт
	               |ПОМЕСТИТЬ НормативныеРемонты
	               |ИЗ
	               |	ТабДанные КАК ТабДанные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
	               |		ПО ТабДанные.Объект = торо_НормативныеРемонтыОборудования.ОбъектРемонта
	               |			И ТабДанные.ВидРемонтныхРабот = торо_НормативныеРемонтыОборудования.ВидРемонта
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт.СрезПоследних КАК торо_ВерсииТехКартСрезПоследних
	               |		ПО (торо_НормативныеРемонтыОборудования.НормативныйРемонт = торо_ВерсииТехКартСрезПоследних.ИдентификаторТехКарты)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НормативныеРемонты.Ремонт,
	               |	НормативныеРемонты.ОбъектРемонтныхРабот,
	               |	НормативныеРемонты.ВидРемонта,
	               |	НормативныеРемонты.Период,
	               |	НормативныеРемонты.ID,
	               |	торо_Состав.Состав КАК ТехКарта,
	               |	торо_Состав.Количество КАК Количество
	               |ПОМЕСТИТЬ НормативныеРемонты_техкарты
	               |ИЗ
	               |	НормативныеРемонты КАК НормативныеРемонты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_СоставИерархическихТехКартРемонтов КАК торо_Состав
	               |		ПО НормативныеРемонты.Ремонт = торо_Состав.ТехКарта
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НормативныеРемонты.Ремонт,
	               |	НормативныеРемонты.ОбъектРемонтныхРабот,
	               |	НормативныеРемонты.ВидРемонта,
	               |	НормативныеРемонты.Период,
	               |	НормативныеРемонты.ID,
	               |	НормативныеРемонты.Ремонт,
	               |	1
	               |ИЗ
	               |	НормативныеРемонты КАК НормативныеРемонты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	НормативныеРемонты.Ремонт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НормативныеРемонты.Период КАК Период,
	               |	торо_РемонтыМатериальныеЗатраты.Номенклатура КАК Номенклатура,
	               |	торо_РемонтыМатериальныеЗатраты.Характеристика КАК Характеристика,
	               |	торо_РемонтыМатериальныеЗатраты.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	СУММА(торо_РемонтыМатериальныеЗатраты.КоличествоНаЕдиницу) КАК Количество,
	               |	НормативныеРемонты.ОбъектРемонтныхРабот,
	               |	НормативныеРемонты.ВидРемонта,
	               |	НормативныеРемонты.ID
	               |ПОМЕСТИТЬ НоменклатураКоличество
	               |ИЗ
	               |	Справочник.торо_ТехКарты.МатериальныеЗатраты КАК торо_РемонтыМатериальныеЗатраты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НормативныеРемонты_техкарты КАК НормативныеРемонты
	               |		ПО торо_РемонтыМатериальныеЗатраты.Ссылка = НормативныеРемонты.ТехКарта
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НормативныеРемонты.Период,
	               |	торо_РемонтыМатериальныеЗатраты.Номенклатура,
	               |	торо_РемонтыМатериальныеЗатраты.Характеристика,
	               |	торо_РемонтыМатериальныеЗатраты.ЕдиницаИзмерения,
	               |	НормативныеРемонты.ОбъектРемонтныхРабот,
	               |	НормативныеРемонты.ВидРемонта,
	               |	НормативныеРемонты.ID
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НормативныеРемонты.Период,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Номенклатура,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Характеристика,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Номенклатура.ЕдиницаИзмерения,
	               |	СУММА(торо_НормыЗапчастейНаОбъектыРемонта.Количество),
	               |	НормативныеРемонты.ОбъектРемонтныхРабот,
	               |	НормативныеРемонты.ВидРемонта,
	               |	НормативныеРемонты.ID
	               |ИЗ
	               |	НормативныеРемонты КАК НормативныеРемонты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормыЗапчастейНаОбъектыРемонта КАК торо_НормыЗапчастейНаОбъектыРемонта
	               |		ПО НормативныеРемонты.ОбъектРемонтныхРабот = торо_НормыЗапчастейНаОбъектыРемонта.ОбъектРемонта
	               |			И НормативныеРемонты.ВидРемонта = торо_НормыЗапчастейНаОбъектыРемонта.ВидРемонта
	               |			И (торо_НормыЗапчастейНаОбъектыРемонта.Приоритет)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Номенклатура,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Характеристика,
	               |	НормативныеРемонты.ОбъектРемонтныхРабот,
	               |	НормативныеРемонты.ВидРемонта,
	               |	НормативныеРемонты.Период,
	               |	торо_НормыЗапчастейНаОбъектыРемонта.Номенклатура.ЕдиницаИзмерения,
	               |	НормативныеРемонты.ID
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Период,
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НоменклатураКоличество.Период,
	               |	НоменклатураКоличество.Номенклатура КАК Номенклатура,
	               |	НоменклатураКоличество.Характеристика КАК Характеристика,
	               |	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ПериодЦена,
	               |	ЦеныНоменклатуры.ВидЦены КАК ТипЦен
	               |ПОМЕСТИТЬ НоменклатураПериодЦен
	               |ИЗ
	               |	НоменклатураКоличество КАК НоменклатураКоличество
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	               |			ПО ЦеныНоменклатуры.ВидЦены = Константы.торо_ТипЦеныДляРасчетаСебестоимостиРемонта
	               |		ПО НоменклатураКоличество.Номенклатура = ЦеныНоменклатуры.Номенклатура
	               |			И НоменклатураКоличество.Характеристика = ЦеныНоменклатуры.Характеристика
	               |			И НоменклатураКоличество.Период >= ЦеныНоменклатуры.Период
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НоменклатураКоличество.Период,
	               |	НоменклатураКоличество.Номенклатура,
	               |	НоменклатураКоличество.Характеристика,
	               |	ЦеныНоменклатуры.ВидЦены
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	ПериодЦена,
	               |	ТипЦен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(НоменклатураКоличество.Количество * ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ЕСТЬNULL(ТабКурсовВалют.Курс, 0)) КАК Стоимость,
	               |	НоменклатураКоличество.ID
	               |ПОМЕСТИТЬ ИтоговаяТаб
	               |ИЗ
	               |	НоменклатураКоличество КАК НоменклатураКоличество
	               |		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураПериодЦен КАК НоменклатураПериодЦен
	               |		ПО НоменклатураКоличество.Период = НоменклатураПериодЦен.Период
	               |			И НоменклатураКоличество.Номенклатура = НоменклатураПериодЦен.Номенклатура
	               |			И НоменклатураКоличество.Характеристика = НоменклатураПериодЦен.Характеристика
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |		ПО (НоменклатураПериодЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура)
	               |			И (НоменклатураПериодЦен.Характеристика = ЦеныНоменклатуры.Характеристика)
	               |			И (НоменклатураПериодЦен.ПериодЦена = ЦеныНоменклатуры.Период)
	               |			И (НоменклатураПериодЦен.ТипЦен = ЦеныНоменклатуры.ВидЦены)
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабКурсовВалют КАК ТабКурсовВалют
	               |		ПО (ЦеныНоменклатуры.Валюта = ТабКурсовВалют.Валюта)
	               |			И НоменклатураКоличество.Период = ТабКурсовВалют.ДатаНач
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НоменклатураКоличество.ID
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	СУММА(ЕСТЬNULL(ТабСтоимостейКвалификаций.Стоимость, 0) * ЕСТЬNULL(ТабКурсовВалют.Курс, 0) / ЕСТЬNULL(ТабКурсовВалют.Кратность, 1) * торо_РемонтыТрудовыеЗатраты.ВремяРаботы / 3600 * торо_РемонтыТрудовыеЗатраты.Количество * НормативныеРемонты.Количество),
	               |	НормативныеРемонты.ID
	               |ИЗ
	               |	Справочник.торо_ТехКарты.ТрудовыеЗатраты КАК торо_РемонтыТрудовыеЗатраты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НормативныеРемонты_техкарты КАК НормативныеРемонты
	               |		ПО торо_РемонтыТрудовыеЗатраты.Ссылка = НормативныеРемонты.ТехКарта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТабСтоимостейКвалификаций КАК ТабСтоимостейКвалификаций
	               |		ПО торо_РемонтыТрудовыеЗатраты.Квалификация = ТабСтоимостейКвалификаций.Квалификация
	               |			И (НормативныеРемонты.Период = ТабСтоимостейКвалификаций.ДатаНач)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТабКурсовВалют КАК ТабКурсовВалют
	               |		ПО (ТабСтоимостейКвалификаций.Валюта = ТабКурсовВалют.Валюта)
	               |			И (ТабКурсовВалют.ДатаНач = ТабСтоимостейКвалификаций.ДатаНач)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	торо_РемонтыТрудовыеЗатраты.Квалификация,
	               |	НормативныеРемонты.ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ИтоговаяТаб.ID,
	               |	СУММА(ИтоговаяТаб.Стоимость) КАК Стоимость
	               |ИЗ
	               |	ИтоговаяТаб КАК ИтоговаяТаб
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ИтоговаяТаб.ID";
	
	
	Если ТекущаяСтрока = Неопределено Тогда
		Запрос.УстановитьПараметр("ПланРемонтов",ПланРемонтов);
		Запрос.УстановитьПараметр("МассивДоступныхДляКорректировкиСтрок",МассивДоступныхДляКорректировкиСтрок);
	Иначе
		Запрос.УстановитьПараметр("ПланРемонтов",ПланРемонтов.Скопировать(Новый Структура("ID", ТекущаяСтрока.ID)));
		Запрос.УстановитьПараметр("МассивДоступныхДляКорректировкиСтрок",МассивДоступныхДляКорректировкиСтрок.Скопировать(Новый Структура("ID", ТекущаяСтрока.ID)));
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	// Очистка существующих стоимостей для работ выполняемых подразделениями.
	// Необходимо, если стоимость стала равна 0 и если для подрядчиков уже есть стоимость.
	Если ТекущаяСтрока = Неопределено Тогда
		МассивДоступныеДляРедактированияСтроки = МассивДоступныхДляКорректировкиСтрок.НайтиСтроки(Новый Структура("ДоступенДляРедактирования",Истина));
		Для Каждого Строка Из МассивДоступныеДляРедактированияСтроки Цикл
			СтрокаТЧ = ПланРемонтов.Найти(Строка.ID, "ID");
			Если СтрокаТЧ <> Неопределено Тогда
				СтрокаТЧ.СуммаРемонта = 0;
			КонецЕсли;
		КонецЦикла;
	Иначе
		СтрокаТЧ = ПланРемонтов.Найти(ТекущаяСтрока.ID, "ID");
		Если СтрокаТЧ <> Неопределено Тогда
			СтрокаТЧ.СуммаРемонта = 0;
		КонецЕсли;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		СтрокаТЧ = ПланРемонтов.Найти(Выборка.ID, "ID");
		Если СтрокаТЧ <> Неопределено тогда
			
			СтрокаТЧ.СуммаРемонта = Выборка.Стоимость;
			
		КонецЕсли;
	КонецЦикла;
	
	ПеревестиСтоимостиВТекущие(ПланРемонтов, Ссылка, ТекущаяСтрока);
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат ПланРемонтов;
		
	Иначе
		
		СтрокаТЧ = ПланРемонтов.Найти(ТекущаяСтрока.ID, "ID");
		Если СтрокаТЧ <> Неопределено Тогда
			Возврат СтрокаТЧ.СуммаРемонта;
		Иначе 
			Возврат 0;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ПланРемонтов;
	
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ПеревестиСтоимостиВТекущие(ПланРемонтов, Ссылка, ТекущаяСтрока = Неопределено) 
	
	МассивФиалов = Новый Массив;
	МассивПодразделений = Новый Массив;
	МассивНаправлений = Новый Массив;
	МассивВидОборудования = Новый Массив;
	МассивОбъектов = Новый Массив;
	МассивВидовРемонта = Новый Массив;
	
	Если ТекущаяСтрока <> Неопределено Тогда
			
			РезультатЗапроса = ПолучитьЗначенияКоэффициентов(Ссылка, ТекущаяСтрока.ДатаНач, ?(ТекущаяСтрока.ОбъектРемонтныхРабот.ВнешнийОбъект, Справочники.Организации.ПустаяСсылка(), ТекущаяСтрока.ОбъектРемонтныхРабот.Организация),
			?(ТекущаяСтрока.ОбъектРемонтныхРабот.ВнешнийОбъект, Справочники.СтруктураПредприятия.ПустаяСсылка(), ТекущаяСтрока.ОбъектРемонтныхРабот.Подразделение),
			ТекущаяСтрока.ОбъектРемонтныхРабот.Направление,
			ТекущаяСтрока.ОбъектРемонтныхРабот,
			ТекущаяСтрока.ВидРемонтныхРабот);
			
			
			Выборка = РезультатЗапроса.выбрать();
			
			Строка = ПланРемонтов.Найти(ТекущаяСтрока.ID, "ID");
			Если Строка <> Неопределено Тогда
				Сумма = Строка.СуммаРемонта;
				ИтогК = 1;
				
				Пока Выборка.Следующий() Цикл
					ИтогК = ИтогК * Выборка.ПоказательКоэффициента;
				КонецЦикла;
				
				Строка.СуммаРемонта = Строка.СуммаРемонта * ИтогК;
			КонецЕсли;
		
	Иначе
		
		ТабОбхода = ПланРемонтов.Скопировать(,"ВидРемонтныхРабот, ОбъектРемонтныхРабот");
		ТабОбхода.Свернуть("ВидРемонтныхРабот, ОбъектРемонтныхРабот");
		
		РезультатЗапроса = ПолучитьЗначенияКоэффициентовТаб(ТабОбхода,Ссылка.ДатаПланирования);
		
		
		ВыборкаОР = РезультатЗапроса.выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаОР.Следующий() Цикл
			
			ВыборкаВР = ВыборкаОР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаВР.Следующий() Цикл
				
				Выборка = ВыборкаВР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				ИтогК = 1;
				
				Пока Выборка.Следующий() Цикл
					ИтогК = ИтогК * Выборка.ПоказательКоэффициента;
				КонецЦикла;
				
				СтруктураПоиска = новый Структура("ВидРемонтныхРабот, ОбъектРемонтныхРабот",ВыборкаВР.ВидРемонтныхРабот,ВыборкаВР.ОбъектРемонтныхРабот);
				
				МассивСтрок = ПланРемонтов.НайтиСтроки(СтруктураПоиска);
				
				Для Каждого ТекЭлемент из МассивСтрок Цикл
					
					ТекЭлемент.СуммаРемонта = ТекЭлемент.СуммаРемонта * ИтогК;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьЗначенияКоэффициентов(Ссылка,ДатаРемонта,МассивФиалов,МассивПодразделений,МассивНаправлений,МассивОбъектов,МассивВидовРемонта)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация,
	|	торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение,
	|	торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления,
	|	торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта,
	|	торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов,
	|	торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Коэффициент,
	|	торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ПоказательКоэффициента,
	|	ВЫБОР
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта <> ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 0
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта <> ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 1
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 2
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 3
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И (торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|					ИЛИ торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|			ТОГДА 4
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 5
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И (торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|					ИЛИ торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|			ТОГДА 6
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 7
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 8
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 9
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 10
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления = ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 11
	|		ИНАЧЕ 12
	|	КОНЕЦ КАК Приоритет
	|ПОМЕСТИТЬ ТабПараметров
	|ИЗ
	|	РегистрСведений.торо_КоэффициентыПереводаБазовыхЦенВТекущие.СрезПоследних(
	|			&Дата,
	|			КлассификаторРемонтов В (&КлассификаторРемонтов, ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка))
	|				И Направления В (&Направления, ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка))
	|				И ОбъектРемонта В (&ОбъектРемонта, ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка))
	|				И Подразделение В (&Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|				И Организация В (&Филиал, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))) КАК торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТабПараметров.Приоритет) КАК Приоритет,
	|	ТабПараметров.Коэффициент
	|ПОМЕСТИТЬ МинимальныеПриоритеты
	|ИЗ
	|	ТабПараметров КАК ТабПараметров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабПараметров.Коэффициент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабПараметров.Коэффициент,
	|	ЕСТЬNULL(ТабПараметров.ПоказательКоэффициента, 1) КАК ПоказательКоэффициента,
	|	МинимальныеПриоритеты.Приоритет
	|ИЗ
	|	МинимальныеПриоритеты КАК МинимальныеПриоритеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабПараметров КАК ТабПараметров
	|		ПО МинимальныеПриоритеты.Приоритет = ТабПараметров.Приоритет
	|			И МинимальныеПриоритеты.Коэффициент = ТабПараметров.Коэффициент";
	Запрос.УстановитьПараметр("Дата",Ссылка.ДатаПланирования);	 // Дата
	Запрос.УстановитьПараметр("КлассификаторРемонтов",МассивВидовРемонта);	 // Виды обслуживания основных средств
	Запрос.УстановитьПараметр("Направления",МассивНаправлений);	 // Направления объектов ремонтных работ
	Запрос.УстановитьПараметр("ОбъектРемонта",МассивОбъектов);	 // Объекты ремонта
	Запрос.УстановитьПараметр("Подразделение",МассивПодразделений);	 // Подразделение
	Запрос.УстановитьПараметр("Филиал",МассивФиалов);	 // Организация
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ПолучитьЗначенияКоэффициентовТаб(ТабДанных,ДатаПланирования)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ * 
	|ПОМЕСТИТЬ Таб 
	|ИЗ 
	|	&Таб КАК Таб
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Таб.ОбъектРемонтныхРабот.ВнешнийОбъект
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		ИНАЧЕ Таб.ОбъектРемонтныхРабот.Организация
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА Таб.ОбъектРемонтныхРабот.ВнешнийОбъект
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		ИНАЧЕ Таб.ОбъектРемонтныхРабот.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	Таб.ОбъектРемонтныхРабот.Направление КАК Направление,
	|	Таб.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	|	Таб.ВидРемонтныхРабот КАК ВидРемонтныхРабот
	|ПОМЕСТИТЬ ТабДанных
	|ИЗ
	|	Таб КАК Таб
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение,
	|	Организация,
	|	Направление,
	|	ОбъектРемонтныхРабот,
	|	ВидРемонтныхРабот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДанных.ОбъектРемонтныхРабот,
	|	ТабДанных.ВидРемонтныхРабот,
	|	торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Коэффициент,
	|	торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ПоказательКоэффициента,
	|	ВЫБОР
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта <> ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 0
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта <> ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 1
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 2
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 3
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И (торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|					ИЛИ торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|			ТОГДА 4
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 5
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И (торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|					ИЛИ торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|			ТОГДА 6
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 7
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов <> ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 8
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 9
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления <> ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 10
	|		КОГДА торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов = ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления = ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|				И торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА 11
	|		ИНАЧЕ 12
	|	КОНЕЦ КАК Приоритет
	|ПОМЕСТИТЬ ТабПараметров
	|ИЗ
	|	РегистрСведений.торо_КоэффициентыПереводаБазовыхЦенВТекущие.СрезПоследних(&Дата, ) КАК торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабДанных КАК ТабДанных
	|		ПО (торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.КлассификаторРемонтов В (ТабДанных.ВидРемонтныхРабот, ЗНАЧЕНИЕ(Справочник.торо_ВидыРемонтов.ПустаяСсылка)))
	|			И (торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Направления В (ТабДанных.Направление, ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)))
	|			И (торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.ОбъектРемонта В (ТабДанных.ОбъектРемонтныхРабот, ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)))
	|			И (торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Подразделение В (ТабДанных.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)))
	|			И (торо_КоэффициентыПереводаБазовыхЦенВТекущиеСрезПоследних.Организация В (ТабДанных.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТабПараметров.Приоритет) КАК Приоритет,
	|	ТабПараметров.Коэффициент,
	|	ТабПараметров.ОбъектРемонтныхРабот,
	|	ТабПараметров.ВидРемонтныхРабот
	|ПОМЕСТИТЬ МинимальныеПриоритеты
	|ИЗ
	|	ТабПараметров КАК ТабПараметров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабПараметров.Коэффициент,
	|	ТабПараметров.ОбъектРемонтныхРабот,
	|	ТабПараметров.ВидРемонтныхРабот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабПараметров.ОбъектРемонтныхРабот КАК ОбъектРемонтныхРабот,
	|	ТабПараметров.ВидРемонтныхРабот КАК ВидРемонтныхРабот,
	|	ТабПараметров.Коэффициент,
	|	ЕСТЬNULL(ТабПараметров.ПоказательКоэффициента, 1) КАК ПоказательКоэффициента,
	|	МинимальныеПриоритеты.Приоритет
	|ИЗ
	|	МинимальныеПриоритеты КАК МинимальныеПриоритеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабПараметров КАК ТабПараметров
	|		ПО МинимальныеПриоритеты.Приоритет = ТабПараметров.Приоритет
	|			И МинимальныеПриоритеты.Коэффициент = ТабПараметров.Коэффициент
	|			И МинимальныеПриоритеты.ОбъектРемонтныхРабот = ТабПараметров.ОбъектРемонтныхРабот
	|			И МинимальныеПриоритеты.ВидРемонтныхРабот = ТабПараметров.ВидРемонтныхРабот
	|ИТОГИ ПО
	|	ОбъектРемонтныхРабот,
	|	ВидРемонтныхРабот";
	
	Запрос.УстановитьПараметр("Дата",ДатаПланирования);
	Запрос.УстановитьПараметр("Таб",ТабДанных);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// План-график ремонта
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_ПланГрафикРемонта";
	КомандаПечати.Идентификатор = "МакетПланаРемонтовНаПериод";
	КомандаПечати.Представление = НСтр("ru = 'План-график ремонта'");
	КомандаПечати.Обработчик = "торо_Печать.ОбработатьКомандуПечатиППР";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Журнал ремонтов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_ПланГрафикРемонта";
	КомандаПечати.Идентификатор = "ЖурналЗапланированныхРемонтов";
	КомандаПечати.Представление = НСтр("ru = 'Журнал ремонтов'");
	КомандаПечати.Обработчик = "торо_Печать.ОткрытьЖурналРемонтовППР";
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетПланаРемонтовНаПериод") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"МакетПланаРемонтовНаПериод", 
		"План-график ППР", 
		ПечатьПланГрафикППР(МассивОбъектов, ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры

// Процедура вывода на экран печатной формы документа
// торо_ПланГрафикРемонта.
//  
Функция ПечатьПланГрафикППР(МассивОбъектов, ПараметрыПечати)
	
	ПланГрафикРемонта=ПараметрыПечати.ДокППР;
	ПериодКон=ПараметрыПечати.Параметры.ДатаКонца;
	ПериодНач=ПараметрыПечати.Параметры.ДатаНачала;
	ИнтервалРазбиенияПереданный=ПараметрыПечати.Параметры.ИнтервалРазбиения;
	ОтборПечатнойФормы=ПараметрыПечати.Параметры.ОтборФормы;	
	
	ОтборПечатнойФормы[0].Имя="ОбъектРемонтныхРабот";
	ОтборПечатнойФормы[1].Имя="ВидРемонтныхРабот";
	
	Если ИнтервалРазбиенияПереданный = "Год" тогда 
		ИнтервалРазбиения=Перечисления.Периодичность.Год;
	ИначеЕсли ИнтервалРазбиенияПереданный = "Месяц" тогда 
		ИнтервалРазбиения=Перечисления.Периодичность.Месяц;
	ИначеЕсли ИнтервалРазбиенияПереданный = "Неделя" тогда 
		ИнтервалРазбиения=Перечисления.Периодичность.Неделя;
	ИначеЕсли ИнтервалРазбиенияПереданный = "День" тогда 
		ИнтервалРазбиения=Перечисления.Периодичность.День;
	КонецЕсли;	
		
	
	Если (ПланГрафикРемонта = Неопределено) тогда
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбран документ ""План-график ремонтов"".'"));
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ПланГрафикРемонтаОбъектыРемонта.ОбъектРемонтныхРабот,
		|	МИНИМУМ(торо_ПланГрафикРемонтаОбъектыРемонта.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ОбъектыРемонта
		|ИЗ
		|	Документ.торо_ПланГрафикРемонта.ОбъектыРемонта КАК торо_ПланГрафикРемонтаОбъектыРемонта
		|ГДЕ
		|	торо_ПланГрафикРемонтаОбъектыРемонта.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	торо_ПланГрафикРемонтаОбъектыРемонта.ОбъектРемонтныхРабот
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	торо_ПланГрафикРемонтаПланРемонтов.Ссылка,
		|	торо_ПланГрафикРемонтаПланРемонтов.НомерСтроки,
		|	торо_ПланГрафикРемонтаПланРемонтов.ID,
		|	торо_ПланГрафикРемонтаПланРемонтов.ВидРемонтныхРабот,
		|	торо_ПланГрафикРемонтаПланРемонтов.ДатаКон,
		|	торо_ПланГрафикРемонтаПланРемонтов.ДатаНач,
		|	торо_ПланГрафикРемонтаПланРемонтов.Документ,
		|	торо_ПланГрафикРемонтаПланРемонтов.Исполнитель,
		|	торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот,
		|	торо_ПланГрафикРемонтаПланРемонтов.СпособВыполнения,
		|	торо_ПланГрафикРемонтаПланРемонтов.Отменен,
		|	торо_ПланГрафикРемонтаПланРемонтов.Склад,
		|	торо_ПланГрафикРемонтаПланРемонтов.Замещен,
		|	торо_ПланГрафикРемонтаПланРемонтов.ID_базы_расчета,
		|	торо_ПланГрафикРемонтаПланРемонтов.ID_замещающего,
		|	торо_ПланГрафикРемонтаПланРемонтов.ДатаНачСт,
		|	торо_ПланГрафикРемонтаПланРемонтов.ДатаКонСт,
		|	торо_ПланГрафикРемонтаПланРемонтов.ЗамещенСт,
		|	торо_ПланГрафикРемонтаПланРемонтов.СуммаРемонта,
		|	торо_ПланГрафикРемонтаОбъектыРемонта.НомерСтроки КАК НомерОР
		|ИЗ
		|	Документ.торо_ПланГрафикРемонта.ПланРемонтов КАК торо_ПланГрафикРемонтаПланРемонтов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОбъектыРемонта КАК торо_ПланГрафикРемонтаОбъектыРемонта
		|		ПО торо_ПланГрафикРемонтаПланРемонтов.ОбъектРемонтныхРабот = торо_ПланГрафикРемонтаОбъектыРемонта.ОбъектРемонтныхРабот
		|ГДЕ
		|	торо_ПланГрафикРемонтаПланРемонтов.Ссылка = &Ссылка";
		
		Сч = 0;
		Для каждого СтрокаОтбора Из ОтборПечатнойФормы Цикл
			Если СтрокаОтбора.Использование Тогда
				Сч = Сч + 1;
				РеквизитОтбора = СтрокаОтбора.Имя;
				ВидСравненияВЗапросе = ПолучитьВидСравненияДляЗапроса(СтрокаОтбора.ВидСравнения);
				Если ЗначениеЗаполнено(СтрокаОтбора.Имя) Тогда
					
					Запрос.Текст = Запрос.Текст + " И торо_ПланГрафикРемонтаПланРемонтов." + СтрокаОтбора.Имя + " " + ВидСравненияВЗапросе.ВидСравненияНачало + " &Параметр" + Сч + ВидСравненияВЗапросе.ВидСравненияКонец;	
					Если СтрокаОтбора.ВидСравнения = ВидСравнения.Содержит ИЛИ СтрокаОтбора.ВидСравнения = ВидСравнения.НеСодержит Тогда
						Запрос.УстановитьПараметр("Параметр"+ Сч, "%" + СтрокаОтбора.Значение + "%");
					Иначе
						Запрос.УстановитьПараметр("Параметр"+ Сч, СтрокаОтбора.Значение);
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
			Запрос.Текст = Запрос.Текст + 
			" И торо_ПланГрафикРемонтаПланРемонтов.Отменен = ЛОЖЬ 
			|УПОРЯДОЧИТЬ ПО
			|	НомерОР";
		
		Запрос.УстановитьПараметр("Ссылка", ПланГрафикРемонта);
		ПланРемонтов = Запрос.Выполнить().Выгрузить();
		
		Наименование = "";
		ТаблицаПлана = Новый ТабличныйДокумент;;		
		
		ТаблицаПлана.Очистить();
		
		МакетТаблицы =  ПолучитьМакет("МакетПланаРемонтовНаПериод");
		
		Область = МакетТаблицы.ПолучитьОбласть("Заголовок");	
		Область.Параметры.НачалоПериода = Формат(ПериодНач, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""");
		Область.Параметры.КонецПериода = Формат(ПериодКон, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""");
		Область.Параметры.Организация = ПланГрафикРемонта.Организация;
		Область.Параметры.Подразделение = ПланГрафикРемонта.Подразделение;
		Область.Параметры.Номер = ПланГрафикРемонта.Номер;
		Область.Параметры.Название = Наименование;
		
		ТаблицаПлана.Вывести(Область);
		
		ПериодовВОтчете = (НачалоДня(ПериодКон) - НачалоДня(ПериодНач))/(60*60*24);
		
		Область = МакетТаблицы.ПолучитьОбласть("Шапка");
		
		ШиринаТаблицы = Область.ШиринаТаблицы;
		
		ТаблицаПлана.Вывести(Область);
		
		ТемпДата = НачалоДня(ПериодНач);
		
		ПериодНачРасчетный = ПериодНач;
		ПериодКонРасчетный = ПериодКон;
		
		МассивВременныхИнтервалов = Новый Массив;
		
		Если ИнтервалРазбиения = Перечисления.Периодичность.День Тогда
			ПериодКонРасчетный = КонецДня(ПериодКон);
			ПериодовВОтчете = 0;
			СледующийДень = Истина;
			Пока СледующийДень Цикл
				Область = МакетТаблицы.ПолучитьОбласть("СтолбецДня");
				ОбластьОформления = Область.Область("Знач");
				
				Область.Параметры.НомИнтервала = Формат(ТемпДата, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""");
				Если ДеньНедели(Дата(Год(ТемпДата), Месяц(ТемпДата), День(ТемпДата), 0,0,0))=6 или ДеньНедели(Дата(Год(ТемпДата), Месяц(ТемпДата), День(ТемпДата), 0,0,0))=7 Тогда
					ОбластьОформления.ЦветФона = новый Цвет(255,251,240);
					ОбластьОформления.ЦветТекста = новый Цвет(0,0,0);
				КонецЕсли;
				
				ЕдиничныйИнтервал = Новый Структура;
				ЕдиничныйИнтервал.Вставить("НачИнт",НачалоДня(ТемпДата));
				ЕдиничныйИнтервал.Вставить("КонИнт",КонецДня(ТемпДата));	
				МассивВременныхИнтервалов.Добавить(ЕдиничныйИнтервал);
				
				ТаблицаПлана.Присоединить(Область);
				ТемпДата = ТемпДата+60*60*24; 
				Если ТемпДата > ПериодКонРасчетный Тогда
					СледующийДень = Ложь;		
				КонецЕсли;
				ПериодовВОтчете = ПериодовВОтчете + 1;
			КонецЦикла;
			ШиринаТаблицы = ШиринаТаблицы + ПериодовВОтчете*Область.ШиринаТаблицы;
		ИначеЕсли ИнтервалРазбиения = Перечисления.Периодичность.Неделя Тогда 
			ПериодКонРасчетный = КонецНедели(ПериодКон);
			ТемпДата = НачалоДня(НачалоНедели(ПериодНач));
			ПериодовВОтчете = 0;	
			СледующаяНеделя = Истина;
			Пока СледующаяНеделя Цикл 
				Область = МакетТаблицы.ПолучитьОбласть("СтолбецДня");
				ОбластьОформления = Область.Область("Знач");
				
				Область.Параметры.НомИнтервала = Формат(ТемпДата, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""") + "-" + Формат(ТемпДата+60*60*24*6, "ДФ = ""дд.ММ.гггг""; ДП = ""без ограничения""");
				ТаблицаПлана.Присоединить(Область);
				
				ЕдиничныйИнтервал = Новый Структура;
				ЕдиничныйИнтервал.Вставить("НачИнт",НачалоНедели(ТемпДата));
				ЕдиничныйИнтервал.Вставить("КонИнт",КонецНедели(ТемпДата));	
				МассивВременныхИнтервалов.Добавить(ЕдиничныйИнтервал);

				ТемпДата = ТемпДата+60*60*24*7;
				Если НачалоДня(ТемпДата) > НачалоДня(ПериодКонРасчетный) Тогда
					СледующаяНеделя = Ложь;		
				КонецЕсли;	
				ПериодовВОтчете = ПериодовВОтчете + 1;
			КонецЦикла;
			ШиринаТаблицы = ШиринаТаблицы + ПериодовВОтчете*Область.ШиринаТаблицы;
	    ИначеЕсли ИнтервалРазбиения = Перечисления.Периодичность.Месяц Тогда 
			ПериодКонРасчетный = КонецМесяца(ПериодКон);
			ТемпДата = НачалоМесяца(ПериодНач);
			ПериодовВОтчете = 0;
			СледующийМесяц = Истина;
			Пока СледующийМесяц Цикл
				Область = МакетТаблицы.ПолучитьОбласть("СтолбецДня");
				ОбластьОформления = Область.Область("Знач");
				
				Область.Параметры.НомИнтервала = НазваниеМесяцаСтрокойПадежное(Месяц(ТемпДата)) + Символы.ПС + Сред(ТемпДата,7,4); 
				ТаблицаПлана.Присоединить(Область);
				
				ЕдиничныйИнтервал = Новый Структура;
				ЕдиничныйИнтервал.Вставить("НачИнт",НачалоМесяца(ТемпДата));
				ЕдиничныйИнтервал.Вставить("КонИнт",КонецМесяца(ТемпДата));	
				МассивВременныхИнтервалов.Добавить(ЕдиничныйИнтервал);

				ТемпДата = ДобавитьМесяц(ТемпДата,1);
				Если ТемпДата > ПериодКонРасчетный Тогда
					СледующийМесяц = Ложь;		
				КонецЕсли;	
				ПериодовВОтчете = ПериодовВОтчете + 1;
			КонецЦикла;
			ШиринаТаблицы = ШиринаТаблицы + ПериодовВОтчете*Область.ШиринаТаблицы;
		ИначеЕсли ИнтервалРазбиения = Перечисления.Периодичность.Год Тогда 
			ПериодКонРасчетный = КонецГода(ПериодКон);
			ТемпДата = НачалоГода(ПериодНач);
			ПериодовВОтчете = 0;
			СледующийГод = Истина;
			Пока СледующийГод Цикл
				Область = МакетТаблицы.ПолучитьОбласть("СтолбецДня");
				ОбластьОформления = Область.Область("Знач");
				
				Область.Параметры.НомИнтервала = Сред(ТемпДата,7,4); 
				ТаблицаПлана.Присоединить(Область);
				
				ЕдиничныйИнтервал = Новый Структура;
				ЕдиничныйИнтервал.Вставить("НачИнт",НачалоГода(ТемпДата));
				ЕдиничныйИнтервал.Вставить("КонИнт",КонецГода(ТемпДата));	
				МассивВременныхИнтервалов.Добавить(ЕдиничныйИнтервал);
				
				ТемпДата = ДобавитьМесяц(ТемпДата,12);
				Если ТемпДата > ПериодКонРасчетный Тогда
					СледующийГод = Ложь;		
				КонецЕсли;	
				ПериодовВОтчете = ПериодовВОтчете + 1;
			КонецЦикла; 
			ШиринаТаблицы = ШиринаТаблицы + ПериодовВОтчете*Область.ШиринаТаблицы;
		КонецЕсли;
		
		
		Область = МакетТаблицы.ПолучитьОбласть("ПравыйКрайЗаглушка");
		ТаблицаПлана.Присоединить(Область);
		
		// Непосредственно вывод данных по объекту
		
		НСТР = 1;
		
		СписокХранения = Новый СписокЗначений;
		
		Для каждого СтрокаТаблицы из ПланРемонтов Цикл
			ОбъектДляДобавления =  СтрокаТаблицы.ОбъектРемонтныхРабот;
			
			Если СписокХранения.НайтиПоЗначению(ОбъектДляДобавления)=Неопределено Тогда
				СписокХранения.Добавить(ОбъектДляДобавления);			
			КонецЕсли;
			
		КонецЦикла;
		
		МассивОбъектов = СписокХранения.ВыгрузитьЗначения();
		КоличествоОбъектов = МассивОбъектов.Количество();	
		Для каждого ОбъектДляОтчета из МассивОбъектов Цикл
			Область = МакетТаблицы.ПолучитьОбласть("СтрокаЗаполнения");
			ФорматнаяОбласть = Область.Область("НаимПрим");
			ФорматнаяОбласть.Примечание.Текст = ОбъектДляОтчета.ПлановыйГрафикРаботы.Наименование;
			
			Область.Параметры.НПП = НСТР;
			
			Область.Параметры.НаименовОбъекта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ОбъектДляОтчета);
			
			Область.Параметры.ТехнологическийН = ОбъектДляОтчета.ТехНомер;
			
			Область.Параметры.ЗаводскойН = ОбъектДляОтчета.ЗаводскойНомер;
			
			Область.Параметры.ИнвентарныйН = ОбъектДляОтчета.ИнвентарныйНомер;
			
			Результ = ПоследнийРемонт(ОбъектДляОтчета,ПланГрафикРемонта.ДатаПланирования);
			
			ПредставлениеВидаРемонта = "ВВЭ";
			Если ТипЗнч(Результ[0].Объект) = Тип("СправочникСсылка.торо_ВидыРемонтов") Тогда
				ПредставлениеВидаРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияВРДляПечати(Результ[0].Объект);
			ИначеЕсли ЗначениеЗаполнено(Результ[0].Объект) Тогда
				ПредставлениеВидаРемонта = Результ[0].Объект;
			КонецЕсли;

			Область.Параметры.Вид = ПредставлениеВидаРемонта;
			ДатаДляФормата = Дата(Результ[0].Период);
			Область.Параметры.Дата = Формат( ДатаДляФормата, "ДФ = ""дд/ММ/гггг""");
			
			КолЧасов2=0;
			
			
			Область.Параметры.КолвоЧасов = КолЧасов2;
			
			ТаблицаПлана.Вывести(Область);	
			
			линСплошная = новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
			линНикакая = новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
			
			Условие = Новый Структура;
			Условие.Вставить("ОбъектРемонтныхРабот", ОбъектДляОтчета);
			Условие.Вставить("Отменен", Ложь);
			НайденныеСтроки = ПланРемонтов.НайтиСтроки(Условие); 		
			для Сч = 1 по  МассивВременныхИнтервалов.Количество() Цикл
				
				БуфГод = "";
				ТекущийПериодНач = МассивВременныхИнтервалов[Сч-1].НачИнт;
				ТекущийПериодКон = МассивВременныхИнтервалов[Сч-1].КонИнт;
				
				Область = МакетТаблицы.ПолучитьОбласть("ЗначенияДня");
				ОбластьФормат =  Область.Область();
				
				Для Каждого ОбъектСравнения из НайденныеСтроки цикл 
					
						Если ОбъектСравнения.ДатаКон<ОбъектСравнения.ДатаНач Тогда
							КонечнаяДата = КонецДня(ОбъектСравнения.ДатаНач);	
						Иначе
							КонечнаяДата = ОбъектСравнения.ДатаКон;
						КонецЕсли; 
					
						Если  ((ТекущийПериодКон>=ОбъектСравнения.ДатаНач) и (ТекущийПериодНач<=КонечнаяДата)) или
							((ТекущийПериодКон>ОбъектСравнения.ДатаНач) и (ТекущийПериодНач<=КонечнаяДата)) Тогда
							ОбластьФормат.ЦветФона = новый Цвет(255, 251, 240);
							ОбластьФормат.ГраницаСлева =линНикакая;
							ОбластьФормат.ГраницаСправа = линСплошная;
							ПредставлениеВидаРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияВРДляПечати(ОбъектСравнения.ВидРемонтныхРабот);
							БуфГод = БуфГод + ПредставлениеВидаРемонта + ", ";
							
							Область.Параметры.заполнение = БуфГод;
							ОбластьФормат.Примечание.Текст =  ОбластьФормат.Примечание.Текст + ПредставлениеВидаРемонта 
								+ " (" + Лев(ОбъектСравнения.ДатаНач, 10) + " - " + Лев(ОбъектСравнения.ДатаКон, 10) + ") " + Символы.ПС
						КонецЕсли;	
					
				КонецЦикла;	
				
				ТаблицаПлана.Присоединить(Область);
						
			КонецЦикла;
			Область = МакетТаблицы.ПолучитьОбласть("ПравыйКрайЗаглушка2");
			ТаблицаПлана.Присоединить(Область);
					
			НСТР = НСТР + 1;
			
		КонецЦикла;
		
		ОбластьПодвал = МакетТаблицы.ПолучитьОбласть("Подвал");
		ОбластьПодвал.Область(1,1,1, ШиринаТаблицы).ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,2);
		ТаблицаПлана.Вывести(ОбластьПодвал);
		
		Область = МакетТаблицы.ПолучитьОбласть("Пояснение");	
		ТаблицаПлана.Вывести(Область);

	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "торо_ПечатьПланГрафика_МакетПланаРемонтовНаПериод";
	ТабДок.ИмяПараметровПечати = "торо_ПечатьПланГрафика_МакетПланаРемонтовНаПериод";
	ТабДок.ВставитьОбласть(ТаблицаПлана.Область());
	
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;
	
КонецФункции

Функция ПолучитьВидСравненияДляЗапроса(ВидСравненияОтбора) 
	
	СтруктураВидаСравнения = Новый Структура;
	СтруктураВидаСравнения.Вставить("ВидСравненияНачало");
	СтруктураВидаСравнения.Вставить("ВидСравненияКонец");
	Если ВидСравненияОтбора = ВидСравнения.Равно Тогда
		
		СтруктураВидаСравнения.ВидСравненияНачало = "=";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
		
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.НеРавно Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "<>";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.ВСписке Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "В(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.НеВСписке Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "НЕ В(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.ВИерархии Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "В ИЕРАРХИИ(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.ВСпискеПоИерархии Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "В ИЕРАРХИИ(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.НеВСпискеПоИерархии Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "НЕ В ИЕРАРХИИ(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.НеВИерархии Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "НЕ В ИЕРАРХИИ(";
		СтруктураВидаСравнения.ВидСравненияКонец = ")";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.Больше Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = ">";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.БольшеИлиРавно Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = ">=";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.Меньше Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "<";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.МеньшеИлиРавно Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = "<=";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.Содержит Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = " ПОДОБНО ВЫРАЗИТЬ(";
		СтруктураВидаСравнения.ВидСравненияКонец = " КАК Строка(900))";
		Возврат СтруктураВидаСравнения;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.НеСодержит Тогда
		СтруктураВидаСравнения.ВидСравненияНачало = " НЕ ПОДОБНО ВЫРАЗИТЬ(";
		СтруктураВидаСравнения.ВидСравненияКонец = " КАК Строка(900))";
		Возврат СтруктураВидаСравнения;
	Иначе // другие варианты 
		СтруктураВидаСравнения.ВидСравненияНачало = "=";
		СтруктураВидаСравнения.ВидСравненияКонец = "";
		Возврат СтруктураВидаСравнения;
	КонецЕсли;
	
КонецФункции // ПолучитьВидСравненияДляЗапроса()

// Формирование названия месяца с учетом падежа (именительный и родительный).
//
// Параметры:
// 	НомерМесяца - Число -  номер месяца в году.
//		Падеж - Строка - указание паджа, в котором нужно сформировать название месяца
//				("Имен" - именительный, по-умолчанию; "Род" - родительный).
//
// Возвращаемое значение:
// 		Строка - название месяца с учетом падежа.
//
Функция НазваниеМесяцаСтрокойПадежное(Знач НомерМесяца, Знач Падеж="Имен")
    если Падеж="Род" тогда
     если НомерМесяца=1 тогда
    	Возврат "января"
     иначеЕсли НомерМесяца=2 тогда
    	Возврат "февраля"
     иначеЕсли НомерМесяца=3 тогда
    	Возврат "марта"
     иначеЕсли НомерМесяца=4 тогда
    	Возврат "апреля"
     иначеЕсли НомерМесяца=5 тогда
    	Возврат "мая"
     иначеЕсли НомерМесяца=6 тогда
    	Возврат "июня"
     иначеЕсли НомерМесяца=7 тогда
    	Возврат "июля"
     иначеЕсли НомерМесяца=8 тогда
    	Возврат "августа"
     иначеЕсли НомерМесяца=9 тогда
    	Возврат "сентября"
     иначеЕсли НомерМесяца=10 тогда
    	Возврат "октября"
     иначеЕсли НомерМесяца=11 тогда
    	Возврат "ноября"
      иначеЕсли НомерМесяца=12 тогда
    	Возврат "декабря"	
      конецЕсли;
   конецЕсли;
   если Падеж="Имен" тогда
     если НомерМесяца=1 тогда
    	Возврат "январь"
     иначеЕсли НомерМесяца=2 тогда
    	Возврат "февраль"
     иначеЕсли НомерМесяца=3 тогда
    	Возврат "март"
     иначеЕсли НомерМесяца=4 тогда
    	Возврат "апрель"
     иначеЕсли НомерМесяца=5 тогда
    	Возврат "май"
     иначеЕсли НомерМесяца=6 тогда
    	Возврат "июнь"
     иначеЕсли НомерМесяца=7 тогда
    	Возврат "июль"
     иначеЕсли НомерМесяца=8 тогда
    	Возврат "август"
     иначеЕсли НомерМесяца=9 тогда
    	Возврат "сентябрь"
     иначеЕсли НомерМесяца=10 тогда
    	Возврат "октябрь"
     иначеЕсли НомерМесяца=11 тогда
    	Возврат "ноябрь"
      иначеЕсли НомерМесяца=12 тогда
    	Возврат "декабрь"	
      конецЕсли;
   конецЕсли;
   
КонецФункции

// Функция предназначена для вывода таблицы последних ремонтов.
//
// Параметры: 
//      Объект - объект.
//
// Возвращаемое значение:
//		ДляВозврата - таблица значений.
//
Функция ПоследнийРемонт(Объект,ДатаПостроения)
	
	ЗапросКРегистру = новый Запрос;
	
	ЗапросКРегистру.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	                        |	торо_ЗавершенныеРемонтныеРаботыСрезПоследних.ДатаОкончания КАК Период,
	                        |	торо_ЗавершенныеРемонтныеРаботыСрезПоследних.ВидРемонтныхРабот КАК Объект
	                        |ИЗ
	                        |	РегистрСведений.торо_ЗавершенныеРемонтныеРаботы.СрезПоследних(, ОбъектРемонта = &ОбъектРемонта И ДатаОкончания <= &Дата) КАК торо_ЗавершенныеРемонтныеРаботыСрезПоследних
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Период УБЫВ";
	
	ЗапросКРегистру.УстановитьПараметр("ОбъектРемонта", Объект);
	ЗапросКРегистру.УстановитьПараметр("Дата", ДатаПостроения);
	результат = ЗапросКРегистру.Выполнить();
	
	дляВозврата =  результат.Выгрузить();
	
	Если дляВозврата.Количество()=0 Тогда
		строка = дляВозврата.Добавить();
		строка.Период = Объект.ДатаВводаВЭксплуатацию;
		строка.Объект = "ВВЭ";
	КонецЕсли;
	
	Возврат дляВозврата;
	
КонецФункции // ПоследнийРемонт()

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Истина;
	
КонецПроцедуры

Процедура ПриПолученииСлужебныхРеквизитов(Реквизиты) Экспорт
	
	Реквизиты.Добавить("СтатусДокумента");
	Реквизиты.Добавить("ИсторияСтатусов.*");
	Реквизиты.Добавить("Согласующие.*");
		
КонецПроцедуры


#КонецОбласти

#КонецЕсли
