#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПечатьЖурналаРемонтов(Команда)
	
	СформироватьЖурналРемонтов(Неопределено);
	Результат.Напечатать(РежимИспользованияДиалогаПечати.Использовать);

КонецПроцедуры

&НаКлиенте
Процедура СформироватьЖурналРемонтов(Команда)
	
	Отказ = Ложь;

	Если ЗначениеЗаполнено(ПериодС) Тогда
		Если НЕ ЗначениеЗаполнено(ПериодПо) Тогда
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо заполнить дату окончания периода.'"));
			Отказ = Истина;
		ИначеЕсли ПериодПо < ПериодС Тогда
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Дата окончания периода меньше даты его начала.'"));
			Отказ = Истина;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ПериодПо) Тогда
		Если НЕ ЗначениеЗаполнено(ПериодС) Тогда
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо заполнить дату начала периода.'"));
			Отказ = Истина;
		ИначеЕсли ПериодПо < ПериодС Тогда
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Дата окончания периода меньше даты его начала.'"));
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;		
 	Результат=ПолучитьСписокРемонтов();	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Функция ПолучитьСписокРемонтов()
	НаборДанных = ЗаполнитьНаборДанных();
	
	Результат.Очистить();
	
	ТабДок = Новый ТабличныйДокумент;
	
	СписокОбъектовРемонта = НаборДанных.Скопировать(, "ОбъектРемонта");
	СписокОбъектовРемонта.Свернуть("ОбъектРемонта");
	
	МакетЖурнала = Документы.торо_ПланГрафикРемонта.ПолучитьМакет("ЖурналЗапланированныхРемонтов");
	
	ОбластьЗаголовок = МакетЖурнала.ПолучитьОбласть("Заголовок");
	ОбластьОтбор = МакетЖурнала.ПолучитьОбласть("Отбор");
	
	ОбластьШапкаЖурнала = МакетЖурнала.ПолучитьОбласть("ЖурналРемонтовШапка");
	
	ТабДок.Вывести(ОбластьЗаголовок);

	Если ЗначениеЗаполнено(ПериодС) И ЗначениеЗаполнено(ПериодПо) Тогда
		ОбластьОтбор.Параметры.Период = "Период с " + Формат(ПериодС,"ДФ=dd.MM.yyyy") + " по " + Формат(ПериодПо, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	Если ЗначениеЗаполнено(Организация) Тогда
		ОбластьОтбор.Параметры.Организация = "Организация: " + Организация;
	КонецЕсли;
    Если ЗначениеЗаполнено(Подразделение) Тогда
		ОбластьОтбор.Параметры.Подразделение = "Подразделение: " + Подразделение;
	КонецЕсли;
    Если ЗначениеЗаполнено(ОбъектРемонта) Тогда
		ОбластьОтбор.Параметры.ОбъектРемонта = "ОбъектРемонта: " + ОбъектРемонта;
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьОтбор);
	ТабДок.Вывести(ОбластьШапкаЖурнала);
	
	Для Каждого Элемент Из СписокОбъектовРемонта Цикл
		ТекущийОбъект = Элемент.ОбъектРемонта;
		ТаблицаВидовРемонта = НаборДанных.Скопировать(Новый Структура("ОбъектРемонта", ТекущийОбъект), "ВидРемонта, ДатаНачалаРемонтныхРабот, Исполнитель, ВремяВыполнения");
		ТаблицаВидовРемонта.Свернуть("ВидРемонта, ДатаНачалаРемонтныхРабот, Исполнитель", "ВремяВыполнения");
		СтрокаОбъектВид = МакетЖурнала.ПолучитьОбласть("ЖурналРемонтов");
		СтрокаОбъектВид.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ТекущийОбъект);
		СтрокаОбъектВид.Параметры.ПараметрРасшифровки = ТекущийОбъект;
		ОбластьСтроки = СтрокаОбъектВид.Область(1,2,1,СтрокаОбъектВид.ШиринаТаблицы);
		ОбластьСтроки.Объединить();
		ТабДок.Вывести(СтрокаОбъектВид);
		
		ТабДок.НачатьГруппуСтрок();
		
		Для Каждого Строка Из ТаблицаВидовРемонта Цикл			
			СтрокаОбъектВид = МакетЖурнала.ПолучитьОбласть("ЖурналРемонтов");
			СтрокаОбъектВид.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияВРДляПечати(Строка.ВидРемонта);
			СтрокаОбъектВид.Параметры.Описание = Строка.ДатаНачалаРемонтныхРабот;
			СтрокаОбъектВид.Параметры.Исполнитель = Строка.Исполнитель;
			СтрокаОбъектВид.параметры.ПараметрРасшифровки = Строка.ВидРемонта;
			
			ТаблицаТехОпераций = НаборДанных.Скопировать(Новый Структура("ОбъектРемонта, ВидРемонта, ДатаНачалаРемонтныхРабот", ТекущийОбъект, Строка.ВидРемонта, Строка.ДатаНачалаРЕмонтныхРабот), "ВидРемонта, ТехОперация, ВремяВыполнения, Описание");
			// подсчет времени на выполнение ремонта - сумма времени выполнения тех операций
			ТабДляПодсчетаВремени = ТаблицаТехОпераций.Скопировать(, "ВидРемонта, ТехОперация, ВремяВыполнения");
			ТабДляПодсчетаВремени.Свернуть("ВидРемонта, ТехОперация, ВремяВыполнения");
			ТабДляПодсчетаВремени.Свернуть("ВидРемонта", "ВремяВыполнения");
			
			СтрокаОбъектВид.Параметры.ВремяВыполнения = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(ТабДляПодсчетаВремени[0].ВремяВыполнения,"0");
			
			ТабДок.Вывести(СтрокаОбъектВид);
			
			ТаблицаТехОпераций.Свернуть("ТехОперация, ВремяВыполнения, Описание");
			
			ВремяРемонта = 0;
			ТабДок.НачатьГруппуСтрок();

			Для Каждого СтрокаСОперацией из ТаблицаТехОпераций Цикл
				Если НЕ СтрокаСОперацией.ТехОперация = Null Тогда
					СтрокаТехОпераций = МакетЖурнала.ПолучитьОбласть("ЖурналРемонтов");
					СтрокаТехОпераций.Параметры.ОбъектРемонта = СтрокаСОперацией.ТехОперация;
					СтрокаТехОпераций.Параметры.ВремяВыполнения = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(СтрокаСОперацией.ВремяВыполнения,"0");
					СтрокаТехОпераций.Параметры.Описание = СтрокаСОперацией.Описание;
					СтрокаТехОпераций.Параметры.ПараметрРасшифровки = СтрокаСОперацией.ТехОперация;
					
					ТаблицаМатЗатрат = НаборДанных.Скопировать(Новый Структура("ОбъектРемонта, ВидРемонта, ТехОперация, ДатаНачалаРемонтныхРабот", ТекущийОбъект, Строка.ВидРемонта, СтрокаСОперацией.ТехОперация, Строка.ДатаНачалаРемонтныхРабот), "Номенклатура, Количество");
					ТаблицаМатЗатрат.Свернуть("Номенклатура", "Количество");
					
					СтрокаМатЗатрат = ПолучитьМатЗатратыСтрокой(ТаблицаМатЗатрат);
					СтрокаТехОпераций.Параметры.МатЗатраты = СтрокаМатЗатрат;
					
					ТабДок.Вывести(СтрокаТехОпераций);
				КонецЕсли;
			КонецЦикла;
			
			ТабДок.ЗакончитьГруппуСтрок();
		КонецЦикла;
		ТабДок.ЗакончитьГруппуСтрок();

	КонецЦикла;
	
	ТабДок.КлючПараметровПечати = "торо_ПланГрафикРемонта_ФормаЖурнала";
	ТабДок.ИмяПараметровПечати = "торо_ПланГрафикРемонта_ФормаЖурнала";
	
	Возврат ТабДок;
	
КонецФункции

Функция ЗаполнитьНаборДанных()
	
	ЕстьКомментарий = Метаданные.Имя <> "УправлениеРемонтнымПредприятием";

	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ПлановыеРемонтныеРаботы.ОбъектРемонтныхРабот,
	               |	торо_ПлановыеРемонтныеРаботы.ВидРемонтныхРабот,
	               |	торо_ПлановыеРемонтныеРаботы.ДатаНачалаРемонтныхРабот,
	               |	торо_ПлановыеРемонтныеРаботы.Исполнитель,
	               |	торо_ПлановыеРемонтныеРаботы.ID
	               |ПОМЕСТИТЬ ПланРемонтовПолный
	               |ИЗ
	               |	РегистрСведений.торо_ПлановыеРемонтныеРаботы КАК торо_ПлановыеРемонтныеРаботы
	               |ГДЕ
	               |	торо_ПлановыеРемонтныеРаботы.ДатаНачалаРемонтныхРабот МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |	И ВЫБОР
	               |			КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ торо_ПлановыеРемонтныеРаботы.Организация = &Организация
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ торо_ПлановыеРемонтныеРаботы.Подразделение = &Подразделение
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &ОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ торо_ПлановыеРемонтныеРаботы.ОбъектРемонтныхРабот = &ОбъектРемонта
	               |		КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_ЗавершенныеРемонтныеРаботы.ID
	               |ПОМЕСТИТЬ ЗавершенныеРемонты
	               |ИЗ
	               |	РегистрСведений.торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
	               |ГДЕ
	               |	торо_ЗавершенныеРемонтныеРаботы.ID В
	               |			(ВЫБРАТЬ
	               |				ПланРемонтов.ID
	               |			ИЗ
	               |				ПланРемонтовПолный КАК ПланРемонтов)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПланРемонтов.ВидРемонтныхРабот,
	               |	ПланРемонтов.ДатаНачалаРемонтныхРабот,
	               |	ПланРемонтов.Исполнитель,
	               |	ПланРемонтов.ОбъектРемонтныхРабот
	               |ПОМЕСТИТЬ ПланРемонтов
	               |ИЗ
	               |	ПланРемонтовПолный КАК ПланРемонтов
	               |ГДЕ
	               |	НЕ ПланРемонтов.ID В
	               |				(ВЫБРАТЬ
	               |					ЗавершенныеРемонты.ID
	               |				ИЗ
	               |					ЗавершенныеРемонты КАК ЗавершенныеРемонты)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_НормативныеРемонтыОборудования.НормативныйРемонт,
	               |	торо_НормативныеРемонтыОборудования.ВидРемонта,
	               |	торо_НормативныеРемонтыОборудования.ОбъектРемонта,
	               |	1 КАК Приоретет,
	               |	ПланРемонтов.ДатаНачалаРемонтныхРабот
	               |ПОМЕСТИТЬ НормативныеРемонтыОбъектов
	               |ИЗ
	               |	ПланРемонтов КАК ПланРемонтов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
	               |		ПО ПланРемонтов.ОбъектРемонтныхРабот = торо_НормативныеРемонтыОборудования.ОбъектРемонта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	торо_НормативныеРемонтыОборудования.ВидРемонта,
	               |	торо_НормативныеРемонтыОборудования.НормативныйРемонт,
	               |	0 КАК Приоретет,
	               |	ПланРемонтов.ОбъектРемонтныхРабот КАК ГруппаОбъектовРемонта,
	               |	ПланРемонтов.ДатаНачалаРемонтныхРабот
	               |ПОМЕСТИТЬ НормативныеРемонтыРемГрупп
	               |ИЗ
	               |	РегистрСведений.торо_НормативныеРемонтыОборудования КАК торо_НормативныеРемонтыОборудования
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланРемонтов КАК ПланРемонтов
	               |		ПО торо_НормативныеРемонтыОборудования.ТиповойОР = ПланРемонтов.ОбъектРемонтныхРабот.ТиповойОР
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НормативныеРемонтыОбъектов.ВидРемонта КАК ВидРемонта,
	               |	НормативныеРемонтыОбъектов.ОбъектРемонта КАК ГруппаОбьектовРемонтов,
	               |	НормативныеРемонтыОбъектов.Приоретет КАК Приоретет,
	               |	НормативныеРемонтыОбъектов.НормативныйРемонт,
	               |	НормативныеРемонтыОбъектов.ДатаНачалаРемонтныхРабот
	               |ПОМЕСТИТЬ ОбъдинениеНормРемонтов
	               |ИЗ
	               |	НормативныеРемонтыОбъектов КАК НормативныеРемонтыОбъектов
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	НормативныеРемонтыРемГрупп.ВидРемонта,
	               |	НормативныеРемонтыРемГрупп.ГруппаОбъектовРемонта,
	               |	НормативныеРемонтыРемГрупп.Приоретет,
	               |	НормативныеРемонтыРемГрупп.НормативныйРемонт,
	               |	NULL
	               |ИЗ
	               |	НормативныеРемонтыРемГрупп КАК НормативныеРемонтыРемГрупп
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъдинениеНормРемонтов.ВидРемонта,
	               |	ОбъдинениеНормРемонтов.ГруппаОбьектовРемонтов,
	               |	МАКСИМУМ(ОбъдинениеНормРемонтов.Приоретет) КАК Приоретет
	               |ПОМЕСТИТЬ МаксПриорететы
	               |ИЗ
	               |	ОбъдинениеНормРемонтов КАК ОбъдинениеНормРемонтов
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъдинениеНормРемонтов.ВидРемонта,
	               |	ОбъдинениеНормРемонтов.ГруппаОбьектовРемонтов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МаксПриорететы.ВидРемонта,
	               |	МаксПриорететы.ГруппаОбьектовРемонтов,
	               |	ОбъдинениеНормРемонтов.НормативныйРемонт,
	               |	ОбъдинениеНормРемонтов.ДатаНачалаРемонтныхРабот
	               |ПОМЕСТИТЬ РемонтыИдентификаторы
	               |ИЗ
	               |	ОбъдинениеНормРемонтов КАК ОбъдинениеНормРемонтов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксПриорететы КАК МаксПриорететы
	               |		ПО ОбъдинениеНормРемонтов.ГруппаОбьектовРемонтов = МаксПриорететы.ГруппаОбьектовРемонтов
	               |			И ОбъдинениеНормРемонтов.ВидРемонта = МаксПриорететы.ВидРемонта
	               |			И ОбъдинениеНормРемонтов.Приоретет = МаксПриорететы.Приоретет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РемонтыИдентификаторы.НормативныйРемонт,
	               |	РемонтыИдентификаторы.ДатаНачалаРемонтныхРабот,
	               |	МАКСИМУМ(торо_ВерсииТехКарт.Период) КАК Период
	               |ПОМЕСТИТЬ таблицаВерсийТехкарт
	               |ИЗ
	               |	РемонтыИдентификаторы КАК РемонтыИдентификаторы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт.СрезПоследних(, ) КАК торо_ВерсииТехКарт
	               |		ПО РемонтыИдентификаторы.НормативныйРемонт = торо_ВерсииТехКарт.ИдентификаторТехКарты
	               |			И РемонтыИдентификаторы.ДатаНачалаРемонтныхРабот >= торо_ВерсииТехКарт.Период
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РемонтыИдентификаторы.НормативныйРемонт,
	               |	РемонтыИдентификаторы.ДатаНачалаРемонтныхРабот
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РемонтыИдентификаторы.ВидРемонта,
	               |	РемонтыИдентификаторы.ГруппаОбьектовРемонтов,
	               |	торо_ВерсииТехКарт.ТехКарта КАК НормативныйРемонт,
	               |	торо_ВерсииТехКарт.ТехКарта.ДатаПринятия КАК ДатаПринятия
	               |ИЗ
	               |	РемонтыИдентификаторы КАК РемонтыИдентификаторы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ таблицаВерсийТехкарт КАК таблицаВерсийТехкарт
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт КАК торо_ВерсииТехКарт
	               |			ПО таблицаВерсийТехкарт.НормативныйРемонт = торо_ВерсииТехКарт.ИдентификаторТехКарты
	               |				И таблицаВерсийТехкарт.Период = торо_ВерсииТехКарт.Период
	               |		ПО РемонтыИдентификаторы.НормативныйРемонт = таблицаВерсийТехкарт.НормативныйРемонт
	               |			И РемонтыИдентификаторы.ДатаНачалаРемонтныхРабот = таблицаВерсийТехкарт.ДатаНачалаРемонтныхРабот";
				   
	Запрос.УстановитьПараметр("ДатаНачала", ПериодС);
	Запрос.УстановитьПараметр("ДатаОкончания", ПериодПо);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	Запрос.УстановитьПараметр("Организация", Организация);
	ТаблицаНормативныхРемонтов = Запрос.Выполнить().Выгрузить();
	
	ТаблицаТехОпераций = Новый ТаблицаЗначений;
	ТаблицаТехОпераций.Колонки.Добавить("ОбъектРемонта", Новый ОписаниеТипов("СправочникСсылка.торо_ОбъектыРемонта"));
	ТаблицаТехОпераций.Колонки.Добавить("ВидРемонта", Новый ОписаниеТипов("СправочникСсылка.торо_ВидыРемонтов"));
	ТаблицаТехОпераций.Колонки.Добавить("ТехОперация", Новый ОписаниеТипов("СправочникСсылка.торо_ТехнологическиеОперации"));
	ТаблицаТехОпераций.Колонки.Добавить("ВремяВыполнения", Новый ОписаниеТипов("Число"));
	ТаблицаТехОпераций.Колонки.Добавить("ID_ТехОперации", Новый ОписаниеТипов("Строка"));
	Для Каждого Строка Из ТаблицаНормативныхРемонтов Цикл
		ДобавитьСтрокиТехОпераций(Строка, Строка.НормативныйРемонт, ТаблицаТехОпераций, Строка.ДатаПринятия);			
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабТехОпераций.ОбъектРемонта,
	               |	ТабТехОпераций.ВидРемонта,
	               |	ВЫРАЗИТЬ(ТабТехОпераций.ТехОперация КАК Справочник.торо_ТехнологическиеОперации) КАК ТехОперация,
	               |	ТабТехОпераций.ВремяВыполнения,
	               |	ВЫРАЗИТЬ(ТабТехОпераций.ID_ТехОперации КАК СТРОКА(36)) КАК ID_ТехОперации
	               |ПОМЕСТИТЬ ТабТехОпераций
	               |ИЗ
	               |	&ТабТехОпераций КАК ТабТехОпераций
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_РемонтыМатериальныеЗатраты.Номенклатура,
	               |	СУММА(торо_РемонтыМатериальныеЗатраты.Количество) КАК Количество,
	               |	торо_РемонтыМатериальныеЗатраты.ID
	               |ПОМЕСТИТЬ ТаблицаМатЗатрат
	               |ИЗ
	               |	Справочник.торо_ТехКарты.МатериальныеЗатраты КАК торо_РемонтыМатериальныеЗатраты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабТехОпераций КАК ТабТехОпераций
	               |		ПО торо_РемонтыМатериальныеЗатраты.ID = ТабТехОпераций.ID_ТехОперации
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	торо_РемонтыМатериальныеЗатраты.Номенклатура,
	               |	торо_РемонтыМатериальныеЗатраты.ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабТехОпераций.ОбъектРемонта,
	               |	ТабТехОпераций.ВидРемонта,
	               |	ТабТехОпераций.ТехОперация,
	               |	ТабТехОпераций.ВремяВыполнения,
	               |	торо_РемонтыМатериальныеЗатраты.Номенклатура,
	               |	торо_РемонтыМатериальныеЗатраты.Количество
	               |ПОМЕСТИТЬ МатЗатратыНаОперации
	               |ИЗ
	               |	ТабТехОпераций КАК ТабТехОпераций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаМатЗатрат КАК торо_РемонтыМатериальныеЗатраты
	               |		ПО ТабТехОпераций.ID_ТехОперации = торо_РемонтыМатериальныеЗатраты.ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
 				   |ВЫБРАТЬ
	               |	ПланРемонтов.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	               |	ПланРемонтов.ВидРемонтныхРабот КАК ВидРемонта,
	               |	ПланРемонтов.ДатаНачалаРемонтныхРабот,
	               |	МатЗатратыНаОперации.ТехОперация";
				   Если ЕстьКомментарий Тогда
					   Запрос.Текст = Запрос.Текст + ", МатЗатратыНаОперации.ТехОперация.Комментарий КАК Описание,";
				   Иначе
					   Запрос.Текст = Запрос.Текст + ", NULL КАК Описание,";
				   КонецЕсли;
				   Запрос.Текст = Запрос.Текст +"	
	               |	МатЗатратыНаОперации.ВремяВыполнения,
	               |	МатЗатратыНаОперации.Номенклатура,
	               |	МатЗатратыНаОперации.Количество,
	               |	ПланРемонтов.Исполнитель
	               |ИЗ
	               |	ПланРемонтов КАК ПланРемонтов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ МатЗатратыНаОперации КАК МатЗатратыНаОперации
	               |		ПО ПланРемонтов.ОбъектРемонтныхРабот = МатЗатратыНаОперации.ОбъектРемонта
	               |			И ПланРемонтов.ВидРемонтныхРабот = МатЗатратыНаОперации.ВидРемонта";

	
	Запрос.УстановитьПараметр("ТабТехОпераций", ТаблицаТехОпераций);
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	МенеджерВТ.Закрыть();
	
	Возврат ТаблицаРезультата;
КонецФункции
			   
Процедура ДобавитьСтрокиТехОпераций(СтрокаИсточник, НормативныйРемонт, ТаблицаПриемник, ДатаСреза)
	
	Для Каждого СтрокаОперации Из НормативныйРемонт.СписокОпераций Цикл
		Если ТипЗнч(СтрокаОперации.Операция) = Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда
			НовСтрока = ТаблицаПриемник.Добавить();
			НовСтрока.ОбъектРемонта = СтрокаИсточник.ГруппаОбьектовРемонтов;
			НовСтрока.ВидРемонта = СтрокаИсточник.ВидРемонта;
			НовСтрока.ТехОперация = СтрокаОперации.Операция;
			НовСтрока.ВремяВыполнения = ?((ЗначениеЗаполнено(СтрокаОперации.НормаВремениВСекундах) И СтрокаОперации.НормаВремениВСекундах<>0), СтрокаОперации.НормаВремениВСекундах, СтрокаОперации.Операция.НормаВремени);
			НовСтрока.ID_ТехОперации = СтрокаОперации.ID;
		ИначеЕсли ТипЗнч(СтрокаОперации.Операция) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") Тогда
			
			Таб = РегистрыСведений.торо_ВерсииТехКарт.СрезПоследних(ДатаСреза,Новый Структура("ИдентификаторТехКарты",СтрокаОперации.Операция));
			
			Если Таб.Количество() > 0 Тогда
				ТехКарта = Таб[0].ТехКарта;
				ДобавитьСтрокиТехОпераций(СтрокаИсточник, ТехКарта, ТаблицаПриемник, ТехКарта.ДатаПринятия);
			КонецЕсли; 
			
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// функция формирует представление таблицы материальных затрат строкой
//
Функция ПолучитьМатЗатратыСтрокой(МатериальныеЗатраты)
	
	Представление = "";
	
	Для Каждого Строка Из МатериальныеЗатраты Цикл
		Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			Представление = Представление + Строка.Номенклатура + " - " + Строка.Количество  + Строка.Номенклатура.ЕдиницаИзмерения + Символы.ПС;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Представление;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПериодС = НачалоМесяца(ТекущаяДата());
	ПериодПо = КонецМесяца(ТекущаяДата());	
	Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР","ОсновнаяОрганизация",Истина);
	Подразделение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР","ОсновноеПодразделение",Истина);
	
КонецПроцедуры

#КонецОбласти