#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ДокументППР") Тогда
		ДокументППР = Параметры.ДокументППР;
	КонецЕсли;
	
	Если Параметры.Свойство("ТаблицаРемонтовИзППР") Тогда
		ТаблицаРемонтовИзППР.Загрузить(Параметры.ТаблицаРемонтовИзППР.Выгрузить());
	Иначе
		ТаблицаРемонтовИзППР.Загрузить(ДокументППР.ПланРемонтов.Выгрузить());
	КонецЕсли;
	
	Элементы.ДокументППР.Заголовок = Строка(ДокументППР);
	
	ТолькоДляНеустановленныхИсполнителей = Истина;
	НеОчищатьИсполнителей = Истина;
	НеМенятьСпособВыполнения = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьФлажки(Элементы.ТаблицаРемонтовИзППРУстановитьФлажки);
	
	УстановитьДоступностьКонтрагентаПодразделения();

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособВыполненияПриИзменении(Элемент)
	УстановитьДоступностьКонтрагентаПодразделения();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для каждого СтрокаТабличнойЧасти Из ТаблицаРемонтовИзППР Цикл
		СтрокаТабличнойЧасти.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для каждого СтрокаТабличнойЧасти Из ТаблицаРемонтовИзППР Цикл
		СтрокаТабличнойЧасти.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвертироватьФлажки(Команда)
	
	Для каждого СтрокаТабличнойЧасти Из ТаблицаРемонтовИзППР Цикл
		СтрокаТабличнойЧасти.Пометка = Не СтрокаТабличнойЧасти.Пометка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИсполнителей(Команда)
	
	СтруктураВозврата = ПолучитьПредопределенныеЗначенияНаСервере();
	СпособыСтроительстваПустаяСсылка = СтруктураВозврата.СпособыСтроительстваПустаяСсылка;
	СпособыСтроительстваХозспособ = СтруктураВозврата.СпособыСтроительстваХозспособ;
	СпособыСтроительстваПодрядный = СтруктураВозврата.СпособыСтроительстваПодрядный;
	СтруктураПредприятияПустаяСсылка = СтруктураВозврата.СтруктураПредприятияПустаяСсылка;
	КонтрагентыПустаяСсылка = СтруктураВозврата.КонтрагентыПустаяСсылка;
	
	Для каждого СтрокаТабличнойЧасти Из ТаблицаРемонтовИзППР Цикл
		Если СтрокаТабличнойЧасти.Пометка Тогда 
			
			Если СтрокаТабличнойЧасти.СпособВыполнения = Неопределено 
				ИЛИ СтрокаТабличнойЧасти.СпособВыполнения = СпособыСтроительстваПустаяСсылка
				ИЛИ НЕ НеМенятьСпособВыполнения Тогда
				Если Не СтрокаТабличнойЧасти.СпособВыполнения = СпособВыполнения Тогда
					СтрокаТабличнойЧасти.СпособВыполнения = СпособВыполнения;
					СтрокаТабличнойЧасти.Исполнитель = Неопределено
				КонецЕсли;
			КонецЕсли;
			Если СтрокаТабличнойЧасти.СпособВыполнения = СпособыСтроительстваХозспособ Тогда 
				Если НЕ Подразделение = СтруктураПредприятияПустаяСсылка 
					или (Подразделение = СтруктураПредприятияПустаяСсылка и НЕ НеОчищатьИсполнителей) Тогда 
					Если СтрокаТабличнойЧасти.Исполнитель = СтруктураПредприятияПустаяСсылка
						или НЕ ТолькоДляНеустановленныхИсполнителей 
						или СтрокаТабличнойЧасти.Исполнитель = Неопределено 
						или (ТолькоДляНеустановленныхИсполнителей и СтрокаТабличнойЧасти.Исполнитель = Неопределено)Тогда 
						СтрокаТабличнойЧасти.Исполнитель = Подразделение;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли СтрокаТабличнойЧасти.СпособВыполнения = СпособыСтроительстваПодрядный Тогда 
				Если Не Контрагент = КонтрагентыПустаяСсылка
					или (Контрагент = КонтрагентыПустаяСсылка и НЕ НеОчищатьИсполнителей) Тогда 
					Если СтрокаТабличнойЧасти.Исполнитель = КонтрагентыПустаяСсылка 
						или НЕ ТолькоДляНеустановленныхИсполнителей
						или СтрокаТабличнойЧасти.Исполнитель = Неопределено 
						или (ТолькоДляНеустановленныхИсполнителей и (СтрокаТабличнойЧасти.Исполнитель = КонтрагентыПустаяСсылка или СтрокаТабличнойЧасти.Исполнитель = Неопределено))Тогда 
						СтрокаТабличнойЧасти.Исполнитель = Контрагент;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Закрыть(ТаблицаРемонтовИзППР);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервереБезКонтекста
Функция ПолучитьПредопределенныеЗначенияНаСервере()
	
	Возврат Новый Структура("СпособыСтроительстваПустаяСсылка, СпособыСтроительстваХозспособ, СпособыСтроительстваПодрядный, СтруктураПредприятияПустаяСсылка, КонтрагентыПустаяСсылка",
	Перечисления.СпособыСтроительства.ПустаяСсылка(), Перечисления.СпособыСтроительства.Хозспособ, Перечисления.СпособыСтроительства.Подрядный, Справочники.СтруктураПредприятия.ПустаяСсылка(), Справочники.Контрагенты.ПустаяСсылка());
	
Конецфункции

&НаКлиенте
Процедура УстановитьДоступностьКонтрагентаПодразделения()
	
	СпособВыполненияЗаполнен = ЗначениеЗаполнено(СпособВыполнения);
	ДоступностьЭлементов = (СпособВыполнения = ПредопределенноеЗначение("Перечисление.СпособыСтроительства.Хозспособ"));
	Элементы.Контрагент.Доступность = СпособВыполненияЗаполнен И НЕ ДоступностьЭлементов;
	Элементы.Подразделение.Доступность = СпособВыполненияЗаполнен И ДоступностьЭлементов;
	
	Если НЕ Элементы.Контрагент.Доступность Тогда
		Контрагент = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	КонецЕсли;
	
	Если НЕ Элементы.Подразделение.Доступность Тогда
		Подразделение = ПредопределенноеЗначение("Справочник.СтруктураПредприятия.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
