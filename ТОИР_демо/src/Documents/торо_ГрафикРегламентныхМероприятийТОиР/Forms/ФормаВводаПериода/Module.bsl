
#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Элементы.ТПОтборПечатнойФормыЗначение.ВыбиратьТип=Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НоваяСтрока=ТПОтборПечатнойФормы.Добавить();	
	НоваяСтрока.Имя="Список объектов регламентного мероприятия";
	НоваяСтрока.Значение=Справочники.торо_СписокОбъектовРегламентногоМероприятия.ПустаяСсылка();
	
	НоваяСтрока=ТПОтборПечатнойФормы.Добавить();
	НоваяСтрока.Имя="Вид мероприятия";
	НоваяСтрока.Значение=Справочники.торо_ВидыРемонтов.ПустаяСсылка();
		
	ПланГрафикРемонта=Параметры.ДокППР;
	
	НачПерПоян = ПланГрафикРемонта.ДатаПланирования;
	КонПерПоян =РассчитатьДатуОкончанияПланирования(ПланГрафикРемонта);

	ТекГод = Год(ТекущаяДата());
	Элементы.ИнтервалРазбиения.СписокВыбора.Добавить("Год");
	Элементы.ИнтервалРазбиения.СписокВыбора.Добавить("Месяц");
	Элементы.ИнтервалРазбиения.СписокВыбора.Добавить("Неделя");
	Элементы.ИнтервалРазбиения.СписокВыбора.Добавить("День");
	ИнтервалРазбиения = "Месяц";
 	
	ПериодНач=НачПерПоян;
	ПериодКон=КонПерПоян;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ПериодНачПриИзменении(Элемент)
	ПериодНачПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПериодКонПриИзменении(Элемент)
	ПериодКонПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалРазбиенияПриИзменении(Элемент)
	
	Если ИнтервалРазбиения = "Год" Тогда		
	ИначеЕсли ИнтервалРазбиения = "Месяц" Тогда			
	ИначеЕсли ИнтервалРазбиения = "Неделя" Тогда		
	ИначеЕсли ИнтервалРазбиения = "День" Тогда
		Если (НачалоДня(ПериодКон) - НачалоДня(ПериодНач))/(60*60*24)>=31*3 тогда 
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Детализация для такого периода не допустима по дням.'"));
			ИнтервалРазбиения = "Неделя";	
		КонецЕсли;
	Иначе
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Детализация для такого периода не допустима.'"));
		ИнтервалРазбиения = "Месяц";	
	КонецЕсли;	
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Печать(Команда)
	
	ПередатьПараметр = Новый Структура;
	ПередатьПараметр.Вставить("ДатаНачала",ПериодНач);
	ПередатьПараметр.Вставить("ДатаКонца",ПериодКон);	
	ПередатьПараметр.Вставить("ИнтервалРазбиения",ИнтервалРазбиения);
	ПередатьПараметр.Вставить("ОтборФормы",ТПОтборПечатнойФормы);
		
	Оповестить(КлючНазначенияИспользования, ПередатьПараметр, ЭтаФорма.ВладелецФормы);
	Закрыть();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТПОтборПечатнойФормы
&НаКлиенте
Процедура ТПОтборПечатнойФормыВидСравненияПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТПОтборПечатнойФормы.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ТекДанные.Значение <> Неопределено Тогда
		НеобходимСписок = (ТекДанные.ВидСравнения = ВидСравнения.ВСписке Или ТекДанные.ВидСравнения = ВидСравнения.НеВСписке Или ТекДанные.ВидСравнения = ВидСравнения.ВСпискеПоИерархии);
		
		Если Не НеобходимСписок И ТипЗнч(ТекДанные.Значение) = Тип("СписокЗначений") Тогда
			Если ТекДанные.Значение.Количество() > 0 Тогда
				ТекДанные.Значение = ТекДанные.Значение[0].Значение;
			Иначе
				ТекДанные.Значение = ПредопределенноеЗначение(?(ТекДанные.Имя = "Список объектов регламентного мероприятия", "Справочник.торо_СписокОбъектовРегламентногоМероприятия.ПустаяСсылка", "Справочник.торо_ВидыРемонтов.ПустаяСсылка"));
			КонецЕсли;
		ИначеЕсли НеобходимСписок И Не ТипЗнч(ТекДанные.Значение) = Тип("СписокЗначений") Тогда
			НеобходимыйСписок = Новый СписокЗначений;
			НеобходимыйСписок.ТипЗначения = ?(ТекДанные.Имя = "Список объектов регламентного мероприятия",Новый ОписаниеТипов("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия"), Новый ОписаниеТипов("СправочникСсылка.торо_ВидыРемонтов"));
			Если ЗначениеЗаполнено(ТекДанные.Значение) Тогда
				НеобходимыйСписок.Добавить(ТекДанные.Значение);
			КонецЕсли;
			ТекДанные.Значение = НеобходимыйСписок;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция рассчитывает дату окончания периода планирования.
//
Функция РассчитатьДатуОкончанияПланирования(ПланГрафикРемонта)
	
	Если ЗначениеЗаполнено(ПланГрафикРемонта.ПериодичностьДетализации) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&ДатаНачала, " + Строка(ПланГрафикРемонта.ПериодичностьДетализации) + ", "+?(ПланГрафикРемонта.КоличествоПериодов=0,1,ПланГрафикРемонта.КоличествоПериодов)+") КАК ДатаОкончания";
		
		Запрос.УстановитьПараметр("ДатаНачала", ПланГрафикРемонта.ДатаПланирования);
		
		Попытка
			Выборка = Запрос.Выполнить().Выбрать();
		Исключение
			Возврат Дата(3999,12,31,23,59,59);
		КонецПопытки;
		
		Если Выборка.Следующий() Тогда
			
			Возврат ?(ПланГрафикРемонта.ПериодичностьДетализации = Перечисления.Периодичность.День, Выборка.ДатаОкончания-1, НачалоДня(Выборка.ДатаОкончания)-1);
			
		КонецЕсли;
		
	Иначе 	
		
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбран период планирования!'"), СтатусСообщения.Важное);
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПериодНачПриИзмененииНаСервере()
	Если ПериодНач > ПериодКон тогда
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Дата начала периода не может быть больше даты его начала.'"));
		ПериодНач = НачПерПоян;
		Возврат;
	КонецЕсли;	
	Если ПериодНач < НачПерПоян или ПериодНач > КонПерПоян Тогда
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введенная дата находится за пределами возможного диапазона.'"));
		ПериодНач = НачПерПоян;
		Возврат;
	КонецЕсли;
	Если ((НачалоДня(ПериодКон) - НачалоДня(ПериодНач))/(60*60*24)>=31*3) И
		(ИнтервалРазбиения = Перечисления.Периодичность.День) тогда 
		    торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Детализация для такого периода не допустима по дням!'"));
			Элементы.ПолеВыбораИнтервала.Значение = "Неделя";
			ИнтервалРазбиения = Перечисления.Периодичность.Неделя;	
		Возврат;	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПериодКонПриИзмененииНаСервере()
	Если ПериодКон < ПериодНач тогда
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Дата конца периода не может быть меньше даты его начала.'"));
		ПериодКон = КонПерПоян;
		Возврат;
	КонецЕсли;	
	Если ПериодКон < НачПерПоян или ПериодКон > КонПерПоян Тогда
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введенная дата находится за пределами возможного диапазона.'"));
		ПериодКон = КонПерПоян;
		Возврат;
	КонецЕсли;
	Если ((НачалоДня(ПериодКон) - НачалоДня(ПериодНач))/(60*60*24)>=31*3) И
		(ИнтервалРазбиения = Перечисления.Периодичность.День) тогда 
		    торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Детализация для такого периода не допустима по дням!'"));
			Элементы.ПолеВыбораИнтервала.Значение = "Неделя";
			ИнтервалРазбиения = Перечисления.Периодичность.Неделя;
			Возврат;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

