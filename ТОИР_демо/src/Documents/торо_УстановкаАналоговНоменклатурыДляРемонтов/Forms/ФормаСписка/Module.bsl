
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	ОтборыСписковКлиентСервер.СкопироватьСписокВыбораОтбораПоМенеджеру(
		Элементы.ОтветственныйОтбор.СписокВыбора,
		ОбщегоНазначенияУТ.ПолучитьСписокПользователейПоМассивуРолей(Документы.торо_УстановкаАналоговНоменклатурыДляРемонтов.ИменаРолейСПравомДобавления()));
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокРазрешений, "ОтборПоОбъектуРемонта", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокРазрешений, "РазрешенияНоменклатура", Справочники.торо_ОбъектыРемонта.ПустаяСсылка());
	
	УстановитьОтборПоНоменклатуре();
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидРемонтаОтборПриИзменении(Элемент)
	УстановитьОтборПоВидуРемонта();
КонецПроцедуры

&НаКлиенте
Процедура ТехКартаОтборПриИзменении(Элемент)
	УстановитьОтборПоТехКарте();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектРемонтаПриИзменении(Элемент)
	УстановитьОтборПоОбъектуРемонта();
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	УстановитьОтборПоОтветственному();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОтборПриИзменении(Элемент)
	УстановитьОтборПоНоменклатуре();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Номер.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Дата.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.УказаниеПоПрименению.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВидРемонта.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДатаНачалаДействия.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДатаОкончанияДействия.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Ответственный.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Ответственный.Имя);

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.НейтральноСерый);

КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоВидуРемонта()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокРазрешений,
		"ВидРемонта",
		ВидРемонта,
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(ВидРемонта));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоТехКарте()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокРазрешений,
		"ТехКарта",
		ТехКарта,
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(ТехКарта));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоОтветственному()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокРазрешений,
		"Ответственный",
		Ответственный,
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(Ответственный));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоОбъектуРемонта()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокРазрешений,
		"ОбъектРемонта",
		ОбъектРемонта,
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(ОбъектРемонта));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоНоменклатуре()
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокРазрешений, "ОтборПоНоменклатуре", Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокРазрешений, "РазрешенияНоменклатура", Номенклатура);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокРазрешений, "ОтборПоНоменклатуре", Ложь);
	КонецЕсли;
	
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(Перечисления.ИспользованиеНоменклатурыВНСИПроизводства.Аналог);
	СписокЗначений.Добавить(Перечисления.ИспользованиеНоменклатурыВНСИПроизводства.Материал);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокРазрешений,
		"ИспользуетсяКак",
		СписокЗначений,
		ВидСравненияКомпоновкиДанных.ВСписке,
		, // Представление - автоматически
		ЗначениеЗаполнено(ОбъектРемонта));

КонецПроцедуры

#КонецОбласти
