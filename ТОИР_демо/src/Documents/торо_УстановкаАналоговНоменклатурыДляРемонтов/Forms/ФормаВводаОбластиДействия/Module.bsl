////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ
&НаКлиенте
Перем ПроисходитЗакрытиеФормы;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СписокСвойств = "Организация, ВидРемонта, Подразделение, ТехКарта, ОбъектРемонта, НаправлениеОбъектаРемонта, КоличествоМатериалов";
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, СписокСвойств);
	
	Если ЗначениеЗаполнено(ОбъектРемонта) Тогда
		РежимОРНаправление = 1;
	КонецЕсли;
	
	ИспользоватьОрганизация = ЗначениеЗаполнено(Организация);
	ИспользоватьВидРемонта = ЗначениеЗаполнено(ВидРемонта);
	ИспользоватьПодразделение = ЗначениеЗаполнено(Подразделение);
	ИспользоватьНаправление = ЗначениеЗаполнено(НаправлениеОбъектаРемонта);
	ИспользоватьТК = ЗначениеЗаполнено(ТехКарта);
	
	ДляВсехОР = НЕ ИспользоватьОрганизация И НЕ ЗначениеЗаполнено(ОбъектРемонта) И НЕ ЗначениеЗаполнено(НаправлениеОбъектаРемонта);
	ДляВсехРемонтов = НЕ ИспользоватьПодразделение И НЕ ИспользоватьВидРемонта И НЕ ИспользоватьТК;
	
	РежимПриОткрытии = РежимОРНаправление;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Перенести изменения в документ?'");
		Если Не ПроисходитЗакрытиеФормы Тогда
			ПроисходитЗакрытиеФормы = Истина;
			Отказ = Истина;
			Если НЕ ЗавершениеРаботы Тогда
				СтандартнаяОбработка = Ложь;
				ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение",ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступность();
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьОрганизацияПриИзменении(Элемент)
	Элементы.Организация.Доступность = ИспользоватьОрганизация;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВидРемонтаПриИзменении(Элемент)
	Элементы.ВидРемонта.Доступность = ИспользоватьВидРемонта;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПодразделениеПриИзменении(Элемент)
	Элементы.Подразделение.Доступность = ИспользоватьПодразделение;
КонецПроцедуры

&НаКлиенте
Процедура Поле1ПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура Поле2ПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ВсеОРПриИзменении(Элемент)
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТКПриИзменении(Элемент)
	Элементы.ТехКарта.Доступность = ИспользоватьТК;
КонецПроцедуры

&НаКлиенте
Процедура ДляВсехРемонтовПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНаправлениеПриИзменении(Элемент)
	Элементы.НаправлениеОбъектаРемонта.Доступность = ИспользоватьНаправление;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Модифицированность Тогда
		ЗавершитьРедактирование();
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция РезультатРедактированияНаСервере()
	
	Результат = Новый Структура;
	
	// Ограничения по ОР
	Результат.Вставить("Организация", ?(НЕ ДляВсехОР И РежимОР = 0 И ИспользоватьОрганизация И ЗначениеЗаполнено(Организация),
		Организация, Справочники.Организации.ПустаяСсылка()));
	Результат.Вставить("ОбъектРемонта", ?(НЕ ДляВсехОР И РежимОР = 1 И ЗначениеЗаполнено(ОбъектРемонта),
		ОбъектРемонта, Справочники.торо_ОбъектыРемонта.ПустаяСсылка()));
	Результат.Вставить("НаправлениеОбъектаРемонта", ?(НЕ ДляВсехОР И РежимОР = 0 И ИспользоватьНаправление И ЗначениеЗаполнено(НаправлениеОбъектаРемонта),
		НаправлениеОбъектаРемонта, Справочники.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка()));		
		
	// Ограничения по ВР	
	Результат.Вставить("ВидРемонта", ?(НЕ ДляВсехРемонтов И ИспользоватьВидРемонта И ЗначениеЗаполнено(ВидРемонта),
		ВидРемонта, Справочники.торо_ВидыРемонтов.ПустаяСсылка()));
	Результат.Вставить("Подразделение", ?(НЕ ДляВсехРемонтов И ИспользоватьПодразделение И ЗначениеЗаполнено(Подразделение),
		Подразделение, Справочники.СтруктураПредприятия.ПустаяСсылка()));
	Результат.Вставить("ТехКарта", ?(НЕ ДляВсехРемонтов И ИспользоватьТК И ЗначениеЗаполнено(ТехКарта),
		ТехКарта, Справочники.торо_ИдентификаторыТехКарт.ПустаяСсылка()));
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьРедактирование(Отказ = Ложь)
	
	// Проверка заполнения
	ОчиститьСообщения();
	
	Если НЕ ДляВсехОР Тогда
		Если ИспользоватьОрганизация и Не ЗначениеЗаполнено(Организация) Тогда
			ТекстОшибки = Нстр("ru = 'Поле ""Организация"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Организация", , Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ДляВсехРемонтов Тогда
		Если ИспользоватьПодразделение и Не ЗначениеЗаполнено(Подразделение) Тогда
			ТекстОшибки = Нстр("ru = 'Поле ""Подразделение"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "Подразделение", , Отказ);
		КонецЕсли;
		
		Если ИспользоватьВидРемонта и Не ЗначениеЗаполнено(ВидРемонта) Тогда
			ТекстОшибки = Нстр("ru = 'Поле ""Вид ремонта"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "ВидРемонта", , Отказ);
		КонецЕсли;
		
		Если ИспользоватьТК и Не ЗначениеЗаполнено(ТехКарта) Тогда
			ТекстОшибки = Нстр("ru = 'Поле ""Технологическая карта"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , "ТехКарта", , Отказ);
		КонецЕсли;
	КонецЕсли;
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	СтруктураВыбора = Новый Структура();
	СтруктураВыбора.Вставить("ВыполняемаяОперация", "ВыборОбластиДействия");
	СтруктураВыбора.Вставить("ЗначениеВыбора", РезультатРедактированияНаСервере());
	
	ОповеститьОВыборе(СтруктураВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()
	
	Если ДляВсехОР Тогда
		Элементы.ИспользоватьОрганизация.Доступность = Ложь;
		Элементы.ИспользоватьНаправление.Доступность = Ложь;
		Элементы.Организация.Доступность = Ложь;
		Элементы.Поле1.Доступность = Ложь;
		Элементы.ОбъектРемонта.Доступность = Ложь;
		Элементы.Поле2.Доступность = Ложь;
		Элементы.НаправлениеОбъектаРемонта.Доступность = Ложь;
	Иначе
		Элементы.ИспользоватьОрганизация.Доступность = РежимОР = 0;
		Элементы.ИспользоватьНаправление.Доступность = РежимОР = 0;
		Элементы.Организация.Доступность = ИспользоватьОрганизация И (РежимОР = 0);
		Элементы.НаправлениеОбъектаРемонта.Доступность = ИспользоватьНаправление И (РежимОР = 0);
		Элементы.Поле1.Доступность = Истина;
		Элементы.ОбъектРемонта.Доступность = РежимОР = 1;
		Элементы.Поле2.Доступность = Истина;
		
	КонецЕсли;
	
	Если ДляВсехРемонтов Тогда
		Элементы.ИспользоватьПодразделение.Доступность = Ложь;
		Элементы.ИспользоватьВидРемонта.Доступность = Ложь;
		Элементы.ИспользоватьТК.Доступность = Ложь;
		Элементы.ТехКарта.Доступность = Ложь;
		Элементы.ВидРемонта.Доступность = Ложь;
		Элементы.Подразделение.Доступность = Ложь;
	Иначе
		Элементы.ИспользоватьПодразделение.Доступность = Истина;
		Элементы.ИспользоватьВидРемонта.Доступность = Истина;
		Элементы.ИспользоватьТК.Доступность = Истина;
		Элементы.ТехКарта.Доступность = ИспользоватьТК;
		Элементы.ВидРемонта.Доступность = ИспользоватьВидРемонта;
		Элементы.Подразделение.Доступность = ИспользоватьПодразделение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса,ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Отказ = Ложь;
		ПроисходитЗакрытиеФормы = Истина;
		ЗавершитьРедактирование(Отказ);
		Если Отказ Тогда
			ПроисходитЗакрытиеФормы = Ложь;
		КонецЕсли;
	Иначе
		ПроисходитЗакрытиеФормы = Истина;
		Закрыть();
	КонецЕсли;
		
	
КонецПроцедуры

ПроисходитЗакрытиеФормы = Ложь;
#КонецОбласти

