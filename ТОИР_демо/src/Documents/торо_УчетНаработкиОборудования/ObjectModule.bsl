#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ

Перем мТаблицаСбросаСчетчика Экспорт; // Хранит таблицу значений, используется для работы с документом торо_УстановкаПроизвольногоЗначенияНаработки. 
перем СтруктураДанных Экспорт; // Структура, хранящая данные для работы с уведомлениями.
Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа

#Область ОбработчикиСобытий
// Процедура - обработчик события "ОбработкаПроведения".
// Проводит проведение по "торо_НаработкаОбъектовРемонта".
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	мТаблицаСбросаСчетчика = Новый ТаблицаЗначений;
	мТаблицаСбросаСчетчика.Колонки.Добавить("ОбъектРемонта");
	мТаблицаСбросаСчетчика.Колонки.Добавить("Показатель");
	мТаблицаСбросаСчетчика.Колонки.Добавить("ДатаРаботыПо");
	мТаблицаСбросаСчетчика.Колонки.Добавить("КоличествоСбросовСчетчика");
	мТаблицаСбросаСчетчика.Колонки.Добавить("НовоеЗначениеАбсолютное");
	мТаблицаСбросаСчетчика.Колонки.Добавить("Наработка");
	мТаблицаСбросаСчетчика.Колонки.Добавить("НовоеЗначение");
	мТаблицаСбросаСчетчика.Колонки.Добавить("РодительИерархии");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(торо_МаксимальныеЗначенияНаработкиОР.МаксимальноеЗначение, 0) КАК МаксимальноеЗначение,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыПо,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.НовоеЗначение,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.СтароеЗначение,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Наработка
	|ИЗ
	|	Документ.торо_УчетНаработкиОборудования.НаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_МаксимальныеЗначенияНаработкиОР КАК торо_МаксимальныеЗначенияНаработкиОР
	|		ПО торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект = торо_МаксимальныеЗначенияНаработкиОР.ОбъектРемонта
	|			И торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель = торо_МаксимальныеЗначенияНаработкиОР.Показатель
	|ГДЕ
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(торо_МаксимальныеЗначенияНаработкиОР.МаксимальноеЗначение, 0),
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыПо,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.НовоеЗначение,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.СтароеЗначение,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Наработка
	|ИЗ
	|	Документ.торо_УчетНаработкиОборудования.НаработкаПодчиненныхОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_МаксимальныеЗначенияНаработкиОР КАК торо_МаксимальныеЗначенияНаработкиОР
	|		ПО торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект = торо_МаксимальныеЗначенияНаработкиОР.ОбъектРемонта
	|			И торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель = торо_МаксимальныеЗначенияНаработкиОР.Показатель
	|ГДЕ
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.МаксимальноеЗначение <> 0 И Выборка.СтароеЗначение + Выборка.Наработка > Выборка.МаксимальноеЗначение Тогда
			КоличествоСбросовСчетчика = Цел((Выборка.СтароеЗначение + Выборка.Наработка) / Выборка.МаксимальноеЗначение);
			НовоеЗначениеАбсолютное = Выборка.СтароеЗначение + Выборка.Наработка;
			
			НС = мТаблицаСбросаСчетчика.Добавить();
			НС.ОбъектРемонта = Выборка.Объект;
			НС.Показатель = Выборка.Показатель;
			НС.ДатаРаботыПо = Выборка.ДатаРаботыПо;
			НС.КоличествоСбросовСчетчика = КоличествоСбросовСчетчика;
			НС.НовоеЗначениеАбсолютное = НовоеЗначениеАбсолютное;
			НС.Наработка = Выборка.Наработка;
			НС.НовоеЗначение = Выборка.НовоеЗначение;
			
		КонецЕсли;
	КонецЦикла;
	
	Если мТаблицаСбросаСчетчика.Количество() > 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_УстановкаПроизвольногоЗначенияНаработки.Ссылка
		|ИЗ
		|	Документ.торо_УстановкаПроизвольногоЗначенияНаработки КАК торо_УстановкаПроизвольногоЗначенияНаработки
		|ГДЕ
		|	торо_УстановкаПроизвольногоЗначенияНаработки.ДокументОснование = &ДокументОснование
		|	И торо_УстановкаПроизвольногоЗначенияНаработки.Проведен";
		
		Запрос.УстановитьПараметр("ДокументОснование", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда		
			Попытка
				
				ДокСбросНаработки = Документы.торо_УстановкаПроизвольногоЗначенияНаработки.СоздатьДокумент();
				ДокСбросНаработки.Дата = ТекущаяДата();
				ДокСбросНаработки.Организация = Организация;
				ДокСбросНаработки.Подразделение = Подразделение;
				ДокСбросНаработки.Ответственный = Ответственный;
				ДокСбросНаработки.ДокументОснование = Ссылка;
				
				Для каждого СтрокаТаблицы Из мТаблицаСбросаСчетчика Цикл
					НС = ДокСбросНаработки.НаработкаОбъектов.Добавить();
					НС.ОбъектРемонта = СтрокаТаблицы.ОбъектРемонта;
					НС.Показатель = СтрокаТаблицы.Показатель;
					НС.ДатаПоследнейНаработки = СтрокаТаблицы.ДатаРаботыПо;
					НС.ЗафиксированнаяНаработка = СтрокаТаблицы.НовоеЗначениеАбсолютное;
					НС.ДатаИВремяОперации = СтрокаТаблицы.ДатаРаботыПо;
					НС.НаработкаДоОперации = СтрокаТаблицы.НовоеЗначениеАбсолютное;
					НС.Наработка = 0;
					НС.АбсолютнаяНаработка = торо_РаботаСНаработкой.АбсолютноеЗначениеНаработки(Ссылка, НС.ОбъектРемонта,НС.Показатель) + СтрокаТаблицы.Наработка; 
					НС.НаработкаПослеОперации = СтрокаТаблицы.НовоеЗначение;
					НС.ПричинаИзмененияНаработки = Справочники.торо_ПричиныИзмененияНаработки.ПревышениеРазрядностиПрибораУчета;
				КонецЦикла;
				
				ДокСбросНаработки.Записать(РежимЗаписиДокумента.Проведение);
				
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Сформирован документ %1 в связи с превышением разрядности приборов учета.'"),ДокСбросНаработки.Ссылка));
			Исключение
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИнформацияОбОшибке().Причина);
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Проведение отменено, так как не удалось провести документ ""Установка произвольного значения наработки"", сбрасывающий показания счетчика.'"));
				Отказ = Истина;
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;	
	
	Если Не Отказ Тогда
		
		Для Каждого ТекСтрокаНаработкаОбъектов Из НаработкаОбъектов Цикл
			
			ДвижениеПриход = Движения.торо_НаработкаОбъектовРемонта.Добавить();
            ДвижениеПриход.ВидДвижения   = ВидДвиженияНакопления.Приход;
            ДвижениеПриход.Период        = ТекСтрокаНаработкаОбъектов.ДатаРаботыПо;
            ДвижениеПриход.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.Объект;
            ДвижениеПриход.Показатель    = ТекСтрокаНаработкаОбъектов.Показатель;
            ДвижениеПриход.Наработка     = ТекСтрокаНаработкаОбъектов.Наработка;
            ДвижениеПриход.ДатаКон       = ТекСтрокаНаработкаОбъектов.ДатаРаботыПо;
            ДвижениеПриход.ДатаНач       = ТекСтрокаНаработкаОбъектов.ДатаРаботыС;
				
				
			Движение = Движения.торо_ПериодыНаработкиОР.Добавить();
				Движение.Период = ТекСтрокаНаработкаОбъектов.ДатаРаботыПо;
				Движение.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.Объект;
				Движение.Показатель = ТекСтрокаНаработкаОбъектов.Показатель;
		КонецЦикла;
		
		Для Каждого ТекСтрокаНаработкаОбъектов Из НаработкаПодчиненныхОбъектов Цикл
			
			ДвижениеПриход = Движения.торо_НаработкаОбъектовРемонта.Добавить();
            ДвижениеПриход.ВидДвижения   = ВидДвиженияНакопления.Приход;
            ДвижениеПриход.Период        = ТекСтрокаНаработкаОбъектов.ДатаРаботыПо;
            ДвижениеПриход.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.Объект;
            ДвижениеПриход.Показатель    = ТекСтрокаНаработкаОбъектов.Показатель;
            ДвижениеПриход.Наработка     = ТекСтрокаНаработкаОбъектов.Наработка;
            ДвижениеПриход.ДатаКон       = ТекСтрокаНаработкаОбъектов.ДатаРаботыПо;
            ДвижениеПриход.ДатаНач       = ТекСтрокаНаработкаОбъектов.ДатаРаботыС;
				
			Движение = Движения.торо_ПериодыНаработкиОР.Добавить();
				Движение.Период = ТекСтрокаНаработкаОбъектов.ДатаРаботыПо;
				Движение.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.Объект;
				Движение.Показатель = ТекСтрокаНаработкаОбъектов.Показатель;
		КонецЦикла;
		
		// записываем движения регистров
		Движения.торо_НаработкаОбъектовРемонта.Записать();
		Движения.торо_ПериодыНаработкиОР.Записать();
		
	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если НаработкаОбъектов.Количество() = 0 Тогда
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В документе не заполнена табличная часть наработки оборудования. Проведение невозможно!'"));
			Отказ = истина;
			Возврат;
		КонецЕсли;
		
		Для каждого Строка Из НаработкаОбъектов Цикл
			
			Если Строка.Объект = Справочники.торо_ОбъектыРемонта.ПустаяСсылка() Тогда
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: Значение ""Объекта"" должно быть заполнено'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
				Отказ = Истина;
			ИначеЕсли Строка.ДатаРаботыПо = Дата("00010101000000") Тогда
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: Значение ""Дата работы По"" должно быть заполнено'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
				Отказ = Истина;
			ИначеЕсли Строка.ДатаРаботыС > Строка.ДатаРаботыПо Тогда
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: Значение ""Дата работы По"" должно быть больше чем ""Дата работы С""'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
				Отказ = Истина;
			ИначеЕсли Не ЗначениеЗаполнено(Строка.Показатель) Тогда
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: Значение Показателя наработки должно быть заполнено'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
				Отказ = Истина;
			ИначеЕсли Строка.Наработка <= 0 Тогда
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: Значение Наработки должно быть больше нуля'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
				Отказ = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		// Заголовок для сообщений об ошибках проведения.
		Заголовок = торо_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
		
		// Проверить заполнение шапки документа.
		ПроверитьЗаполнениеШапки(Отказ, Заголовок);
		
		Если НЕ Отказ Тогда
			
			// Проверка, что при вводе данного документа не получится интервала с "незаполненным" значением наработки.
			Если НЕ Проведен И Модифицированность() Тогда
				
				УстановитьУправляемыеБлокировки(РежимЗаписи);
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	НаработкаОбъектов.Объект КАК Объект,
				               |	НаработкаОбъектов.Показатель КАК Показатель,
				               |	НаработкаОбъектов.ДатаРаботыС КАК ДатаРаботыС
				               |ПОМЕСТИТЬ НаработкаОбъектов
				               |ИЗ
				               |	&НаработкаОбъектов КАК НаработкаОбъектов
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	НаработкаПодчиненныхОбъектов.Объект КАК Объект,
				               |	НаработкаПодчиненныхОбъектов.Показатель КАК Показатель,
				               |	НаработкаПодчиненныхОбъектов.ДатаРаботыС КАК ДатаРаботыС
				               |ПОМЕСТИТЬ НаработкаПодчиненныхОбъектов
				               |ИЗ
				               |	&НаработкаПодчиненныхОбъектов КАК НаработкаПодчиненныхОбъектов
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ВЫРАЗИТЬ(НаработкаОбъектов.Объект КАК Справочник.торо_ОбъектыРемонта) КАК Объект,
				               |	НаработкаОбъектов.Показатель КАК Показатель,
				               |	НаработкаОбъектов.ДатаРаботыС КАК ДатаРаботыС
				               |ПОМЕСТИТЬ торо_УчетНаработкиОборудованияНаработкаОбъектов
				               |ИЗ
				               |	НаработкаОбъектов КАК НаработкаОбъектов
				               |
				               |ОБЪЕДИНИТЬ ВСЕ
				               |
				               |ВЫБРАТЬ
				               |	ВЫРАЗИТЬ(НаработкаПодчиненныхОбъектов.Объект КАК Справочник.торо_ОбъектыРемонта),
				               |	НаработкаПодчиненныхОбъектов.Показатель,
				               |	НаработкаПодчиненныхОбъектов.ДатаРаботыС
				               |ИЗ
				               |	НаработкаПодчиненныхОбъектов КАК НаработкаПодчиненныхОбъектов
				               |
				               |ИНДЕКСИРОВАТЬ ПО
				               |	Объект,
				               |	Показатель
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	торо_ПериодыНаработкиОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
				               |	торо_ПериодыНаработкиОРСрезПоследних.Показатель КАК Показатель,
				               |	торо_ПериодыНаработкиОРСрезПоследних.Период КАК ДатаКон
				               |ПОМЕСТИТЬ ВТ_Даты
				               |ИЗ
				               |	РегистрСведений.торо_ПериодыНаработкиОР.СрезПоследних(
				               |			,
				               |			(ОбъектРемонта, Показатель) В
				               |					(ВЫБРАТЬ
				               |						торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект КАК Объект,
				               |						торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель
				               |					ИЗ
				               |						торо_УчетНаработкиОборудованияНаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов)
				               |				И Регистратор <> &Ссылка) КАК торо_ПериодыНаработкиОРСрезПоследних
				               |
				               |ИНДЕКСИРОВАТЬ ПО
				               |	ОбъектРемонта,
				               |	Показатель
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект КАК Объект,
				               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель,
				               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыС КАК ДатаРаботыС,
				               |	ЕСТЬNULL(ВТ_Даты.ДатаКон, торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект.ДатаВводаВЭксплуатацию) КАК ДатаКон
				               |ИЗ
				               |	торо_УчетНаработкиОборудованияНаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
				               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Даты КАК ВТ_Даты
				               |		ПО торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект = ВТ_Даты.ОбъектРемонта
				               |			И торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель = ВТ_Даты.Показатель
				               |ГДЕ
				               |	ЕСТЬNULL(ВТ_Даты.ДатаКон, торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект.ДатаВводаВЭксплуатацию) <> торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыС";
				
				Запрос.УстановитьПараметр("Ссылка", Ссылка);
				Запрос.УстановитьПараметр("НаработкаОбъектов", НаработкаОбъектов);
				Запрос.УстановитьПараметр("НаработкаПодчиненныхОбъектов", НаработкаПодчиненныхОбъектов);
				РезультатЗапроса = Запрос.Выполнить();
				Если Не РезультатЗапроса.Пустой() Тогда
					Отказ = Истина;
					ВыборкаНаработокСОшибками = РезультатЗапроса.Выбрать();
					Пока ВыборкаНаработокСОшибками.Следующий() Цикл
						Если ВыборкаНаработокСОшибками.ДатаКон = ВыборкаНаработокСОшибками.Объект.ДатаВводаВЭксплуатацию Тогда 
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Для объекта ремонта ""%1"" не зафиксировано значение наработки ""%2"", дата ввода объекта в эксплуатацию: %3,
								|	поле ""Дата работы с"" в документе заполнено неверно! Проверьте корректность заполнения данного поля табличной части документа.'"),
								ВыборкаНаработокСОшибками.Объект,ВыборкаНаработокСОшибками.Показатель,ВыборкаНаработокСОшибками.ДатаКон);
						Иначе
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Для объекта ремонта ""%1"" зафиксировано значение наработки ""%2"", на %3,
								|	поле ""Дата работы с"" в документе заполнено неверно! Проверьте корректность заполнения данного поля табличной части документа.'"),
								ВыборкаНаработокСОшибками.Объект,ВыборкаНаработокСОшибками.Показатель,ВыборкаНаработокСОшибками.ДатаКон);
						КонецЕсли;
						торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					КонецЦикла;
					Возврат;
				КонецЕсли;
				
			КонецЕсли;	
		КонецЕсли;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
		УстановитьУправляемыеБлокировки(РежимЗаписи);
		
		// Проверка, что при вводе данного документа не получится интервала с "незаполненным" значением наработки.
		МВТ = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МВТ;
		Запрос.Текст = "ВЫБРАТЬ
		               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект КАК Объект,
		               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель,
		               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыПо КАК ДатаРаботыПо
		               |ПОМЕСТИТЬ НаработкаОбъектов
		               |ИЗ
		               |	&НаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.Объект КАК Объект,
		               |	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.Показатель КАК Показатель,
		               |	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.ДатаРаботыПо КАК ДатаРаботыПо
		               |ПОМЕСТИТЬ НаработкаПодчиненныхОбъектов
		               |ИЗ
		               |	&НаработкаПодчиненныхОбъектов КАК торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НаработкаОбъектов.Объект КАК Объект,
		               |	НаработкаОбъектов.Показатель КАК Показатель,
		               |	НаработкаОбъектов.ДатаРаботыПо КАК ДатаРаботыПо
		               |ПОМЕСТИТЬ торо_УчетНаработкиОборудованияНаработкаОбъектов
		               |ИЗ
		               |	НаработкаОбъектов КАК НаработкаОбъектов
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	НаработкаПодчиненныхОбъектов.Объект,
		               |	НаработкаПодчиненныхОбъектов.Показатель,
		               |	НаработкаПодчиненныхОбъектов.ДатаРаботыПо
		               |ИЗ
		               |	НаработкаПодчиненныхОбъектов КАК НаработкаПодчиненныхОбъектов";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("НаработкаОбъектов", НаработкаОбъектов);
		Запрос.УстановитьПараметр("НаработкаПодчиненныхОбъектов", НаработкаПодчиненныхОбъектов);
		Запрос.Выполнить();
		
		РезультатЗапроса = торо_РаботаСНаработкой.ПолучитьОбъектыРемонтаСНаработкойВБудущем(МВТ, Ссылка);
		Если Не РезультатЗапроса.Пустой() Тогда
			Отказ = Истина;
			ВыборкаНаработокСОшибками = РезультатЗапроса.Выбрать();
			Пока ВыборкаНаработокСОшибками.Следующий() Цикл
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для объекта ремонта ""%1"" зафиксировано значение наработки ""%2"" на более позднюю дату, чем документом: по %3,'") + Символы.ПС + Символы.Таб + 
					НСтр("ru = 'Отмена проведения документа невозможна! Для выполнения действий с документом отмените проведение более поздних документов.'"),
					ВыборкаНаработокСОшибками.Объект,ВыборкаНаработокСОшибками.Показатель,ВыборкаНаработокСОшибками.ДатаКон));
			КонецЦикла;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	
	Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойОтветственный");
	Если НЕ ЗначениеЗаполнено(Ответственный) тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;	
	
	Если Основание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Основание) И НЕ ТипЗнч(Основание) = Тип("Структура") И НЕ Основание.Проведен Тогда
		мВведенНаОснованииНепроведенного=Истина;
		Возврат;
	КонецЕсли;
	 	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.торо_ВыявленныеДефекты") Тогда	
		
		Организация			= Основание.Организация;
		Подразделение		= Основание.Подразделение;
		ДокументОснование	= Основание;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ 
		|	торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта
		|ПОМЕСТИТЬ ОбъектыРемонта
		|ИЗ
		|	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
		|ГДЕ
		|	торо_ВыявленныеДефектыСписокДефектов.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ 
		|	торо_ВыявленныеДефектыСписокДефектов.ОтказавшийЭлемент
		|ИЗ
		|	Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
		|ГДЕ
		|	торо_ВыявленныеДефектыСписокДефектов.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбъектыРемонта.ОбъектРемонта КАК Объект,
		|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель
		|ИЗ
		|	ОбъектыРемонта КАК ОбъектыРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта.СрезПоследних() КАК торо_ПараметрыНаработкиОбъектовРемонта
		|		ПО ОбъектыРемонта.ОбъектРемонта = торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта";
		
		Запрос.УстановитьПараметр("Ссылка", Основание);
		НаработкаОбъектов.Загрузить(Запрос.Выполнить().Выгрузить());
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
		
		Организация			= Основание.Организация;
		Подразделение		= Основание.Подразделение;
		ДокументОснование	= Основание;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта
		|ПОМЕСТИТЬ ОбъектыРемонта
		|ИЗ
		|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		|ГДЕ
		|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбъектыРемонта.ОбъектРемонта КАК Объект,
		|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель
		|ИЗ
		|	ОбъектыРемонта КАК ОбъектыРемонта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта.СрезПоследних(, ) КАК торо_ПараметрыНаработкиОбъектовРемонта
		|		ПО ОбъектыРемонта.ОбъектРемонта = торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта";
		
		Запрос.УстановитьПараметр("Ссылка", Основание);
		НаработкаОбъектов.Загрузить(Запрос.Выполнить().Выгрузить());
		
	ИначеЕсли ТипЗнч(Основание)=Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		
		Организация = Основание.Организация;
		Подразделение = Основание.Подразделение;
		ДокументОснование	= Основание;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	торо_ВыходныеДокументы.СписокОбъектов,
		|	торо_АктОВыполненииРегламентногоМероприятияМероприятия.ID,
		|	торо_АктОВыполненииРегламентногоМероприятияМероприятия.ВидРемонтныхРабот,
		|	торо_АктОВыполненииРегламентногоМероприятияМероприятия.ДатаОкончания
		|ПОМЕСТИТЬ СпискиОР
		|ИЗ
		|	Документ.торо_АктОВыполненииРегламентногоМероприятия.Мероприятия КАК торо_АктОВыполненииРегламентногоМероприятияМероприятия
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВыходныеДокументы КАК торо_ВыходныеДокументы
		|		ПО торо_АктОВыполненииРегламентногоМероприятияМероприятия.ВидРемонтныхРабот = торо_ВыходныеДокументы.ВидМероприятия
		|ГДЕ
		|	торо_ВыходныеДокументы.ВыходнойДокумент = &ВыходнойДокумент
		|	И торо_АктОВыполненииРегламентногоМероприятияМероприятия.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов.ОбъектРемонта,
		|	СпискиОР.ВидРемонтныхРабот,
		|	СпискиОР.ДатаОкончания
		|ПОМЕСТИТЬ ТабОР
		|ИЗ
		|	СпискиОР КАК СпискиОР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииРегламентногоМероприятия.МероприятияОбъектов КАК торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов
		|		ПО СпискиОР.ID = торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов.Мероприятие_ID
		|ГДЕ
		|	торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов.Ссылка = &Ссылка
		|	И торо_АктОВыполненииРегламентногоМероприятияМероприятияОбъектов.Выполнено = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.Показатель,
		|	ТабОР.ОбъектРемонта,
		|	ТабОР.ВидРемонтныхРабот,
		|	ТабОР.ДатаОкончания КАК ДатаОкончания
		|ИЗ
		|	ТабОР КАК ТабОР
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта.СрезПоследних(&Дата, ) КАК торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних
		|		ПО ТабОР.ОбъектРемонта = торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.ОбъектРемонта
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаОкончания";
		
		Запрос.УстановитьПараметр("ВыходнойДокумент", Перечисления.торо_ВидыВыходныхДокументов.УчетНаработкиОборудования);
		Запрос.УстановитьПараметр("Ссылка", Основание);
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		
		Результат = Запрос.Выполнить();
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл	
			Если ЗначениеЗаполнено(Выборка.Показатель) Тогда
				МассивСтрок = НаработкаОбъектов.НайтиСтроки(Новый Структура("Объект, Показатель", Выборка.ОбъектРемонта, Выборка.Показатель)); 
				Если МассивСтрок.Количество() = 0 Тогда
					ЗначениеНаработки = торо_РаботаСНаработкой.ПолучитьТекущееЗначениеНаработки(Выборка.ОбъектРемонта,Выборка.Показатель,Ссылка);
					
					НС = НаработкаОбъектов.Добавить();
					НС.Объект = Выборка.ОбъектРемонта;
					НС.Показатель = Выборка.Показатель;
					НС.ДатаРаботыС = ЗначениеНаработки.НаработаноДата;
					НС.СтароеЗначение = ЗначениеНаработки.НаработаноЗначение;
					НС.ДатаРаботыПо = Выборка.ДатаОкончания;
				Иначе
					
					торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Невозможно добавить строку регистрации наработки объекта ремонта %1 с датой окончания ремонта %2, поскольку этот объект ремонта уже добавлен в документ с показателем %3.'"),Выборка.ОбъектРемонта,Выборка.ДатаОкончания,Выборка.Показатель)); 
					
				КонецЕсли;
				
			Иначе
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Объект ремонта ""%1"" не добавлен в документ, поскольку у него нет ни одного параметра наработки.'"),Выборка.ОбъектРемонта));
			КонецЕсли;			
		КонецЦикла;		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ПроверитьЗаполнениеШапки(Отказ, Заголовок)
	
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация, Подразделение");
	// Теперь вызовем общую процедуру проверки.
	торо_ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура УстановитьУправляемыеБлокировки(РежимЗаписи)
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.торо_НаработкаОбъектовРемонта");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = НаработкаОбъектов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРемонта","Объект");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Показатель","Показатель");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.торо_НаработкаОбъектовРемонта");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = НаработкаПодчиненныхОбъектов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРемонта","Объект");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Показатель","Показатель");
		
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.торо_МаксимальныеЗначенияНаработкиОР");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		ЭлементБлокировки.ИсточникДанных = НаработкаПодчиненныхОбъектов;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРемонта","Объект");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Показатель","Показатель");
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.торо_МаксимальныеЗначенияНаработкиОР");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		ЭлементБлокировки.ИсточникДанных = НаработкаОбъектов;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРемонта","Объект");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Показатель","Показатель");
		
	КонецЕсли;
	
	ЭлементБлокировки = Блокировка.Добавить("Документ.торо_УстановкаПроизвольногоЗначенияНаработки");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ПолучитьТаблицуДокументовПроизвольногоЗначенияНаработкиДляБлокировки(Ссылка);
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка","Ссылка");
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Функция ПолучитьТаблицуДокументовПроизвольногоЗначенияНаработкиДляБлокировки(ДокОсн)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_УстановкаПроизвольногоЗначенияНаработки.Ссылка
	               |ИЗ
	               |	Документ.торо_УстановкаПроизвольногоЗначенияНаработки КАК торо_УстановкаПроизвольногоЗначенияНаработки
	               |ГДЕ
	               |	торо_УстановкаПроизвольногоЗначенияНаработки.ДокументОснование = &ДокОсн";
	Запрос.УстановитьПараметр("ДокОсн",ДокОсн);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПриКопировании(ОбъектКопирования)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаДокумента.Объект КАК Объект,
	               |	ТаблицаДокумента.Показатель КАК Показатель,
	               |	ТаблицаДокумента.РаспространятьНаПодчиненных КАК РаспространятьНаПодчиненных,
	               |	ТаблицаДокумента.Иерархия КАК Иерархия
	               |ПОМЕСТИТЬ ТаблицаДокумента
	               |ИЗ
	               |	&ТаблицаДокумента КАК ТаблицаДокумента
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Объект,
	               |	Показатель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_НаработкаОбъектовРемонтаОстатки.ОбъектРемонта КАК Объект,
	               |	торо_НаработкаОбъектовРемонтаОстатки.Показатель КАК Показатель,
	               |	торо_НаработкаОбъектовРемонтаОстатки.НаработкаОстаток КАК СтароеЗначение
	               |ПОМЕСТИТЬ Остатки
	               |ИЗ
	               |	РегистрНакопления.торо_НаработкаОбъектовРемонта.Остатки(
	               |			&Дата,
	               |			(ОбъектРемонта, Показатель) В
	               |				(ВЫБРАТЬ
	               |					ТаблицаДокумента.Объект,
	               |					ТаблицаДокумента.Показатель
	               |				ИЗ
	               |					ТаблицаДокумента КАК ТаблицаДокумента)) КАК торо_НаработкаОбъектовРемонтаОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Объект,
	               |	Показатель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ПериодыНаработкиОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
	               |	торо_ПериодыНаработкиОРСрезПоследних.Показатель КАК Показатель,
	               |	торо_ПериодыНаработкиОРСрезПоследних.Период КАК ДатаРаботыС
	               |ПОМЕСТИТЬ ВТ_Даты
	               |ИЗ
	               |	РегистрСведений.торо_ПериодыНаработкиОР.СрезПоследних(
	               |			&Дата,
	               |			(ОбъектРемонта, Показатель) В
	               |				(ВЫБРАТЬ
	               |					ТаблицаДокумента.Объект,
	               |					ТаблицаДокумента.Показатель
	               |				ИЗ
	               |					ТаблицаДокумента КАК ТаблицаДокумента)) КАК торо_ПериодыНаработкиОРСрезПоследних
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОбъектРемонта,
	               |	Показатель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаДокумента.Объект КАК Объект,
	               |	ТаблицаДокумента.Показатель КАК Показатель,
	               |	ТаблицаДокумента.РаспространятьНаПодчиненных КАК РаспространятьНаПодчиненных,
	               |	ТаблицаДокумента.Иерархия КАК Иерархия,
	               |	Остатки.СтароеЗначение КАК СтароеЗначение,
	               |	&Дата КАК ДатаРаботыПо,
	               |	ВТ_Даты.ДатаРаботыС КАК ДатаРаботыС
	               |ИЗ
	               |	ТаблицаДокумента КАК ТаблицаДокумента
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	               |		ПО ТаблицаДокумента.Объект = Остатки.Объект
	               |			И ТаблицаДокумента.Показатель = Остатки.Показатель
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Даты КАК ВТ_Даты
	               |		ПО ТаблицаДокумента.Объект = ВТ_Даты.ОбъектРемонта
	               |			И ТаблицаДокумента.Показатель = ВТ_Даты.Показатель";	
				   
	 Запрос.УстановитьПараметр("ТаблицаДокумента", ОбъектКопирования.НаработкаОбъектов.Выгрузить( , "Объект, Показатель,РаспространятьНаПодчиненных,Иерархия"));
	 Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	 
	 НаработкаОбъектов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли





