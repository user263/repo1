#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	КадровыйУчетФормы.ФормаКадровогоДокументаПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	Если Не ЗначениеЗаполнено(Параметры.Ключ) Тогда
		
		Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
			Объект.ДатаНачала = ТекущаяДатаСеанса();
		КонецЕсли;
		
		Если Параметры.Свойство("Сотрудник") И ЗначениеЗаполнено(Параметры.Сотрудник) Тогда 
			Объект.Сотрудник = Параметры.Сотрудник;
		КонецЕсли;
		
		ПриПолученииДанныхНаСервере();
		
		Если ЗначениеЗаполнено(Объект.Сотрудник) И Не ЗначениеЗаполнено(Объект.ИсправленныйДокумент) Тогда
		КонецЕсли;
		
		ОбработатьИзменениеОрганизации();
		
	КонецЕсли;
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	ФОИспользоватьШтатноеРасписание = Ложь;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеДобавитьОтменить",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьПродолжить",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьУдалить",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеДобавитьОтменитьЕО",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьПродолжить1",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЗаполнитьПоПозицииВГруппеКнопокДобавитьУдалитьЕО",
		"Видимость",
		ФОИспользоватьШтатноеРасписание);
	// Заголовок формы++
		торо_РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", РеквизитФормыВЗначение("Объект"), ЭтаФорма);
	// Заголовок формы--
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
			
			Объект.Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновнаяОрганизация",
			Истина);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Подразделение) Тогда
			
			Объект.Подразделение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновноеПодразделение",
			Истина);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
			
			Объект.Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновнойОтветственный",
			Справочники.Пользователи.ПустаяСсылка());
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	Отказ = Не ТекущийОбъект.ПроверитьЗаполнение();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеНачисленийВРеквизит(ТекущийОбъект);
	УстановитьКомментарии(ЭтаФорма);
	УстановитьОтображениеНадписей();
	// Заголовок формы++
		торо_РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", РеквизитФормыВЗначение("Объект"), ЭтаФорма);
	// Заголовок формы--	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	КадровыйУчетКлиент.ОповеститьОбИзмененииРабочегоМеста(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

	Если ИмяСобытия = "ЗаписанИндивидуальныйГрафикСотрудника" Тогда
		
		Если Источник = ЭтаФорма Тогда
			ИндивидуальныйГрафикСсылка = Параметр.Ссылка;
			ИндивидуальныйГрафикДата = Параметр.Дата;
			ИндивидуальныйГрафикНомер = Параметр.Номер;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОрганизацияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Объект.ИзменитьАванс = Ложь;
		Объект.ИзменитьГрафикРаботы = Ложь;
		Объект.ИзменитьЕжегодныеОтпуска = Ложь;
		Объект.ИзменитьНачисления = Ложь;
		Объект.ИзменитьПодразделениеИДолжность = Ложь;
	КонецЕсли; 
	
	СотрудникПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	ДатаНачалаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзмениласьПозицияПриИзменении(Элемент)
	
	ИзмениласьПозицияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ПодразделениеПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоСтавокПриИзменении(Элемент)
	КоличествоСтавокКомментарий = КадровыйУчетРасширенныйКлиентСервер.КомментарийККоличествуСтавок(ТекущееКоличествоСтавок, Объект.КоличествоСтавок, ТекущееКоличествоСтавок);
КонецПроцедуры

&НаКлиенте
Процедура КоличествоСтавокРегулирование(Элемент, Направление, СтандартнаяОбработка)
	КадровыйУчетРасширенныйКлиент.КоличествоСтавокРегулирование(Объект.КоличествоСтавок, Направление, СтандартнаяОбработка);
	КоличествоСтавокКомментарий = КадровыйУчетРасширенныйКлиентСервер.КомментарийККоличествуСтавок(ТекущееКоличествоСтавок, Объект.КоличествоСтавок, Объект.КоличествоСтавок);
КонецПроцедуры

&НаКлиенте
Процедура ИзменилсяГрафикПриИзменении(Элемент)
	
	ЗаполнитьГрафик();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаВводИндивидуальногоГрафикаНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
    УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	
	УстановитьПривилегированныйРежим(Истина);
	
	УстановитьФункциональныеОпцииФормы();
	
	УстановитьДоступностьЭлементовИзмененияДанныхСотрудника();
	
	УстановитьТекущиеКадровыеДанные();
	
	ДанныеНачисленийВРеквизит(Объект);
	
	УстановитьОтображениеНадписей();
	
КонецПроцедуры

&НаСервере
Процедура ИзмениласьПозицияПриИзмененииНаСервере()
	
	УстановитьДанныеРабочегоМеста();
	УстановитьДоступностьЭлементов(ЭтаФорма);
	УстановитьКомментарии(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеРабочегоМеста()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Объект.Подразделение 				= ТекущееПодразделение;
		Объект.Должность 					= ТекущаяДолжность;
		Объект.ВидЗанятости 				= ТекущийВидЗанятости;
	Иначе
		Если НЕ ЗначениеЗаполнено(Объект.ОбособленноеПодразделение) Тогда
			Объект.ОбособленноеПодразделение 	= Объект.Организация;
		КонецЕсли;
		Объект.Подразделение 				= Справочники.СтруктураПредприятия.ПустаяСсылка();
		Объект.Должность 					= Справочники.Должности.ПустаяСсылка();
		Объект.ВидЗанятости 				= Перечисления.ВидыЗанятости.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы() 
	
	ГоловнаяОрганизация = Объект.Организация;
	
	ПараметрыФО = Новый Структура("Организация", ГоловнаяОрганизация);
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	ОбработатьИзменениеОрганизации();
	УстановитьДоступностьЭлементов(ЭтаФорма);

	УстановитьДоступностьНовогоПодразделения(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере()

	УстановитьТекущиеДанныеСотрудника();
	УстановитьОтображениеНадписей();

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеОрганизации()

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		
		ЗаполнитьГрафик(Истина);
		
		КадровыйУчетФормы.ЗаполнитьОтветственныхЛицПоОрганизации(ЭтаФорма);
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущиеДанныеСотрудника()
	
	УстановитьТекущиеКадровыеДанные();
	УстановитьДанныеРабочегоМеста();
	
	Объект.Подразделение = ТекущееПодразделение;
	Объект.Должность = ТекущаяДолжность;
	Объект.КоличествоСтавок = ТекущееКоличествоСтавок;
	Объект.ГрафикРаботы = ТекущийГрафикРаботы;
	Объект.ВидЗанятости = ТекущийВидЗанятости;
	Объект.ФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Сотрудник, "ФизическоеЛицо");
	
	УстановитьДоступностьЭлементовИзмененияДанныхСотрудника();
	
	УстановитьДоступностьНовогоПодразделения(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементовИзмененияДанныхСотрудника()
	
	ДоступноИзменениеДанныхСотрудника = ЗначениеЗаполнено(Объект.Сотрудник);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИзмениласьПозиция",
		"Доступность",
		ДоступноИзменениеДанныхСотрудника);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИзменилсяГрафик",
		"Доступность",
		ДоступноИзменениеДанныхСотрудника);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИзменилисьНачисления",
		"Доступность",
		ДоступноИзменениеДанныхСотрудника);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИзменитьЕжегодныеОтпуска",
		"Доступность",
		ДоступноИзменениеДанныхСотрудника);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ИзменитьАванс",
		"Доступность",
		ДоступноИзменениеДанныхСотрудника);
	
КонецПроцедуры

&НаСервере
Процедура ДатаНачалаПриИзмененииНаСервере()
	
	УстановитьТекущиеДанныеСотрудника();
	
	УстановитьОтображениеНадписей();
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьТекущиеКадровыеДанные()
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		
		СтруктураОтбораКадровыхДанных = Новый Структура("ЛевоеЗначение, ВидСравнения, ПравоеЗначение", "Регистратор", "<>", Объект.Ссылка);
		Отбор = Новый Массив;
		Отбор.Добавить(СтруктураОтбораКадровыхДанных);
		
		ПоляОтбораПериодическихДанных = Новый Структура;
		ПоляОтбораПериодическихДанных.Вставить("КадроваяИсторияСотрудников", Отбор);
		ПоляОтбораПериодическихДанных.Вставить("ГрафикРаботыСотрудников", Отбор);
		ПоляОтбораПериодическихДанных.Вставить("РазрядыКатегорииСотрудников", Отбор);
		Поля = "Подразделение,Должность,КоличествоСтавок,ГрафикРаботы,Организация,ВидЗанятости";
		
		УстановитьПривилегированныйРежим(Истина);
		
		ДанныеСотрудников = КадровыйУчет.КадровыеДанныеСотрудников(Ложь, Объект.Сотрудник, Поля, , ПоляОтбораПериодическихДанных);
		
		УстановитьПривилегированныйРежим(Ложь);
		
		Если ДанныеСотрудников.Количество() > 0 Тогда
			ТекущиеКадровыеДанныеСотрудника = ДанныеСотрудников[0];
			
			ТекущееПодразделение = ТекущиеКадровыеДанныеСотрудника.Подразделение;
			ТекущийГрафикРаботы = ТекущиеКадровыеДанныеСотрудника.ГрафикРаботы;
			ТекущееКоличествоСтавок = ТекущиеКадровыеДанныеСотрудника.КоличествоСтавок;
			ТекущаяДолжность =  ТекущиеКадровыеДанныеСотрудника.Должность;
			ТекущийВидЗанятости = ТекущиеКадровыеДанныеСотрудника.ВидЗанятости;
		КонецЕсли;	
		
	Иначе
		ТекущееПодразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
		ТекущаяДолжность = Справочники.Должности.ПустаяСсылка();
		ТекущийГрафикРаботы = Справочники.Календари.ПустаяСсылка();
		ТекущееКоличествоСтавок = 0;
		ТекущийВидЗанятости = Перечисления.ВидыЗанятости.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьКомментарии(ЭтаФорма);
	
КонецПроцедуры	

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКомментарии(Форма)
	
	Форма.КоличествоСтавокКомментарий = КадровыйУчетРасширенныйКлиентСервер.КомментарийККоличествуСтавок(
		Форма.ТекущееКоличествоСтавок,
		Форма.Объект.КоличествоСтавок,
		Форма.Объект.ИзменитьПодразделениеИДолжность);
		
	УстановитьПозицияКомментарий(Форма);
	
	УстановитьГрафикРаботыКомментарий(Форма);
	
	Форма.Элементы.ПозицияКомментарий.Подсказка = Форма.ПозицияКомментарий;
	Форма.Элементы.ГрафикРаботыКомментарий.Подсказка = Форма.ГрафикРаботыКомментарий;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПозицияКомментарий(Форма)
	
	Если Форма.Объект.ИзменитьПодразделениеИДолжность Тогда
		
		Если ЗначениеЗаполнено(Форма.ТекущееПодразделение) Тогда
			
			Форма.ПозицияКомментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ранее сотрудник занимал должность ""%1"" в подразделении ""%2""'"),
			Форма.ТекущаяДолжность, Форма.ТекущееПодразделение); 
			
		Иначе
			
			Форма.ПозицияКомментарий = НСтр("ru = 'Сотрудник еще не принят на работу'");
			
		КонецЕсли;
		
	Иначе
		
		Форма.ПозицияКомментарий = "";
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьГрафикРаботыКомментарий(Форма)
	
	Если Форма.Объект.ИзменитьГрафикРаботы Тогда
			
		Форма.ГрафикРаботыКомментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ранее сотрудник работал по графику %1'"),
			Форма.ТекущийГрафикРаботы);

	Иначе
				
		Форма.ГрафикРаботыКомментарий = "";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДанныеНачисленийВРеквизит(ТекущийОбъект)
	
	ТаблицаСотрудников = ТаблицаСотрудников();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементов(Форма)
	
	ИзменитьПозициюДолжность		= Форма.Объект.ИзменитьПодразделениеИДолжность;
	ИзменитьГрафикРаботы			= Форма.Объект.ИзменитьГрафикРаботы;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Подразделение",
		"Доступность",
		ИзменитьПозициюДолжность);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"Должность",
			"Доступность",
			ИзменитьПозициюДолжность);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"КоличествоСтавок",
		"Доступность",
		ИзменитьПозициюДолжность);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"РазрядКатегория",
		"Доступность",
		ИзменитьПозициюДолжность);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ВидЗанятости",
		"Доступность",
		ИзменитьПозициюДолжность);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"СтатьяФинансирования",
		"Доступность",
		ИзменитьПозициюДолжность);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"График",
		"Доступность",
		ИзменитьГрафикРаботы);
		
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	
	ЗаполнитьГрафик(Истина);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГрафик(Перезаполнение = Ложь)
	
	Если Объект.ИзменитьГрафикРаботы ИЛИ Перезаполнение Тогда
		
		ЗначенияДляЗаполнения = Новый Структура;
				
		ЗначенияДляЗаполнения.Вставить("Организация", "Объект.Организация");
		ЗначенияДляЗаполнения.Вставить("Подразделение", 				"Объект.Подразделение");
		ЗначенияДляЗаполнения.Вставить("ГрафикРаботы",					"Объект.ГрафикРаботы");
		
		ФиксированныеЗначения = Новый Массив;
		ФиксированныеЗначения.Добавить("Организация");
		ФиксированныеЗначения.Добавить("Подразделение");

		ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения, ФиксированныеЗначения);
		
		Если НЕ ЗначениеЗаполнено(ТекущийГрафикРаботы) Тогда
			ТекущийГрафикРаботы = Объект.ГрафикРаботы;
		КонецЕсли;
		
		Если Перезаполнение Тогда
			
			Если Объект.ГрафикРаботы <> ТекущийГрафикРаботы Тогда
				Объект.ИзменитьГрафикРаботы = Истина;
			Иначе
				Объект.ИзменитьГрафикРаботы = Ложь;
			КонецЕсли;
			
		КонецЕсли; 
		
	Иначе
		
		Объект.ГрафикРаботы = ТекущийГрафикРаботы;
		
	КонецЕсли;
	
	УстановитьДоступностьЭлементов(ЭтаФорма);
	УстановитьКомментарии(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования,
		ЭтотОбъект,
		"Объект.Комментарий"
	);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьНовогоПодразделения(Форма)
	
	ДоступностьПодразделнияИДолжности = 
		Форма.Объект.ИзменитьПодразделениеИДолжность;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Подразделение",
		"Доступность",
		ДоступностьПодразделнияИДолжности);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ПозицияШтатногоРасписания",
		"Доступность",
		ДоступностьПодразделнияИДолжности);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Должность",
		"Доступность",
		ДоступностьПодразделнияИДолжности);
	
КонецПроцедуры

&НаСервере
Функция ТаблицаСотрудников()
	
	ТаблицаСотрудников = Новый ТаблицаЗначений;
	ТаблицаСотрудников.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	ТаблицаСотрудников.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	СтрокаСотрудник = ТаблицаСотрудников.Добавить();
	СтрокаСотрудник.Сотрудник = Объект.Сотрудник;
	
	Возврат ТаблицаСотрудников;
	
КонецФункции

&НаСервере
Процедура УстановитьОтображениеНадписей()
	
	МассивСотрудников = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.Сотрудник);
	
КонецПроцедуры

#КонецОбласти