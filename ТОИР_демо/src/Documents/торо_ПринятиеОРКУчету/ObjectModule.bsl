#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ


Перем ОткрытИзФормыОР Экспорт; // Переменная показывает что документ был открыт из формы объекта ремонта.
Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа
перем СтруктураДанных Экспорт;  // Структура, хранящая данные для работы с уведомлениями.


#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
		ОбъектРемонта = ДанныеЗаполнения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	Движения.торо_СтатусыОбъектовРемонтаВУчете.Записывать = Истина;
	
	НаборЗаписей = Движения.торо_СтатусыОбъектовРемонтаВУчете;
	

	НС = НаборЗаписей.Добавить();
	НС.ОбъектРемонта     = ОбъектРемонта;
	НС.Период            = ДатаВводаВЭксплуатацию;
	НС.СтатусОР          = Перечисления.торо_СтатусыОРВУчете.ПринятоКУчету;
	
	Попытка
		Если Не ОткрытИзФормыОР Тогда
			
			ОбъектРемонтаОбъект = ОбъектРемонта.ПолучитьОбъект();
			ОбъектРемонтаОбъект.ДатаВводаВЭксплуатацию = ДатаВводаВЭксплуатацию;
			
			Структура = РегистрыСведений.торо_НастройкиДоступностиОбъектовРемонта.Получить(Новый Структура("СтатусОРВУчете",Перечисления.торо_СтатусыОРВУчете.ПринятоКУчету));
			
			Если Не Структура = Неопределено Тогда
				
				ОбъектРемонтаОбъект.НеУчаствуетВПланировании = Структура.ЗначениеПоУмолчанию;
				
			КонецЕсли;
			ОбъектРемонтаОбъект.Записать();
			
		КонецЕсли;
	Исключение
		Отказ = Истина;
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Запись не выполнена.'"));
	КонецПопытки; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОткрытИзФормыОР = Неопределено Тогда
		ОткрытИзФормыОР = Ложь;
	КонецЕсли; 	
	
	Отказ = ПроверкаПередПроведением();
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПроверкаПередПроведением()
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(ОбъектРемонта) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не заполнено обязательное для заполнения поле ""Объект ремонта""'");
		Сообщение.Поле  = "ОбъектРемонта";
		Сообщение.УстановитьДанные(ЭтотОбъект);

		Сообщение.Сообщить(); 
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаВводаВЭксплуатацию) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Не заполнено обязательное для заполнения поле ""Дата ввода в эксплуатацию""'");
		Сообщение.Поле  = "ДатаВводаВЭксплуатацию";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить(); 
	КонецЕсли;
	
	ДатаВыпуска = ОбъектРемонта.ДатаВыпуска;

	Если ЗначениеЗаполнено(ДатаВводаВЭксплуатацию)
		И ДатаВводаВЭксплуатацию < ДатаВыпуска Тогда
		
		
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для объекта ремонта <%1> дата ввода в эксплуатацию меньше даты выпуска объекта ремонта: %2.'"),ОбъектРемонта,Формат(ДатаВыпуска,"ДФ=dd.MM.yyyy"));
		Сообщение.Сообщить(); 
	КонецЕсли;

	Если Отказ Тогда
		Возврат Отказ;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_СтатусыОбъектовРемонтаВУчете.Период КАК ДатаВводаВЭксплуатацию,
	               |	торо_СтатусыОбъектовРемонтаВУчете.Регистратор КАК Регистратор,
	               |	торо_СтатусыОбъектовРемонтаВУчете.ОбъектРемонта,
	               |	торо_СтатусыОбъектовРемонтаВУчете.СтатусОР,
	               |	ВЫБОР
	               |		КОГДА торо_СтатусыОбъектовРемонтаВУчете.Период > &ДатаВводаВЭксплуатацию
	               |			ТОГДА ИСТИНА
				   
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ЭтоДокументПосле
	               |ИЗ
	               |	РегистрСведений.торо_СтатусыОбъектовРемонтаВУчете КАК торо_СтатусыОбъектовРемонтаВУчете
	               |ГДЕ
	               |	торо_СтатусыОбъектовРемонтаВУчете.ОбъектРемонта = &ОбъектРемонта
	               |	И торо_СтатусыОбъектовРемонтаВУчете.Регистратор <> &Регистратор";
	
	Запрос.УстановитьПараметр("ОбъектРемонта",          ОбъектРемонта);
	Запрос.УстановитьПараметр("ДатаВводаВЭксплуатацию", ДатаВводаВЭксплуатацию);
	Запрос.УстановитьПараметр("Регистратор",            Ссылка);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		тзРезультат = Результат.Выгрузить();
		// проверка на наличие уже установленных состояний
		СтруктураПоиска = Новый Структура("ЭтоДокументПосле", Ложь);
		ВспомогательнаяТаблица = тзРезультат.Скопировать(СтруктураПоиска);
		Если ВспомогательнаяТаблица.Количество() > 0 Тогда
			
			ВспомогательнаяТаблица.Сортировать("ДатаВводаВЭксплуатацию Убыв");
			
			Если ВспомогательнаяТаблица[0].СтатусОР = Перечисления.торо_СтатусыОРВУчете.ПринятоКУчету Тогда
				Отказ = Истина;
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для объекта ремонта <%1> уже зафиксировано состояние <Принято к учету> документом %2. Дата состояния: %3.'"),ОбъектРемонта,ВспомогательнаяТаблица[0].Регистратор, ВспомогательнаяТаблица[0].ДатаВводаВЭксплуатацию));
			КонецЕсли; 

		КонецЕсли; 
		
		// проверка на наличие документов после указанный даты ввода в эксплуатацию
		
		СтруктураПоиска = Новый Структура("ЭтоДокументПосле", Истина);
		ВспомогательнаяТаблица = тзРезультат.Скопировать(СтруктураПоиска);
		Если ВспомогательнаяТаблица.Количество() > 0 Тогда
			Отказ = Истина;
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для объекта ремонта <%1> имеются более поздние документы.'"),ОбъектРемонта));
		КонецЕсли; 

		
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Попытка
		
		Если Не ОткрытИзФормыОР Тогда
			
			ОбъектРемонтаОбъект = ОбъектРемонта.ПолучитьОбъект();
			
			
			Структура = РегистрыСведений.торо_НастройкиДоступностиОбъектовРемонта.Получить(Новый Структура("СтатусОРВУчете",Перечисления.торо_СтатусыОРВУчете.НеПринятоКУчету));
			
			Если Не Структура = Неопределено Тогда
				
				ОбъектРемонтаОбъект.НеУчаствуетВПланировании = Структура.ЗначениеПоУмолчанию;
				
			КонецЕсли;
			ОбъектРемонтаОбъект.Записать();
		КонецЕсли;
		
	Исключение
		Отказ = Истина;
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Запись не выполнена.'"));
	КонецПопытки; 
	
КонецПроцедуры
#КонецОбласти

#КонецЕсли