#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ

перем СтруктураДанных Экспорт;  // Структура, хранящая данные для работы с уведомлениями.
Перем БезусловнаяЗапись Экспорт; // Отключает проверки при записи документа

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если НаработкаОбъектов.Количество() = 0 Тогда
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В документе не заполнена табличная часть наработки оборудования. Проведение невозможно!'"));
		Отказ = истина;
		Возврат;
	КонецЕсли;
	
	Для каждого Строка Из НаработкаОбъектов Цикл
		
		Если Строка.ОбъектРемонта = Справочники.торо_ОбъектыРемонта.ПустаяСсылка() Тогда
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Строка %1: Значение Объекта ремонта должно быть заполнено'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
			Отказ = Истина;
		ИначеЕсли Строка.ДатаИВремяОперации = Дата("00010101000000") Тогда
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Строка %1: Значение ""Дата и время операции"" должно быть заполнено'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
			Отказ = Истина;
		ИначеЕсли Строка.ДатаИВремяОперации < Строка.ДатаПоследнейНаработки Тогда
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Строка %1: Значение ""Дата и время операции"" должно быть больше, чем дата и время последней зарегистрированной в системе операции учета наработки'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
			Отказ = Истина;
		ИначеЕсли Строка.НаработкаДоОперации < Строка.ЗафиксированнаяНаработка Тогда
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Строка %1: Значение ""Наработка до операции"" не может быть меньше, чем значение ""Зафиксированная наработка""'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
			Отказ = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = торо_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Проверить заполнение шапки документа.
	ПроверитьЗаполнениеШапки(Отказ, Заголовок);
	
	Если Не Отказ Тогда
		
		Для Каждого ТекСтрокаНаработкаОбъектов Из НаработкаОбъектов Цикл
			
			Если ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации<>ТекСтрокаНаработкаОбъектов.ДатаПоследнейНаработки Тогда
				ДвижениеПриход = Движения.торо_НаработкаОбъектовРемонта.Добавить();
				ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
				ДвижениеПриход.Период = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
				ДвижениеПриход.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.ОбъектРемонта;
				ДвижениеПриход.Показатель = ТекСтрокаНаработкаОбъектов.Показатель;
				ДвижениеПриход.Наработка = ТекСтрокаНаработкаОбъектов.Наработка;
				ДвижениеПриход.ДатаКон = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
				ДвижениеПриход.ДатаНач = ТекСтрокаНаработкаОбъектов.ДатаПоследнейНаработки;
				
				Движение = Движения.торо_ПериодыНаработкиОР.Добавить();
				Движение.Период = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
				Движение.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.ОбъектРемонта;
				Движение.Показатель = ТекСтрокаНаработкаОбъектов.Показатель;
			КонецЕсли;
			
			ДвижениеПриход = Движения.торо_НаработкаОбъектовРемонта.Добавить();
			ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Расход;
			ДвижениеПриход.Период = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
			ДвижениеПриход.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.ОбъектРемонта;
			ДвижениеПриход.Показатель = ТекСтрокаНаработкаОбъектов.Показатель;
			ДвижениеПриход.Наработка = ТекСтрокаНаработкаОбъектов.НаработкаДоОперации - ТекСтрокаНаработкаОбъектов.НаработкаПослеОперации;
			ДвижениеПриход.ДатаКон = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
			ДвижениеПриход.ДатаНач = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;			
			
		КонецЦикла;
		
		Для Каждого ТекСтрокаНаработкаОбъектов Из НаработкаПодчиненныхОбъектов Цикл
			
			ДвижениеПриход = Движения.торо_НаработкаОбъектовРемонта.Добавить();
			ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Приход;
			ДвижениеПриход.Период = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
			ДвижениеПриход.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.ОбъектРемонта;
			ДвижениеПриход.Показатель = ТекСтрокаНаработкаОбъектов.Показатель;
			ДвижениеПриход.Наработка = ТекСтрокаНаработкаОбъектов.Наработка;
			ДвижениеПриход.ДатаКон = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
			ДвижениеПриход.ДатаНач = ТекСтрокаНаработкаОбъектов.ДатаПоследнейНаработки;
			
			Движение = Движения.торо_ПериодыНаработкиОР.Добавить();
			Движение.Период = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
			Движение.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.ОбъектРемонта;
			Движение.Показатель = ТекСтрокаНаработкаОбъектов.Показатель;
			
			ДвижениеПриход = Движения.торо_НаработкаОбъектовРемонта.Добавить();
			ДвижениеПриход.ВидДвижения = ВидДвиженияНакопления.Расход;
			ДвижениеПриход.Период = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
			ДвижениеПриход.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.ОбъектРемонта;
			ДвижениеПриход.Показатель = ТекСтрокаНаработкаОбъектов.Показатель;
			ДвижениеПриход.Наработка = ТекСтрокаНаработкаОбъектов.НаработкаДоОперации - ТекСтрокаНаработкаОбъектов.НаработкаПослеОперации;
			ДвижениеПриход.ДатаКон = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
			ДвижениеПриход.ДатаНач = ТекСтрокаНаработкаОбъектов.ДатаИВремяОперации;
		КонецЦикла;
		
		// записываем движения регистров
		Движения.торо_НаработкаОбъектовРемонта.Записать();
		Движения.торо_ПериодыНаработкиОР.Записать();
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если НаработкаОбъектов.Количество() = 0 Тогда
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В документе не заполнена табличная часть наработки оборудования. Проведение невозможно!'"));
			Отказ = истина;
			Возврат;
		КонецЕсли;
		
		Для каждого Строка Из НаработкаОбъектов Цикл
			
			Если Строка.ОбъектРемонта = Справочники.торо_ОбъектыРемонта.ПустаяСсылка() Тогда
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: Значение ""Объекта ремонта"" должно быть заполнено'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
				Отказ = Истина;
			ИначеЕсли Строка.ДатаИВремяОперации = Дата("00010101000000") Тогда
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: Значение ""Дата и время операции"" должно быть заполнено'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
				Отказ = Истина;
			ИначеЕсли Строка.ДатаПоследнейНаработки > Строка.ДатаИВремяОперации Тогда
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: Значение ""Дата и время операции"" должно быть больше чем ""Дата последней наработки""'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
				Отказ = Истина;
			ИначеЕсли Не ЗначениеЗаполнено(Строка.Показатель) Тогда
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Строка %1: Значение ""Показатель наработки"" должно быть заполнено'"),Строка.НомерСтроки),СтатусСообщения.Важное); 
				Отказ = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		// Заголовок для сообщений об ошибках проведения.
		Заголовок = торо_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
		
		// Проверить заполнение шапки документа.
		ПроверитьЗаполнениеШапки(Отказ, Заголовок);
		
		Если НЕ Отказ Тогда
			
			УстановитьУправляемыеБлокировки();
			// Проверка, что при вводе данного документа не получится интервала с "незаполненным" значением наработки.
			// При вводе на основании документа "Учет наработки" (происходит при превышении максимального значения) сброс счетчика не требуется.
			Если НЕ Проведен И Модифицированность() И НЕ ЗначениеЗаполнено(ЭтотОбъект.ДокументОснование) Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				               |	НаработкаОбъектов.ОбъектРемонта КАК Объект,
				               |	НаработкаОбъектов.Показатель КАК Показатель,
				               |	НаработкаОбъектов.ДатаПоследнейНаработки КАК ДатаРаботыС
				               |ПОМЕСТИТЬ НаработкаОбъектов
				               |ИЗ
				               |	&НаработкаОбъектов КАК НаработкаОбъектов
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	НаработкаПодчиненныхОбъектов.ОбъектРемонта КАК Объект,
				               |	НаработкаПодчиненныхОбъектов.Показатель КАК Показатель,
				               |	НаработкаПодчиненныхОбъектов.ДатаПоследнейНаработки КАК ДатаРаботыС
				               |ПОМЕСТИТЬ НаработкаПодчиненныхОбъектов
				               |ИЗ
				               |	&НаработкаПодчиненныхОбъектов КАК НаработкаПодчиненныхОбъектов
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	ВЫРАЗИТЬ(НаработкаОбъектов.Объект КАК Справочник.торо_ОбъектыРемонта) КАК Объект,
				               |	НаработкаОбъектов.Показатель КАК Показатель,
				               |	НаработкаОбъектов.ДатаРаботыС КАК ДатаРаботыС
				               |ПОМЕСТИТЬ торо_УчетНаработкиОборудованияНаработкаОбъектов
				               |ИЗ
				               |	НаработкаОбъектов КАК НаработкаОбъектов
				               |
				               |ОБЪЕДИНИТЬ ВСЕ
				               |
				               |ВЫБРАТЬ
				               |	ВЫРАЗИТЬ(НаработкаПодчиненныхОбъектов.Объект КАК Справочник.торо_ОбъектыРемонта),
				               |	НаработкаПодчиненныхОбъектов.Показатель,
				               |	НаработкаПодчиненныхОбъектов.ДатаРаботыС
				               |ИЗ
				               |	НаработкаПодчиненныхОбъектов КАК НаработкаПодчиненныхОбъектов
				               |
				               |ИНДЕКСИРОВАТЬ ПО
				               |	Объект,
				               |	Показатель
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	торо_ПериодыНаработкиОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
				               |	торо_ПериодыНаработкиОРСрезПоследних.Показатель КАК Показатель,
				               |	торо_ПериодыНаработкиОРСрезПоследних.Период КАК ДатаКон
				               |ПОМЕСТИТЬ ВТ_Даты
				               |ИЗ
				               |	РегистрСведений.торо_ПериодыНаработкиОР.СрезПоследних(
				               |			,
				               |			(ОбъектРемонта, Показатель) В
				               |					(ВЫБРАТЬ
				               |						торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект КАК Объект,
				               |						торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель
				               |					ИЗ
				               |						торо_УчетНаработкиОборудованияНаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов)
				               |				И Регистратор <> &Ссылка) КАК торо_ПериодыНаработкиОРСрезПоследних
				               |
				               |ИНДЕКСИРОВАТЬ ПО
				               |	ОбъектРемонта,
				               |	Показатель
				               |;
				               |
				               |////////////////////////////////////////////////////////////////////////////////
				               |ВЫБРАТЬ
				               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект КАК Объект,
				               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель,
				               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыС КАК ДатаРаботыС,
				               |	ЕСТЬNULL(ВТ_Даты.ДатаКон, торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект.ДатаВводаВЭксплуатацию) КАК ДатаКон
				               |ИЗ
				               |	торо_УчетНаработкиОборудованияНаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
				               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Даты КАК ВТ_Даты
				               |		ПО торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект = ВТ_Даты.ОбъектРемонта
				               |			И торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель = ВТ_Даты.Показатель
				               |ГДЕ
				               |	ЕСТЬNULL(ВТ_Даты.ДатаКон, торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект.ДатаВводаВЭксплуатацию) <> торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыС";

				
				Запрос.УстановитьПараметр("Ссылка", Ссылка);
				Запрос.УстановитьПараметр("НаработкаОбъектов", НаработкаОбъектов);
				Запрос.УстановитьПараметр("НаработкаПодчиненныхОбъектов", НаработкаПодчиненныхОбъектов);
				РезультатЗапроса = Запрос.Выполнить();
				Если Не РезультатЗапроса.Пустой() Тогда
					Отказ = Истина;
					ВыборкаНаработокСОшибками = РезультатЗапроса.Выбрать();
					Пока ВыборкаНаработокСОшибками.Следующий() Цикл
						Если ВыборкаНаработокСОшибками.ДатаКон = ВыборкаНаработокСОшибками.Объект.ДатаВводаВЭксплуатацию Тогда 
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Для объекта ремонта ""%1"" не зафиксировано значение наработки ""%2"", дата ввода объекта в эксплуатацию: %3,
								|	поле ""Дата работы с"" в документе заполнено неверно! Проверьте корректность заполнения данного поля табличной части документа.'"),
								ВыборкаНаработокСОшибками.Объект,ВыборкаНаработокСОшибками.Показатель,ВыборкаНаработокСОшибками.ДатаКон);
						Иначе
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Для объекта ремонта ""%1"" зафиксировано значение наработки ""%2"", на %3,
								|	поле ""Дата работы с"" в документе заполнено неверно! Проверьте корректность заполнения данного поля табличной части документа.'"),
								ВыборкаНаработокСОшибками.Объект,ВыборкаНаработокСОшибками.Показатель,ВыборкаНаработокСОшибками.ДатаКон);
						КонецЕсли;
						торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					КонецЦикла;
					Возврат;
				КонецЕсли;
				
			КонецЕсли;	
		КонецЕсли;
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		// Проверка, что при вводе данного документа не получится интервала с "незаполненным" значением наработки.
		МВТ = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МВТ;
		Запрос.Текст = "ВЫБРАТЬ
		               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.ОбъектРемонта КАК Объект,
		               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель,
		               |	торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаИВремяОперации КАК ДатаРаботыПо
		               |ПОМЕСТИТЬ НаработкаОбъектов
		               |ИЗ
		               |	&НаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.ОбъектРемонта КАК Объект,
		               |	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.Показатель КАК Показатель,
		               |	торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов.ДатаИВремяОперации КАК ДатаРаботыПо
		               |ПОМЕСТИТЬ НаработкаПодчиненныхОбъектов
		               |ИЗ
		               |	&НаработкаПодчиненныхОбъектов КАК торо_УчетНаработкиОборудованияНаработкаПодчиненныхОбъектов
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НаработкаОбъектов.Объект КАК Объект,
		               |	НаработкаОбъектов.Показатель КАК Показатель,
		               |	НаработкаОбъектов.ДатаРаботыПо КАК ДатаРаботыПо
		               |ПОМЕСТИТЬ торо_УчетНаработкиОборудованияНаработкаОбъектов
		               |ИЗ
		               |	НаработкаОбъектов КАК НаработкаОбъектов
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	НаработкаПодчиненныхОбъектов.Объект,
		               |	НаработкаПодчиненныхОбъектов.Показатель,
		               |	НаработкаПодчиненныхОбъектов.ДатаРаботыПо
		               |ИЗ
		               |	НаработкаПодчиненныхОбъектов КАК НаработкаПодчиненныхОбъектов";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("НаработкаОбъектов", НаработкаОбъектов);
		Запрос.УстановитьПараметр("НаработкаПодчиненныхОбъектов", НаработкаПодчиненныхОбъектов);
		Запрос.Выполнить();
		
		РезультатЗапроса = торо_РаботаСНаработкой.ПолучитьОбъектыРемонтаСНаработкойВБудущем(МВТ, Ссылка);
		Если Не РезультатЗапроса.Пустой() Тогда
			Отказ = Истина;
			ВыборкаНаработокСОшибками = РезультатЗапроса.Выбрать();
			Пока ВыборкаНаработокСОшибками.Следующий() Цикл
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Для объекта ремонта ""%1"" зафиксировано значение наработки ""%2"" на более позднюю дату, чем документом: по %3. 
					|	Отмена проведения документа невозможна! Для выполнения действий с документом отмените проведение более поздних документов.'"),
					ВыборкаНаработокСОшибками.Объект,ВыборкаНаработокСОшибками.Показатель,ВыборкаНаработокСОшибками.ДатаКон));
			КонецЦикла;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Для Каждого Строка Из НаработкаОбъектов Цикл
		
		АктуализироватьДанныеСтрокиНаработки(Строка);
		
	КонецЦикла;
	
	Для Каждого Строка Из НаработкаПодчиненныхОбъектов Цикл
		
		АктуализироватьДанныеСтрокиНаработки(Строка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ПроверитьЗаполнениеШапки(Отказ, Заголовок)
	
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация, Подразделение");
	// Теперь вызовем общую процедуру проверки.
	торо_ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура УстановитьУправляемыеБлокировки()
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.торо_НаработкаОбъектовРемонта");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = НаработкаОбъектов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРемонта","ОбъектРемонта");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Показатель","Показатель");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.торо_НаработкаОбъектовРемонта");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = НаработкаПодчиненныхОбъектов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОбъектРемонта","ОбъектРемонта");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Показатель","Показатель");
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура АктуализироватьДанныеСтрокиНаработки(Строка)

	СтруктураВозврата = торо_РаботаСНаработкой.ПолучитьТекущееЗначениеНаработки(Строка.ОбъектРемонта, Строка.Показатель, Ссылка);
	
	Строка.ДатаИВремяОперации = ТекущаяДата();
	Строка.ЗафиксированнаяНаработка = СтруктураВозврата.НаработаноЗначение;
	Строка.ДатаПоследнейНаработки = СтруктураВозврата.НаработаноДата;
	Строка.НаработкаДоОперации = Строка.ЗафиксированнаяНаработка + Строка.Наработка; 
	Строка.АбсолютнаяНаработка = торо_РаботаСНаработкой.АбсолютноеЗначениеНаработки(Ссылка, Строка.ОбъектРемонта, Строка.Показатель);	

КонецПроцедуры

#КонецОбласти

#КонецЕсли