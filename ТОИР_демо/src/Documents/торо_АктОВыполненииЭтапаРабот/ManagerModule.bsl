#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт на приемку оборудования из ремонта
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "АктНаПриемкуОборудованияИзРемонта";
	КомандаПечати.Представление = НСтр("ru = 'Акт на приемку оборудования из ремонта'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Акт выполненных ремонтных работ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "АктВыполненныхРемонтныхРабот";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приемке выполненных работ'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// КС-2
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "ФормаКС2";
	КомандаПечати.Представление = НСтр("ru = 'КС-2'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// КС-3
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_АктОВыполненииЭтапаРабот";
	КомандаПечати.Идентификатор = "ФормаКС3";
	КомандаПечати.Представление = НСтр("ru = 'КС-3'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктНаПриемкуОборудованияИзРемонта") Тогда		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"АктНаПриемкуОборудованияИзРемонта", 
		"Акт на приемку оборудования из ремонта", 
		ПечатьАктНаПриемкуОборудованияИзРемонта(МассивОбъектов, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктВыполненныхРемонтныхРабот") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"АктВыполненныхРемонтныхРабот", 
		"Акт о приемке выполненных работ", 
		ПечатьАктВыполненныхРемонтныхРабот(МассивОбъектов, ПараметрыПечати));		
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаКС2") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ФормаКС2", 
		"КС-2", 
		ПечатьФормаКС2(МассивОбъектов, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ФормаКС3") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"ФормаКС3", 
		"КС-3", 
		ПечатьФормаКС3(МассивОбъектов, ПараметрыПечати));		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьАктНаПриемкуОборудованияИзРемонта(МассивОбъектов, ПараметрыПечати)
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("АктНаПриемкуОборудованияИзРемонта");
	ТекстАкта = Макет.ПолучитьОбласть("АктНаПриемку");
	
	Акт = ПараметрыПечати.Док;
	ID =  ПараметрыПечати.ID;
	
	РемонтыОборудования = Акт.РемонтыОборудования.Выгрузить(Новый Структура("ID", ID));
	РемонтОборудования  = РемонтыОборудования[0];
	
	ТекстАкта.Параметры.Номер = Акт.Номер;
	ТекстАкта.Параметры.Дата = Формат(Акт.Дата,"ДЛФ=Д");
	ТекстАкта.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(РемонтОборудования.ОбъектРемонта);	
	ТабДок.Вывести(ТекстАкта);
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;

	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьАктВыполненныхРемонтныхРабот(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("АктВыполненныхРемонтныхРабот");
		
	Документ = ПараметрыПечати.Док;
	ID =  ПараметрыПечати.ID;
	
	РемонтыОборудования = Документ.РемонтыОборудования.Выгрузить(Новый Структура("ID", ID));
	РемонтОборудования  = РемонтыОборудования[0];
		
	ОбщийИтог = 0;
	
	ЕстьКомментарий = Истина;
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("АктВыполненныхРемонтныхРабот");
 	// Шапка
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.НомерДокумента = Документ.Номер;
	Область.Параметры.Дата			 = Формат(Документ.Дата,"ДЛФ=Д");
    Область.Параметры.ДатаКонец		 = Формат(Документ.Дата,"ДЛФ=Д");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.торо_АктОВыполненииЭтапаРабот") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	МИНИМУМ(торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаНачала) КАК ДатаНачала,
			|	МАКСИМУМ(торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ДатаОкончания) КАК ДатаОкончания
			|ИЗ
			|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
			|ГДЕ
			|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &Документ";
        Запрос.УстановитьПараметр("Документ",Документ);
		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Область.Параметры.ДатаНач=Формат(ВыборкаДетальныеЗаписи.ДатаНачала,"ДЛФ=Д");
			Область.Параметры.ДатаКонец=Формат(ВыборкаДетальныеЗаписи.ДатаОкончания,"ДЛФ=Д");
		КонецЦикла;
		
	КонецЕсли;
	
	ТабДок.Вывести(Область);
	
	// Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ПодразделениеИсполнитель = Документ.Подразделение;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.торо_АктОВыполненииРегламентногоМероприятия") Тогда
		
		Область.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(РемонтОборудования.ОбъектРемонта);
	Иначе
		Если ЗначениеЗаполнено(РемонтОборудования.ОбъектРемонта.Контрагент) Тогда
			Область.Параметры.ПодразделениеЗаказчик = РемонтОборудования.ОбъектРемонта.Контрагент;
		Иначе
			Область.Параметры.ПодразделениеЗаказчик = РемонтОборудования.ОбъектРемонта.Подразделение;
		КонецЕсли;
		
		Область.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(РемонтОборудования.ОбъектРемонта);
	КонецЕсли;

	ТабДок.Вывести(Область);

	// ВыполненныеРаботыШапка
	Область = Макет.ПолучитьОбласть("ВыполненныеРаботыШапка");
	ТабДок.Вывести(Область);
	
	// ВыполненныеРаботы
	Область = Макет.ПолучитьОбласть("ВыполненныеРаботы");
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_АктРемонтныеРаботы.РемонтнаяРабота КАК Работа,
				   |	торо_АктРемонтныеРаботы.ID,
				   |	торо_АктРемонтныеРаботы.Родитель_ID,
				   |	торо_АктРемонтныеРаботы.РемонтыОборудования_ID";
				   Если ЕстьКомментарий Тогда
					   Запрос.Текст = Запрос.Текст + ", ТехнологическиеОперации.Комментарий";
				   КонецЕсли;
				   Запрос.Текст = Запрос.Текст +"
	               |ИЗ
	               |	Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы КАК торо_АктРемонтныеРаботы
				   |    ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_ТехнологическиеОперации КАК ТехнологическиеОперации
				   |    ПО торо_АктРемонтныеРаботы.РемонтнаяРабота = ТехнологическиеОперации.Ссылка
	               |ГДЕ
	               |	торо_АктРемонтныеРаботы.Ссылка = &Акт";
	
	Запрос.УстановитьПараметр("Акт", Документ);	
	
	тзСписокРаботИсх = Запрос.Выполнить().Выгрузить();
	
	
	// Накладываем отбор по РемонтуОборудования. Если делать это в запросе - теряется последовательность ремонтов.
	ПараметрыОтбора = Новый Структура("РемонтыОборудования_ID",РемонтОборудования.ID);
	тзСписокРабот = тзСписокРаботИсх.Скопировать(ПараметрыОтбора);	
	Ном = "1";
	МассивID = Новый Массив;
	
	МассивСтрок = тзСписокРабот.НайтиСтроки(Новый Структура("Родитель_ID",""));
	
	
	// Определяем используются ли комментарии или нет
	ВывестиРаботы(МассивСтрок,тзСписокРабот,Область,ТабДок,МассивID,Ном,ЕстьКомментарий,Ложь);

	
	// МатериалыШапка
	Область = Макет.ПолучитьОбласть("МатериалыШапка");
	ТабДок.Вывести(Область);

	// Материалы
	Область = Макет.ПолучитьОбласть("Материалы");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МатериальныеЗатраты.Количество,
	               |	МатериальныеЗатраты.Сумма,
	               |	МатериальныеЗатраты.Номенклатура,
	               |	МатериальныеЗатраты.ХарактеристикаНоменклатуры,
	               |	МатериальныеЗатраты.ЕдиницаИзмерения
	               |ПОМЕСТИТЬ МатериальныеЗатраты
	               |ИЗ
	               |	&МатериальныеЗатраты КАК МатериальныеЗатраты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Количество) КАК Количество,
	               |	СУММА(торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Сумма) КАК Сумма,
	               |	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Номенклатура,
	               |	ЦеныНоменклатурыСрезПоследних.ВидЦены КАК ТипЦены,
	               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
	               |	ЦеныНоменклатурыСрезПоследних.Валюта КАК Валюта,
	               |	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.ХарактеристикаНоменклатуры
	               |ИЗ
	               |	МатериальныеЗатраты КАК торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&Дата,
	               |				ВидЦены = &ТипЦены
	               |					И Валюта = &Валюта) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |			И торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.ХарактеристикаНоменклатуры = ЦеныНоменклатурыСрезПоследних.Характеристика
	               |			И торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.ЕдиницаИзмерения = ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.Номенклатура,
	               |	ЦеныНоменклатурыСрезПоследних.ВидЦены,
	               |	ЦеныНоменклатурыСрезПоследних.Цена,
	               |	ЦеныНоменклатурыСрезПоследних.Валюта,
	               |	торо_АктОВыполненииЭтапаРаботМатериальныеЗатраты.ХарактеристикаНоменклатуры";
	
	Запрос.УстановитьПараметр("МатериальныеЗатраты",Документ.МатериальныеЗатраты.Выгрузить(Новый Структура("РемонтыОборудования_ID",РемонтОборудования.ID)));
	Запрос.УстановитьПараметр("Дата",Документ.Дата);
	Запрос.УстановитьПараметр("ТипЦены",Константы.торо_ТипЦеныДляРасчетаСебестоимостиРемонта.Получить());
    Запрос.УстановитьПараметр("Валюта",Константы.ВалютаУправленческогоУчета.Получить());
	
    Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

    счетчик = 1;
    Итого=0;
	Пока Выборка.Следующий() Цикл
	 	
		Область.Параметры.Материал   = Выборка.Номенклатура;
		Область.Параметры.Ед 		 = Выборка.Номенклатура.ЕдиницаИзмерения;
		Область.Параметры.Код 		 = Выборка.Номенклатура.Код;
		Область.Параметры.Количество = Выборка.Количество;
		Если ЗначениеЗаполнено(Выборка.Цена) Тогда
			Область.Параметры.Стоимость  = Выборка.Цена*Выборка.Количество;
		Иначе
			Область.Параметры.Стоимость  = 0;		
		КонецЕсли; 
		
		Итого = Итого +  Область.Параметры.Стоимость;
		Область.Параметры.Номер      = счетчик;
		счетчик = счетчик + 1;
		ТабДок.Вывести(Область);		
	
	КонецЦикла;

	Область = Макет.ПолучитьОбласть("ИтогоМатериалы");
    Область.Параметры.Итого = Итого;
	ОбщийИтог = ОбщийИтог + Итого;
    ТабДок.Вывести(Область);

	Если Документ.ТрудовыеЗатраты.Количество() > 0 Тогда
		
		Область = Макет.ПолучитьОбласть("СобственныеШапка");
		ТабДок.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Собственные");
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
						|	торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.Квалификация,
						|	СУММА(торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.ВремяРаботы) КАК ВремяРаботы,
						|	СУММА(торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.СуммаКНачислению) КАК СуммаКНачислению,
						|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.ID) КАК ID
						|ИЗ
						|	Документ.торо_АктОВыполненииЭтапаРабот.ТрудовыеЗатраты КАК торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты
						|ГДЕ
						|	торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.Ссылка = &Ссылка
						|	И торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.РемонтыОборудования_ID = &ID
						|
						|СГРУППИРОВАТЬ ПО
						|	торо_АктОВыполненииЭтапаРаботТрудовыеЗатраты.Квалификация";
	
	
		Запрос.УстановитьПараметр("Ссылка",Документ.Ссылка );
		Запрос.УстановитьПараметр("ID",РемонтОборудования.ID );
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		счетчик = 1;
		Итого = 0;
		Пока Выборка.Следующий() Цикл
			
			Область.Параметры.Квалификация = Выборка.Квалификация;
			Область.Параметры.ВремяРаботы  = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(Выборка.ВремяРаботы);
			Область.Параметры.Стоимость    = Выборка.СуммаКНачислению;
			Область.Параметры.Номер        = счетчик;
 	
			Итого = Итого + Область.Параметры.Стоимость;
			счетчик = счетчик + 1;
			ТабДок.Вывести(Область);		
		
		КонецЦикла;
		
	    Область = Макет.ПолучитьОбласть("ИтогоСобственные");
	    Область.Параметры.Итого = Итого;
		ОбщийИтог = ОбщийИтог + Итого;
	    ТабДок.Вывести(Область);
	// ИтогРаботы

	КонецЕсли;
	
	Если Документ.ПодрядчикиРемонтныхРабот.Количество() > 0 Тогда
		
		Область = Макет.ПолучитьОбласть("ПодрядчикШапка");
		ТабДок.Вывести(Область);
			
		Область = Макет.ПолучитьОбласть("Подрядчик");
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
						|	АктВыполненныеРаботы.РемонтнаяРабота,
						|	АктВыполненныеРаботы.ID
						|ПОМЕСТИТЬ АктВыполненныеРаботы
						|ИЗ
						|	&АктВыполненныеРаботы КАК АктВыполненныеРаботы
						|ГДЕ НЕ АктВыполненныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
						|;
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ПодрядчикиРемонтныхРабот.Контрагент,
						|	ПодрядчикиРемонтныхРабот.ID,
						|	ПодрядчикиРемонтныхРабот.Сумма
						|ПОМЕСТИТЬ ПодрядчикиРемонтныхРабот
						|ИЗ
						|	&ПодрядчикиРемонтныхРабот КАК ПодрядчикиРемонтныхРабот
						|;
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	торо_АктОВыполненииЭтапаРаботПодрядчикиРемонтныхРабот.Контрагент КАК Контрагент,
						|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ торо_АктОВыполненииЭтапаРаботПодрядчикиРемонтныхРабот.ID) КАК ID,
						|	СУММА(торо_АктОВыполненииЭтапаРаботПодрядчикиРемонтныхРабот.Сумма) КАК Сумма
						|ИЗ
						|	ПодрядчикиРемонтныхРабот КАК торо_АктОВыполненииЭтапаРаботПодрядчикиРемонтныхРабот
						|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктВыполненныеРаботы КАК АктВыполненныеРаботы
						|	ПО торо_АктОВыполненииЭтапаРаботПодрядчикиРемонтныхРабот.ID = АктВыполненныеРаботы.ID
						|
						|СГРУППИРОВАТЬ ПО
						|	торо_АктОВыполненииЭтапаРаботПодрядчикиРемонтныхРабот.Контрагент";
					   
					   
					   
					   
		Запрос.УстановитьПараметр("АктВыполненныеРаботы",Документ.РемонтныеРаботы.Выгрузить(Новый Структура("РемонтыОборудования_ID",РемонтОборудования.ID),"РемонтнаяРабота, ID"));
		Запрос.УстановитьПараметр("ПодрядчикиРемонтныхРабот",Документ.ПодрядчикиРемонтныхРабот.Выгрузить());
	
	    Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		счетчик = 1;
		Итого = 0;
		Пока Выборка.Следующий() Цикл
		 	
			Область.Параметры.Подрядчик   = Выборка.Контрагент;
			Область.Параметры.Стоимость  = Выборка.Сумма;
			Итого = Итого +  Область.Параметры.Стоимость;
			Область.Параметры.Номер      = счетчик;
			счетчик = счетчик + 1;
			ТабДок.Вывести(Область);
		
		КонецЦикла; 
		
		Область = Макет.ПолучитьОбласть("ИтогоПодрядчик");
	    Область.Параметры.Итого = Итого;
		ОбщийИтог = ОбщийИтог + Итого;
	    ТабДок.Вывести(Область);
		// ИтогРаботы

	КонецЕсли;
	
	// Подвал
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.СуммаУслуг = ОбщийИтог; 
	ФормСтрока = "Л = ru_RU; ДП = Истина";
	ПарамПред  = Справочники.Валюты.НайтиПоНаименованию(Константы.ВалютаУправленческогоУчета.Получить()).ПараметрыПрописиНаРусском;
	СуммаУслуг = " " + Строка(Константы.ВалютаУправленческогоУчета.Получить())+" ("+ ЧислоПрописью(ОбщийИтог, ФормСтрока,ПарамПред)+")";
	Область.Параметры.СуммаУслугПрописью = СуммаУслуг;

	ТабДок.Вывести(Область);
	
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьФормаКС2(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("АктВыполненныхРемонтныхРабот");
		
	Документ = ПараметрыПечати.Док;
	МассивID =  ПараметрыПечати.ID;
	ПодрядчикДляКС2=ПараметрыПечати.Подрядчик;
	
	Если ТипЗнч(ПодрядчикДляКС2) = Тип("СписокЗначений") Тогда
		ФормироватьКС2Для = ПодрядчикДляКС2;
	Иначе
		ФормироватьКС2Для = Новый СписокЗначений;
		ФормироватьКС2Для.Добавить(ПодрядчикДляКС2);
	КонецЕсли;

	// формируем список операций, выполненных подрядчиками
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта
	|ПОМЕСТИТЬ АктРемонтыОборудования
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|ГДЕ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &Ссылка
	|	И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&РемонтыID)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктПодрядчики.Контрагент,
	|	АктПодрядчики.Сумма,
	|	АктПодрядчики.ID,
	|	АктПодрядчики.РемонтыОборудования_ID
	|ПОМЕСТИТЬ АктПодрядчики
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.ПодрядчикиРемонтныхРабот КАК АктПодрядчики
	|ГДЕ
	|	АктПодрядчики.Ссылка = &Ссылка
	|	И АктПодрядчики.РемонтыОборудования_ID В(&РемонтыID)
	|	И АктПодрядчики.Контрагент В(&СписокКонтрагентов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктВыполненныеРаботы.РемонтнаяРабота,
	|	АктВыполненныеРаботы.ID,
	|	АктВыполненныеРаботы.РемонтыОборудования_ID
	|ПОМЕСТИТЬ АктВыполненныеРаботы
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы КАК АктВыполненныеРаботы
	|ГДЕ
	|	АктВыполненныеРаботы.Ссылка = &Ссылка
	|	И АктВыполненныеРаботы.РемонтыОборудования_ID В(&РемонтыID)
	|	И НЕ АктВыполненныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктПодрядчики.Контрагент КАК Контрагент,
	|	АктВыполненныеРаботы.РемонтнаяРабота,
	|	АктПодрядчики.Сумма КАК Сумма,
	|	АктРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	АктРемонтыОборудования.ID КАК ID
	|ИЗ
	|	АктРемонтыОборудования КАК АктРемонтыОборудования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктПодрядчики КАК АктПодрядчики
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктВыполненныеРаботы КАК АктВыполненныеРаботы
	|			ПО АктПодрядчики.ID = АктВыполненныеРаботы.ID
	|				И АктПодрядчики.РемонтыОборудования_ID = АктВыполненныеРаботы.РемонтыОборудования_ID
	|		ПО АктРемонтыОборудования.ID = АктПодрядчики.РемонтыОборудования_ID
	|ИТОГИ
	|	СУММА(Сумма),
	|	МАКСИМУМ(ОбъектРемонта)
	|ПО
	|	ID,
	|	Контрагент";
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Запрос.УстановитьПараметр("РемонтыID", МассивID);
	Запрос.УстановитьПараметр("СписокКонтрагентов", ФормироватьКС2Для);
	
	ВыборкаРемонтов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ID");
	
	Макет = ПолучитьМакет("ФормаКС2");
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Шапка");
	СтрокаОтчета = Макет.ПолучитьОбласть("Строка");
	ПодвалОтчета = Макет.ПолучитьОбласть("Подвал");
	
	ПерваяСтраница = Истина;
	
	Пока ВыборкаРемонтов.Следующий() Цикл
		
		ВыборкаКонтрагентов = ВыборкаРемонтов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Контрагент");
		
		Пока ВыборкаКонтрагентов.Следующий() Цикл
			
			Если НЕ ПерваяСтраница Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			// формируем заголовок отчета
			ЗаголовокОтчета.Параметры.Заказчик = Документ.Организация;
			ЗаголовокОтчета.Параметры.Подрядчик = ВыборкаКонтрагентов.Контрагент;
			ЗаголовокОтчета.Параметры.Объект = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ВыборкаРемонтов.ОбъектРемонта);
			ЗаголовокОтчета.Параметры.Номер = Документ.Номер;
			ЗаголовокОтчета.Параметры.Дата = Формат(Документ.Дата, "ДФ=dd.MM.yy");
			ЗаголовокОтчета.Параметры.Итого = ВыборкаКонтрагентов.Сумма;
			
			ТабДок.Вывести(ЗаголовокОтчета);
			
			// формируем строки
			НПП = 1;
			ВыборкаОпераций = ВыборкаКонтрагентов.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока ВыборкаОпераций.Следующий() Цикл
				СтрокаОтчета.Параметры.НПП = НПП;
				СтрокаОтчета.Параметры.Стоимость = ВыборкаОпераций.Сумма;
				СтрокаОтчета.Параметры.Операция  = ВыборкаОпераций.РемонтнаяРабота;
				ТабДок.Вывести(СтрокаОтчета);
				НПП = НПП + 1;
			КонецЦикла;
			
			ПодвалОтчета.Параметры.Итого = ВыборкаКонтрагентов.Сумма;
			ПодвалОтчета.Параметры.НПП = ВыборкаОпераций.Количество();
			
			ТабДок.Вывести(ПодвалОтчета);
			
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;	
	
	Возврат ТабДок;	
	
КонецФункции 

Функция ПечатьФормаКС3(МассивОбъектов, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("АктВыполненныхРемонтныхРабот");
		
	Документ = ПараметрыПечати.Док;
	МассивID =  ПараметрыПечати.ID;
	ПодрядчикДляКС3=ПараметрыПечати.Подрядчик;
	
	Если ТипЗнч(ПодрядчикДляКС3) = Тип("СписокЗначений") Тогда
		ФормироватьКС3Для = ПодрядчикДляКС3;
	Иначе
		ФормироватьКС3Для = Новый СписокЗначений;
		ФормироватьКС3Для.Добавить(ПодрядчикДляКС3);
	КонецЕсли;
	
	// формируем список операций, выполненных подрядчиками
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID,
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ОбъектРемонта
	|ПОМЕСТИТЬ АктРемонтыОборудования
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
	|ГДЕ
	|	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка = &Ссылка
	|	И торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID В(&РемонтыID)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктПодрядчики.Контрагент,
	|	АктПодрядчики.Сумма,
	|	АктПодрядчики.ID,
	|	АктПодрядчики.РемонтыОборудования_ID
	|ПОМЕСТИТЬ АктПодрядчики
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.ПодрядчикиРемонтныхРабот КАК АктПодрядчики
	|ГДЕ
	|	АктПодрядчики.Ссылка = &Ссылка
	|	И АктПодрядчики.РемонтыОборудования_ID В(&РемонтыID)
	|	И АктПодрядчики.Контрагент В(&СписокКонтрагентов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктВыполненныеРаботы.РемонтнаяРабота,
	|	АктВыполненныеРаботы.ID,
	|	АктВыполненныеРаботы.РемонтыОборудования_ID
	|ПОМЕСТИТЬ АктВыполненныеРаботы
	|ИЗ
	|	Документ.торо_АктОВыполненииЭтапаРабот.РемонтныеРаботы КАК АктВыполненныеРаботы
	|ГДЕ
	|	АктВыполненныеРаботы.Ссылка = &Ссылка
	|	И АктВыполненныеРаботы.РемонтыОборудования_ID В(&РемонтыID)
	|	И НЕ АктВыполненныеРаботы.РемонтнаяРабота ССЫЛКА Справочник.торо_ТехнологическиеОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктПодрядчики.Контрагент КАК Контрагент,
	|	АктВыполненныеРаботы.РемонтнаяРабота,
	|	АктПодрядчики.Сумма КАК Сумма,
	|	АктРемонтыОборудования.ОбъектРемонта КАК ОбъектРемонта,
	|	АктРемонтыОборудования.ID КАК ID
	|ИЗ
	|	АктРемонтыОборудования КАК АктРемонтыОборудования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктПодрядчики КАК АктПодрядчики
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктВыполненныеРаботы КАК АктВыполненныеРаботы
	|			ПО АктПодрядчики.ID = АктВыполненныеРаботы.ID
	|				И АктПодрядчики.РемонтыОборудования_ID = АктВыполненныеРаботы.РемонтыОборудования_ID
	|		ПО АктРемонтыОборудования.ID = АктПодрядчики.РемонтыОборудования_ID
	|ИТОГИ
	|	СУММА(Сумма),
	|	МАКСИМУМ(ОбъектРемонта)
	|ПО
	|	ID,
	|	Контрагент";
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Запрос.УстановитьПараметр("РемонтыID", МассивID);
	Запрос.УстановитьПараметр("СписокКонтрагентов", ФормироватьКС3Для);
	
	ВыборкаРемонтов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ID");
	
	Макет = ПолучитьМакет("ФормаКС3");
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	СтрокаОтчета = Макет.ПолучитьОбласть("Строка");
	ПодвалОтчета = Макет.ПолучитьОбласть("Подвал");
	
	ПерваяСтраница = Истина;
	
	Пока ВыборкаРемонтов.Следующий() Цикл
		
		ВыборкаКонтрагентов = ВыборкаРемонтов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Контрагент");
		
		Пока ВыборкаКонтрагентов.Следующий() Цикл
			
			Если НЕ ПерваяСтраница Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				ПерваяСтраница = Ложь;
			КонецЕсли;
		
			// формируем заголовок отчета
			ЗаголовокОтчета.Параметры.Заказчик = Документ.Организация;
			ЗаголовокОтчета.Параметры.Подрядчик = ВыборкаКонтрагентов.Контрагент;
			ЗаголовокОтчета.Параметры.Объект = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ВыборкаРемонтов.ОбъектРемонта);
			ЗаголовокОтчета.Параметры.Номер = Документ.Номер;
			ЗаголовокОтчета.Параметры.Дата = Формат(Документ.Дата, "ДФ=dd.MM.yy");
			
			ТабДок.Вывести(ЗаголовокОтчета);
			
			// формируем строки
			НПП = 1;
			ВыборкаОпераций = ВыборкаКонтрагентов.Выбрать(ОбходРезультатаЗапроса.Прямой);
			Пока ВыборкаОпераций.Следующий() Цикл
				СтрокаОтчета.Параметры.НПП = НПП;
				СтрокаОтчета.Параметры.Стоимость = ВыборкаОпераций.Сумма;
				СтрокаОтчета.Параметры.Операция  = ВыборкаОпераций.РемонтнаяРабота;
				ТабДок.Вывести(СтрокаОтчета);
				НПП = НПП + 1;
			КонецЦикла;
			
			ПодвалОтчета.Параметры.Итого = ВыборкаКонтрагентов.Сумма;
			ТабДок.Вывести(ПодвалОтчета);
			
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;

	Возврат ТабДок;	
	
КонецФункции 

// Процедура выводит работы акта в табличный документ.
Процедура ВывестиРаботы(МассивСтрок,тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном,Комментарии,КолВо)
	Для каждого СписокРабот Из МассивСтрок Цикл
		СтрокаТаблицыРабот.Параметры.Номер = Ном;
		СтрокаТаблицыРабот.Параметры.Работа = СписокРабот.Работа;
		Если КолВо = Истина Тогда
    		СтрокаТаблицыРабот.Параметры.Количество=СписокРабот.Количество; 
		КонецЕсли;	
		Если Комментарии = Истина Тогда
			СтрокаТаблицыРабот.Параметры.Комментарий = СписокРабот.Комментарий;
		КонецЕсли;
		ТабДок.Вывести(СтрокаТаблицыРабот);
		МассивID.Добавить(СписокРабот.ID);
		ВывестиРаботы(тзСписокРабот.НайтиСтроки(Новый Структура("Родитель_ID",СписокРабот.ID)),тзСписокРабот,СтрокаТаблицыРабот,ТабДок,МассивID,Ном + ".1",Комментарии,КолВо);
		Ном = Лев(Ном,СтрДлина(Ном)-1) + Строка(Число(Прав(Ном,1)) + 1);
	КонецЦикла;
КонецПроцедуры

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Истина;
	
КонецПроцедуры

Процедура ПриПолученииСлужебныхРеквизитов(Реквизиты) Экспорт
	
	Реквизиты.Добавить("СтатусДокумента");
	Реквизиты.Добавить("ИсторияСтатусов.*");
	Реквизиты.Добавить("Согласующие.*");
		
КонецПроцедуры


#КонецОбласти

#КонецЕсли
