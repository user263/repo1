
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Заполнение

// Формирует результат запроса по невыполненной части заказов.
//
// Параметры:
// ДанныеОтбора     - Структура - поля, по которым будут отобраны остатки заказов
// Дата             - Дата - дата, на которую будут отобраны остатки заказов
// МассивЗаказов      Массив - заказы, по которым будут отобраны остатки.
//
// Вовращаемое значение:
// Результат запроса - результат запроса по невыполненной части заказов.
//
Функция ПолучитьРезультатЗапросаПоОстаткамЗаказов(ДанныеОтбора, Дата = Неопределено, МассивЗаказов)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Регистратор",           ДанныеОтбора.Ссылка);
	Запрос.УстановитьПараметр("Организация",           ДанныеОтбора.Организация);
	Запрос.УстановитьПараметр("Подразделение",         ДанныеОтбора.Подразделение);
	Запрос.УстановитьПараметр("Склад",                 ДанныеОтбора.Склад);
	Запрос.УстановитьПараметр("МассивЗаказов",         МассивЗаказов);
	Запрос.УстановитьПараметр("ОтобратьПоЗаказу",      МассивЗаказов <> Неопределено);
	
	Если Дата <> Неопределено И Дата <> '00010101' Тогда
		
		Запрос.УстановитьПараметр("Период", КонецДня(Дата));
		Запрос.УстановитьПараметр("ГраницаПериод", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
		
	Иначе
		
		Запрос.УстановитьПараметр("Период", '00010101');
		Запрос.УстановитьПараметр("ГраницаПериод", Неопределено);
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказНаВнутреннееПотребление.Ссылка КАК Заказ
	|ПОМЕСТИТЬ ВТЗаказыОтбор
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтобратьПоЗаказу
	|				ТОГДА ЗаказНаВнутреннееПотребление.Ссылка В (&МассивЗаказов)
	|			ИНАЧЕ ЗаказНаВнутреннееПотребление.Подразделение = &Подразделение
	|					И ЗаказНаВнутреннееПотребление.Организация = &Организация
	|		КОНЕЦ
	|	И ЗаказНаВнутреннееПотребление.Склад В (ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), &Склад)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК ЗаказНаВнутреннееПотребление,
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.КодСтроки КАК КодСтроки,
	|	МАКСИМУМ(Товары.Упаковка) КАК Упаковка,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Заказ
	|			ИЗ
	|				ВТЗаказыОтбор КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.КодСтроки,
	|	Товары.Серия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	ЗаказНаВнутреннееПотребление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗаказы.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|	ТаблицаЗаказы.Номенклатура КАК Номенклатура,
	|	ТаблицаЗаказы.Характеристика КАК Характеристика,
	|	ТаблицаЗаказы.КодСтроки КАК КодСтроки,
	|	СУММА(ТаблицаЗаказы.КОформлению) КАК Количество,
	|	ТаблицаЗаказы.Серия КАК Серия
	|ПОМЕСТИТЬ ТаблицаОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗаказыОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|		ЗаказыОстатки.Номенклатура КАК Номенклатура,
	|		ЗаказыОстатки.Характеристика КАК Характеристика,
	|		ЗаказыОстатки.КодСтроки КАК КодСтроки,
	|		ЗаказыОстатки.КОформлениюОстаток КАК КОформлению,
	|		ЗаказыОстатки.Серия КАК Серия
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(
	|				&ГраницаПериод,
	|				ЗаказНаВнутреннееПотребление В
	|					(ВЫБРАТЬ
	|						Т.Заказ
	|					ИЗ
	|						ВТЗаказыОтбор КАК Т)) КАК ЗаказыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаказыДвижения.ЗаказНаВнутреннееПотребление,
	|		ЗаказыДвижения.Номенклатура,
	|		ЗаказыДвижения.Характеристика,
	|		ЗаказыДвижения.КодСтроки,
	|		ВЫБОР
	|			КОГДА ЗаказыДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ЗаказыДвижения.КОформлению
	|			ИНАЧЕ ЗаказыДвижения.КОформлению
	|		КОНЕЦ,
	|		ЗаказыДвижения.Серия
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаВнутреннееПотребление КАК ЗаказыДвижения
	|	ГДЕ
	|		ЗаказыДвижения.Регистратор = &Регистратор
	|		И ЗаказыДвижения.ЗаказНаВнутреннееПотребление В
	|				(ВЫБРАТЬ
	|					Т.Заказ
	|				ИЗ
	|					ВТЗаказыОтбор КАК Т)
	|		И ЗаказыДвижения.Активность
	|		И ВЫБОР
	|				КОГДА &Период <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ЗаказыДвижения.Период <= &Период
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК ТаблицаЗаказы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗаказы.Номенклатура,
	|	ТаблицаЗаказы.Характеристика,
	|	ТаблицаЗаказы.КодСтроки,
	|	ТаблицаЗаказы.ЗаказНаВнутреннееПотребление,
	|	ТаблицаЗаказы.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаЗаказы.КОформлению) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	ЗаказНаВнутреннееПотребление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатки.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
	|	ТаблицаОстатки.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатки.Характеристика КАК Характеристика,
	|	ТаблицаОстатки.КодСтроки КАК КодСтроки,
	|	ТаблицаОстатки.Количество КАК Количество,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Упаковка.Коэффициент КАК Коэффициент,
	|	ТаблицаОстатки.Серия
	|ИЗ
	|	ТаблицаОстатки КАК ТаблицаОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	|		ПО ТаблицаОстатки.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаОстатки.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаОстатки.КодСтроки = ТаблицаТовары.КодСтроки
	|			И ТаблицаОстатки.ЗаказНаВнутреннееПотребление = ТаблицаТовары.ЗаказНаВнутреннееПотребление
	|			И ТаблицаОстатки.Серия = ТаблицаТовары.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОстатки.ЗаказНаВнутреннееПотребление.Дата,
	|	ТаблицаОстатки.ЗаказНаВнутреннееПотребление,
	|	ТаблицаТовары.НомерСтроки";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Запрос.Выполнить();

КонецФункции

// Заполняет таблицу товаров по данным отбора или массиву заказов.
//
// Параметры:
//  ДанныеОтбора    - Структура - поля, по которым будут отобраны остатки заказов для заполнения документа
//  Товары          - ДанныеФормыКоллекция - таблица товаров, в которую будут помещены остатки заказов
//  МассивЗаказов   - Массив - заказы, по которым будут отобраны остатки
//  ЗаполнятьНаДату - Булево - указывает на необходимость заполнения по остаткам на дату,
//							переданную в качестве поля в ДанныеОтбора.
//
Процедура ЗаполнитьПоОстаткамЗаказов(ДанныеОтбора, Товары, МассивЗаказов=Неопределено, ЗаполнятьНаДату=Истина) Экспорт
	
	Выборка = ПолучитьРезультатЗапросаПоОстаткамЗаказов(
		ДанныеОтбора,
		?(ЗаполнятьНаДату, ДанныеОтбора.Дата, Неопределено),
		МассивЗаказов
	).Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаТоваров = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоваров, Выборка);
		
		// Если упаковка заполнена нужно определить количество упаковок.
		Если ЗначениеЗаполнено(СтрокаТоваров.Упаковка) Тогда
			СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.Количество / Выборка.Коэффициент;
		Иначе
			СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.Количество;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область Прочее

// Функция выполняет проверки документа-распоряжения при создании расходного ордера.
//
// Параметры:
//	 Распоряжение - ДокументССылка - Ссылка на документ-распоряжение.
//	 Склад - СправочникСсылка.Склады - Ссылка на элемент справочника Склады.
//
// Возвращаемое значение:
//	 Структура - результаты проверки
//		- Отказ - Булево - Истина, если проверки прошли с ошибками, иначе - Ложь
//		- ТекстОшибки - Строка - Обязательно должен быть заполнен, когда Отказ = Истина
//		- ДатаОтгрузки - Дата
//		- ГруппаСкладовВРаспоряжении - Булево - В распоряжении выбрана группа складов 
//		- ИспользоватьОрдернуюСхему - Булево - На складе используется ордерная схема.
//
Функция ВыполнитьПроверкиРаспоряжения(Распоряжение, Склад) Экспорт 
		
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Операция", "");
	СтруктураВозврата.Вставить("ТекстОшибки", "");
	СтруктураВозврата.Вставить("ГруппаСкладовВРаспоряжении", Ложь);
	СтруктураВозврата.Вставить("ДатаОтгрузки");
	СтруктураВозврата.Вставить("ИспользоватьОрдернуюСхему"); 
	
	Реквизиты = Новый Структура("ДатаОтгрузки, Склад, ИспользоватьОрдернуюСхему", "Дата");
	
	Реквизиты.Склад = "Склад";
	Реквизиты.ИспользоватьОрдернуюСхему ="
	|ВЫБОР
	|	КОГДА ЕстьNULL(Склад.ИспользоватьОрдернуюСхемуПриОтгрузке, Ложь)
	|			И Дата >= ЕстьNULL(Склад.ДатаНачалаОрдернойСхемыПриОтгрузке, ДАТАВРЕМЯ(1,1,1))
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ ЛОЖЬ
	|КОНЕЦ";
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, Реквизиты);
	ИспользоватьОрдернуюСхему = ЗначенияРеквизитов.ИспользоватьОрдернуюСхему;
	
	СтруктураВозврата.ИспользоватьОрдернуюСхему = ИспользоватьОрдернуюСхему;
	
	Если ИспользоватьОрдернуюСхему Тогда
		
		Склад = ЗначенияРеквизитов.Склад;
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ЗначенияРеквизитов, "ДатаОтгрузки");
		
	Иначе
		
		ТекстОшибки = НСтр("ru = 'Для склада ""%Склад%"" оформление расходных ордеров не требуется.
			|Заполнение документа не выполнено.'");
		СтруктураВозврата.ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Склад%", Строка(ЗначенияРеквизитов.Склад));
		СтруктураВозврата.Операция = "Отказ";
		Возврат СтруктураВозврата;
		
	КонецЕсли;	
	
	Возврат СтруктураВозврата
	
КонецФункции

// Функция определяет реквизиты выбранного документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВнутреннееПотреблениеТоваров - Ссылка на документ.
//
// Возвращаемое значение:
//	Структура - реквизиты внутреннего потребления товаров.
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация",
		Дата,
		Организация,);
	
	Возврат СтруктураРеквизитов;

КонецФункции

#КонецОбласти

// {УП}
#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт

#Область ТекстСписаниеКомиссионныхТоваров             // (Дт  :: Кт 003.01, 004.01)
	ТекстСписаниеКомиссионныхТоваров = "
	|ВЫБРАТЬ //// Списание комиссионных и давальческих товаров (Дт  :: Кт 003.01, 004.01)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетКт,
	|
	|	Аналитика.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.ВидыЗапасов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|";
#КонецОбласти

#Область ТекстСписаниеТоваровНаРасходы                // (Дт 20, 2Х, 44, 91.02 :: Кт 41.01, 76.ОК)
	ТекстСписаниеТоваровНаРасходы = "
	|ВЫБРАТЬ //// Списание на расходы товаров (Дт 20, 2Х, 44, 91.02 :: Кт 41.01, 76.ОК)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		Строки.СтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыКОформлениюОтчетовКомитенту)
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетКт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ТОГДА
	|		Строки.Контрагент
	|	ИНАЧЕ
	|		Строки.Номенклатура
	|	КОНЕЦ КАК СубконтоКт1,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ТОГДА
	|		Строки.Номенклатура
	|	ИНАЧЕ
	|		Операция.Склад
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И СтатьиСтроительства.Ссылка ЕСТЬ NULL
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство))
	|";
#КонецОбласти

#Область ТекстСписаниеТоваровНаПрочиеАктивы           // (Дт 08.03 :: Кт 41.01, 76.ОК)
	ТекстСписаниеТоваровНаПрочиеАктивы = "
	|ВЫБРАТЬ //// Списание на прочие активы (Дт 08.03 :: Кт 41.01, 76.ОК)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.АналитикаРасходов КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыКОформлениюОтчетовКомитенту)
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетКт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ТОГДА
	|		Строки.Контрагент
	|	ИНАЧЕ
	|		Строки.Номенклатура
	|	КОНЕЦ КАК СубконтоКт1,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ТОГДА
	|		Строки.Номенклатура
	|	ИНАЧЕ
	|		Операция.Склад
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство))
	|";
#КонецОбласти

#Область ТекстПередачаТоваровДавальцаВПроизводство    // (Дт 003.02 :: Кт 003.01/002)
	ТекстПередачаТоваровДавальцаВПроизводство = "
	|ВЫБРАТЬ //// Передача товаров давальца в производство (Дт 003.02 :: Кт 003.01/002)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве) КАК СчетДт,
	|
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоДт1,
	|	Аналитика.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ВЫБОР КОГДА Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработку)
	|	КОГДА Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоКт1,
	|	Аналитика.Номенклатура КАК СубконтоКт2,
	|	Операция.Склад КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.ВидыЗапасов КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|";
#КонецОбласти

#Область ТекстСписаниеТоваровДавальца                 // (Дт  :: Кт 003.01/002)
	ТекстСписаниеТоваровДавальца = "
	|ВЫБРАТЬ //// Передача товаров давальца в производство (Дт  :: Кт 003.01/002)
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	0 КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ВЫБОР КОГДА Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработку)
	|	КОГДА Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение)
	|	КОНЕЦ КАК СчетКт,
	|
	|	Строки.ВидЗапасов.Контрагент КАК СубконтоКт1,
	|	Аналитика.Номенклатура КАК СубконтоКт2,
	|	Операция.Склад КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров.ВидыЗапасов КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Строки.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию))
	|";
#КонецОбласти

#Область ТекстВключениеИсключениеНДСВСтоимость        // (Дт 25, 26, 44 :: Кт 19.03)
	ТекстВключениеИсключениеНДСВСтоимость = "
	|ВЫБРАТЬ //// Включение/исключение НДС в стоимость товара на складе - получателе (Дт 25, 26, 44 :: Кт 19.03)
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Партии.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Партии.Номенклатура КАК СубконтоДт1,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		Партии.СтатьяРасходов
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	Партии.СчетУчетаНДС КАК СчетКт,
	|
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Партии КАК Партии
	|	ПО
	|		ИСТИНА
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И (Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|";
#КонецОбласти

	Возврат ТекстСписаниеКомиссионныхТоваров
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровНаРасходы
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровНаПрочиеАктивы
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаТоваровДавальцаВПроизводство
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСписаниеТоваровДавальца
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВключениеИсключениеНДСВСтоимость;
	
КонецФункции

#КонецОбласти
// {/УП}

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);

	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаЗаказыНаВнутреннееПотребление(), "ТаблицаЗаказыНаВнутреннееПотребление");
	ТекстыЗапроса.Добавить(ТекстЗапросаВтТаблицаТоварыИОбеспечение(), "");

	ТекстыЗапроса.Добавить(ТекстЗапросаТаблицаСвободныеОстатки(),     "ТаблицаСвободныеОстатки");

	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений);

КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Дата                           КАК Период,
		|	Таблица.Организация                    КАК Организация,
		|	Таблица.Склад                          КАК Склад,
		|	Таблица.ЗаказНаВнутреннееПотребление   КАК ЗаказНаВнутреннееПотребление,
		|	Таблица.ДатаРаспоряжения               КАК ДатаРаспоряжения,
		|	Таблица.ПотреблениеПоЗаказам           КАК ПоЗаказуНаВнутреннееПотребление,
		|	Таблица.Подразделение                  КАК Подразделение,
		|	Таблица.Ссылка                         КАК Ссылка
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка";

		Запрос.УстановитьПараметр("Ссылка",                         ДокументСсылка);
		
		Реквизиты = Запрос.Выполнить().Выбрать();
		Реквизиты.Следующий();
		
		Запрос.УстановитьПараметр("Склад",                           Реквизиты.Склад);
		Запрос.УстановитьПараметр("Период",                          Реквизиты.Период);
		Запрос.УстановитьПараметр("ДатаРаспоряжения",                Реквизиты.ДатаРаспоряжения);
		Запрос.УстановитьПараметр("Организация",                     Реквизиты.Организация);
		Запрос.УстановитьПараметр("ЗаказНаВнутреннееПотребление",    Реквизиты.ЗаказНаВнутреннееПотребление);
		Запрос.УстановитьПараметр("ПоЗаказуНаВнутреннееПотребление", Реквизиты.ПоЗаказуНаВнутреннееПотребление);
		Запрос.УстановитьПараметр("Подразделение",                   Реквизиты.Подразделение);



КонецПроцедуры


Функция ТекстЗапросаТаблицаЗаказыНаВнутреннееПотребление()

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)     КАК ВидДвижения,
		|	&ДатаРаспоряжения                          КАК Период,
		|	ТаблицаТовары.ЗаказНаВнутреннееПотребление КАК ЗаказНаВнутреннееПотребление,
		|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
		|	ТаблицаТовары.Характеристика               КАК Характеристика,
		|	ТаблицаТовары.КодСтроки                    КАК КодСтроки,
		|	&Склад                                     КАК Склад,
		|	ТаблицаТовары.Количество                   КАК КОформлению
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|	И &ПоЗаказуНаВнутреннееПотребление
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|////////////////////////////////////////////////////////////////////////////////";

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтТаблицаТоварыИОбеспечение()

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаТовары.КодСтроки                               КАК КодСтроки,
		|	&Склад                                                КАК Склад,
		|	ТаблицаТовары.Номенклатура                            КАК Номенклатура,
		|	ТаблицаТовары.Характеристика                          КАК Характеристика,
		|	ТаблицаТовары.ЗаказНаВнутреннееПотребление            КАК ЗаказНаВнутреннееПотребление,
		|	ТаблицаТовары.Количество                              КАК Количество
		|
		|ПОМЕСТИТЬ ТоварыИОбеспечение
		|
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление.Товары КАК ТоварыЗаказа
		|		ПО ТаблицаТовары.ЗаказНаВнутреннееПотребление = ТоварыЗаказа.Ссылка
		|			И ТаблицаТовары.Номенклатура              = ТоварыЗаказа.Номенклатура
		|			И ТаблицаТовары.Характеристика            = ТоварыЗаказа.Характеристика
		|			И ТаблицаТовары.КодСтроки                 = ТоварыЗаказа.КодСтроки
		|			И &ПоЗаказуНаВнутреннееПотребление
		|
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка
		|;
		|////////////////////////////////////////////////////////////////////////////////";

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки()

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период                                КАК Период,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Количество               КАК ВНаличии
		|
		|ИЗ
		|	ТоварыИОбеспечение КАК ТаблицаТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ТекущиеДела


#КонецОбласти


#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Внутреннее потребление товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВнутреннееПотреблениеТоваров";
	КомандаПечати.Представление = НСтр("ru = 'Внутреннее потребление товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВнутреннееПотреблениеТоваров") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ВнутреннееПотреблениеТоваров",
			НСтр("ru = 'Внутреннее потребление товаров'"),
			ПечатьВнутреннееПотреблениеТоваров(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
КонецПроцедуры

Функция ПечатьВнутреннееПотреблениеТоваров(МассивОбъектов, ОбъектыПечати)

	ДопКолонка = Неопределено;
	ВыводитьДопКолонку = Ложь;
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка                             КАК Ссылка,
	|	Документ.Номер                              КАК Номер,
	|	Документ.Дата                               КАК Дата,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Склад)         КАК Склад,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Подразделение)	КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Документ.Организация)   КАК Организация,
	|	Документ.Организация.Префикс                КАК Префикс,
	|	Документ.Товары.(
	|
	|		НомерСтроки КАК НомерСтроки,
	|	" + ?(ВыводитьДопКолонку, "Номенклатура." + ДопКолонка +" КАК ДопКолонка,", "") + "
	|		Номенклатура.НаименованиеПолное     КАК Номенклатура,
	|		Характеристика.НаименованиеПолное   КАК Характеристика,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|				ПРЕДСТАВЛЕНИЕССЫЛКИ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ 
	|				ПРЕДСТАВЛЕНИЕССЫЛКИ(Упаковка)
	|		КОНЕЦ              КАК Упаковка,
	|		КоличествоУпаковок КАК Количество
	|
	|	) КАК ТаблицаТовары
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата, Ссылка, НомерСтроки
	|";
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВнутреннееПотреблениеТоваров";

	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента = Метаданные.Документы.ВнутреннееПотреблениеТоваров.Синоним;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВнутреннееПотреблениеТоваров.ПФ_MXL_ВнутреннееПотреблениеТоваров");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодписи   = Макет.ПолучитьОбласть("Подписи");
	Если ВыводитьДопКолонку Тогда
		ОбластьСтрока       = Макет.ПолучитьОбласть("СтрокаДопКолонка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыДопКолонка");
	Иначе
		ОбластьСтрока       = Макет.ПолучитьОбласть("Строка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать();
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Вывод заголовка.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ТабДокумент.Вывести(ОбластьЗаголовок);
		
		// Вывод шапки.
		Если ВыводитьДопКолонку Тогда
			ОбластьШапкаТаблицы.Параметры.ДопКолонка = ДопКолонка;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьШапкаТаблицы);
		
		// Вывод строк документа.
		
		ВыборкаСтроки = ВыборкаДокументы.ТаблицаТовары.Выбрать();
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
			
			СтрокаХарактеристика = ?(ЗначениеЗаполнено(ВыборкаСтроки.Характеристика), " (" + ВыборкаСтроки.Характеристика + ") ", "");
			ОбластьСтрока.Параметры.Номенклатура = ВыборкаСтроки.Номенклатура + СтрокаХарактеристика;
			
			ТабДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодписи);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);

	КонецЦикла;

	// ТОиР
	ТабДокумент.ТолькоПросмотр = Истина;
	// ТОиР
	Возврат ТабДокумент;

КонецФункции

#КонецОбласти

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
