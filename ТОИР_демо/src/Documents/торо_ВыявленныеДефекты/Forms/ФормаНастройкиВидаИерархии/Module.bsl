#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	    
	СписокИерархий = ЗаполнитьСписокСтруктурНаСервере(Параметры.ТекСтруктураИерархии); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Открытие = Истина;
	
	Для каждого ЭлемСписка ИЗ СписокИерархий Цикл
		Если ЭлемСписка.Пометка Тогда
			Элементы.СписокИерархий.ТекущаяСтрока = СписокИерархий.Индекс(ЭлемСписка);
			ЭлемСписка.Картинка = БиблиотекаКартинок.торо_ЗначениеВыбрано;
		Иначе
			ЭлемСписка.Картинка = БиблиотекаКартинок.торо_ЗначениеНеВыбрано;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура СписокИерархийПриАктивизацииСтроки(Элемент)
	
	Если Открытие Тогда
		
		Открытие = Ложь;
		
		Для Каждого ЭлементСписка Из СписокИерархий Цикл 	
			Если ЭлементСписка.Пометка Тогда
				Элементы.СписокИерархий.ТекущаяСтрока = СписокИерархий.Индекс(ЭлементСписка);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		ТекДанные = Элемент.ТекущиеДанные;
	
		Для Каждого ЭлементСписка Из СписокИерархий Цикл 	
			ЭлементСписка.Пометка = (ЭлементСписка.Значение = ТекДанные.Значение);
			Если ЭлементСписка.Пометка Тогда
				ЭлементСписка.Картинка = БиблиотекаКартинок.торо_ЗначениеВыбрано;
			Иначе
				ЭлементСписка.Картинка = БиблиотекаКартинок.торо_ЗначениеНеВыбрано;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;		
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ОК(Команда)
	
	Перем ЗначениеИерархии;
	
	Для каждого ЭлементСписка Из СписокИерархий Цикл
		
		Если ЭлементСписка.Пометка Тогда
			ЗначениеИерархии = ЭлементСписка.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла; 
	
	Закрыть(ЗначениеИерархии);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервереБезКонтекста
Функция ЗаполнитьСписокСтруктурНаСервере(СтруктураИерархии, БезТекИерархии = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_СтруктурыОР.Ссылка,
	|	торо_СтруктурыОР.Наименование
	|ИЗ
	|	Справочник.торо_СтруктурыОР КАК торо_СтруктурыОР
	|ГДЕ
	|	торо_СтруктурыОР.ПометкаУдаления = ЛОЖЬ";
	
	Если БезТекИерархии Тогда
		
		Запрос.Текст = Запрос.Текст + " И торо_СтруктурыОР.Ссылка <> &СтруктураИерархии";
		Запрос.УстановитьПараметр("СтруктураИерархии", СтруктураИерархии);
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокСтруктурОР = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СписокСтруктурОР.Добавить(ВыборкаДетальныеЗаписи.Ссылка, ВыборкаДетальныеЗаписи.Наименование);
		
	КонецЦикла;
	
	Если БезТекИерархии Тогда
		
		СписокСтруктурОР[0].Пометка = Истина;
	Иначе
		
		Для каждого ЭлементСписка Из СписокСтруктурОР Цикл
			
			ЭлементСписка.Пометка = ЭлементСписка.Значение = СтруктураИерархии;	
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат СписокСтруктурОР;

КонецФункции
#КонецОбласти