#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Дефектная ведомость
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_ВыявленныеДефекты";
	КомандаПечати.Идентификатор = "ДефектнаяВедомость";
	КомандаПечати.Представление = НСтр("ru = 'Дефектная ведомость'");
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Дефектная ведомость (ликвидация ОР)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_ВыявленныеДефекты";
	КомандаПечати.Идентификатор = "ДефектнаяВедомостьЛиквидация";
	КомандаПечати.Представление = НСтр("ru = 'Дефектная ведомость (ликвидация ОР)'");
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Акт дефектации
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_ВыявленныеДефекты";
	КомандаПечати.Идентификатор = "АктДефектации";
	КомандаПечати.Представление = НСтр("ru = 'Акт дефектации'");
	КомандаПечати.Обработчик = "торо_Печать.ЗапроситьУПользователяДополнительныеПараметрыПередПечатью";
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	// Журнал дефектов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.торо_ВыявленныеДефекты";
	КомандаПечати.Идентификатор = "ЖурналДефектов";
	КомандаПечати.Представление = НСтр("ru = 'Журнал дефектов'");
	КомандаПечати.Обработчик = "торо_Печать.ОткрытьФормуЖурналаДефектов";
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Для каждого Элем Из МассивОбъектов Цикл
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДефектнаяВедомостьЛиквидация") Тогда
			
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"ДефектнаяВедомостьЛиквидация", 
			"Дефектная ведомость (ликвидация ОР)", 
			ПечатьДефектнойВедомостиЛиквидации(Элем, ПараметрыПечати));
			
		КонецЕсли;
		
		Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ДефектнаяВедомость") Тогда
			
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
			"ДефектнаяВедомость", 
			"Дефектная ведомость", 
			ПечатьДефектнойВедомости(Элем, ПараметрыПечати));	
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктДефектации") Тогда
		
		ПараметрыПечати.Вставить("ПечатьАктаДефектации");
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"АктДефектации", 
		"Акт дефектации", 
		ПечатьАктаДефектации(МассивОбъектов, ПараметрыПечати));
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьДефектнойВедомости(ОбъектПечати, ПараметрыПечати)
	
	ТабДок = Новый ТабличныйДокумент;
	
	ТабДок.АвтоМасштаб = Истина;
	
	Макет = ПолучитьМакет("ДефектнаяВедомость");
	ШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
	СтрокаТаблицаНомераКолонок = Макет.ПолучитьОбласть("СтрокаТаблицаНомераКолонок");
	СтрокаТаблициОР = Макет.ПолучитьОбласть("СтрокаТаблициОР");
	СтрокаТаблицаОткозавшийЭлемент = Макет.ПолучитьОбласть("СтрокаТаблицаОткозавшийЭлемент");
	ПодвалОтветственные = Макет.ПолучитьОбласть("ПодвалОтветственные");
	
	ШапкаДокумента.Параметры.НомерДокумента           = ОбъектПечати.Номер;
	ШапкаДокумента.Параметры.ДатаДокумента            = ОбъектПечати.Дата;
	ШапкаДокумента.Параметры.Подразделение            = ОбъектПечати.Подразделение;
	ШапкаДокумента.Параметры.Организация              = ОбъектПечати.Организация;
	ШапкаДокумента.Параметры.ДатаОбнаружения          = ОбъектПечати.ДатаОбнаружения; 
	ШапкаДокумента.Параметры.ДефектВыявленВПроцессе   = ОбъектПечати.ДефектВыявленВПроцессе; 
	ШапкаДокумента.Параметры.Инициатор                = ОбъектПечати.Инициатор; 	
	
	ТабДок.Вывести(ШапкаДокумента);
	ТабДок.Вывести(СтрокаТаблицаНомераКолонок);
	ГруппаОтказавшихЭлементов=Неопределено;
	ном=1;
	Для Каждого Дефект Из ОбъектПечати.СписокДефектов Цикл
		ОбъектРемонтаИзТЧ = Дефект.ОбъектРемонта;
		
		Если не (ОбъектРемонтаИзТЧ = ГруппаОтказавшихЭлементов) или (ГруппаОтказавшихЭлементов=Неопределено) Тогда 
			СтрокаТаблициОР.Параметры.ОбъектРемонта = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ОбъектРемонтаИзТЧ);

			ТабДок.Вывести(СтрокаТаблициОР);
			ГруппаОтказавшихЭлементов= ОбъектРемонтаИзТЧ;
		КонецЕсли;
		
		СтрокаТаблицаОткозавшийЭлемент.Параметры.н = ном;
		СтрокаТаблицаОткозавшийЭлемент.Параметры.ОтказавшийЭлемент  = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(Дефект.ОтказавшийЭлемент);
		СтрокаТаблицаОткозавшийЭлемент.Параметры.ВидДефекта         = Дефект.ВидДефекта;
		СтрокаТаблицаОткозавшийЭлемент.Параметры.ОписаниеДефекта    = Дефект.ДефектОписание;
		СтрокаТаблицаОткозавшийЭлемент.Параметры.ПричинаДефекта     = Дефект.ДефектПричина;
		СтрокаТаблицаОткозавшийЭлемент.Параметры.УстранениеДефекта  = Дефект.НаправлениеНаУстранение;
		СтрокаТаблицаОткозавшийЭлемент.Параметры.ПоследствияДефекта = Дефект.ПоследствияДефекта;    
		ном=ном+1;
		
		ТабДок.Вывести(СтрокаТаблицаОткозавшийЭлемент);
	КонецЦикла;
	
	
	ПодвалОтветственные.Параметры.Ответственный 	= ОбъектПечати.Ответственный;
	
	ТабДок.Вывести(ПодвалОтветственные);
	
	ТабДок.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабДок.ТолькоПросмотр      = Истина;
	ТабДок.ОтображатьСетку     = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	
	
	Возврат ТабДок;
	
	
КонецФункции

Функция ПечатьДефектнойВедомостиЛиквидации(ОбъектПечати, ПараметрыПечати)

	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ДефектнаяВедомостьЛиквидация");
	ШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
	СтрокаТаблицаНомераКолонок = Макет.ПолучитьОбласть("СтрокаТаблицаНомераКолонок");
	СтрокаТаблицаОткозавшийЭлемент = Макет.ПолучитьОбласть("СтрокаТаблицаОткозавшийЭлемент");
	Подвал = Макет.ПолучитьОбласть("Подвал");

	ШапкаДокумента.Параметры.НомерДокумента 	= ОбъектПечати.Номер;
	ШапкаДокумента.Параметры.ДатаДокумента 		= Формат(ОбъектПечати.Дата,"ДФ=dd.MM.yyyy");
	ШапкаДокумента.Параметры.Подразделение 		= ОбъектПечати.Подразделение;
	ШапкаДокумента.Параметры.Организация 		= ОбъектПечати.Организация;
	
	ТабДок.Вывести(ШапкаДокумента);
	ТабДок.Вывести(СтрокаТаблицаНомераКолонок);
	ном=1;
	Для Каждого Дефект Из ОбъектПечати.СписокДефектов Цикл
		
		ЗаполнитьЗначенияСвойств(СтрокаТаблицаОткозавшийЭлемент.Параметры, Дефект.ОбъектРемонта);
		СтрокаТаблицаОткозавшийЭлемент.Параметры.н = ном;
		СтрокаТаблицаОткозавшийЭлемент.Параметры.ОбъектРемонта 	 = торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(Дефект.ОбъектРемонта);
		СтрокаТаблицаОткозавшийЭлемент.Параметры.ИнвНомер     	 = Дефект.ОбъектРемонта.ИнвентарныйНомер;
		СтрокаТаблицаОткозавшийЭлемент.Параметры.ДатаВвода	  	 = Формат(Дефект.ОбъектРемонта.ДатаВводаВЭксплуатацию,"ДФ=dd.MM.yyyy");
		СтрокаТаблицаОткозавшийЭлемент.Параметры.ОписаниеДефекта = ?(Дефект.ОбъектРемонта = Дефект.ОтказавшийЭлемент, Дефект.ДефектОписание, Строка(торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(Дефект.ОтказавшийЭлемент))+", "+Дефект.ДефектОписание);
  
		ном=ном+1;
		
		ТабДок.Вывести(СтрокаТаблицаОткозавшийЭлемент);
		
	КонецЦикла;
		
	ТабДок.Вывести(Подвал);
	
	ТабДок.АвтоМасштаб         = Истина;
	ТабДок.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабДок.ТолькоПросмотр      = Истина;
	ТабДок.ОтображатьСетку     = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;

	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;

КонецФункции // ПечатьДефектнойВедомостиЛиквидации(МассивОбъектов, ПараметрыПечати)  ,

Функция ПечатьАктаДефектации(МассивОбъектов, ПараметрыПечати)

	Дефект = ПараметрыПечати.Док;
	ID     = ПараметрыПечати.ID;
	
	СтрокиСОР = Дефект.СписокДефектов.Выгрузить(Новый Структура ("ID",ID));
	
	ОР            = СтрокиСОР[0].ОбъектРемонта;
		
	Макет  = ПолучитьМакет("АктДефектации");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Выводим общие реквизиты шапки	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Организация 		= Дефект.Организация;
	ОбластьМакета.Параметры.ОбъектРемонта 		= торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ОР);

	
	ОбластьМакета.Параметры.СтанционныйНомер 	= СокрЛП(ОР.ИнвентарныйНомер);
	ОбластьМакета.Параметры.ДатаАкта 			= Дефект.Дата;
		
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Комиссиия
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_КомиссииСоставКомиссии.ЧленКомиссии,
	               |	торо_КомиссииСоставКомиссии.Ссылка КАК Ссылка,
	               |	торо_КомиссииСоставКомиссии.Ссылка.Председатель КАК ПредседательКомиссии
	               |ИЗ
	               |	Справочник.торо_Комиссии.СоставКомиссии КАК торо_КомиссииСоставКомиссии
	               |ГДЕ
	               |	торо_КомиссииСоставКомиссии.Ссылка = &Ссылка
	               |ИТОГИ
	               |	МАКСИМУМ(ПредседательКомиссии)
	               |ПО
	               |	Ссылка";
				   
	Запрос.УстановитьПараметр("Ссылка", Дефект.Комиссия);
	
	ВыборкаКомиссия = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОбластьМакетаПредседатель  = Макет.ПолучитьОбласть("ПредседательКомиссии");
	
	ЕстьКомиссия = Ложь;
	
	Если ВыборкаКомиссия.Следующий() Тогда
		
		ОбластьМакетаПредседатель.Параметры.ПредседательКомиссии = ВыборкаКомиссия.ПредседательКомиссии;
		ЕстьКомиссия = Истина;
		
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакетаПредседатель);
	
	ОбластьМакетаЧленыКомиссии = Макет.ПолучитьОбласть("ЧленыКомисии");

	Если ЕстьКомиссия Тогда
		
		ВыборкаЧленыКомиссии = ВыборкаКомиссия.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		Пока ВыборкаЧленыКомиссии.Следующий() Цикл
			
			ОбластьМакетаЧленыКомиссии.Параметры.ЧленКомиссии = ВыборкаЧленыКомиссии.ЧленКомиссии;
			ТабДокумент.Вывести(ОбластьМакетаЧленыКомиссии);

		КонецЦикла; 
	Иначе
		ТабДокумент.Вывести(ОбластьМакетаЧленыКомиссии);
	КонецЕсли;

	
	// Выводим пункты 1, 2,3
	ОбластьМакета =  Макет.ПолучитьОбласть("Пункты_1_2_3");
	ОбластьМакета.Параметры.ОбъектРемонта 			= торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ОР);
	ОбластьМакета.Параметры.СтанционныйНомер 		= СокрЛП(ОР.ИнвентарныйНомер);
	ОбластьМакета.Параметры.ЗаводИзготовитель 		= СокрЛП(?(ЗначениеЗаполнено(ОР.Изготовитель), ОР.Изготовитель, ОР.ТиповойОР.Изготовитель));
	ОбластьМакета.Параметры.ТипОборудования 		= СокрЛП(ОР.ТиповойОР);
	ОбластьМакета.Параметры.ЗаводскойНомер 			= СокрЛП(ОР.ЗаводскойНомер);
	ОбластьМакета.Параметры.ДатаВыпуска 			= ОР.ДатаВыпуска;
	ОбластьМакета.Параметры.ДатаВводаВЭксплуатацию 	= ОР.ДатаВводаВЭксплуатацию;
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим описание дефектов
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаДеффектов");
	Для каждого ТекСтр из СтрокиСОР Цикл
		СтрокаОписания = "";
		СтрокаОписания = СтрокаОписания + ТекСтр.ДефектОписание + " элемента " + торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ТекСтр.ОтказавшийЭлемент);
		ОбластьМакета.Параметры.ОписаниеДеффекта = СокрЛП(СтрокаОписания);	
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;	
	
	// Выводим пункт 4	
	ОбластьМакета =  Макет.ПолучитьОбласть("Пункт_4");
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРабот");
	Для каждого ТекСтр из СтрокиСОР Цикл
		СтрокаОписания = "";
		СтрокаОписания = СтрокаОписания + ТекСтр.НаправлениеНаУстранение + " элемента " + торо_ЗаполнениеДокументов.ПолучитьПредоставленияОРДляПечати(ТекСтр.ОтказавшийЭлемент);
		ОбластьМакета.Параметры.ОписаниеРаботы = СокрЛП(СтрокаОписания);	
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;	
	
	// Зададим параметры макета
	ТабДокумент.АвтоМасштаб	= Истина;
	ТабДокумент.ПолеСверху  = 0;
	ТабДокумент.ПолеСлева   = 0;
	ТабДокумент.ПолеСнизу   = 0;
	ТабДокумент.ПолеСправа  = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабДокумент.ТолькоПросмотр = Истина;
	Возврат ТабДокумент;
	

КонецФункции // ПечатьАктаДефектации(МассивОбъектов, ПараметрыПечати)

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Настройки.ПриПолученииСлужебныхРеквизитов = Истина;
	
КонецПроцедуры

Процедура ПриПолученииСлужебныхРеквизитов(Реквизиты) Экспорт
	
	Реквизиты.Добавить("ИзМобильного");
	Реквизиты.Добавить("СтатусДокумента");
	Реквизиты.Добавить("ИсторияСтатусов.*");
	Реквизиты.Добавить("Согласующие.*");
		
КонецПроцедуры


#КонецОбласти

#КонецЕсли

