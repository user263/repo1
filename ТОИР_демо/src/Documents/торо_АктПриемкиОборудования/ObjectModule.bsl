

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
Перем БезусловнаяЗапись Экспорт;	// Отключает проверки при записи документа
перем СтруктураДанных Экспорт;  // Структура, хранящая данные для работы с уведомлениями.

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиТОиР", "ОсновнойОтветственный");
	Если НЕ ЗначениеЗаполнено(Ответственный) тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;	
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		ТекДата = ТекущаяДата();
		Дата = ?(ТекДата < ДанныеЗаполнения.Дата, ДанныеЗаполнения.Дата, ТекДата);
		
		ДокументыОснования.Добавить().ДокументОснование = ДанныеЗаполнения;
		
		Организация = ДанныеЗаполнения.Организация;
		Подразделение = ДанныеЗаполнения.Подразделение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СписокТЧ = Новый Структура();
	СписокТЧ.Вставить("ДокументыОснования", "Документы основания");
	СписокТЧ.Вставить("РемонтыОборудования", "Ремонты оборудования");
	торо_ОбщегоНазначения.ПроверитьЗаполненностьТабличныхЧастей(ЭтотОбъект, СписокТЧ, Отказ);
	Если Отказ тогда
		Возврат;
	КонецЕсли;	
	// Согласование++
	
	// Проверим использование статусов документов.
	
	ВидДокумента = Перечисления.торо_ВидыДокументовСогласованияРемонтов.торо_АктПриемкиОборудования;
	мИспользоватьСогласованиеДокументов = торо_Согласования.ПроверитьИспользованиеСогласованияДокументов(ВидДокумента);
	
	Если мИспользоватьСогласованиеДокументов Тогда
		торо_РаботаСоСтатусамиДокументовСервер.ПроверитьРазрешениеПроведенияПоСтатусу(Ссылка, СпособСогласования, ДополнительныеСвойства, Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли; 
	
	// Согласование--
	
	ТЗРемонтыОборудования = РемонтыОборудования.Выгрузить();
	
	Если ТЗРемонтыОборудования.Количество() = 0 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Документ не может быть проведен без указания ремонтов оборудования! Добавьте хотя бы один ремонт!'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	Если Не Отказ Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	РемонтыОборудования.ОбъектРемонта,
		               |	РемонтыОборудования.ВидРемонтныхРабот,
		               |	РемонтыОборудования.ID КАК ID
		               |ПОМЕСТИТЬ РемонтыОборудования
		               |ИЗ
		               |	&РемонтыОборудования КАК РемонтыОборудования
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ID
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	торо_АктыПоРемонтам.IDРемонта КАК ID,
		               |	торо_АктыПоРемонтам.Регистратор КАК Ссылка
		               |ПОМЕСТИТЬ АктыПоРемонтам
		               |ИЗ
		               |	РегистрСведений.торо_АктыПоРемонтам.СрезПоследних(
		               |			,
		               |			IDРемонта В
		               |				(ВЫБРАТЬ
		               |					РемонтыОборудования.ID
		               |				ИЗ
		               |					РемонтыОборудования КАК РемонтыОборудования)) КАК торо_АктыПоРемонтам
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	торо_АктыПоРемонтам.IDРемонта
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	АктыПоРемонтам.ID,
		               |	АктыПоРемонтам.Ссылка,
		               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ЗавершитьРемонт КАК РемонтЗавершен
		               |ПОМЕСТИТЬ торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		               |ИЗ
		               |	АктыПоРемонтам КАК АктыПоРемонтам
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.торо_АктОВыполненииЭтапаРабот.РемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		               |		ПО АктыПоРемонтам.Ссылка = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка
		               |			И АктыПоРемонтам.ID = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	АктыПоРемонтам.ID
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	РемонтыОборудования.ОбъектРемонта,
		               |	РемонтыОборудования.ВидРемонтныхРабот,
		               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка КАК Документ,
		               |	РемонтыОборудования.ID,
		               |	торо_АктОВыполненииЭтапаРаботРемонтыОборудования.РемонтЗавершен КАК РемонтЗавершен,
		               |	ВЫБОР
		               |		КОГДА торо_АктОВыполненииЭтапаРаботРемонтыОборудования.Ссылка ЕСТЬ NULL
		               |			ТОГДА ИСТИНА
		               |		ИНАЧЕ ЛОЖЬ
		               |	КОНЕЦ КАК АктыОтсутствуют
		               |ИЗ
		               |	РемонтыОборудования КАК РемонтыОборудования
		               |		ЛЕВОЕ СОЕДИНЕНИЕ торо_АктОВыполненииЭтапаРаботРемонтыОборудования КАК торо_АктОВыполненииЭтапаРаботРемонтыОборудования
		               |		ПО РемонтыОборудования.ID = торо_АктОВыполненииЭтапаРаботРемонтыОборудования.ID";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("РемонтыОборудования",ТЗРемонтыОборудования);
		ТабРезультат = Запрос.Выполнить().Выгрузить();
		
		ТЗЗакрываемыеАкты = ЗакрываемыеАкты.Выгрузить();
		
		ПрисутствуютВсеАкты = Истина;
		Для Каждого Строка Из ТабРезультат Цикл
			
			Ошибка = Ложь;
			Если Строка.АктыОтсутствуют Тогда
				Ошибка = Истина;
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Невозможно провести документ по причине того, что для ремонта ""%1"" для ""%2"" отсутствуют акты о выполнении этапа работ!'"),
					Строка.ВидРемонтныхРабот,Строка.ОбъектРемонта);
			ИначеЕсли ТЗЗакрываемыеАкты.НайтиСтроки(Новый Структура("ID, Документ", Строка.ID, Строка.Документ)).Количество() = 0 Тогда
				Ошибка = Истина;
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Невозможно провести документ по причине того, что для ремонта ""%1"" для ""%2"" в документе отсутствует ""%3""! Необходимо обновить таблицу закрываемых по ремонту актов!'"),
					Строка.ВидРемонтныхРабот,Строка.ОбъектРемонта,Строка.Документ);
			КонецЕсли;
			
			Если Ошибка Тогда
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ТекстСообщения;
				Сообщение.Сообщить();
			КонецЕсли;
			
		КонецЦикла;
		Если Не Отказ Тогда
			IDРемонтов = ТЗРемонтыОборудования.ВыгрузитьКолонку("ID");
			
			Для Каждого Ремонт Из IDРемонтов Цикл
				НайденныеСтроки = ТабРезультат.НайтиСтроки(Новый Структура("ID", Ремонт));
				Если НайденныеСтроки.Количество() > 0 Тогда
					Ошибка = Истина;
					Для Каждого Строка Из НайденныеСтроки Цикл
						Если ЗначениеЗаполнено(Строка.РемонтЗавершен) И Строка.РемонтЗавершен Тогда
							Ошибка = Ложь;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Если Ошибка Тогда
						Отказ = Истина;
						
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Невозможно провести документ по причине того, что для ремонта ""%1"" по объекту ""%2"" отсутствует хотя бы один акт о выполнении этапа работ с признаком завершения!'"),
							НайденныеСтроки[0].ВидРемонтныхРабот,НайденныеСтроки[0].ОбъектРемонта);
						Сообщение.Сообщить();
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Не Отказ Тогда
		ВидДокумента = Перечисления.торо_ВидыДокументовСогласованияРемонтов.торо_АктПриемкиОборудования;
		торо_РаботаСоСтатусамиДокументовСервер.ПриЗаписиОбъекта(Ссылка, ВидДокумента, СпособСогласования, ДополнительныеСвойства,, Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	торо_РаботаСоСтатусамиДокументовСервер.ОчиститьСогласованиеПриКопировании(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#КонецЕсли