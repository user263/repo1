#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Печать
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
			
			Объект.Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновнаяОрганизация",
			Истина);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Подразделение) Тогда
			
			Объект.Подразделение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновноеПодразделение",
			Истина);
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
			
			Объект.Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновнойОтветственный",
			Справочники.Пользователи.ПустаяСсылка());
			
		КонецЕсли;
	КонецЕсли;
	
	ТекСтруктураИерархии = 	ТекСтруктураИерархии = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"НастройкиТОиР",
			"ОсновнаяСтруктураИерархии",
			Истина);

	// Заголовок формы++
	торо_РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", РеквизитФормыВЗначение("Объект"), ЭтаФорма);
	// Заголовок формы--	
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	ШаблонСообщения = Нстр("ru='Для объекта ремонта ""%1"" у коэффициента ""%2"" не заполнено поле ""%3"".'");
	Для каждого СтрокаКоэффициента из Объект.КоэффициентыРемонтныхОсобенностей Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаКоэффициента.ДатаНачалаИспользования) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, СтрокаКоэффициента.ОбъектРемонта, СтрокаКоэффициента.ВидКоэффициента, НСтр("ru='Дата ввода'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтрокаКоэффициента.ВидКоэффициента) Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщения, СтрокаКоэффициента.ОбъектРемонта, СтрокаКоэффициента.ВидКоэффициента, НСтр("ru='Вид коэффициента'"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// Заголовок формы++
	торо_РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", РеквизитФормыВЗначение("Объект"), ЭтаФорма);
	// Заголовок формы--
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОбъектыРемонта
&НаКлиенте
Процедура ОбъектыРемонтаОбъектРемонтаПриИзменении(Элемент)
	
	Если НЕ ДобавлениеОР Тогда
		МассивСтрок = Объект.КоэффициентыРемонтныхОсобенностей.НайтиСтроки(Новый Структура("ОбъектРемонта", СтарыйОР));
		Если НЕ Элементы.ОбъектыРемонта.ТекущиеДанные = Неопределено Тогда
			НовыйОР = Элементы.ОбъектыРемонта.ТекущиеДанные.ОбъектРемонта;
		КонецЕсли;
		
		Для каждого Элем Из МассивСтрок Цикл
			Элем.ОбъектРемонта = НовыйОР;
		КонецЦикла;
	КонецЕсли;
	
	ТекСтрока = Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено И ТекСтрока.РаспространятьНаПодчиненных Тогда
		ТекСтрока = Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные;
		
		СтрокиПодчиненныхНаУдаление = Объект.КоэффициентыРемонтныхОсобенностейПодчиненных.НайтиСтроки(Новый Структура("РодительИерархии,ВидКоэффициента, ДатаНачалаИспользования", СтарыйОР, ТекСтрока.ВидКоэффициента, ТекСтрока.ДатаНачалаИспользования));
		
		Для Каждого СтрокаПодчиненного Из СтрокиПодчиненныхНаУдаление Цикл 
			Объект.КоэффициентыРемонтныхОсобенностейПодчиненных.Удалить(СтрокаПодчиненного);
		КонецЦикла;
		
		РаспространитьНаПодчиненныхДляТекущейСтроки(ТекСтрока);
	КонецЕсли;	
	
	ОбъектыРемонтаПриАктивизацииСтроки(Элементы.ОбъектыРемонта);
	
	СтарыйОР = Неопределено;
	ДобавлениеОР = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элементы.ОбъектыРемонта.ТекущиеДанные = Неопределено Тогда
		Если ЗначениеЗаполнено(Элементы.ОбъектыРемонта.ТекущиеДанные.ОбъектРемонта) Тогда
			Элементы.КоэффициентыРемонтныхОсобенностей.ОтборСтрок = Новый ФиксированнаяСтруктура("ОбъектРемонта", Элементы.ОбъектыРемонта.ТекущиеДанные.ОбъектРемонта);
		Иначе
			Элементы.КоэффициентыРемонтныхОсобенностей.ОтборСтрок = Новый ФиксированнаяСтруктура("ОбъектРемонта", ПредопределенноеЗначение("Справочник.торо_ОбъектыРемонта.ПустаяСсылка"));
		КонецЕсли;
			
		Если ТипЗнч(Элементы.ОбъектыРемонта.ТекущиеДанные.ОбъектРемонта) = ТИп("СправочникСсылка.торо_СписокОбъектовРегламентногоМероприятия") Тогда
			Элементы.КоэффициентыРемонтныхОсобенностейИерархия.Видимость = Ложь;
			Элементы.КоэффициентыРемонтныхОсобенностейРаспространятьНаПодчиненных.Видимость = Ложь;
		Иначе
			Элементы.КоэффициентыРемонтныхОсобенностейИерархия.Видимость = Истина;
			Элементы.КоэффициентыРемонтныхОсобенностейРаспространятьНаПодчиненных.Видимость = Истина;
		КонецЕсли;
		
	Иначе
		Элементы.КоэффициентыРемонтныхОсобенностей.ОтборСтрок = Новый ФиксированнаяСтруктура("ОбъектРемонта", Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаОбъектРемонтаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ОбъектыРемонта.ТекущиеДанные;
	
	ОбъектыРемонтаПриАктивизацииСтроки(Элементы.ОбъектыРемонта);
	
	Если НЕ ТекДанные = Неопределено Тогда
		Если ТипЗнч(ТекДанные.ОбъектРемонта) = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда
			СтандартнаяОбработка = Ложь;     
			СписокДоступныхСтатусов = ПолучитьСписокСтатусовНаСервере();
			СтарыйОР = ТекДанные.ОбъектРемонта;
			
			ПараметрыОтбора = Новый Структура("СписокСтатусов", СписокДоступныхСтатусов);
			ПараметрыОтбора.Вставить("СтруктураИерархии",       ТекСтруктураИерархии);
			
			ОткрытьФорму("Справочник.торо_ОбъектыРемонта.Форма.ФормаВыбора",ПараметрыОтбора,Элемент,,ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
		ИначеЕсли ТекДанные.ОбъектРемонта = Неопределено Тогда 
			СтандартнаяОбработка = Ложь;
			
			СписокВыбора = ЗаполнитьСписокЗначение();
			
			СписокВыбора.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ОбъектыРемонтаОбъектРемонтаНачалоВыбораЗавершение",ЭтотОбъект, Новый Структура("Элемент",Элемент)),НСтр("ru = 'Выбор типа данных'"));
			
		Иначе
			СтандартнаяОбработка = Ложь; 
			СтарыйОР = ТекДанные.ОбъектРемонта;
			ФормаВыбора = ПолучитьФорму("Справочник.торо_СписокОбъектовРегламентногоМероприятия.ФормаВыбора",, Элемент, Объект.Ссылка);
			ФормаВыбора.Открыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаОбъектРемонтаНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элемент = ДополнительныеПараметры.Элемент;
	ВыбЭлемент = ВыбранныйЭлемент;
	ТекДанные = Элементы.ОбъектыРемонта.ТекущиеДанные;
	
	Если ВыбЭлемент.Значение = Неопределено Тогда 
		Возврат;
	ИначеЕсли ВыбЭлемент.Значение = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда     
		СписокДоступныхСтатусов = ПолучитьСписокСтатусовНаСервере();
		СтарыйОР = ТекДанные.ОбъектРемонта;
		
		ПараметрыОтбора = Новый Структура("СписокСтатусов", СписокДоступныхСтатусов);
		ПараметрыОтбора.Вставить("СтруктураИерархии",       ТекСтруктураИерархии);
		
		ОткрытьФорму("Справочник.торо_ОбъектыРемонта.Форма.ФормаВыбора",ПараметрыОтбора,Элемент,,ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе    
		СтарыйОР = ТекДанные.ОбъектРемонта;
		ФормаВыбора = ПолучитьФорму("Справочник.торо_СписокОбъектовРегламентногоМероприятия.ФормаВыбора",, Элемент, Объект.Ссылка);
		ФормаВыбора.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаОбъектРемонтаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		НайденныеСтроки = Объект.ОбъектыРемонта.НайтиСтроки(Новый Структура("ОбъектРемонта",ВыбранноеЗначение));
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбъектыРемонтаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Не Копирование Тогда
		ДобавлениеОР = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаПередУдалением(Элемент, Отказ)
	
	ВыделенныеСтроки = Элементы.ОбъектыРемонта.ВыделенныеСтроки;
	Для каждого УдаляемаяСтрокаИД из ВыделенныеСтроки Цикл
		УдаляемаяСтрока = Объект.ОбъектыРемонта.НайтиПоИдентификатору(УдаляемаяСтрокаИД);
		СтрокиКоэффициентов = Объект.КоэффициентыРемонтныхОсобенностей.НайтиСтроки(Новый Структура("ОбъектРемонта", УдаляемаяСтрока.ОбъектРемонта));
		Для каждого СтрокаКоэффициента из СтрокиКоэффициентов Цикл
			Объект.КоэффициентыРемонтныхОсобенностей.Удалить(СтрокаКоэффициента);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКоэффициентыРемонтныхОсобенностей
&НаКлиенте
Процедура КоэффициентыРемонтныхОсобенностейПриАктивизацииСтроки(Элемент)
	ТекДанные = Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные;
	Если НЕ ТекДанные = Неопределено Тогда
		флагИспользование = Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные.Использование;
		Элементы.КоэффициентыРемонтныхОсобенностейЗначениеКоэффициента.Доступность = флагИспользование;
		
		ТекВидКоэф = ТекДанные.ВидКоэффициента;
		ТекДатаНачИсп = ТекДанные.ДатаНачалаИспользования;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КоэффициентыРемонтныхОсобенностейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока и НЕ Копирование Тогда
		Если НоваяСтрока И Элементы.ОбъектыРемонта.ТекущиеДанные <> Неопределено Тогда
			Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные.ОбъектРемонта = Элементы.ОбъектыРемонта.ТекущиеДанные.ОбъектРемонта;
		КонецЕсли;
		Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные.Использование = Истина;
		КоэффициентыРемонтныхОсобенностейИспользованиеПриИзменении(Элементы.КоэффициентыРемонтныхОсобенностей);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КоэффициентыРемонтныхОсобенностейПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекСтр = Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные;
	Если НЕ ОтменаРедактирования Тогда
		Если НоваяСтрока И Элементы.ОбъектыРемонта.ТекущиеДанные <> Неопределено Тогда
			ТекСтр.ОбъектРемонта = Элементы.ОбъектыРемонта.ТекущиеДанные.ОбъектРемонта;
		КонецЕсли;
		МассивСтрок = Объект.КоэффициентыРемонтныхОсобенностей.НайтиСтроки(Новый Структура("ОбъектРемонта, ВидКоэффициента, ДатаНачалаИспользования",ТекСтр.ОбъектРемонта, ТекСтр.ВидКоэффициента, ТекСтр.ДатаНачалаИспользования));
		Если МассивСтрок.Количество() > 1 Тогда
			Отказ = Истина;
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для объекта ремонта %1 уже установлен вид коэффициента %2 (с %3)!'"),ТекСтр.ОбъектРемонта,ТекСтр.ВидКоэффициента,ТекСтр.ДатаНачалаИспользования));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КоэффициентыРемонтныхОсобенностейРаспространятьНаПодчиненныхПриИзменении(Элемент)
	
	ТекДанные = Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекДанные.Иерархия) Тогда
		ТекДанные.РаспространятьНаПодчиненных= НЕ ТекДанные.РаспространятьНаПодчиненных;
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено значение структуры иерархии.'"));
		Возврат;
	КонецЕсли;
	Если НЕ ТекДанные = Неопределено Тогда
		СтруктураТекСтроки = Новый Структура("РаспространятьНаПодчиненных,Иерархия, ОбъектРемонта, ВидКоэффициента, ДатаНачалаИспользования, ЗначениеКоэффициента, Использование", 
		ТекДанные.РаспространятьНаПодчиненных, ТекДанные.Иерархия, ТекДанные.ОбъектРемонта, ТекДанные.ВидКоэффициента, ТекДанные.ДатаНачалаИспользования, ТекДанные.ЗначениеКоэффициента, ТекДанные.Использование);
		РаспространитьНаПодчиненныхДляТекущейСтроки(СтруктураТекСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоэффициентыРемонтныхОсобенностейВидКоэффициентаПриИзменении(Элемент)
	ТекСтрока = Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные;
	Если ТекСтрока.РаспространятьНаПодчиненных Тогда
		СтрокиПодчиненныхНаУдаление = Объект.КоэффициентыРемонтныхОсобенностейПодчиненных.НайтиСтроки(Новый Структура("РодительИерархии,ВидКоэффициента, ДатаНачалаИспользования",ТекСтрока.ОбъектРемонта, ТекВидКоэф, ТекСтрока.ДатаНачалаИспользования));
		
		Для Каждого СтрокаПодчиненного Из СтрокиПодчиненныхНаУдаление Цикл 
			Объект.КоэффициентыРемонтныхОсобенностейПодчиненных.Удалить(СтрокаПодчиненного);
		КонецЦикла;
		
		СтруктураТекСтроки = Новый Структура("РаспространятьНаПодчиненных,Иерархия, ОбъектРемонта, ВидКоэффициента, ДатаНачалаИспользования, ЗначениеКоэффициента, Использование", 
		ТекСтрока.РаспространятьНаПодчиненных, ТекСтрока.Иерархия, ТекСтрока.ОбъектРемонта, ТекСтрока.ВидКоэффициента, ТекСтрока.ДатаНачалаИспользования, ТекСтрока.ЗначениеКоэффициента, ТекСтрока.Использование);
		РаспространитьНаПодчиненныхДляТекущейСтроки(СтруктураТекСтроки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КоэффициентыРемонтныхОсобенностейИспользованиеПриИзменении(Элемент)
	
	флагИспользование = Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные.Использование;
	Если флагИспользование Тогда 
		Элементы.КоэффициентыРемонтныхОсобенностейЗначениеКоэффициента.Доступность = Истина;
	Иначе
		Элементы.КоэффициентыРемонтныхОсобенностейЗначениеКоэффициента.Доступность = Ложь;
		Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные.ЗначениеКоэффициента = ПредопределенноеЗначение("Справочник.торо_ВидыКоэффициентовРемонтныхОсобенностей.ПустаяСсылка");
	КонецЕсли;
	
	ТекСтрока = Элементы.КоэффициентыРемонтныхОсобенностей.ТекущиеДанные;
	Если НЕ ТекСтрока = Неопределено И ТекСтрока.РаспространятьНаПодчиненных Тогда
		СтрокиПодчиненныхНаУдаление = Объект.КоэффициентыРемонтныхОсобенностейПодчиненных.НайтиСтроки(Новый Структура("РодительИерархии,ВидКоэффициента, ДатаНачалаИспользования",ТекСтрока.ОбъектРемонта, ТекСтрока.ВидКоэффициента, ТекСтрока.ДатаНачалаИспользования));
		
		Для Каждого СтрокаПодчиненного Из СтрокиПодчиненныхНаУдаление Цикл 
			Объект.КоэффициентыРемонтныхОсобенностейПодчиненных.Удалить(СтрокаПодчиненного);
		КонецЦикла;
		
		СтруктураТекСтроки = Новый Структура("РаспространятьНаПодчиненных,Иерархия, ОбъектРемонта, ВидКоэффициента, ДатаНачалаИспользования, ЗначениеКоэффициента, Использование", 
		ТекСтрока.РаспространятьНаПодчиненных, ТекСтрока.Иерархия, ТекСтрока.ОбъектРемонта, ТекСтрока.ВидКоэффициента, ТекСтрока.ДатаНачалаИспользования, ТекСтрока.ЗначениеКоэффициента, ТекСтрока.Использование);
		РаспространитьНаПодчиненныхДляТекущейСтроки(СтруктураТекСтроки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
    УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

&НаСервереБезКонтекста
Функция ПолучитьСписокСтатусовНаСервере()
	
	СписокЗн = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	торо_НастройкиДоступностиОбъектовРемонта.СтатусОРВУчете
	|ИЗ
	|	РегистрСведений.торо_НастройкиДоступностиОбъектовРемонта КАК торо_НастройкиДоступностиОбъектовРемонта
	|ГДЕ
	|	торо_НастройкиДоступностиОбъектовРемонта.ДоступностьПриПодборе";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокЗн.Добавить(Выборка.СтатусОРВУчете);
	КонецЦикла;
	Возврат СписокЗн;
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьСписокЗначение()
	
	СписокВыбора = Новый СписокЗначений;
	Для Каждого ТипРеквизита Из Метаданные.Документы.торо_УстановкаКоэффициентовРемонтныхОсобенностей.ТабличныеЧасти.ОбъектыРемонта.Реквизиты.ОбъектРемонта.Тип.Типы() Цикл
		СписокВыбора.Добавить(ТипРеквизита);
	КонецЦикла;
	
	Возврат СписокВыбора;
	
КонецФункции

&НаСервере
Процедура РаспространитьНаПодчиненныхДляТекущейСтроки(ТекСтрокаНаработкаОбъектов)
	
	мОтказ = Ложь;
	
	флагРаспространятьНаПодчиненных = ТекСтрокаНаработкаОбъектов.РаспространятьНаПодчиненных;
	Если флагРаспространятьНаПодчиненных Тогда
						
		Если Не ТекСтрокаНаработкаОбъектов.Иерархия = ПредИерархия Тогда
			ЗаполнитьТаблицуИерархии(ТекСтрокаНаработкаОбъектов.Иерархия);
			ПредИерархия = ТекСтрокаНаработкаОбъектов.Иерархия;
		КонецЕсли;
		ТаблицаПодчиненныхОР = ПолучитьЗависимыеОР(ТекСтрокаНаработкаОбъектов.ОбъектРемонта, ТекСтрокаНаработкаОбъектов.ВидКоэффициента, ТекСтрокаНаработкаОбъектов.ДатаНачалаИспользования );

		Для Каждого СтрокаТЧ Из Объект.КоэффициентыРемонтныхОсобенностей Цикл
			Если ТаблицаПодчиненныхОР.НайтиСтроки(Новый Структура("ОбъектИерархии, ВидКоэффициента, ДатаНачала", СтрокаТЧ.ОбъектРемонта,СтрокаТЧ.ВидКоэффициента, СтрокаТЧ.ДатаНачалаИспользования)).Количество() = 0 Тогда
				Продолжить;
			Иначе
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Невозможно распространить наработку на подчиненные объекты ремонта. Объект ремонта %1 встречается повторно среди подчиненных объектов ремонта объекта %2.'"),СтрокаТЧ.ОбъектРемонта, ТекСтрокаНаработкаОбъектов.ОбъектРемонта)); 
				мОтказ = Истина;
			КонецЕсли;
		КонецЦикла; 
		
			Если Не мОтказ Тогда
				
				Для Каждого СтрокаСЗависимымОР ИЗ ТаблицаПодчиненныхОР Цикл
					СтрокаПодчОР = Объект.КоэффициентыРемонтныхОсобенностейПодчиненных.Добавить();
					СтрокаПодчОР.ОбъектРемонта 	 	= СтрокаСЗависимымОР.ОбъектИерархии;
					СтрокаПодчОР.ВидКоэффициента 	= ТекСтрокаНаработкаОбъектов.ВидКоэффициента;
					СтрокаПодчОР.ЗначениеКоэффициента = ТекСтрокаНаработкаОбъектов.ЗначениеКоэффициента;
					СтрокаПодчОР.Использование = ТекСтрокаНаработкаОбъектов.Использование;
					
					СтрокаПодчОР.ДатаНачалаИспользования  = ТекСтрокаНаработкаОбъектов.ДатаНачалаИспользования; 
					СтрокаПодчОР.РодительИерархии 		  = ТекСтрокаНаработкаОбъектов.ОбъектРемонта;
					
				КонецЦикла;
				
		КонецЕсли;
		
		Если мОтказ Тогда
			ТекСтрокаНаработкаОбъектов.РаспространятьНаПодчиненных = Ложь;
		КонецЕсли;
	Иначе
		СтрокиПодчиненныхНаУдаление = Объект.КоэффициентыРемонтныхОсобенностейПодчиненных.НайтиСтроки(Новый Структура("РодительИерархии,ВидКоэффициента, ДатаНачалаИспользования",ТекСтрокаНаработкаОбъектов.ОбъектРемонта,ТекСтрокаНаработкаОбъектов.ВидКоэффициента, ТекСтрокаНаработкаОбъектов.ДатаНачалаИспользования));
		
		Для Каждого СтрокаПодчиненного Из СтрокиПодчиненныхНаУдаление Цикл 
			Объект.КоэффициентыРемонтныхОсобенностейПодчиненных.Удалить(СтрокаПодчиненного);
		КонецЦикла;
		
		ТекСтрокаНаработкаОбъектов.Иерархия = Справочники.торо_СтруктурыОР.ПустаяСсылка();
		Элементы.КоэффициентыРемонтныхОсобенностейИерархия.ТолькоПросмотр = Истина;
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
// Функция возвращает таблицу объектов ремонта из переданной в качестве параметра таблицы иерархии, 
// родителями которых является указаный ОР.
//
Функция ПолучитьЗависимыеОР(ОбъектРемонта, ВидКоэффициента, ДатаНачала)
	
	ВспомогательнаяТаблица = ТаблицаИерархииОР.Выгрузить(Новый Структура("РодительИерархии", ОбъектРемонта),);
	
	ТаблицаЗависимыхОР = ТаблицаИерархииОР.Выгрузить().СкопироватьКолонки("ОбъектИерархии");
	
	ТаблицаЗависимыхОР.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	ТаблицаЗависимыхОР.Колонки.Добавить("ВидКоэффициента", Новый ОписаниеТипов("СправочникСсылка.торо_ВидыКоэффициентовРемонтныхОсобенностей"));
	ТаблицаЗависимыхОР.Колонки.Добавить("ЗначениеКоэффициента", Новый ОписаниеТипов("СправочникСсылка.торо_ЗначенияКоэффициентовРемонтныхОсобенностей"));
	
	Если Не ВспомогательнаяТаблица.Количество() = 0 Тогда
		
		Для Каждого СтрокаСвязанныхОР Из ВспомогательнаяТаблица Цикл
			ТаблицаПодчиненныхПотомку = ПолучитьЗависимыеОР(СтрокаСвязанныхОР.ОбъектИерархии, ВидКоэффициента, ДатаНачала);
			Если ТаблицаЗависимыхОР = Неопределено Тогда
				ТаблицаЗависимыхОР = ТаблицаПодчиненныхПотомку.Скопировать(,"ОбъектИерархии"); 
				
			Иначе
				Для Каждого ПодчиненныйПотомкуОР Из ТаблицаПодчиненныхПотомку Цикл
					ДобавляемаяСтрока = ТаблицаЗависимыхОР.Добавить();
					ДобавляемаяСтрока.ОбъектИерархии = ПодчиненныйПотомкуОР.ОбъектИерархии;
					ДобавляемаяСтрока.ДатаНачала = ДатаНачала;
					ДобавляемаяСтрока.ВидКоэффициента = ВидКоэффициента;
				КонецЦикла;	
			КонецЕсли;
			ДобавляемаяСтрока = ТаблицаЗависимыхОР.Добавить();
			ДобавляемаяСтрока.ОбъектИерархии = СтрокаСвязанныхОР.ОбъектИерархии;
			ДобавляемаяСтрока.ДатаНачала = ДатаНачала;
			ДобавляемаяСтрока.ВидКоэффициента = ВидКоэффициента;
			
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаЗависимыхОР.Колонки.Добавить("ПодчиняющийОР");
	ТаблицаЗависимыхОР.ЗаполнитьЗначения(ОбъектРемонта, "ПодчиняющийОР");
	Возврат ТаблицаЗависимыхОР;
	
КонецФункции

&НаСервере
// Функция формирует таблицу объектов, принадлежащих выбранной иерархии
//
Процедура ЗаполнитьТаблицуИерархии(СтруктураИерархии) 
	ТаблицаИерархииОР.Очистить();
	
	Запрос = Новый Запрос;
	
	Если ЗначениеЗаполнено(СтруктураИерархии) Тогда
		Если СтруктураИерархии.ИзменяетсяДокументами Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РасположениеОРВСтруктуреИерархии.ОбъектИерархии,
			|	РасположениеОРВСтруктуреИерархии.РодительИерархии
			|ИЗ
			|	РегистрСведений.торо_РасположениеОРВСтруктуреИерархии.СрезПоследних(&Дата, СтруктураИерархии = &СтруктураИерархии) КАК РасположениеОРВСтруктуреИерархии
			|ГДЕ
			|	НЕ РасположениеОРВСтруктуреИерархии.Удален";
			
			Запрос.УстановитьПараметр("Дата", Объект.Дата);
			
		Иначе
			
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии,
			|	торо_ИерархическиеСтруктурыОР.РодительИерархии
			|ИЗ
			|	РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
			|ГДЕ
			|	торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &СтруктураИерархии";
			
		КонецЕсли;
	Иначе
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	торо_ИерархическиеСтруктурыОР.Ссылка КАК ОбъектИерархии,
			|	торо_ИерархическиеСтруктурыОР.Родитель КАК РодительИерархии
			|ИЗ
			|	Справочник.торо_ОбъектыРемонта КАК торо_ИерархическиеСтруктурыОР
			|";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СтруктураИерархии", СтруктураИерархии);
	ТаблицаИерархииОР.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыРемонтаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Копирование Тогда
		текДанные = Элементы.ОбъектыРемонта.ТекущиеДанные;
		текДанные.ОбъектРемонта = ПредопределенноеЗначение("Справочник.торо_ОбъектыРемонта.ПустаяСсылка");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти