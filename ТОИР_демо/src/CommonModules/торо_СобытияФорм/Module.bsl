////////////////////////////////////////////////////////////////////////////////
// торо_СобытияФорм: методы, реализующие методы форм, аналогичные во многих объектах.
//
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// Процедура, вызываемая из одноименного обработчика события формы.
//
// Параметры:
//  Форма					- УправляемаяФорма - форма, из обработчика события которой происходит вызов процедуры.
//  Отказ					- Булево - признак отказа от создания формы.
//  СтандартнаяОбработка	- Булево - признак выполнения стандартной (системной) обработки события.
//  ДополнительныеПараметры	- Структура - дополнительные параметры.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("ОграничитьВводНаОсновании") И ДополнительныеПараметры.ОграничитьВводНаОсновании Тогда
		ИмяПред = Прав(Форма.ИмяФормы, СтрДлина(Форма.ИмяФормы) - Найти(Форма.ИмяФормы,"."));
		ИмяОбъекта = Лев(ИмяПред, Найти(ИмяПред,".")-1);
		
		НаборЗаписейВводНаОсновании = РегистрыСведений.торо_ВводНаОсновании.СоздатьНаборЗаписей();
		НаборЗаписейВводНаОсновании.Отбор.ДокументОснование.Значение = ИмяОбъекта;
		НаборЗаписейВводНаОсновании.Отбор.ДокументОснование.Использование = Истина;
		НаборЗаписейВводНаОсновании.Прочитать();
		
		Для Каждого ЗаписьВводНаОсновании ИЗ НаборЗаписейВводНаОсновании Цикл
			Если НЕ ЗаписьВводНаОсновании.Значение Тогда
				СоздатьКнопка1 = Форма.Элементы.Найти("ФормаДокумент"+ЗаписьВводНаОсновании.ДокументВводимый+"СоздатьНаОсновании");
				Если СоздатьКнопка1 <> Неопределено Тогда
					СоздатьКнопка1.Видимость = Ложь;
				КонецЕсли;
				СоздатьКнопка2 = Форма.Элементы.Найти("ФормаДокумент"+ЗаписьВводНаОсновании.ДокументВводимый+"СоздатьНаОсновании1");
				Если СоздатьКнопка2 <> Неопределено Тогда
					СоздатьКнопка2.Видимость = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ЗаписьПредписания = РегистрыСведений.торо_ВводНаОсновании.СоздатьМенеджерЗаписи();
		ЗаписьПредписания.ДокументВводимый = ИмяОбъекта;
		ЗаписьПредписания.ДокументОснование = "торо_ВнешнееОснованиеДляРабот";
		ЗаписьПредписания.Прочитать();
		
		Если ЗаписьПредписания.Выбран() И НЕ ЗаписьПредписания.Значение Тогда
			ГруппаПредписания = Форма.Элементы.Найти("ГруппаЗакрываемыеПредписания");
			Если ГруппаПредписания <> Неопределено Тогда
				ГруппаПредписания.Видимость = ЛожЬ;
			КонецЕсли;
			КнопкаПодборПредписания = Форма.Элементы.Найти("РемонтыОборудованияПодборПредписаний");
			Если КнопкаПодборПредписания <> Неопределено Тогда
				КнопкаПодборПредписания.Видимость = ЛожЬ;
			КонецЕсли;
			ПодборПредписания = Форма.Элементы.Найти("ОбъектыРемонтаПодборПредписаний");
			Если ПодборПредписания <> Неопределено Тогда
				ПодборПредписания.Видимость = ЛожЬ;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("УстановитьСвойствоЭлементовФормыОтПрав") И ДополнительныеПараметры.УстановитьСвойствоЭлементовФормыОтПрав Тогда
		
		УстановитьСвойствоЭлементовФормыОтПрав(Форма);
		
	КонецЕсли;
		
КонецПроцедуры

// Формирует список доступных типов документов оснований.
// Параметры:
//		Форма - УправляемаяФорма - форма документа.
// Возвращаемое значение:
//		ОписаниеТипов - описание доступных типов.
Функция ДокументыОснованияДокументОснованиеНачалоВыбора(Форма) Экспорт
	
	Элемент = Форма.Элементы.Найти("ДокументыОснованияДокументОснование");
	Если Элемент = Неопределено Тогда		
		Элемент = Форма.Элементы.Найти("ДокументыОснования1ДокументОснование");
	КонецЕсли;
	
	МассивТиповИсходный = Форма.Объект.Ссылка.Метаданные().ТабличныеЧасти.ДокументыОснования.Реквизиты.ДокументОснование.Тип.Типы();
	
	
	Если Элемент <> Неопределено Тогда
		ИмяПред = Прав(Форма.ИмяФормы, СтрДлина(Форма.ИмяФормы) - Найти(Форма.ИмяФормы,"."));        
		ИмяОбъекта = Лев(ИмяПред, Найти(ИмяПред,".")-1);  
		Результат = "";
		
		НаборЗаписейВводНаОсновании = РегистрыСведений.торо_ВводНаОсновании.СоздатьНаборЗаписей();
		НаборЗаписейВводНаОсновании.Отбор.ДокументВводимый.Значение = ИмяОбъекта;
		НаборЗаписейВводНаОсновании.Отбор.ДокументВводимый.Использование = Истина;
		НаборЗаписейВводНаОсновании.Прочитать();
		
		Для Каждого ЗаписьВводНаОсновании ИЗ НаборЗаписейВводНаОсновании Цикл 	
			Если НЕ ЗаписьВводНаОсновании.Значение Тогда
				
				МассивТиповИсходный.Удалить(МассивТиповИсходный.Найти(Тип("ДокументСсылка."+ЗаписьВводНаОсновании.ДокументОснование)));
					
			КонецЕсли;
		КонецЦикла;
		
		НовоеОписание = Новый ОписаниеТипов(МассивТиповИсходный);

		Если МассивТиповИсходный.Количество() > 0 Тогда 		
			Возврат НовоеОписание;
		Иначе
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Возможность ввода данного документа на основании отключена в настройках ввода на основании
					|Настройка и администрирование -> Настройка параметров подсистемы ТОиР -> Интерфейс и ввод документов.'"));
			Возврат Неопределено;	
		КонецЕсли;		
	КонецЕсли;	

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УстановкаДоступностиКнопок

Процедура УстановитьСвойствоЭлементовФормыОтПрав(Форма)

	ИмяПроцедуры = ПолучитьИмяПроцедурыЗаполненияОписанияЭлементов(Форма);
	Если ИмяПроцедуры <> Неопределено Тогда
		
		ТабОписанияЭлементов = Новый ТаблицаЗначений;
		ТабОписанияЭлементов.Колонки.Добавить("ИмяЭлемента", Новый ОписаниеТипов("Строка"));
		ТабОписанияЭлементов.Колонки.Добавить("Право", Новый ОписаниеТипов("Строка"));
		ТабОписанияЭлементов.Колонки.Добавить("ПолноеИмяОбъектМетаданных", Новый ОписаниеТипов("Строка"));
		ТабОписанияЭлементов.Колонки.Добавить("Свойство", Новый ОписаниеТипов("Строка"));
		ТабОписанияЭлементов.Колонки.Добавить("ЗначениеСвойства");
		
		Выполнить(ИмяПроцедуры + "(ТабОписанияЭлементов)");
		Для Каждого ОписаниеЭлемента Из ТабОписанияЭлементов Цикл
			
			Если Не ПравоДоступа(ОписаниеЭлемента.Право, Метаданные.НайтиПоПолномуИмени(ОписаниеЭлемента.ПолноеИмяОбъектМетаданных)) 
				И Вычислить("Форма.Элементы.Найти(""" + ОписаниеЭлемента.ИмяЭлемента + """)") <> Неопределено Тогда
				Выполнить("Форма.Элементы." + ОписаниеЭлемента.ИмяЭлемента + "." + ОписаниеЭлемента.Свойство + " = " + Формат(ОписаниеЭлемента.ЗначениеСвойства, "БЛ=Ложь; БИ=Истина"));
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьИмяПроцедурыЗаполненияОписанияЭлементов(Форма)
	
	ИмяПроцедуры = Неопределено;
	
	ТабСоответствия = ПолучитьТабСоответствияФормИПроцедурЗаполненияОписанияКнопок();
	НайдСтрока = ТабСоответствия.Найти(Форма.ИмяФормы, "ИмяФормы");
	ИмяПроцедуры = ?(НайдСтрока <> Неопределено, НайдСтрока.ИмяПроцедуры, Неопределено);
	
	Возврат ИмяПроцедуры;
	
КонецФункции

Функция ПолучитьТабСоответствияФормИПроцедурЗаполненияОписанияКнопок()
	
	ТабСоответствия = Новый ТаблицаЗначений;
	ТабСоответствия.Колонки.Добавить("ИмяФормы", Новый ОписаниеТипов("Строка"));
	ТабСоответствия.Колонки.Добавить("ИмяПроцедуры", Новый ОписаниеТипов("Строка"));
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ВыявленныеДефекты.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаВыявленныхДефектов";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ВыявленныеДефекты.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаВыявленныхДефектов";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_ОбъектыРемонта.Формы.ФормаЭлемента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыЭлементаОР";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_ОбъектыРемонта.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаОР";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_ОбъектыРемонта.Формы.ФормаВыбора.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаОР";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_ТиповыеОР.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаТиповыхОР";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_ТиповыеОР.Формы.ФормаЭлемента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыЭлементаТиповогоОР";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_НаправленияОбъектовРемонтныхРабот.Формы.ФормаЭлемента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыЭлементаНаправленияОР";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_НаправленияОбъектовРемонтныхРабот.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаНаправленияОР";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_ТехнологическиеОперации.Формы.ФормаЭлемента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыЭлементаТехОперации";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_ИдентификаторыТехКарт.Формы.ФормаЭлемента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыЭлементаТехКарты";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_ИдентификаторыТехКарт.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаТехКарты";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_ВидыРемонтов.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаВидовРемонта";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_ВидыРемонтов.Формы.ФормаВыбора.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаВидовРемонта";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_СпособыПланированияРемонтныхРабот.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаСпособовПланирования";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.торо_СпособыПланированияРемонтныхРабот.Формы.ФормаВыбора.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаСпособовПланирования";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ИзменениеПоложенияВСтруктуреИерархии.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовИзмененияПоложенияВСтруктуреИерархии";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ИзменениеПоложенияВСтруктуреИерархии.Формы.ФормаВыбора.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовИзмененияПоложенияВСтруктуреИерархии";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.Организации.Формы.ФормаЭлемента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыЭлементаОрганизации";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_УчетКонтролируемыхПоказателей.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыЭлементаДокументаУчетКонтролируемыхПоказателей";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_УчетКонтролируемыхПоказателей.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовУчетКонтролируемыхПоказателей";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_СостоянияОбъектовРемонта.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовСостоянияОбъектаРемонта";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_СостоянияОбъектовРемонта.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаСостоянияОбъектаРемонта";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_УчетНаработкиОборудования.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовУчетНаработкиОборудования";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_УчетНаработкиОборудования.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаУчетНаработкиОборудования";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_НастройкаРегистрацииНаработкиЗависимыхОР.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовНастройкаРегистрацииНаработкиЗависимыхОР";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ВнешнееОснованиеДляРабот.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаВнешнееОснование";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ВнешнееОснованиеДляРабот.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовВнешнееОснование";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ПланГрафикРемонта.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаППР";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ПланГрафикРемонта.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовППР";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ГрафикРегламентныхМероприятийТОиР.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаГрафикаРегламентных";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ГрафикРегламентныхМероприятийТОиР.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовГрафиковРегламентных";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ОстановочныеРемонты.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаОстановочныеРемонты";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ОстановочныеРемонты.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовОстановочныеРемонты";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ЗаявкаНаРемонт.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовЗаявок";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ЗаявкаНаРемонт.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаЗаявка";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_НарядНаВыполнениеРемонтныхРабот.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовНарядовНаРемонтные";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_НарядНаВыполнениеРемонтныхРабот.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаНарядНаРемонтные";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_НарядНаРегламентноеМероприятие.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовНарядовНаРегламентные";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_НарядНаРегламентноеМероприятие.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаНарядНаРегламентные";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_АктОВыполненииЭтапаРабот.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовАктовРемонтных";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_АктОВыполненииЭтапаРабот.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаАктРемонтных";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_АктОВыполненииРегламентногоМероприятия.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовАктовРегламентных";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_АктОВыполненииРегламентногоМероприятия.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаАктРегламентных";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_АктПриемкиОборудования.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовАктовПриемки";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_АктПриемкиОборудования.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаАктПриемки";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ВводНачальныхДанных.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовВводаНачальныхДанных";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ВводНачальныхДанных.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаВводаНачальныхДанных";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_УстановкаПроизвольногоЗначенияНаработки.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовУстановкаПроизвольногоЗначенияНаработки";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_УстановкаПроизвольногоЗначенияНаработки.Формы.ФормаДокумента.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыДокументаУстановкаПроизвольногоЗначенияНаработки";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.ВнутреннееПотреблениеТоваров.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовВнутреннееПотреблениеТоваров";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.ЗаказНаВнутреннееПотребление.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовЗаказНаВнутреннееПотребление";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ПрисвоениеКвалификацийСотрудникам.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовПрисвоениеКвалификацийСотрудникам";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ИзменениеСоставаРемонтнойБригады.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовИзменениеСоставаРемонтнойБригады";

	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_УстановкаСтоимостейКвалификаций.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовУстановкаСтоимостейКвалификаций";

	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Документы.торо_ПринятиеОРКУчету.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаДокументовПринятиеОРКУчету";
	
	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Обработки.торо_РабочееМестоТехническогоСпециалиста.Формы.Форма.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыОбработкиРабочееМестоТехническогоСпециалиста";

	НС = ТабСоответствия.Добавить();
	НС.ИмяФормы = Метаданные.Справочники.Календари.Формы.ФормаСписка.ПолноеИмя();
	НС.ИмяПроцедуры = "ЗаполнитьОписаниеЭлементовФормыСпискаГрафиковРаботы";
	
	Возврат ТабСоответствия;
	
КонецФункции

#Область ПолучениеОписанияВручнуюДобавленныхКнопок

Процедура ДобавитьСтрокуСОписаниемЭлементаФормы(ТаблицаОписания, ИмяЭлемента, Право, ПолноеИмяОбъектаМетаданных, Свойство, ЗначениеСвойства)
	
	СтрокаОписания = ТаблицаОписания.Добавить();
	СтрокаОписания.ИмяЭлемента = ИмяЭлемента;
	СтрокаОписания.Право = Право;
	СтрокаОписания.ПолноеИмяОбъектМетаданных = ПолноеИмяОбъектаМетаданных;
	СтрокаОписания.Свойство = Свойство;
	СтрокаОписания.ЗначениеСвойства = ЗначениеСвойства;
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыОбработкиРабочееМестоТехническогоСпециалиста(ТабОписанияКнопок)
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ЗаявкиНаРемонтДобавитьЗаявку", "ИнтерактивноеДобавление", Метаданные.Документы.торо_ЗаявкаНаРемонт.ПолноеИмя(), "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "НарядыНаРемонтДобавитьНаряд", "ИнтерактивноеДобавление", Метаданные.Документы.торо_НарядНаВыполнениеРемонтныхРабот.ПолноеИмя(), "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "АктыНаРемонтДобавитьАкт", "ИнтерактивноеДобавление", Метаданные.Документы.торо_АктОВыполненииЭтапаРабот.ПолноеИмя(), "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "НарядыНаМероприятияДобавитьНарядНаМероприятие", "ИнтерактивноеДобавление", Метаданные.Документы.торо_НарядНаРегламентноеМероприятие.ПолноеИмя(), "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "АктыПоМероприятиюДобавитьАктНаМероприятие", "ИнтерактивноеДобавление", Метаданные.Документы.торо_АктОВыполненииРегламентногоМероприятия.ПолноеИмя(), "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыЭлементаОР(ТабОписанияКнопок)
	
	// Описание элементов формы изменяющих свойства в зависимости от прав на справочник Объекты ремонта.
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_ОбъектыРемонта.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСкопировать", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "АдресКартинки", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Гиперссылка", Ложь);
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ВвестиОткрытьДокументПринятиеКУчету", "Просмотр", Метаданные.Документы.торо_ПринятиеОРКУчету.ПолноеИмя(), "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ВвестиОткрытьДокументСнятияСУчета", "Просмотр", Метаданные.Документы.торо_ВыбытиеОбъектаРемонта.ПолноеИмя(), "Доступность", Ложь);
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ВоодСостоянияНаДату", "Добавление", Метаданные.Документы.торо_СостоянияОбъектовРемонта.ПолноеИмя(), "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ВводСостоянияНаПериод", "Добавление", Метаданные.Документы.торо_СостоянияОбъектовРемонта.ПолноеИмя(), "Доступность", Ложь);
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ЗначенияКонтролируемыхПоказателейВводЗначенияКонтрПоказателей", "Добавление", Метаданные.Документы.торо_УчетКонтролируемыхПоказателей.ПолноеИмя(), "Доступность", Ложь);

	
	ИменаКнопокДляПраваРедактирование = Новый Массив;
	ИменаКнопокДляПраваРедактирование.Добавить("СписокИзмеряемыхПоказателейПодборКонтролируемыхПоказателей");
	ИменаКнопокДляПраваРедактирование.Добавить("АдресКартинкиКонтекстноеМенюВыбратьКартинкуИзПрисоединенныхФайлов");
	ИменаКнопокДляПраваРедактирование.Добавить("АдресКартинкиКонтекстноеМенюОчиститьИзображение");
	ИменаКнопокДляПраваРедактирование.Добавить("АдресКартинкиКонтекстноеМенюДобавитьИзображение");
	ИменаКнопокДляПраваРедактирование.Добавить("ВыбратьКартинкуИзПрисоединенныхФайлов");
	ИменаКнопокДляПраваРедактирование.Добавить("ОчиститьИзображение");
	ИменаКнопокДляПраваРедактирование.Добавить("ДобавитьИзображение");
	ИменаКнопокДляПраваРедактирование.Добавить("ФормаЗаписатьИЗакрыть");
	ИменаКнопокДляПраваРедактирование.Добавить("ФормаЗаписать");
	ИменаКнопокДляПраваРедактирование.Добавить("ЗаполнитьОсновныеИЗависимыеПоИерархии");
	ИменаКнопокДляПраваРедактирование.Добавить("ТабЗапчастейОбъектовРемонтаПодборЗапчастей");
	ИменаКнопокДляПраваРедактирование.Добавить("ТабМаксимальныхЗначенийНаработкиОбновитьМаксЗначенияПараметровНаработки");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирование Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
	ИменаКнопокДляПраваРедактирование = Новый Массив;
	ИменаКнопокДляПраваРедактирование.Добавить("СписокИзмеряемыхПоказателей");
	ИменаКнопокДляПраваРедактирование.Добавить("ПараметрыОповещенияПоСостояниямОР");
	ИменаКнопокДляПраваРедактирование.Добавить("СписокПараметровНаработки");
	ИменаКнопокДляПраваРедактирование.Добавить("ТабМаксимальныхЗначенийНаработки");
	ИменаКнопокДляПраваРедактирование.Добавить("НормативныеРемонты");
	ИменаКнопокДляПраваРедактирование.Добавить("ЗамещаемыеРемонты");
	ИменаКнопокДляПраваРедактирование.Добавить("ПредшествующиеРемонты");
	ИменаКнопокДляПраваРедактирование.Добавить("ВидыРемонтаЭтогоОбъекта");
	ИменаКнопокДляПраваРедактирование.Добавить("СписокОбъектовРемонта");
	ИменаКнопокДляПраваРедактирование.Добавить("ВидыРемонтаОсновногоСвязанного");
	ИменаКнопокДляПраваРедактирование.Добавить("ТабличноеПолеРемонтныеЦиклыОборудования");
	ИменаКнопокДляПраваРедактирование.Добавить("ТабЗапчастейОбъектовРемонта");
	ИменаКнопокДляПраваРедактирование.Добавить("ТабЗатратПоВидамРемонта");
	ИменаКнопокДляПраваРедактирование.Добавить("ТаблицаОценокРМ");
	ИменаКнопокДляПраваРедактирование.Добавить("ГарантииОбъектаРемонта");
	ИменаКнопокДляПраваРедактирование.Добавить("ЕстьГарантияДляОбъекта");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирование Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	КонецЦикла;
	//
	
	// Описание элементов формы изменяющих свойства в зависимости от прав на справочник присоединенных к Объектам ремонта.
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_ОбъектыРемонтаПрисоединенныеФайлы.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДобавитьИзображение", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "АдресКартинки", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Гиперссылка", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "АдресКартинкиКонтекстноеМенюДобавитьИзображение", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	//
	
	// Описание элементов формы изменяющих свойства в зависимости от прав на регистр сведений 
	// измеряемые показатели объектов ремонта.
	ТекОбъектМетаданныхПолноеИмя = Метаданные.РегистрыСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокИзмеряемыхПоказателейПодборКонтролируемыхПоказателей", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокИзмеряемыхПоказателей", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	//
	
	// Описание элементов формы изменяющих свойства в зависимости от прав на регистр сведений
	// Параметры оповещения о состоянии оборудования.
	ТекОбъектМетаданныхПолноеИмя = Метаданные.РегистрыСведений.торо_ПараметрыОповещенияОСостоянииОборудования.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ПараметрыОповещенияПоСостояниямОР", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	//
	
	// Описание элементов формы изменяющих свойства в зависимости от прав на регистр сведений
	// Параметры наработки объектов ремонта.
	ТекОбъектМетаданныхПолноеИмя = Метаданные.РегистрыСведений.торо_ПараметрыНаработкиОбъектовРемонта.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокПараметровНаработки", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	//
	
	// Описание элементов формы изменяющих свойства в зависимости от прав на регистр сведений
	// Максимальные значения наработки.
	ТекОбъектМетаданныхПолноеИмя = Метаданные.РегистрыСведений.торо_МаксимальныеЗначенияНаработкиОР.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ТабМаксимальныхЗначенийНаработки", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	//
	
	// Описание элементов формы изменяющих свойства в зависимости от прав на регистр сведений
	// Нормативные ремонты оборудования.
	ТекОбъектМетаданныхПолноеИмя = Метаданные.РегистрыСведений.торо_НормативныеРемонтыОборудования.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "НормативныеРемонты", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	//
	
	// Описание элементов формы изменяющих свойства в зависимости от прав на регистр сведений
	// параметры замещения планирования.
	ТекОбъектМетаданныхПолноеИмя = Метаданные.РегистрыСведений.торо_ПараметрыЗамещенияПланированияРемонтныхРабот.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ЗамещаемыеРемонты", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	//
	
	// Описание элементов формы изменяющих свойства в зависимости от прав на регистр сведений
	// параметры замещения планирования.
	ТекОбъектМетаданныхПолноеИмя = Метаданные.РегистрыСведений.торо_ПредшествующиеНормативныеРемонтыОборудования.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ПредшествующиеРемонты", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	//
	
	// Описание элементов формы изменяющих свойства в зависимости от прав на документ
	// учета параметров наработки.
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_УчетНаработкиОборудования.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ТабВыработкиОбъектаРемонтаВводНаработки", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	//
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаВыявленныхДефектов(ТабОписанияКнопок);
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ВыявленныеДефекты.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаВыявленныхДефектов(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ВыявленныеДефекты.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбъектыРемонта", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбъектыРемонтаПодборОР", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбъектыРемонтаПодборПредписаний", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаОР(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_ОбъектыРемонта.ПолноеИмя();
	
	ИменаКнопокДляПраваИнтерактивноеДобавление = Новый Массив;
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("ФормаСправочникторо_ОбъектыРемонтаСоздатьГруппу");
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("ДеревоКонтекстноеМенюСправочникторо_ОбъектыРемонтаСоздатьГруппу");
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("СписокОбъектовКонтекстноеМенюСправочникторо_ОбъектыРемонтаСоздатьГруппу");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваИнтерактивноеДобавление Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);	
	КонецЦикла;


КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаТиповыхОР(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_ТиповыеОР.ПолноеИмя();
	
	ИменаКнопокДляПраваИнтерактивноеДобавление = Новый Массив;
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("ФормаСоздатьЭлемент");
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("ФормаСоздатьГруппу");
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("ФормаСкопировать");
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("ФормаЗагрузитьИзКлассификатора");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваИнтерактивноеДобавление Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаИзменитьПоложениеВИерархии", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаПометкаУдаления", "ИнтерактивнаяПометкаУдаления", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСоздатьОР", "ИнтерактивноеДобавление", Метаданные.Справочники.торо_ОбъектыРемонта.ПолноеИмя(), "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыЭлементаТиповогоОР(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_ТиповыеОР.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокИзмеряемыхПоказателейПодборКонтролируемыхПоказателей", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ТаблицаОценокРМДобавить", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ТаблицаОценокРМ", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ТаблицаОценокРМЗаполнитьВидыРемонтовИзНормативов", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);

	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСоздатьОР", "ИнтерактивноеДобавление", Метаданные.Справочники.торо_ОбъектыРемонта.ПолноеИмя(), "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "Подбор", "Редактирование", Метаданные.Справочники.торо_ОбъектыРемонта.ПолноеИмя(), "Доступность", Ложь);

КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыЭлементанаправленияОР(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_НаправленияОбъектовРемонтныхРабот.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДополнительныеРеквизитыДобавить", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДополнительныеРеквизитыКонтекстноеМенюДобавить", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДополнительныеРеквизиты", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Ложь);

КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаНаправленияОР(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_НаправленияОбъектовРемонтныхРабот.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСоздатьСоставное", "Добавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);

КонецПроцедуры



Процедура ЗаполнитьОписаниеЭлементовФормыЭлементаТехОперации(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_ТехнологическиеОперации.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "МатериальныеЗатратыПодборНоменклатуры", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ИнструментыИТехникаПодборНоменклатуры", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ГиперссылкаНормаВремени", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Гиперссылка", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ВалютаНадпись", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Гиперссылка", Ложь);

КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыЭлементаТехКарты(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_ИдентификаторыТехКарт.ПолноеИмя();
	
	ИменаКнопокДляПраваРедактирование = Новый Массив;
	ИменаКнопокДляПраваРедактирование.Добавить("СоздатьНовуюВерсию");
	ИменаКнопокДляПраваРедактирование.Добавить("ИзменитьДату");
	ИменаКнопокДляПраваРедактирование.Добавить("РедактироватьДругиеВерсииТехкарты");
	ИменаКнопокДляПраваРедактирование.Добавить("Перерассчитать");
	ИменаКнопокДляПраваРедактирование.Добавить("ВвестиВремяПростоя");
	ИменаКнопокДляПраваРедактирование.Добавить("ДобавитьТехКарту");
	ИменаКнопокДляПраваРедактирование.Добавить("ДобавитьОперацию");
	ИменаКнопокДляПраваРедактирование.Добавить("СписокОперацийЗаполнитьПоНормативамТехОпераций");
	ИменаКнопокДляПраваРедактирование.Добавить("СписокОперацийОткрытьПодборТехОпераций");
	ИменаКнопокДляПраваРедактирование.Добавить("МатериальныеЗатратыПодборНоменклатуры");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирование Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаТехКарты(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_ИдентификаторыТехКарт.ПолноеИмя();
	
	ИменаКнопокДляПраваИнтерактивноеДобавление = Новый Массив;
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("СоздатьТехКарту");
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("СоздатьГруппу");
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("СоздатьТехКарту1");
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("СоздатьГруппу1");
	ИменаКнопокДляПраваИнтерактивноеДобавление.Добавить("СписокКонтекстноеМенюСкопировать");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваИнтерактивноеДобавление Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;

	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокКонтекстноеМенюУстановитьПометкуУдаления", "ИнтерактивнаяПометкаУдаления", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаВидовРемонта(ТабОписанияКнопок)
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокКонтекстноеМенюПеренестиЭлемент", "Редактирование", Метаданные.Справочники.торо_ВидыРемонтов.ПолноеИмя(), "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаПеренестиЭлемент", "Редактирование", Метаданные.Справочники.торо_ВидыРемонтов.ПолноеИмя(), "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаСпособовПланирования(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.торо_СпособыПланированияРемонтныхРабот.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокКонтекстноеМенюПеренестиЭлемент", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаПеренестиЭлемент", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДеревоКонтекстноеМенюПеренестиЭлемент", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовИзмененияПоложенияВСтруктуреИерархии(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ИзменениеПоложенияВСтруктуреИерархии.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыЭлементаОрганизации(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.Организации.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ЮрФизЛицо", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "КонтактнаяИнформацияДобавитьПолеВвода", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыЭлементаДокументаУчетКонтролируемыхПоказателей(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_УчетКонтролируемыхПоказателей.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбъектыРемонта", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбъектыРемонтаПодбор", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовУчетКонтролируемыхПоказателей(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_УчетКонтролируемыхПоказателей.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовСостоянияОбъектаРемонта(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_СостоянияОбъектовРемонта.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСоздатьДокументНаДату", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСоздатьДокументНаПериод", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаСостоянияОбъектаРемонта(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_СостоянияОбъектовРемонта.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСостояниеНаДату", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСостояниеНаПериод", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбъектыРемонтаЗаполнитьПоУмолчанию", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбъектыРемонтаПодбор", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбъектыРемонтаЗаполнитьДанныеОбИзмененииСостояния", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаУчетНаработкиОборудования(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_УчетНаработкиОборудования.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "НаработкаОбъектовЗаполнитьПоПлановойНаработке", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "НаработкаОбъектовЗаполнитьПоВышестоящемуОР", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "НаработкаОбъектовПодбор", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "НаработкаОбъектовСинхронизировать", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовУчетНаработкиОборудования(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_УчетНаработкиОборудования.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовНастройкаРегистрацииНаработкиЗависимыхОР(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_НастройкаРегистрацииНаработкиЗависимыхОР.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаВнешнееОснование(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ВнешнееОснованиеДляРабот.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "РемонтыОборудованияПодборРемонтов", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДеревоРемонтныхРаботДобавитьТехОперацию", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДеревоРемонтныхРаботПодборОпераций", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);

КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовВнешнееОснование(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ВнешнееОснованиеДляРабот.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаППР(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ПланГрафикРемонта.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаУстановитьОценкуРМ", "Просмотр", Метаданные.Обработки.торо_УстановкаОценкиРМПлановыхРемонтов.ПолноеИмя(), "Доступность", Ложь);
	
	ИменаКнопокДляПраваРедактирование = Новый Массив;
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииДобавитьОР");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииДобавитьРемонт");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииДобавитьЦепочку");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииУдалить");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииПодбор");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииПодборЦепочек");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииКорректироватьППРПоЛимитам");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииРассчитать");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииРассчитатьВФоновомРежиме");
	ИменаКнопокДляПраваРедактирование.Добавить("Заполнить");
	ИменаКнопокДляПраваРедактирование.Добавить("ПланРемонтовЗаполнитьИсполнителей");
	ИменаКнопокДляПраваРедактирование.Добавить("ПланРемонтовЗаполнитьСтоимостиРемонтов");
		
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирование Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ПланРемонтовСоздатьВнутренниеЗаказы", "ИнтерактивноеДобавление", Метаданные.Документы.ВнутреннееПотреблениеТоваров.ПолноеИмя(), "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДокументыЗаказНаВнПотреблениеДобавитьЗаказ", "ИнтерактивноеДобавление", Метаданные.Документы.ЗаказНаВнутреннееПотребление.ПолноеИмя(), "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДокументыЗаказНаВнПотреблениеУдалитьЗаказНаВнПотребление", "ИнтерактивнаяПометкаУдаления", Метаданные.Документы.ЗаказНаВнутреннееПотребление.ПолноеИмя(), "Доступность", Ложь);

КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовППР(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ПланГрафикРемонта.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СоздатьПланРемонтов", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СоздатьКорректировку", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаГрафикаРегламентных(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ГрафикРегламентныхМероприятийТОиР.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаУстановитьОценкуРМ", "Просмотр", Метаданные.Обработки.торо_УстановкаОценкиРМПлановыхРемонтов.ПолноеИмя(), "Доступность", Ложь);
	
	ИменаКнопокДляПраваРедактирование = Новый Массив;
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииДобавитьОР");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииДобавитьРемонт");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииУдалить");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииПодбор");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииПодборЦепочек");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииКорректироватьППРПоЛимитам");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииРассчитать");
	ИменаКнопокДляПраваРедактирование.Добавить("ДеревоПланаГрафикаППРСУчетомПозицииРассчитатьВФоновомРежиме");
	ИменаКнопокДляПраваРедактирование.Добавить("ПланРемонтовЗаполнитьИсполнителей");
	ИменаКнопокДляПраваРедактирование.Добавить("ПланРемонтовЗаполнитьСтоимостиРемонтов");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирование Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовГрафиковРегламентных(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ГрафикРегламентныхМероприятийТОиР.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СоздатьПланРемонтов", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СоздатьКорректировку", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаОстановочныеРемонты(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ОстановочныеРемонты.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СвязанныеРемонтыДобавить", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СвязанныеРемонтыПодбор", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СвязанныеРемонтыКонтекстноеМенюПодбор", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовОстановочныеРемонты(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ОстановочныеРемонты.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовЗаявок(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ЗаявкаНаРемонт.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаЗаявка(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ЗаявкаНаРемонт.ПолноеИмя();
	
	ИменаКнопокДляПраваРедактирования = Новый Массив;
	ИменаКнопокДляПраваРедактирования.Добавить("ФормаОбщаяКомандаторо_ЗагрузитьИзProject");
	ИменаКнопокДляПраваРедактирования.Добавить("РемонтыОборудованияПодборПредписаний");
	ИменаКнопокДляПраваРедактирования.Добавить("РемонтыОборудованияПодборРемонтов");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботДобавитьТехКарту");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботДобавитьТехОперацию");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботПодборОпераций");
	ИменаКнопокДляПраваРедактирования.Добавить("МатериальныеЗатратыПодборНоменклатуры");
	ИменаКнопокДляПраваРедактирования.Добавить("ИнструментыПодборНоменклатуры");
	ИменаКнопокДляПраваРедактирования.Добавить("ЗапчастиРемонтаПодборНоменклатуры");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирования Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.ЗаказНаВнутреннееПотребление.ПолноеИмя();
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДокументыЗаказНаВнПотребелениеДобавитьЗаказ", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДокументыЗаказНаВнПотребелениеУдалитьЗаказНаВнПотребление", "ИнтерактивнаяПометкаУдаления", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовНарядовНаРемонтные(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_НарядНаВыполнениеРемонтныхРабот.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаНарядНаРемонтные(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_НарядНаВыполнениеРемонтныхРабот.ПолноеИмя();
	
	ИменаКнопокДляПраваРедактирования = Новый Массив;
	ИменаКнопокДляПраваРедактирования.Добавить("ИсполнителиПодборПоБригадамДляДокумента");
	ИменаКнопокДляПраваРедактирования.Добавить("РемонтыОборудованияПодборПредписаний");
	ИменаКнопокДляПраваРедактирования.Добавить("РемонтыОборудованияПодборРемонтов");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботДобавитьТехКарту");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботДобавитьТехОперацию");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботПодборОпераций");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботПодборПоБригадамДляОперации");
	ИменаКнопокДляПраваРедактирования.Добавить("ГруппаЗаполнить");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирования Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ГруппаЗаполнить", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовНарядовНаРегламентные(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_НарядНаРегламентноеМероприятие.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаНарядНаРегламентные(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_НарядНаРегламентноеМероприятие.ПолноеИмя();
	
	ИменаКнопокДляПраваРедактирования = Новый Массив;
	ИменаКнопокДляПраваРедактирования.Добавить("ЗаполнитьИсполнителейПоНормам_ТекущаяОперация");
	ИменаКнопокДляПраваРедактирования.Добавить("ЗаполнитьИсполнителейПоНормам_ВсеОперации");
	ИменаКнопокДляПраваРедактирования.Добавить("ЗаполнитьИсполнителейПоНормам_ВсеРемонты");
	ИменаКнопокДляПраваРедактирования.Добавить("ЗаполнитьИсполнителейПоОснованию_ТекущаяОперация");
	ИменаКнопокДляПраваРедактирования.Добавить("ЗаполнитьИсполнителейПоОснованию_ВсеОперации");
	ИменаКнопокДляПраваРедактирования.Добавить("ЗаполнитьИсполнителейПоОснованию_ВсеРемонты");
	ИменаКнопокДляПраваРедактирования.Добавить("ПодборРемонтов");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботДобавитьТехКарту");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботДобавитьТехОперацию");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботПодборОпераций");
	ИменаКнопокДляПраваРедактирования.Добавить("ГруппаЗаполнить");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботПодборПоБригадамДляОперации");
	ИменаКнопокДляПраваРедактирования.Добавить("ИсполнителиПодборПоБригадамДляДокумента");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирования Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ГруппаЗаполнить", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовАктовРемонтных(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_АктОВыполненииЭтапаРабот.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаАктРемонтных(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_АктОВыполненииЭтапаРабот.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбщееВремяВыполнения", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	
	ИменаКнопокДляПраваРедактирования = Новый Массив;
	ИменаКнопокДляПраваРедактирования.Добавить("РассчитатьПоТрудоемкости");
	ИменаКнопокДляПраваРедактирования.Добавить("РемонтыОборудованияПодборПредписаний");
	ИменаКнопокДляПраваРедактирования.Добавить("РемонтыОборудованияПодборРемонтов");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботДобавитьТехКарту");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботДобавитьТехОперацию");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботПодборОпераций");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботПодборПоБригадамДляОперации");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботЗаполнитьМатериалыПоНормам");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботЗаполнитьМатериалыПоПлану");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботЗаполнитьИсполнителейПоНарядам");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботЗаполнитьИсполнителейПоКаждойОперации");
	ИменаКнопокДляПраваРедактирования.Добавить("МатериальныеЗатратыПодборНоменклатуры");
	ИменаКнопокДляПраваРедактирования.Добавить("СерийныеЗапчастиЗаполнитьЗапчастиПоЗаявке");
	ИменаКнопокДляПраваРедактирования.Добавить("ТрудовыеЗатратыЗаполнитьИсполнителей");
	ИменаКнопокДляПраваРедактирования.Добавить("ТрудовыеЗатратыПодборПоБригадамДляДокумента");
	ИменаКнопокДляПраваРедактирования.Добавить("СерийныеЗапчастиГруппаЗаполнить");
	ИменаКнопокДляПраваРедактирования.Добавить("ТрудовыеЗатратыЗаполнить");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирования Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.ВнутреннееПотреблениеТоваров.ПолноеИмя();
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДобавитьВнутреннееПотребление", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "УдалитьДокументВнутреннееПотребление", "ИнтерактивнаяПометкаУдаления", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовАктовРегламентных(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_АктОВыполненииРегламентногоМероприятия.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаАктРегламентных(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_АктОВыполненииРегламентногоМероприятия.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбщееВремяВыполнения", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "ТолькоПросмотр", Истина);
	
	ИменаКнопокДляПраваРедактирования = Новый Массив;
	ИменаКнопокДляПраваРедактирования.Добавить("РассчитатьПоТрудоемкости");
	ИменаКнопокДляПраваРедактирования.Добавить("РемонтыОборудованияПодборРемонтов");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботДобавитьТехКарту");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботДобавитьТехОперацию");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботПодборОпераций");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботПодборПоБригадамДляОперации");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботЗаполнитьМатериалыПоНормам");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботЗаполнитьМатериалыПоНормам_ТекущаяОперация");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботЗаполнитьМатериалыПоНормам_ВсеОперации");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботЗаполнитьМатериалыПоНормам_ВсеРемонты");
	ИменаКнопокДляПраваРедактирования.Добавить("ЗаполнитьИсполнителейПоНормам_ТекущаяОперация");
	ИменаКнопокДляПраваРедактирования.Добавить("ЗаполнитьИсполнителейПоНормам_ВсеОперации");
	ИменаКнопокДляПраваРедактирования.Добавить("ЗаполнитьИсполнителейПоНормам_ВсеРемонты");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботЗаполнитьИсполнителейПоНарядам");
	ИменаКнопокДляПраваРедактирования.Добавить("ДеревоРемонтныхРаботЗаполнитьИсполнителейПоКаждойОперации");
	ИменаКнопокДляПраваРедактирования.Добавить("МатериальныеЗатратыПодборНоменклатуры");
	ИменаКнопокДляПраваРедактирования.Добавить("ДокументыВнутреннееПотреблениеДобавитьВнутреннееПотребление");
	ИменаКнопокДляПраваРедактирования.Добавить("ДокументыВнутреннееПотреблениеУдалитьДокументВнутреннееПотребление");
	ИменаКнопокДляПраваРедактирования.Добавить("ТрудовыеЗатратыПодборПоБригадамДляДокумента");
	ИменаКнопокДляПраваРедактирования.Добавить("ДобавитьВнутреннееПотребление");
	ИменаКнопокДляПраваРедактирования.Добавить("УдалитьДокументВнутреннееПотребление");
	ИменаКнопокДляПраваРедактирования.Добавить("Заполнить");
		
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирования Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.ВнутреннееПотреблениеТоваров.ПолноеИмя();
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ДобавитьВнутреннееПотребление", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "УдалитьДокументВнутреннееПотребление", "ИнтерактивнаяПометкаУдаления", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовАктовПриемки(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_АктПриемкиОборудования.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаАктПриемки(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_АктПриемкиОборудования.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "РемонтыОборудованияПодборРемонтов", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбновитьЗакрываемыеАкты", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ЗакрываемыеАктыГруппаКнопкиПереместить", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ЗакрываемыеАктыГруппаКнопкиСортировать", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовВводаНачальныхДанных(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ВводНачальныхДанных.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСоздатьДляОбъектовРемонта", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСоздатьДляСписковОбъектов", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
		
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаВводаНачальныхДанных(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ВводНачальныхДанных.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ОбъектыРемонтаПодбор", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыДокументаУстановкаПроизвольногоЗначенияНаработки(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_УстановкаПроизвольногоЗначенияНаработки.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаПровестиИЗакрыть", "ИнтерактивноеПроведение", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаПровести", "ИнтерактивноеПроведение", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
	ИменаКнопокДляПраваРедактирование = Новый Массив;
	ИменаКнопокДляПраваРедактирование.Добавить("НаработкаОбъектовСинхронизировать1");
	ИменаКнопокДляПраваРедактирование.Добавить("ФормаЗаписать");
	
	Для Каждого ИмяКнопки Из ИменаКнопокДляПраваРедактирование Цикл
		ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, ИмяКнопки, "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовУстановкаПроизвольногоЗначенияНаработки(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_УстановкаПроизвольногоЗначенияНаработки.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовВнутреннееПотреблениеТоваров(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.ВнутреннееПотреблениеТоваров.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовЗаказНаВнутреннееПотребление(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.ЗаказНаВнутреннееПотребление.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовПрисвоениеКвалификацийСотрудникам(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ПрисвоениеКвалификацийСотрудникам.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСоздатьПрисвоениеКвалификации", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСоздатьУдалениеКвалификации", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовИзменениеСоставаРемонтнойБригады(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ИзменениеСоставаРемонтнойБригады.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовУстановкаСтоимостейКвалификаций(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_УстановкаСтоимостейКвалификаций.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументовПринятиеОРКУчету(ТабОписанияКнопок)
	
	ТекОбъектМетаданныхПолноеИмя = Метаданные.Документы.торо_ПринятиеОРКУчету.ПолноеИмя();
	
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаГрафиковРаботы(ТабОписанияКнопок)

	ТекОбъектМетаданныхПолноеИмя = Метаданные.Справочники.Календари.ПолноеИмя();
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокИзменитьВыделенные", "Редактирование", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);

КонецПроцедуры



Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыСоздания(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя)
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСоздать", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаСкопировать", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокКонтекстноеМенюСоздать", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокКонтекстноеМенюСкопировать", "ИнтерактивноеДобавление", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОписаниеЭлементовФормыСпискаДокументов_СтандартныеКомандыПроведенияУдаления(ТабОписанияКнопок, ТекОбъектМетаданныхПолноеИмя)
	
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаПровести", "ИнтерактивноеПроведение", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаОтменаПроведения", "ИнтерактивнаяОтменаПроведения", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "ФормаУстановитьПометкуУдаления", "ИнтерактивнаяПометкаУдаления", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокКонтекстноеМенюПровести", "ИнтерактивноеПроведение", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокКонтекстноеМенюОтменаПроведения", "ИнтерактивнаяОтменаПроведения", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);
	ДобавитьСтрокуСОписаниемЭлементаФормы(ТабОписанияКнопок, "СписокКонтекстноеМенюУстановитьПометкуУдаления", "ИнтерактивнаяПометкаУдаления", ТекОбъектМетаданныхПолноеИмя, "Доступность", Ложь);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти
