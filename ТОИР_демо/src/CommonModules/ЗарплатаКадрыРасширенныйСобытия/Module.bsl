#Область СлужебныеПроцедурыИФункции
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
Процедура УстановитьСдвигПериодаРегистраСПериодичностьюСекунда(Источник, Отказ, Замещение) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.Свойство("НеСдвигатьПериодЗаписей") Тогда
		Возврат;
	КонецЕсли; 
	
	Если Источник.ДополнительныеСвойства.Свойство("ЭтоВторичныйНабор") Тогда
		Возврат;
	КонецЕсли; 
	
	Если Источник.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Регистратор = Источник.Отбор.Регистратор.Значение;
	
	ТаблицаРегистра = Источник.ВыгрузитьКолонки();
	ИспользуютсяВторичныеЗаписи = ТаблицаРегистра.Колонки.Найти("ВторичнаяЗапись") <> Неопределено;
	
	СдвигПериода = ЗарплатаКадрыРасширенный.ЗначениеСдвигаПериодаЗаписиРегистра(Регистратор);
	
	Если СдвигПериода = Неопределено Тогда
		
		КонкурирующиеРегистраторы = ЗарплатаКадрыРасширенный.КонкурирующиеПоПериодуРегистраторыНачислений();
		Если КонкурирующиеРегистраторы.Найти(ТипЗнч(Регистратор)) = Неопределено Тогда 
			Возврат;
		КонецЕсли;
		
		ВремяРегистрацииДокумента = Неопределено;
		
		Источник.ДополнительныеСвойства.Свойство("ВремяРегистрацииДокумента", ВремяРегистрацииДокумента);
		
		Если ВремяРегистрацииДокумента = Неопределено Тогда 
			
			Запрос = Новый Запрос;
			
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			
			СотрудникиДаты = ТаблицаРегистра.СкопироватьКолонки("Период, Сотрудник");
			
			Для Каждого ЗаписьРегистра Из Источник Цикл
				Если ИспользуютсяВторичныеЗаписи И ЗаписьРегистра.ВторичнаяЗапись Тогда
					Продолжить;
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(СотрудникиДаты.Добавить(), ЗаписьРегистра, "Период, Сотрудник");
			КонецЦикла;
			
			Движения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Источник);
			
			ЗарплатаКадрыРасширенный.УстановитьВремяРегистрацииДокумента(Движения, СотрудникиДаты, Регистратор, "Период");
			
			ВремяРегистрацииДокумента = Источник.ДополнительныеСвойства.ВремяРегистрацииДокумента;
			
		КонецЕсли;
		
		Для Каждого ЗаписьРегистра Из Источник Цикл
			
			ДатаСобытия = НачалоДня(ЗаписьРегистра.Период);
			ВремяРегистрации = ВремяРегистрацииДокумента.Получить(ДатаСобытия);
			
			Если ИспользуютсяВторичныеЗаписи И ЗаписьРегистра.ВторичнаяЗапись Тогда 
				ЗаписьРегистра.Период = ДатаСобытия;
			Иначе 
				ЗаписьРегистра.Период = ВремяРегистрации;
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе 
		
		Для Каждого ЗаписьРегистра Из Источник Цикл
			
			ДатаСобытия = НачалоДня(ЗаписьРегистра.Период);
			ВремяРегистрации = ДатаСобытия + СдвигПериода;
			
			Если ИспользуютсяВторичныеЗаписи И ЗаписьРегистра.ВторичнаяЗапись Тогда 
				ЗаписьРегистра.Период = ДатаСобытия;
			Иначе 
				ЗаписьРегистра.Период = ВремяРегистрации;
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти