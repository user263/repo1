////////////////////////////////////////////////////////////////////////////////
// торо_РемонтыПоСостоянию: методы, для работы с одноименным функционалом.
//
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// Формирует уведомления и дефекты.
//	Параметры:
//		Источник - ДокументОбъект.торо_УчетКонтролируемыхПоказателей - документ-источник.
//		ДокументыВДКОткрытию - СписокЗначений - выходной параметр, список свормированных выявленных дефектов.
Процедура СформироватьУведомленияИДефекты(Источник,ДокументыВДКОткрытию) Экспорт
	
	СтруктураДанных = Источник.СтруктураДанных;
	СтруктураДанных.Вставить("ПеречислениеПроизвольноеЗначение",Перечисления.торо_ВариантыЗначенийКонтролируемыхПоказателей.ПроизвольноеЗначение);
	ЗаполнитьСтруктуруДанныхДокумента(СтруктураДанных, Источник);
	СтруктураДанных.Вставить("ВидДокумента",СокрЛП(Источник.Метаданные().Имя));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_УчетКонтролируемыхПоказателейПоказатели.ОбъектРемонта,
	               |	торо_УчетКонтролируемыхПоказателейПоказатели.Показатель,
	               |	торо_УчетКонтролируемыхПоказателейПоказатели.Значение,
	               |	торо_УчетКонтролируемыхПоказателейПоказатели.Ссылка КАК ДокументИсточник,
	               |	торо_УчетКонтролируемыхПоказателейПоказатели.Ссылка.Дата КАК ДатаДокументаИсточник,
	               |	торо_ОбъектыРемонта.ТиповойОР
	               |ПОМЕСТИТЬ ТаблицаПоказателей
	               |ИЗ
	               |	Документ.торо_УчетКонтролируемыхПоказателей.Показатели КАК торо_УчетКонтролируемыхПоказателейПоказатели
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
	               |		ПО торо_УчетКонтролируемыхПоказателейПоказатели.ОбъектРемонта = торо_ОбъектыРемонта.Ссылка
	               |ГДЕ
	               |	торо_УчетКонтролируемыхПоказателейПоказатели.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель,
	               |	ТаблицаПоказателей.ТиповойОР КАК ТиповойОР,
	               |	ИСТИНА КАК Приоритет,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.ДопустимыйМинимум,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.ДопустимыйМаксимум,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.КритическийМинимум,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.КритическийМаксимум,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.ЗначенияКонтролируемыхПоказателейИзОР,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.ТочкаЗамера,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.Удален
	               |ПОМЕСТИТЬ ПоказателиОРИТиповогоОР
	               |ИЗ
	               |	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК торо_ИзмеряемыеПоказателиОбъектовРемонта
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПоказателей КАК ТаблицаПоказателей
	               |		ПО ((ВЫРАЗИТЬ(торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта КАК Справочник.торо_ОбъектыРемонта)) = ТаблицаПоказателей.ОбъектРемонта)
	               |			И торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель = ТаблицаПоказателей.Показатель
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ТаблицаПоказателей.ОбъектРемонта,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта,
	               |	ЛОЖЬ,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.ДопустимыйМинимум,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.ДопустимыйМаксимум,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.КритическийМинимум,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.КритическийМаксимум,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.ЗначенияКонтролируемыхПоказателейИзОР,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.ТочкаЗамера,
	               |	торо_ИзмеряемыеПоказателиОбъектовРемонта.Удален
	               |ИЗ
	               |	РегистрСведений.торо_ИзмеряемыеПоказателиОбъектовРемонта КАК торо_ИзмеряемыеПоказателиОбъектовРемонта
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПоказателей КАК ТаблицаПоказателей
	               |		ПО ((ВЫРАЗИТЬ(торо_ИзмеряемыеПоказателиОбъектовРемонта.ОбъектРемонта КАК Справочник.торо_ТиповыеОР)) = ТаблицаПоказателей.ТиповойОР)
	               |			И торо_ИзмеряемыеПоказателиОбъектовРемонта.Показатель = ТаблицаПоказателей.Показатель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаПриоритетовПолная.Показатель,
	               |	МАКСИМУМ(ТаблицаПриоритетовПолная.Приоритет) КАК Приоритет,
	               |	МАКСИМУМ(ТаблицаПриоритетовПолная.Удален) КАК Удален
	               |ПОМЕСТИТЬ ТаблицаПриоритетов
	               |ИЗ
	               |	ПоказателиОРИТиповогоОР КАК ТаблицаПриоритетовПолная
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаПриоритетовПолная.Показатель
	               |
	               |ИМЕЮЩИЕ
	               |	МАКСИМУМ(ТаблицаПриоритетовПолная.Удален) = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоказателиОРИТиповогоОР.ОбъектРемонта,
	               |	ПоказателиОРИТиповогоОР.Показатель,
	               |	ПоказателиОРИТиповогоОР.ТиповойОР,
	               |	торо_ПараметрыОповещенияОСостоянииОборудования.СобытиеВозникновенияОповещения,
	               |	торо_ПараметрыОповещенияОСостоянииОборудования.ВидСравнения,
	               |	торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения,
	               |	торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения1,
	               |	ВЫБОР
	               |		КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения = ЗНАЧЕНИЕ(Перечисление.торо_ВариантыЗначенийКонтролируемыхПоказателей.ПроизвольноеЗначение)
	               |			ТОГДА торо_ПараметрыОповещенияОСостоянииОборудования.Значение
	               |		КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения = ЗНАЧЕНИЕ(Перечисление.торо_ВариантыЗначенийКонтролируемыхПоказателей.КритическийМаксимум)
	               |			ТОГДА ПоказателиОРИТиповогоОР.КритическийМаксимум
	               |		КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения = ЗНАЧЕНИЕ(Перечисление.торо_ВариантыЗначенийКонтролируемыхПоказателей.КритическийМинимум)
	               |			ТОГДА ПоказателиОРИТиповогоОР.КритическийМинимум
	               |		КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения = ЗНАЧЕНИЕ(Перечисление.торо_ВариантыЗначенийКонтролируемыхПоказателей.ДопустимыйМаксимум)
	               |			ТОГДА ПоказателиОРИТиповогоОР.ДопустимыйМаксимум
	               |		КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения = ЗНАЧЕНИЕ(Перечисление.торо_ВариантыЗначенийКонтролируемыхПоказателей.ДопустимыйМинимум)
	               |			ТОГДА ПоказателиОРИТиповогоОР.ДопустимыйМинимум
	               |	КОНЕЦ КАК Значение,
	               |	ВЫБОР
	               |		КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.торо_ВидыСравнения.ВИнтервале)
	               |				ИЛИ торо_ПараметрыОповещенияОСостоянииОборудования.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.торо_ВидыСравнения.НЕВИнтервале)
	               |			ТОГДА ВЫБОР
	               |					КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения1 = ЗНАЧЕНИЕ(Перечисление.торо_ВариантыЗначенийКонтролируемыхПоказателей.ПроизвольноеЗначение)
	               |						ТОГДА торо_ПараметрыОповещенияОСостоянииОборудования.Значение1
	               |					КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения1 = ЗНАЧЕНИЕ(Перечисление.торо_ВариантыЗначенийКонтролируемыхПоказателей.КритическийМаксимум)
	               |						ТОГДА ПоказателиОРИТиповогоОР.КритическийМаксимум
	               |					КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения1 = ЗНАЧЕНИЕ(Перечисление.торо_ВариантыЗначенийКонтролируемыхПоказателей.КритическийМинимум)
	               |						ТОГДА ПоказателиОРИТиповогоОР.КритическийМинимум
	               |					КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения1 = ЗНАЧЕНИЕ(Перечисление.торо_ВариантыЗначенийКонтролируемыхПоказателей.ДопустимыйМаксимум)
	               |						ТОГДА ПоказателиОРИТиповогоОР.ДопустимыйМаксимум
	               |					КОГДА торо_ПараметрыОповещенияОСостоянииОборудования.ВариантЗначения1 = ЗНАЧЕНИЕ(Перечисление.торо_ВариантыЗначенийКонтролируемыхПоказателей.ДопустимыйМинимум)
	               |						ТОГДА ПоказателиОРИТиповогоОР.ДопустимыйМинимум
	               |				КОНЕЦ
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Значение1,
	               |	торо_ПараметрыОповещенияОСостоянииОборудования.ПараметрыВводаДефекта,
	               |	ПоказателиОРИТиповогоОР.КритическийМаксимум,
	               |	ПоказателиОРИТиповогоОР.ДопустимыйМаксимум,
	               |	ПоказателиОРИТиповогоОР.ДопустимыйМинимум,
	               |	ПоказателиОРИТиповогоОР.КритическийМинимум
	               |ПОМЕСТИТЬ ТаблицаЗначенийПоказателей
	               |ИЗ
	               |	ПоказателиОРИТиповогоОР КАК ПоказателиОРИТиповогоОР
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПриоритетов КАК ТаблицаПриоритетов
	               |		ПО ПоказателиОРИТиповогоОР.Показатель = ТаблицаПриоритетов.Показатель
	               |			И ПоказателиОРИТиповогоОР.Приоритет = ТаблицаПриоритетов.Приоритет
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыОповещенияОСостоянииОборудования КАК торо_ПараметрыОповещенияОСостоянииОборудования
	               |		ПО (ВЫБОР
	               |				КОГДА ТаблицаПриоритетов.Приоритет
	               |					ТОГДА ПоказателиОРИТиповогоОР.ОбъектРемонта = торо_ПараметрыОповещенияОСостоянииОборудования.ОбъектРемонта
	               |				ИНАЧЕ ПоказателиОРИТиповогоОР.ТиповойОР = торо_ПараметрыОповещенияОСостоянииОборудования.ТиповойОР
	               |			КОНЕЦ)
	               |			И ПоказателиОРИТиповогоОР.Показатель = торо_ПараметрыОповещенияОСостоянииОборудования.Показатель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаПоказателей.ДокументИсточник,
	               |	ТаблицаПоказателей.ДатаДокументаИсточник,
	               |	ЕСТЬNULL(торо_СобытияУведомленийВДокументах.Ссылка, ЗНАЧЕНИЕ(Справочник.торо_СобытияУведомленийВДокументах.ПустаяСсылка)) КАК СобытиеУведомления,
	               |	торо_ШаблоныСообщенийИУведомлений.ТемаПисьма,
	               |	торо_ШаблоныСообщенийИУведомлений.ТелоПисьма,
	               |	торо_ШаблоныСообщенийИУведомлений.Ссылка КАК ШаблонСообщения,
	               |	ТаблицаЗначенийПоказателей.ОбъектРемонта,
	               |	ТаблицаЗначенийПоказателей.Показатель,
	               |	ТаблицаЗначенийПоказателей.ТиповойОР,
	               |	ТаблицаЗначенийПоказателей.СобытиеВозникновенияОповещения,
	               |	ТаблицаЗначенийПоказателей.ВидСравнения,
	               |	ТаблицаЗначенийПоказателей.Значение,
	               |	ТаблицаЗначенийПоказателей.Значение1,
	               |	ТаблицаЗначенийПоказателей.ВариантЗначения,
	               |	ТаблицаЗначенийПоказателей.ВариантЗначения1,
	               |	ТаблицаЗначенийПоказателей.КритическийМаксимум,
	               |	ТаблицаЗначенийПоказателей.ДопустимыйМаксимум,
	               |	ТаблицаЗначенийПоказателей.ДопустимыйМинимум,
	               |	ТаблицаЗначенийПоказателей.КритическийМинимум,
	               |	ТаблицаЗначенийПоказателей.ПараметрыВводаДефекта,
	               |	ТаблицаПоказателей.Значение КАК ЗначениеПоказателя,
	               |	ВЫБОР
	               |		КОГДА ТаблицаЗначенийПоказателей.ВидСравнения = ЗНАЧЕНИЕ(перечисление.торо_видысравнения.Винтервале)
	               |			ТОГДА ""в интервале""
	               |		КОГДА ТаблицаЗначенийПоказателей.ВидСравнения = ЗНАЧЕНИЕ(перечисление.торо_видысравнения.НЕВинтервале)
	               |			ТОГДА ""не в интервале""
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ТаблицаПоказателей.Значение > ТаблицаЗначенийПоказателей.Значение
	               |					ТОГДА ""больше""
	               |				КОГДА ТаблицаПоказателей.Значение < ТаблицаЗначенийПоказателей.Значение
	               |					ТОГДА ""меньше""
	               |				ИНАЧЕ ""равно""
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ВидСравненияСтрока
	               |ПОМЕСТИТЬ ИтоговаяТаблица
	               |ИЗ
	               |	ТаблицаПоказателей КАК ТаблицаПоказателей
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЗначенийПоказателей КАК ТаблицаЗначенийПоказателей
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.торо_СобытияУведомленийВДокументах КАК торо_СобытияУведомленийВДокументах
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ШаблоныСообщенийИУведомлений КАК торо_ШаблоныСообщенийИУведомлений
	               |				ПО торо_СобытияУведомленийВДокументах.ШаблонСообщения = торо_ШаблоныСообщенийИУведомлений.Ссылка
	               |			ПО ТаблицаЗначенийПоказателей.СобытиеВозникновенияОповещения = торо_СобытияУведомленийВДокументах.Ссылка
	               |		ПО ТаблицаПоказателей.ОбъектРемонта = ТаблицаЗначенийПоказателей.ОбъектРемонта
	               |			И ТаблицаПоказателей.Показатель = ТаблицаЗначенийПоказателей.Показатель
	               |			И (ВЫБОР
	               |				КОГДА ТаблицаЗначенийПоказателей.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.торо_ВидыСравнения.Больше)
	               |					ТОГДА ТаблицаПоказателей.Значение > ТаблицаЗначенийПоказателей.Значение
	               |				КОГДА ТаблицаЗначенийПоказателей.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.торо_ВидыСравнения.Меньше)
	               |					ТОГДА ТаблицаПоказателей.Значение < ТаблицаЗначенийПоказателей.Значение
	               |				КОГДА ТаблицаЗначенийПоказателей.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.торо_ВидыСравнения.БольшеИлиРавно)
	               |					ТОГДА ТаблицаПоказателей.Значение >= ТаблицаЗначенийПоказателей.Значение
	               |				КОГДА ТаблицаЗначенийПоказателей.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.торо_ВидыСравнения.МеньшеИлиРавно)
	               |					ТОГДА ТаблицаПоказателей.Значение <= ТаблицаЗначенийПоказателей.Значение
	               |				КОГДА ТаблицаЗначенийПоказателей.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.торо_ВидыСравнения.ВИнтервале)
	               |					ТОГДА ТаблицаПоказателей.Значение >= ТаблицаЗначенийПоказателей.Значение
	               |							И ТаблицаПоказателей.Значение <= ТаблицаЗначенийПоказателей.Значение1
	               |				КОГДА ТаблицаЗначенийПоказателей.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.торо_ВидыСравнения.НеВИнтервале)
	               |					ТОГДА ТаблицаПоказателей.Значение < ТаблицаЗначенийПоказателей.Значение
	               |							И ТаблицаПоказателей.Значение > ТаблицаЗначенийПоказателей.Значение1
	               |				КОГДА ТаблицаЗначенийПоказателей.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.торо_ВидыСравнения.Равно)
	               |					ТОГДА ТаблицаПоказателей.Значение = ТаблицаЗначенийПоказателей.Значение
	               |				КОГДА ТаблицаЗначенийПоказателей.ВидСравнения = ЗНАЧЕНИЕ(Перечисление.торо_ВидыСравнения.НеРавно)
	               |					ТОГДА ТаблицаПоказателей.Значение <> ТаблицаЗначенийПоказателей.Значение
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ИтоговаяТаблица.ДокументИсточник,
	               |	ИтоговаяТаблица.ДатаДокументаИсточник,
	               |	ИтоговаяТаблица.СобытиеУведомления,
	               |	ИтоговаяТаблица.ТемаПисьма,
	               |	ИтоговаяТаблица.ТелоПисьма,
	               |	ИтоговаяТаблица.ШаблонСообщения,
	               |	ИтоговаяТаблица.ОбъектРемонта,
	               |	ИтоговаяТаблица.Показатель,
	               |	ИтоговаяТаблица.ТиповойОР,
	               |	ИтоговаяТаблица.СобытиеВозникновенияОповещения,
	               |	ИтоговаяТаблица.ВидСравнения,
	               |	ИтоговаяТаблица.Значение,
	               |	ИтоговаяТаблица.Значение1,
	               |	ИтоговаяТаблица.ВариантЗначения,
	               |	ИтоговаяТаблица.ВариантЗначения1,
	               |	ИтоговаяТаблица.КритическийМаксимум,
	               |	ИтоговаяТаблица.ДопустимыйМаксимум,
	               |	ИтоговаяТаблица.ДопустимыйМинимум,
	               |	ИтоговаяТаблица.КритическийМинимум,
	               |	ИтоговаяТаблица.ПараметрыВводаДефекта,
	               |	ИтоговаяТаблица.ЗначениеПоказателя,
	               |	ИтоговаяТаблица.ВидСравненияСтрока
	               |ИЗ
	               |	ИтоговаяТаблица КАК ИтоговаяТаблица
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ИсторияУведомленийПользователей КАК торо_ИсторияУведомленийПользователей
	               |		ПО ИтоговаяТаблица.ДокументИсточник = торо_ИсторияУведомленийПользователей.Источник
	               |			И ((ВЫРАЗИТЬ(ИтоговаяТаблица.ТемаПисьма КАК СТРОКА(100))) = (ВЫРАЗИТЬ(торо_ИсторияУведомленийПользователей.ТемаПисьма КАК СТРОКА(100))))
	               |ГДЕ
	               |	торо_ИсторияУведомленийПользователей.Пользователь ЕСТЬ NULL 
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ИтоговаяТаблица.ДокументИсточник,
	               |	ИтоговаяТаблица.ДатаДокументаИсточник,
	               |	ИтоговаяТаблица.СобытиеУведомления,
	               |	ИтоговаяТаблица.ТемаПисьма,
	               |	ИтоговаяТаблица.ТелоПисьма,
	               |	ИтоговаяТаблица.ШаблонСообщения,
	               |	ИтоговаяТаблица.ОбъектРемонта,
	               |	ИтоговаяТаблица.Показатель,
	               |	ИтоговаяТаблица.ТиповойОР,
	               |	ИтоговаяТаблица.СобытиеВозникновенияОповещения,
	               |	ИтоговаяТаблица.ВидСравнения,
	               |	ИтоговаяТаблица.Значение,
	               |	ИтоговаяТаблица.Значение1,
	               |	ИтоговаяТаблица.ВариантЗначения,
	               |	ИтоговаяТаблица.ВариантЗначения1,
	               |	ИтоговаяТаблица.КритическийМаксимум,
	               |	ИтоговаяТаблица.ДопустимыйМаксимум,
	               |	ИтоговаяТаблица.ДопустимыйМинимум,
	               |	ИтоговаяТаблица.КритическийМинимум,
	               |	ИтоговаяТаблица.ПараметрыВводаДефекта,
	               |	ИтоговаяТаблица.ЗначениеПоказателя,
	               |	ИтоговаяТаблица.ВидСравненияСтрока
	               |ИЗ
	               |	ИтоговаяТаблица КАК ИтоговаяТаблица
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.торо_ВыявленныеДефекты.СписокДефектов КАК торо_ВыявленныеДефектыСписокДефектов
	               |		ПО ИтоговаяТаблица.ДокументИсточник = торо_ВыявленныеДефектыСписокДефектов.ДокументИсточник
	               |			И ИтоговаяТаблица.ОбъектРемонта = торо_ВыявленныеДефектыСписокДефектов.ОбъектРемонта
	               |			И ИтоговаяТаблица.ОбъектРемонта = торо_ВыявленныеДефектыСписокДефектов.ОтказавшийЭлемент
	               |ГДЕ
	               |	торо_ВыявленныеДефектыСписокДефектов.Ссылка ЕСТЬ NULL ";
	Запрос.УстановитьПараметр("Ссылка",Источник.Ссылка);
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	// Обработка сообщений
	Если НЕ РезультатПакета[5].Пустой() Тогда
		
		Выборка = РезультатПакета[5].Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СформироватьОповещенияОСостоянииОборудования(Выборка,СтруктураДанных);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Обработка создания дефектов
	Если НЕ РезультатПакета[6].Пустой() Тогда
		
		МассивКолонок = Новый Массив;
		Для Каждого Колонка Из РезультатПакета[5].Колонки Цикл
			МассивКолонок.Добавить(Колонка.Имя);
		КонецЦикла;
		
			Выборка = РезультатПакета[6].Выбрать();
			Пока Выборка.Следующий() Цикл
				
				ВвестиДокументДефектНаОсновании(Выборка,СтруктураДанных,ДокументыВДКОткрытию,МассивКолонок);
				
			КонецЦикла;
		
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруНовогоДокумента(ПараметрыВводаДефекта) Экспорт
	
	СтруктураВозврата = Новый Структура("Шапка,Таблица,Общее",Новый Структура,Новый Структура,Новый Структура);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ПараметрыАвтоматическойФиксацииДефектовЗаполнениеШапки.ШапкаИмяПоля КАК ИмяПоля,
	               |	торо_ПараметрыАвтоматическойФиксацииДефектовЗаполнениеШапки.ШапкаЗначениеПоля КАК ЗначениеПоля,
	               |	торо_ПараметрыАвтоматическойФиксацииДефектовЗаполнениеШапки.ШапкаСинонимПоля КАК СинонимПоля,
				   |	""Шапка"" КАК Назначение
	               |ИЗ
	               |	Справочник.торо_ПараметрыАвтоматическойФиксацииДефектов.ЗаполнениеШапки КАК торо_ПараметрыАвтоматическойФиксацииДефектовЗаполнениеШапки
	               |ГДЕ
	               |	торо_ПараметрыАвтоматическойФиксацииДефектовЗаполнениеШапки.Ссылка = &ПараметрыВводаДефекта
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	торо_ПараметрыАвтоматическойФиксацииДефектовЗаполнениеТабличнойЧасти.ТаблицаИмяПоля,
	               |	торо_ПараметрыАвтоматическойФиксацииДефектовЗаполнениеТабличнойЧасти.ТаблицаЗначениеПоля,
	               |	торо_ПараметрыАвтоматическойФиксацииДефектовЗаполнениеТабличнойЧасти.ТаблицаСинонимПоля,
				   |	""Таблица""
	               |ИЗ
	               |	Справочник.торо_ПараметрыАвтоматическойФиксацииДефектов.ЗаполнениеТабличнойЧасти КАК торо_ПараметрыАвтоматическойФиксацииДефектовЗаполнениеТабличнойЧасти
	               |ГДЕ
	               |	торо_ПараметрыАвтоматическойФиксацииДефектовЗаполнениеТабличнойЧасти.Ссылка = &ПараметрыВводаДефекта
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	""ОткрыватьФорму"",
	               |	торо_ПараметрыАвтоматическойФиксацииДефектов.ОткрыватьФорму,
	               |	NULL,
				   |	""Общее""
	               |ИЗ
	               |	Справочник.торо_ПараметрыАвтоматическойФиксацииДефектов КАК торо_ПараметрыАвтоматическойФиксацииДефектов
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	""ЗаписыватьДокумент"",
	               |	торо_ПараметрыАвтоматическойФиксацииДефектов.ЗаписыватьДокумент,
	               |	NULL,
				   |	""Общее""
	               |ИЗ
	               |	Справочник.торо_ПараметрыАвтоматическойФиксацииДефектов КАК торо_ПараметрыАвтоматическойФиксацииДефектов
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	""ПроводитьДокумент"",
	               |	торо_ПараметрыАвтоматическойФиксацииДефектов.ПроводитьДокумент,
	               |	NULL,
				   |	""Общее""
	               |ИЗ
	               |	Справочник.торо_ПараметрыАвтоматическойФиксацииДефектов КАК торо_ПараметрыАвтоматическойФиксацииДефектов";
	Запрос.УстановитьПараметр("ПараметрыВводаДефекта",ПараметрыВводаДефекта);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтруктураВозврата[Выборка.Назначение].Вставить(Выборка.ИмяПоля,Выборка.ЗначениеПоля);
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

Процедура ДополнитьСтруктуруПараметровПодстановкиКонтролируемыхПоказателей(Структура,Выборка)
	
	ПеречислениеПроизвольноеЗначение = Структура.ПеречислениеПроизвольноеЗначение;
	ЕдиницаИзмеренияПоказателя = Строка(Выборка.Показатель.ЕдиницаИзмерения);
	Структура.Вставить("ОбъектРемонта",Строка(Выборка.ОбъектРемонта));
	Структура.Вставить("Показатель",Строка(Выборка.Показатель));
	Структура.Вставить("ЗначениеПоказателя",Строка(Выборка.ЗначениеПоказателя));
	Структура.Вставить("УсловиеУведомления",Выборка.ВидСравненияСтрока);
	Структура.Вставить("Значение",?(Выборка.ВариантЗначения = ПеречислениеПроизвольноеЗначение,Выборка.Значение, Строка(Выборка.ВариантЗначения) +"("+Выборка.Значение+" "+ЕдиницаИзмеренияПоказателя+")"));
	Структура.Вставить("ГраницаИнтервала",?(Выборка.ВариантЗначения1 = ПеречислениеПроизвольноеЗначение,Выборка.Значение, Строка(Выборка.ВариантЗначения1) +"("+Выборка.Значение1+")"));
	Структура.Вставить("ЕдиницаИзмеренияПоказателя",ЕдиницаИзмеренияПоказателя);
	Структура.Вставить("КритическиеЗначенияПоказателей", "Критический максимум: "+Выборка.КритическийМаксимум+" "+ЕдиницаИзмеренияПоказателя+"
														 |Допустимый максимум: "+Выборка.ДопустимыйМаксимум+" "+ЕдиницаИзмеренияПоказателя+"
														 |Допустимый минимум:    "+Выборка.ДопустимыйМинимум+" "+ЕдиницаИзмеренияПоказателя+"
														 |Допустимый максимум:  "+Выборка.КритическийМинимум+" "+ЕдиницаИзмеренияПоказателя);
КонецПроцедуры

Процедура СформироватьОповещенияОСостоянииОборудования(Выборка,СтруктураДанных)
	
	УведомлениеПоДокументу = Выборка.СобытиеУведомления;
	
	Если НЕ ЗначениеЗаполнено(УведомлениеПоДокументу) Тогда
		Возврат;
	КонецЕсли;
	
	МассивОповещаемых = Новый Массив;
	
	Для Каждого Оповещаемый Из УведомлениеПоДокументу.Оповещаемые Цикл
		Если ТипЗнч(Оповещаемый.Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
			Если МассивОповещаемых.Найти(Оповещаемый.Пользователь) = Неопределено Тогда
				МассивОповещаемых.Добавить(Оповещаемый.Пользователь);
			КонецЕсли;
		ИначеЕсли Оповещаемый.Пользователь = "Ответственный по документу" Тогда
			Если МассивОповещаемых.Найти(СтруктураДанных.Ответственный) = Неопределено Тогда
				МассивОповещаемых.Добавить(СтруктураДанных.Ответственный)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ДополнитьСтруктуруПараметровПодстановкиКонтролируемыхПоказателей(СтруктураДанных,Выборка);
	
	Если МассивОповещаемых.Количество() > 0 Тогда
	
		НаборЗаписей = РегистрыСведений.торо_ОчередьУведомлений.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать(); // отборов нет
		
		Для Каждого Оповещаемый Из МассивОповещаемых Цикл
			
			ID_уведомления = Новый УникальныйИдентификатор;
			
			СтруктураПисьма = торо_РаботаСУведомлениями.ПолучитьСодержимоеПисьмаПоШаблону(Выборка.ШаблонСообщения, Оповещаемый, СтруктураДанных);
			
			Если УведомлениеПоДокументу.ФормироватьВсплывающиеУведомления Тогда
			
				НС = НаборЗаписей.Добавить();
				НС.ID_уведомления = ID_уведомления;
				НС.Источник 	  = СтруктураДанных.Ссылка;
				НС.Пользователь		 = Оповещаемый;
				НС.СпособУведомления = Перечисления.торо_СпособыУведомленияПользователей.УведомлениеВВидеВсплывающейПодсказки;
				
				НС.ТемаПисьма        = СтруктураПисьма.ТемаУведомления;
				НС.ТелоПисьма        = СтруктураПисьма.ТелоУведомления;
				
			КонецЕсли;
			
			Если УведомлениеПоДокументу.ФормироватьПочтовыеУведомления Тогда
				
				НС = НаборЗаписей.Добавить();
				НС.ID_уведомления = ID_уведомления;
				НС.Источник 	  = СтруктураДанных.Ссылка;
				НС.Пользователь		 = Оповещаемый;
				НС.СпособУведомления = Перечисления.торо_СпособыУведомленияПользователей.УведомлениеПоЭлектроннойПочте;
				
				НС.ТемаПисьма        = СтруктураПисьма.ТемаУведомления;
				НС.ТелоПисьма        = СтруктураПисьма.ТелоУведомления;
				
			КонецЕсли;
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруДанныхДокумента(СтруктураДанных, Документ, ПередЗаписью = Ложь)
	
	МетаданныеДокумента = Документ.Метаданные();
	
	Для каждого Реквизит Из МетаданныеДокумента.Реквизиты Цикл
		
		Если СтруктураДанных.Свойство(?(ПередЗаписью, "ПередЗаписью_", "") + Реквизит.Имя) Тогда
			Продолжить;
		КонецЕсли; 
		
		СтруктураДанных.Вставить(?(ПередЗаписью, "ПередЗаписью_", "") + Реквизит.Имя, Документ[Реквизит.Имя]);
		
	КонецЦикла;
	
	Для каждого Реквизит Из МетаданныеДокумента.СтандартныеРеквизиты Цикл
		Если СтруктураДанных.Свойство(Реквизит.Имя) Тогда
			Продолжить;
		КонецЕсли; 
		СтруктураДанных.Вставить(Реквизит.Имя, Документ[Реквизит.Имя]);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ВвестиДокументДефектНаОсновании(Выборка,СтруктураДанных,ДокументыВДКОткрытию,МассивКолонок)
	
	Если ЗначениеЗаполнено(Выборка.ПараметрыВводаДефекта) Тогда
		
		Если Выборка.ПараметрыВводаДефекта.ОткрыватьФорму Тогда
			СтруктураДокумента = Новый Структура;
			Для Каждого ИмяКолонки Из МассивКолонок Цикл
				СтруктураДокумента.Вставить(ИмяКолонки,Выборка[ИмяКолонки]);
			КонецЦикла;
			ДокументыВДКОткрытию.Добавить(СтруктураДокумента);
		Иначе
			СтруктураПараметров = ПолучитьСтруктуруНовогоДокумента(Выборка.ПараметрыВводаДефекта);
			НовДокумент = Документы.торо_ВыявленныеДефекты.СоздатьДокумент();
			НовДокумент.Дата = ТекущаяДата();
			НовДокумент.ДатаОбнаружения = Выборка.ДатаДокументаИсточник;
			Для Каждого КлючИЗначение Из СтруктураПараметров.Шапка Цикл
				НовДокумент[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
			КонецЦикла;
			
			СтрокаДокументаОснования = НовДокумент.ДокументыОснования.Добавить();
			СтрокаДокументаОснования.ДокументОснование = Выборка.ДокументИсточник;
			
			СтрокаДефекта = НовДокумент.СписокДефектов.Добавить();
			
			СтрокаДефекта.ID 				= Новый УникальныйИдентификатор;
			СтрокаДефекта.ВидРемонтов 		= Константы.торо_ВидРемонтаПриВводеНаОснованииВыявленныхДефектов.Получить();
			СтрокаДефекта.ГарантийныйРемонт = торо_ГарантийноеОбслуживание.ПолучитьЗначениеФлагаГарантийныйРемонтДляОбъектаРемонта(Выборка.ОбъектРемонта,НовДокумент.ДатаОбнаружения,НовДокумент.ДатаОбнаружения);
			СтрокаДефекта.ДокументИсточник 	= Выборка.ДокументИсточник;
			СтрокаДефекта.ОбъектРемонта 	= Выборка.ОбъектРемонта;
			СтрокаДефекта.ОтказавшийЭлемент = Выборка.ОбъектРемонта;
			
			Для Каждого КлючИЗначение Из СтруктураПараметров.Таблица Цикл
				СтрокаДефекта[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
			КонецЦикла;
			
			Попытка
				НовДокумент.Записать(?(СтруктураПараметров.Общее.ПроводитьДокумент,РежимЗаписиДокумента.Проведение,РежимЗаписиДокумента.Запись));
			Исключение
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось создать документ ""Выявленный дефект"" автоматически: '")+ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

