
#Область ПрограммныйИнтерфейс

// Удаляет все доступные пользователю в списке партнеров и позиционируется на элементе справочника.
//
// Параметры:
//  Форма          -  УправляемаяФорма - форма, для которой выполняются действия
//  ПараметрВыбора - Структура - содержит данные выбора.
//
Процедура ОбработатьВыборПартнераЧерезПомощникВводаНового(Форма,ПараметрВыбора) Экспорт
	
	МассивНедоступныхОтборовУдалить = Новый Массив;
	Для каждого ЭлементОтбора Из ОбщегоНазначенияУТКлиентСервер.ПолучитьОтборДинамическогоСписка(Форма.Список).Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) <> Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		Если ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный Тогда
			Если  ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Сегмент") Тогда
			ИначеЕсли ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Поиск") Тогда
				МассивНедоступныхОтборовУдалить.Добавить("Поиск");
				Форма.СтрокаПоиска = "";
				Форма.РасширенныйПоиск = Ложь;
			ИначеЕсли ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОсновнойМенеджер") И ЭлементОтбора.ПравоеЗначение <> ПараметрВыбора.ОсновнойМенеджер Тогда
				МассивНедоступныхОтборовУдалить.Добавить("ОсновнойМенеджер");
				Форма.ТолькоМои = Ложь;
			ИначеЕсли ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("БизнесРегион") И ЭлементОтбора.ПравоеЗначение <> ПараметрВыбора.ОсновнойМенеджер Тогда
			КонецЕсли;
		Иначе
			ЭлементОтбора.Использование = Ложь;
		КонецЕсли;
	КонецЦикла;
	Для каждого ЭлементМассива Из МассивНедоступныхОтборовУдалить Цикл
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Форма.Список, ЭлементМассива);
	КонецЦикла;
	
	Форма.Элементы.Список.ТекущаяСтрока = ПараметрВыбора.Партнер;
	
КонецПроцедуры

// Вызывается из формы элемента справочника контрагенты при изменении сокращенного наименования.
// Параметры:
//		Наименование - Строка - наименование контрагента.
//		НаименованиеПолное - Строка - полное наименование контрагента.
Процедура СокрЮрНаименованиеПриИзменении(Наименование, НаименованиеПолное) Экспорт
	
	Если ПустаяСтрока(НаименованиеПолное) Тогда
		
		Наименование = "";
		Возврат;
		
	КонецЕсли;
	
	НачальнаяПозицияКавычек = 0;
	КонечнаяПозицияКавычек  = 0;
	
	МассивВидовКавычек = Новый Массив;
	МассивВидовКавычек.Добавить("""");
	МассивВидовКавычек.Добавить("'");
	МассивВидовКавычек.Добавить("«");

	Для Каждого ВидКавычки Из МассивВидовКавычек Цикл
		
		ПозицияВидаКавычки = Найти(НаименованиеПолное, ВидКавычки);
		Если ПозицияВидаКавычки > 0 И (НачальнаяПозицияКавычек = 0 ИЛИ ПозицияВидаКавычки < НачальнаяПозицияКавычек) Тогда
			НачальнаяПозицияКавычек = ПозицияВидаКавычки;
		КонецЕсли;
		
	КонецЦикла;
	
	МассивВидовКавычек[2] ="»";
	Для Каждого ВидКавычки Из МассивВидовКавычек Цикл
		
		ПозицияВидаКавычки = СтрНайти(НаименованиеПолное, ВидКавычки, НаправлениеПоиска.СКонца);
		Если ПозицияВидаКавычки > 0 И (КонечнаяПозицияКавычек = 0 ИЛИ ПозицияВидаКавычки > КонечнаяПозицияКавычек) Тогда
			КонечнаяПозицияКавычек = ПозицияВидаКавычки;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НачальнаяПозицияКавычек = 0 Тогда
		Наименование = НаименованиеПолное;
	ИначеЕсли КонечнаяПозицияКавычек = 0 Тогда
		Наименование = Прав(НаименованиеПолное, СтрДлина(НаименованиеПолное) - НачальнаяПозицияКавычек);
	Иначе
		Наименование = Сред(НаименованиеПолное, НачальнаяПозицияКавычек + 1, КонечнаяПозицияКавычек - НачальнаяПозицияКавычек-1);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбщиеПроцедурыИФункцииФормСпискаИВыбораСправочникаПартнеры

Процедура ФильтрыПанельНавигацииТипФильтраПриИзменении(Форма, Элемент, ТребуетсяЗаполнениеСтраницыСвойств) Экспорт
	
	Если ТипЗнч(Форма.ТипФильтра) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения")
		И Форма.ТекущееСвойствоПанелиНавигации = Форма.ТипФильтра
		И Форма.Элементы.СтраницыТипФильтра.ТекущаяСтраница = Форма.Элементы.СтраницаСвойства Тогда
		Возврат;
	ИначеЕсли Форма.ТипФильтра = "Категории" И Форма.Элементы.СтраницыТипФильтра.ТекущаяСтраница = Форма.Элементы.СтраницаКатегории Тогда
		Возврат;
	ИначеЕсли Форма.ТипФильтра = "БизнесРегионы" И Форма.Элементы.СтраницыТипФильтра.ТекущаяСтраница = Форма.Элементы.СтраницаБизнесРегионы Тогда
		Возврат;
	ИначеЕсли Форма.ТипФильтра = "ГруппыДоступа" И Форма.Элементы.СтраницыТипФильтра.ТекущаяСтраница = Форма.Элементы.СтраницаГруппыДоступа Тогда
		Возврат;
	ИначеЕсли Форма.ТипФильтра = "Менеджер" И Форма.Элементы.СтраницыТипФильтра.ТекущаяСтраница = Форма.Элементы.СтраницаМенеджеры Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНастройкиПанелиНавигации(Форма);
	
	Если ТипЗнч(Форма.ТипФильтра) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения")
		ИЛИ Форма.ТипФильтра  = "Категории" Тогда
		ТребуетсяЗаполнениеСтраницыСвойств = Истина;
	ИначеЕсли Форма.ТипФильтра  = "БизнесРегионы" Тогда
		Форма.Элементы.СтраницыТипФильтра.ТекущаяСтраница = Форма.Элементы.СтраницаБизнесРегионы; 
	ИначеЕсли Форма.ТипФильтра = "ГруппыДоступа" Тогда
		Форма.Элементы.СтраницыТипФильтра.ТекущаяСтраница = Форма.Элементы.СтраницаГруппыДоступа;
	ИначеЕсли Форма.ТипФильтра = "Менеджер" Тогда
		Форма.Элементы.СтраницыТипФильтра.ТекущаяСтраница = Форма.Элементы.СтраницаМенеджеры;
		Форма.ТолькоМои = Ложь;
		
	КонецЕсли;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ТолькоМои","Доступность", Форма.ТипФильтра <> "Менеджер");
	
КонецПроцедуры

Процедура ПанельНавигацииУправлениеДоступностью(Форма) Экспорт
	
	Форма.Элементы.ТипФильтра.Доступность             = Форма.ИспользоватьФильтр;
	Форма.Элементы.Менеджеры.Доступность              = Форма.ИспользоватьФильтр;
	Форма.Элементы.ТолькоЗначимые.Доступность         = Форма.ИспользоватьФильтр;
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "ФормаСкопировать1", "Видимость", Форма.УпрощенныйВводДоступен);
	
КонецПроцедуры

Функция ПозиционированиеКорректно(ИмяСписка, Форма) Экспорт
	
	ТипГруппировка = Тип("СтрокаГруппировкиДинамическогоСписка");
	
	Если ТипЗнч(Форма.Элементы[ИмяСписка].ТекущаяСтрока) <> ТипГруппировка И ЗначениеЗаполнено(Форма.Элементы[ИмяСписка].ТекущаяСтрока) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Процедура ФормаСпискаВыбораПриЗакрытии(Форма) Экспорт
	
	СохранитьНастройкиПанелиНавигации(Форма);
	
КонецПроцедуры

Процедура ПартнерыФормаСпискаВыбораОбработкаОповещения(Форма, ИмяСобытия, Параметр, Источник, ТребуетсяОбновлениеПанелиИнформации) Экспорт
	
	Если ИмяСобытия = "ВыборПартнераНайдено" И Параметр.Свойство("Партнер") Тогда
		
		ОбработатьВыборПартнераЧерезПомощникВводаНового(Форма, Параметр);
		
	ИначеЕсли ИмяСобытия = "Запись_КонтактныеЛицаПартнеров" И  Параметр.Свойство("Владелец") Тогда
		
		ТекущиеДанные = Форма.Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено 
			И ((ТекущиеДанные.Свойство("Ссылка") И ТекущиеДанные.Ссылка = Параметр.Владелец)
			ИЛИ ТекущиеДанные.Свойство("Партнер") И ТекущиеДанные.Партнер = Параметр.Владелец) Тогда
			ТребуетсяОбновлениеПанелиИнформации = Истина;
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Запись_Контрагенты" И Параметр.Свойство("Партнер") Тогда
		
		ТекущиеДанные = Форма.Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено И ТекущиеДанные.Ссылка = Параметр.Партнер Тогда
			ТребуетсяОбновлениеПанелиИнформации = Истина;
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Запись_Партнеры" Тогда
		
		ТекущиеДанные = Форма.Элементы.Список.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено 
			И ((ТекущиеДанные.Свойство("Ссылка") И ТекущиеДанные.Ссылка = Параметр)
			ИЛИ ТекущиеДанные.Свойство("Партнер") И ТекущиеДанные.Партнер = Параметр)Тогда
			ТребуетсяОбновлениеПанелиИнформации = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПартнерыФормаСпискаВыбораСоздатьНового(Форма, Команда) Экспорт
	
	СтруктураПараметры = Новый Структура;
	СтруктураЗначенияЗаполнения = Новый Структура;
	
	Для каждого ЭлементОтбора Из ОбщегоНазначенияУТКлиентСервер.ПолучитьОтборДинамическогоСписка(Форма.Список).Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно И ЭлементОтбора.Использование Тогда
			СтруктураЗначенияЗаполнения.Вставить(Строка(ЭлементОтбора.ЛевоеЗначение), ЭлементОтбора.ПравоеЗначение);
		КонецЕсли;
	КонецЦикла;
	
	Если Форма.Элементы.Список.Отображение <> ОтображениеТаблицы.Список Тогда
		СтруктураЗначенияЗаполнения.Вставить("Родитель", Форма.Элементы.Список.ТекущийРодитель);
	КонецЕсли;
	
	СтруктураПараметры.Вставить("ЗначенияЗаполнения", СтруктураЗначенияЗаполнения);
	СтруктураПараметры.Вставить("СписокОтборПоТипуПартнера", Форма.СписокОтборПоТипуПартнера);
	
	Если НЕ Форма.ИспользоватьПартнеровКакКонтрагентов Тогда
		ОткрытьФорму("Справочник.Партнеры.Форма.ФормаЭлемента", СтруктураПараметры,Форма);
	Иначе
		ОткрытьФорму("Справочник.Партнеры.Форма.ФормаЭлементаРеквизитыКонтрагента", СтруктураПараметры,Форма);
	КонецЕсли;
	
КонецПроцедуры 

Процедура КонтактныеЛицаПартнераНажатие(Форма) Экспорт
	
	Если ПозиционированиеКорректно("Список", Форма) Тогда
		
		Если СтрЧислоВхождений(Форма.ИмяФормы, "Контрагенты") > 0 Тогда
			ПараметрыФормы = Новый Структура("Отбор",Новый Структура("Владелец", Форма.Элементы.Список.ТекущиеДанные.Партнер));
		Иначе
			ПараметрыФормы = Новый Структура("Отбор",Новый Структура("Владелец", Форма.Элементы.Список.ТекущаяСтрока));
		КонецЕсли;
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ОткрытьФорму(
	"Справочник.КонтактныеЛицаПартнеров.ФормаСписка",
	ПараметрыФормы,
	Форма);
	
	Оповестить("ОбновитьСписокСправочника", ПараметрыФормы, Форма);
	
КонецПроцедуры

Процедура КонтрагентыПартнераНажатие(Форма) Экспорт
	
	Если ПозиционированиеКорректно("Список",Форма) Тогда
		
		ПараметрыФормы = Новый Структура("ОтборКонтрагентов", Форма.Элементы.Список.ТекущаяСтрока);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ОткрытьФорму(
	"Справочник.Контрагенты.Форма.ФормаСпискаПараметрическая",
	ПараметрыФормы,
	Форма);
	
	Оповестить("ОбновитьСписокСправочника", ПараметрыФормы, Форма);
	
КонецПроцедуры

Процедура ФильтрыПанельНавигацииПроверкаПеретаскивания(Форма, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле) Экспорт
	
	Если (Строка = Неопределено) ИЛИ (ПараметрыПеретаскивания.Значение = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		
		Для Каждого ЭлементМассива Из ПараметрыПеретаскивания.Значение Цикл
			
			Если ТипЗнч(ЭлементМассива) = Тип("СправочникСсылка.Партнеры") Тогда
				
				Возврат;
				
			КонецЕсли;
			
			ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
			
		КонецЦикла;
		
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("СправочникСсылка.Партнеры") Тогда
		
		Возврат;
		
	Иначе
		
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПартнерыФормаСпискаВыбораСписокПередНачаломДобавления(Форма, Элемент, Отказ, Копирование, Родитель, Группа) Экспорт
	
	Если Копирование Тогда
		Если НЕ Форма.УпрощенныйВводДоступен Тогда
			Отказ = Истина;
			ОчиститьСообщения();
			ТекстСообщения = НСтр("ru='Копирование %1 запрещено.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения, 
			?(Форма.ИспользоватьПартнеровКакКонтрагентов, НСтр("ru='контрагентов'"), НСтр("ru='партнеров'")));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Копирование партнеров запрещено.'"));
		КонецЕсли;
	Иначе
		Отказ = Истина;
		ОткрытьФорму("Справочник.Партнеры.Форма.ПомощникНового",Новый Структура("СписокОтборПоТипуПартнера", Форма.СписокОтборПоТипуПартнера), Форма);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбщиеПроцедурыИФункцииФормЭлементаСправочникаПартнеры

Процедура ПартнерФормаЭлементаНаименованиеПриИзменении(Форма, Элемент) Экспорт
	
	Если ПустаяСтрока(Форма.Объект.НаименованиеПолное) Тогда
		Форма.Объект.НаименованиеПолное = Форма.Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбщиеПроцедурыИФункцииФормСпискаИВыбораСправочникаПартнеры

Процедура СохранитьНастройкиПанелиНавигации(Форма)
	
	Если Форма.Элементы.СтраницыТипФильтра.ТекущаяСтраница = Форма.Элементы.СтраницаМенеджеры Тогда
		ВидПанели = "Менеджер";
		ТекущееЗначение = Форма.Элементы.Менеджеры.ТекущаяСтрока;
	ИначеЕсли Форма.Элементы.СтраницыТипФильтра.ТекущаяСтраница = Форма.Элементы.СтраницаСвойства Тогда
		ВидПанели = Форма.ТекущееСвойствоПанелиНавигации;
		ТекущаяСтрока = Форма.Элементы.Свойства.ТекущаяСтрока;
		Если ТекущаяСтрока <> Неопределено Тогда
			ТекущиеДанные = Форма.Свойства.НайтиПоИдентификатору(ТекущаяСтрока);
			Если ТекущиеДанные <> Неопределено Тогда
				ТекущееЗначение = ТекущиеДанные.Значение;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = Форма.НастройкиПанелейНавигации.НайтиСтроки(Новый Структура("ВидПанели",ВидПанели));
	Если НайденныеСтроки.Количество() = 0 Тогда
		СтрокаНастроек = Форма.НастройкиПанелейНавигации.Добавить();
		СтрокаНастроек.ВидПанели = ВидПанели;
	Иначе
		СтрокаНастроек = НайденныеСтроки[0];
	КонецЕсли;
	
	СтрокаНастроек.ТекущееЗначение = ТекущееЗначение;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти