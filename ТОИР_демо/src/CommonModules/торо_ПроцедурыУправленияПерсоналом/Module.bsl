////////////////////////////////////////////////////////////////////////////////
// торо_ПроцедурыУправленияПерсоналом: методы, для работы с персоналом.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Заполняет список выбора квалификаций.
//
// Параметры:
//		Документ - ДокументСсылка.торо_ПрисвоениеКвалификацийСотрудникам - документ, который нужно не учитывать.
//		Сотрудник - СправочникСсылка.Сотрудники - сотрудник.
//		Дата - Дата - дата среза.
//		ТекКвалификация - СправочникСсылка.торо_КвалификацииРемонтногоПерсонала - текущая квалификация сотрудника.
//		ТекМассив - Массив - массив квалификаций.
//
// Возвращаемое значение:
//		СписокЗначений - список для данных выбора.
//
Функция ЗаполнитьСписокВыбораКвалификаций(Документ = Неопределено, Сотрудник, Дата = Неопределено, ТекКвалификация = Неопределено, ТекМассив = Неопределено) Экспорт
	
	Если Дата = Неопределено Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
	
	ТекТаблица = Новый ТаблицаЗначений;
	ТекТаблица.Колонки.Добавить("Квалификация", Новый ОписаниеТипов("СправочникСсылка.торо_КвалификацииРемонтногоПерсонала"));
	
	Для каждого Элем Из ТекМассив Цикл
	
		ТекТаблица.Добавить().Квалификация = Элем;
	
	КонецЦикла; 
	
	Если Документ = Неопределено Тогда
		Документ = Документы.торо_ПрисвоениеКвалификацийСотрудникам.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТекущиеКвалификации ИЗ &ТекущиеКвалификации КАК ТекущиеКвалификации;
				   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Квалификация,
	               |	торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Основная
	               |ИЗ
	               |	РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних(
	               |			&Дата,
	               |			Регистратор <> &Ссылка
	               |				И Сотрудник = &Сотрудник) КАК торо_КвалификацияРемонтногоПерсоналаСрезПоследних
	               |				
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ТекущиеКвалификации КАК ТекущиеКвалификации
				   |			ПО торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Квалификация = ТекущиеКвалификации.Квалификация
				   |ГДЕ
				   |	НЕ торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Удаленная
				   |	И ТекущиеКвалификации.Квалификация ЕСТЬ NULL";
	Если ЗначениеЗаполнено(ТекКвалификация) Тогда
		Запрос.текст = Запрос.Текст + " ИЛИ торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Квалификация = &Квалификация";
		Запрос.УстановитьПараметр("Квалификация", ТекКвалификация);
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + " УПОРЯДОЧИТЬ ПО
							      |	торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Основная УБЫВ";
    Запрос.УстановитьПараметр("Ссылка",Документ);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("ТекущиеКвалификации",ТекТаблица);
	Запрос.УстановитьПараметр("Дата",Дата);
	Результат = Запрос.Выполнить();
	
	СписокВыбора = Новый СписокЗначений;
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокВыбора.Добавить(Выборка.Квалификация, Строка(Выборка.Квалификация)+?(Выборка.Основная," (основная)",""));
		КонецЦикла;
	Иначе
		СписокВыбора.Добавить(Справочники.торо_КвалификацииРемонтногоПерсонала.ПустаяСсылка(),"(нет квалификаций)");
	КонецЕсли;
	
	Возврат СписокВыбора;

КонецФункции

// Возвращает основную квалификацию сотрудника.
//
// Параметры:
//		Сотрудник - СправочникСсылка.Сотрудники - сотрудник.
//		Документ - ДокументСсылка.торо_ПрисвоениеКвалификацийСотрудникам - документ, который нужно не учитывать.
//		Дата - Дата - дата среза.
//
// Возвращаемое значение:
//		СправочникСсылка.торо_КвалификацииРемонтногоПерсонала - основная квалификация.
//
Функция ПолучитьОсновнуюКвалификацию(Сотрудник,Документ = Неопределено,Дата = Неопределено) Экспорт
	
	Если Документ = Неопределено Тогда
		Документ = Документы.торо_ПрисвоениеКвалификацийСотрудникам.ПустаяСсылка();
	КонецЕсли;
	
	Если Дата = Неопределено Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Квалификация
	               |ИЗ
	               |	РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних(
	               |			&Дата,
	               |			Регистратор <> &Ссылка
	               |				И Сотрудник = &Сотрудник) КАК торо_КвалификацияРемонтногоПерсоналаСрезПоследних
	               |ГДЕ
	               |	НЕ торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Удаленная
	               |	И торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Основная";
	Запрос.УстановитьПараметр("Ссылка",Документ);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("Дата",Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Квалификация;
	Иначе
		Возврат Справочники.торо_КвалификацииРемонтногоПерсонала.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// Возвращает список сотрудников с заданной квалификацией.
//
// Параметры:
//		Квалификация - СправочникСсылка.торо_КвалификацииРемонтногоПерсонала - квалификация сотрудников для отбора.
//		Дата - Дата - дата среза.
//
//	Возвращаемое значение:
//		СписокЗначений - список квалификаций.
//
Функция ПолучитьСписокСотрудниковСКвалификацией(Квалификация,Дата = Неопределено) Экспорт
	
	Если Дата = Неопределено Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Сотрудник
	               |ИЗ
	               |	РегистрСведений.торо_КвалификацияРемонтногоПерсонала.СрезПоследних(&Дата, Квалификация = &Квалификация) КАК торо_КвалификацияРемонтногоПерсоналаСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	               |		ПО торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
	               |ГДЕ
	               |	НЕ торо_КвалификацияРемонтногоПерсоналаСрезПоследних.Удаленная
	               |	И (ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
	               |			ИЛИ &ИспользоватьУправлениеПерсоналом = ЛОЖЬ)";
	
	Запрос.УстановитьПараметр("Квалификация", Квалификация);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ИспользоватьУправлениеПерсоналом",ПолучитьФункциональнуюОпцию("торо_ИспользоватьУправлениеПерсоналом"));
	
	Результат = Запрос.Выполнить();
	Список = Новый СписокЗначений;
	Если НЕ Результат.Пустой() Тогда
	    Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Список.Добавить(Выборка.Сотрудник);
		КонецЦикла;
	Иначе
		 Список.Добавить(Справочники.Сотрудники.ПустаяСсылка(),"(нет сотрудников)");
	КонецЕсли;
	
	Возврат Список;
	
КонецФункции

// Возвращает список работающих сотрудников.
//
// Возвращаемое значение:
//		СписокЗначений - список сотрудников.	
Функция ПолучитьСписокНеуволенныхСотрудников() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТекущиеКадровыеДанныеСотрудников.Сотрудник
	               |ИЗ
	               |	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	               |ГДЕ
	               |	(ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
	               |			ИЛИ &ИспользоватьУправлениеПерсоналом = ЛОЖЬ)";
				   
	Запрос.УстановитьПараметр("ИспользоватьУправлениеПерсоналом",ПолучитьФункциональнуюОпцию("торо_ИспользоватьУправлениеПерсоналом"));
	Результат = Запрос.Выполнить();
	СписокНеуволенных = Новый СписокЗначений;
	
	Если НЕ Результат.Пустой() Тогда
		
		СписокНеуволенных.ЗагрузитьЗначения(Результат.Выгрузить().ВыгрузитьКолонку("Сотрудник"));
		
	Конецесли;
	
	Возврат СписокНеуволенных;
	
КонецФункции

#КонецОбласти