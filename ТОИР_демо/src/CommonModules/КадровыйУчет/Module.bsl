////////////////////////////////////////////////////////////////////////////////
// КадровыйУчет: методы кадрового учета, работающие на стороне сервера
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Получение кадровых данных

// Возвращает таблицу значений заполненную данными физических лиц, перечисленными в 
// параметре СписокНеобходимыхДанных.
//
// Параметры:
//  ТолькоРазрешенные - Булево - только разрешенные.
//  СписокФизическихЛиц - СправочникСсылка.ФизическиеЛица, Массив - Массив ссылок на элементы справочника 
//						  физические лица или СправочникСсылка.ФизическиеЛица.
//  КадровыеДанные - 	Строка - список полей данных, перечисленных через запятую 
//						или Массив строк с полями данных,
//						которые необходимо получить. Ниже приведены идентификаторы 
//						получаемых данных и описание значения, которое будет возвращено в 
//						таблице значений.
//
//  ДатаПолученияДанных	- Дата - дата на которую необходимо получить данные физических лиц, 
//						применимо к данным, носящим периодический характер (например - ФИО)
//						Если дату не указывать, будут получены самые последние данные.
//
//  ПоляОтбораПериодическихДанных - Структура - в качестве ключа указывается имя таблицы, содержащей
//									периодические данные (например ФИОФизическихЛиц, ГражданствоФизическихЛиц)
//									В качестве значений коллекция условий отбора, 
//									соединяемых по "И" и применяемых к регистру сведений
//									Коллекция строки которой имеют поля
//										ЛевоеЗначение - строка, имя поля регистра сведений
//										ВидСравнения - строка, вид сравнения, допустимый в языке запросов
//										ПравоеЗначение - значение для сравнения с полем ЛевоеЗначение.
//
//			Список полей, допустимых в параметре КадровыеДанные
//
//			- Имена всех реквизитов справочника ФизическиеЛица
//
//			Контактная информация физического лица:
//
//			- АдресДляИнформирования - адрес в формате хранения в базе данных
//			- АдресДляИнформированияПредставление.
//
//			- АдресЗаПределамиРФ
//			- АдресЗаПределамиРФПредставление.
//
//			- АдресМестаПроживания
//			- АдресМестаПроживанияПредставление.
//
//			- АдресПоПрописке
//			- АдресПоПропискеПредставление.
//
//			- ТелефонДомашний
//			- ТелефонДомашнийПредставление.
//
//			- ТелефонРабочий
//			- ТелефонРабочийПредставление.
//
//			Информация о гражданстве
//			- Страна - СправочникСсылка.СтраныМира.
//
//			Информация о документе, удостоверяющем личность
//			- ДокументВид - СправочникСсылка.ВидыДокументовФизическихЛиц
//			- ДокументСерия - Строка
//			- ДокументНомер - Строка
//			- ДокументДатаВыдачи - Дата
//			- ДокументСрокДействия - Дата
//			- ДокументКемВыдан - Строка
//			- ДокументКодПодразделения - Строка
//			- ДокументПредставление - Строка.
//
//			Информация о фамилии, имени, отчестве
//			- Фамилия - Строка;
//			- Имя - Строка;
//			- Отчество - Строка;
//			- ФИОПолные - Строка, полные фамилия имя отчество;
//			- ФамилияИО - Строка, фамилия и инициалы;
//			- ИОФамилия - Строка, инициалы и фамилия.
//
//			Информация о сведениях об инвалидности
//			- Инвалидность - Булево
//			- ИнвалидностьДатаВыдачи - Дата
//			- ИнвалидностьСрокДействияСправки - Дата.
//
//			- СтатусНалогоплательщика - СправочникСсылка.СтатусыНалогоплательщиковПоНДФЛ.
//
//			- ВидЗастрахованногоЛица - ПеречислениеСсылка.ВидыЗастрахованныхЛицОбязательногоСтрахования.
//
// Возвращаемое значение:
//   ТаблицаЗначений   - Таблица значений, содержащая запрошенные данные.
//
Функция КадровыеДанныеФизическихЛиц(ТолькоРазрешенные, СписокФизическихЛиц, КадровыеДанные, ДатаПолученияДанных = '00010101', ПоляОтбораПериодическихДанных = Неопределено) Экспорт
	
	Если ТипЗнч(КадровыеДанные) = Тип("Строка") Тогда
		// Преобразуем параметр КадровыеДанные из строки в массив идентификаторов
		МассивНеобходимыхДанных = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(КадровыеДанные, " ",""), ",");
	Иначе
		МассивНеобходимыхДанных = КадровыеДанные;
	КонецЕсли; 
	
	// Подготовим Запрос и Менеджер временных таблиц
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Сформируем временную таблицу ВТКадровыеДанныеФизическихЛиц
	СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, СписокФизическихЛиц, КадровыеДанные, ДатаПолученияДанных, ПоляОтбораПериодическихДанных);
	
	// Выберем кадровые данные физлиц из временной таблицы
	Запрос.Текст = "ВЫБРАТЬ КадровыеДанныеФизическихЛиц.* ИЗ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизическихЛиц";
	КадровыеДанныеФизическихЛиц = Запрос.Выполнить().Выгрузить();
	
	Возврат КадровыеДанныеФизическихЛиц;
	
КонецФункции

// Возвращает путь к данным по имени данных приказа о приеме
// Параметры:
//		ИмяПоля - строка - имя поля.
// Возвращаемое значение:
//		Строка - путь к данным.
Функция ПутьКДаннымПоИмениДанныхПриказаОПриеме(Знач ИмяПоля) Экспорт
	
	Возврат КадровыйУчетВнутренний.ПутьКДаннымПоИмениДанныхПриказаОПриеме(ИмяПоля);
	
КонецФункции

// Возвращает сведения о необходимости сведений о приказе о приеме
// Параметры:
//		ИмяПоля - строка - имя поля.
// Возвращаемое значение:
//		Булево - необходимы сведения приказа о приеме.
Функция НеобходимыСведенияПриказаОПриеме(Знач ИмяПоля) Экспорт
	
	Возврат КадровыйУчетВнутренний.НеобходимыСведенияПриказаОПриеме(ИмяПоля);
	
КонецФункции

// Возвращает таблицу значений заполненную данными сотрудников, перечисленными в 
// параметре СписокНеобходимыхДанных.
//
// Параметры:
//  ТолькоРазрешенные - Булево - только разрешенные.
//  СписокСотрудников - СправочникСсылка.Сотрудники, массив - Массив ссылок на элементы 
//						  справочника сотрудники или СправочникСсылка.Сотрудники.
//  КадровыеДанные - 	Строка - список полей данных, перечисленных через запятую 
//						или Массив строк с полями данных,
//						которые необходимо получить. Ниже приведены идентификаторы 
//						получаемых данных и описание значения, которое будет возвращено в 
//						таблице значений
//						которые необходимо получить. Ниже приведены идентификаторы 
//						получаемых данных и описание значения, которое будет возвращено в 
//						таблице значений.
//
//  ДатаПолученияДанных	- Дата - дата на которую необходимо получить данные сотрудников, 
//						применимо к данным, носящим периодический характер
//						Если дату не указывать, будут получены самые последние данные.
//
//
//  ПоляОтбораПериодическихДанных - Структура - в качестве ключа указывается имя таблицы, содержащей
//									периодические данные (например ФИОФизическихЛиц, ГражданствоФизическихЛиц)
//									В качестве значений коллекция условий отбора, 
//									соединяемых по "И" и применяемых к регистру сведений
//									Коллекция строки которой имеют поля
//										ЛевоеЗначение - строка, имя поля регистра сведений
//										ВидСравнения - строка, вид сравнения, допустимый в языке запросов
//										ПравоеЗначение - значение для сравнения с полем ЛевоеЗначение.
//
//			Список полей, допустимых в параметре КадровыеДанные
//
//			Все имена полей, которые поддерживаются процедурой КадровыеДанныеФизическихЛиц, для
//			получения кадровых данных физического лица. Исключения составляют стандартные реквизиты
//			справочника ФизическиеЛица - Код и Наименование. Для их получения необходимо задать имена 
//			полей ФизическоеЛицоКод и ФизическоеЛицоНаименование, соответственно.
//
//			- Все имена реквизитов справочника Сотрудники
//			- ТабельныйНомер - строка
//			- Организация
//			- Подразделение
//			- Должность
//			- ТарифнаяСтавка - число
//			- ФОТ - число
//			- КоличествоСтавок - число
//			- ОсновноеРабочееМестоВОрганизации - булево
//			- РаботаетВСтуденческомОтряде - булево
//			- ЯвляетсяВоеннослужащим - булево
//			- ЯвляетсяПрокурором - булево
//			- ЯвляетсяФармацевтом - булево
//			- ЯвляетсяЧленомЛетногоЭкипажа - булево
//			- ЯвляетсяШахтером - булево
//			- ЯвляетсяРаботникомСДосрочнойПенсией - булево.
//
//			- ПриказОПриеме - ДокументСсылка.ПриемНаРаботу
//			- ПриказОПриемеДата - Дата
//			- ПриказОПриемеНомер - Строка.
//
//			- ПриказОбУвольнении - ДокументСсылка.Увольнение
//			- ПриказОбУвольненииДата - Дата
//			- ПриказОбУвольненииНомер - Строка
//			- ПриказОбУвольненииСтатьяТКРФ - СправочникСсылка.ОснованияУвольнения.
//
// Возвращаемое значение:
//   ТаблицаЗначений   - Таблица значений, содержащая запрошенные данные.
//
Функция КадровыеДанныеСотрудников(ТолькоРазрешенные, СписокСотрудников, КадровыеДанные, ДатаПолученияДанных = '00010101', ПоляОтбораПериодическихДанных = Неопределено) Экспорт
	
	Если ТипЗнч(КадровыеДанные) = Тип("Строка") Тогда
		// Преобразуем параметр КадровыеДанные из строки в массив идентификаторов
		МассивНеобходимыхДанных = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(КадровыеДанные, " ",""), ",");
	Иначе
		МассивНеобходимыхДанных = КадровыеДанные;
	КонецЕсли; 
	
	// Подготовим Запрос и Менеджер временных таблиц
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Сформируем временную таблицу ВТКадровыеДанныеФизическихЛиц
	СоздатьНаДатуВТКадровыеДанныеСотрудников(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, СписокСотрудников, МассивНеобходимыхДанных, ДатаПолученияДанных, ПоляОтбораПериодическихДанных);
	
	// Выберем кадровые данные физлиц из временной таблицы
	Запрос.Текст = "ВЫБРАТЬ КадровыеДанныеСотрудников.* ИЗ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников";
	КадровыеДанныеСотрудников = Запрос.Выполнить().Выгрузить();
	
	Возврат КадровыеДанныеСотрудников;
	
КонецФункции

// Формирует временную таблицу ВТКадровыеДанныеСотрудников, содержащую кадровые данные сотрудников,
// переданных ей в качестве параметра на указанную дату.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - в котором формируется временная таблица
//		ТолькоРазрешенные - Булево - только разрешенные
//		СписокСотрудников - СправочникСсылка.Сотрудники, Массив - Массив ссылок или ссылка на элемент справочника Сотрудники.
//		КадровыеДанные - Структура - см. описание к функции КадровыеДанныеСотрудников
//		ДатаПолученияДанных - Дата- Дата, на которую необходимо получить "периодические" данные
//		ПоляОтбораПериодическихДанных - Структура - см. описание к функции КадровыеДанныеСотрудников.
// 
Процедура СоздатьНаДатуВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, ТолькоРазрешенные, СписокСотрудников, КадровыеДанные, Знач ДатаПолученияДанных, ПоляОтбораПериодическихДанных = Неопределено) Экспорт
	
	// Проверим, если в качестве параметра СписокФизическихЛиц, передана ссылка, создадим массив.
	Если ТипЗнч(СписокСотрудников) = Тип("СправочникСсылка.Сотрудники") Тогда
		МассивСотрудников = Новый Массив;
		МассивСотрудников.Добавить(СписокСотрудников);
	Иначе
		МассивСотрудников = СписокСотрудников;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивСотрудников", МассивСотрудников);
	Запрос.УстановитьПараметр("ДатаПолученияДанных", ДатаПолученияДанных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	&ДатаПолученияДанных КАК Период,
	|	ДанныеСотрудников.Ссылка КАК Сотрудник
	|ПОМЕСТИТЬ ВТСписокСотрудников
	|ИЗ
	|	Справочник.Сотрудники КАК ДанныеСотрудников
	|ГДЕ
	|	ДанныеСотрудников.Ссылка В(&МассивСотрудников)";

	Если НЕ ТолькоРазрешенные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	КонецЕсли;	
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		МенеджерВременныхТаблиц,
		"ВТСписокСотрудников");
	СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, ТолькоРазрешенные, КадровыеДанные, ПоляОтбораПериодическихДанных);
	
	Запрос.Текст = "УНИЧТОЖИТЬ ВТСписокСотрудников";
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает структуру с параметрами для метода СоздатьВТКадровыеДанныеСотрудников
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер ВТ.
//		ИмяВременнойТаблицыОтборовСотрудников - Строка - имя временной таблицы - "фильтра"
//		ИменаПолейВременнойТаблицыОтборовСотрудников - Строка - строка с именами полей отбора
//							сотрудников ",". Строка должна содержать два имени поля, разделенные
//							запятой. Первое имя соответствует полю "Сотрудник", второе полю "Период".
//
// Возвращаемое значение:
//		Структура - с полями:
//			МенеджерВременныхТаблиц
//			ИмяВременнойТаблицыОтборовСотрудников - имя временной таблицы отборов сотрудников.
//			ПоляОтбораСотрудников - см. ПоляОтбораСотрудников.
//
Функция ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицыОтборовСотрудников, ИменаПолейВременнойТаблицыОтборовСотрудников = "Сотрудник,Период") Экспорт
	
	ОписательВременныхТаблиц = Новый Структура;
	
	ОписательВременныхТаблиц.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	ОписательВременныхТаблиц.Вставить("ИмяВременнойТаблицыОтборовСотрудников", ИмяВременнойТаблицыОтборовСотрудников);
	ОписательВременныхТаблиц.Вставить("ПоляОтбораСотрудников", ПоляОтбораСотрудников(ИменаПолейВременнойТаблицыОтборовСотрудников));
	ОписательВременныхТаблиц.Вставить("ИмяВТКадровыеДанныеСотрудников", "ВТКадровыеДанныеСотрудников");
	
	Возврат ОписательВременныхТаблиц;
	
КонецФункции

// Возвращает структуру описания полей отбора для методов получения кадровых данных сотрудников.
//
// Параметры:
//		ИменаПолейВременнойТаблицыОтборовСотрудников - Строка - строка с именами полей отбора
//							сотрудников ",". Строка должна содержать два имени поля, разделенные
//							запятой. Первое имя соответствует полю "Сотрудник", второе полю "Период".
//
// Возвращаемое значение:
//		Структура - содержащая имена полей отбора сотрудников.
//			 КлючиСтруктуры:
//			 	Сотрудник,
//				Период.
//
Функция ПоляОтбораСотрудников(ИменаПолейВременнойТаблицыОтборовСотрудников = "Сотрудник,Период") Экспорт
	
	МассивИменПолейОтбораСотрудников = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолейВременнойТаблицыОтборовСотрудников, ",");
	Возврат Новый Структура("Сотрудник,Период", МассивИменПолейОтбораСотрудников[0], МассивИменПолейОтбораСотрудников[1]);
	
КонецФункции

// Формирует временную таблицу ВТКадровыеДанныеСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//
// Параметры:
//		ОписательВременныхТаблиц - Структура - сформированная 
//				методом ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников
//		ТолькоРазрешенные - Булево - только разрешенные.
//		КадровыеДанные - Структура - см. описание к функции КадровыеДанныеСотрудников
//		ПоляОтбораПериодическихДанных -  Структура - см. описание к функции КадровыеДанныеСотрудников.
//
Процедура СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, ТолькоРазрешенные, КадровыеДанные, ПоляОтбораПериодическихДанных = Неопределено) Экспорт
	
	Если ТипЗнч(КадровыеДанные) = Тип("Строка") Тогда
		// Преобразуем параметр КадровыеДанные из строки в массив идентификаторов
		МассивНеобходимыхКадровыхДанных = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(КадровыеДанные, " ",""), ",");
	Иначе
		МассивНеобходимыхКадровыхДанных = КадровыеДанные;
	КонецЕсли;
	
	Запрос = ЗапросВТКадровыеДанныеСотрудников(
		ТолькоРазрешенные, 
		ОписательВременныхТаблиц.ИмяВТКадровыеДанныеСотрудников, 
		ОписательВременныхТаблиц.ИмяВременнойТаблицыОтборовСотрудников,
		ОписательВременныхТаблиц.ПоляОтбораСотрудников,
		МассивНеобходимыхКадровыхДанных, 
		ПоляОтбораПериодическихДанных);
	
	Запрос.МенеджерВременныхТаблиц = ОписательВременныхТаблиц.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Осуществляет запрос во временную таблицу кадровых данных о сотрудниках.
// Параметры:
//			ТолькоРазрешенные - Булево - только разрешенные.
//			ИмяВТКадровыеДанныеСотрудников - Строка - имя временной таблицы.
//			ИмяВременнойТаблицыОтборовСотрудников - Строка - имя временной таблицы.
//			ПоляОтбораСотрудников - Структура - структура отбора.
//			КадровыеДанные - Структура - см. описание к функции КадровыеДанныеСотрудников.
//			ПоляОтбораПериодическихДанных - Структура - см. описание к функции КадровыеДанныеСотрудников.
//
// Возвращаемое значение:
//		Запрос - подготовленный запрос.
//
Функция ЗапросВТКадровыеДанныеСотрудников(ТолькоРазрешенные, ИмяВТКадровыеДанныеСотрудников, ИмяВременнойТаблицыОтборовСотрудников, ПоляОтбораСотрудников, КадровыеДанные, ПоляОтбораПериодическихДанных) Экспорт
	
	Возврат КадровыйУчетВнутренний.ЗапросВТКадровыеДанныеСотрудников(ТолькоРазрешенные, ИмяВТКадровыеДанныеСотрудников, ИмяВременнойТаблицыОтборовСотрудников, ПоляОтбораСотрудников, КадровыеДанные, ПоляОтбораПериодическихДанных);
	
КонецФункции

// Возвращает структуру параметров для СоздатьВТСотрудникиОрганизаций.
//
// Возвращаемое значение:
//   Структура - Содержит ключи:
//				Организация - СправочникСсылка.Организации, если параметр опустить в таблицу войдут все сотрудник
//					независимо от организации
//				ОтбиратьПоГоловнойОрганизации - если Истина, то отбор по головной организации, иначе по текущей организации
//					По умолчанию - ЛОЖЬ
//				Подразделение - СправочникСсылка.ПодразделенияОрганизаций, в таблицу войдут сотрудники указанного подразделения
//					и всех подразделений, подчиненных указанному, если параметр опустить в таблицу войдут все сотрудники
//				СписокФизическихЛиц - Массив ссылок на элементы справочника ФизическиеЛица, если параметр опустить,
//					в таблицу войдут сотрудники всех физических лиц когда либо работавших в Организации
//				НачалоПериода - Дата, значение по умолчанию '00010101'. Если параметр устанавливается, параметр ОкончаниеПериода
//					обязателен к заполнению
//				ОкончаниеПериода - Дата, значение по умолчанию '00010101'. При установке должно выполняться условие
//					ОкончаниеПериода >= НачалоПериода. Используется для выборки кадровых данных сотрудников, если
//					параметр не указан, выборка будет производиться на текущую дату сеанса
//				КадровыеДанные - Строка, содержит список полей кадровых данных, см. описание к функции КадровыеДанныеСотрудников.
//
Функция ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц() Экспорт
	
	Возврат КадровыйУчетВнутренний.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	
КонецФункции

// Возвращает таблицу значений, заполненную сотрудниками
//
// Параметры:
//	ТолькоРазрешенные - Булево - только разрешенные.
//	Параметры - Структура - подготовленная с помощью методов 
//				ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц,
//				ПараметрыПолученияСотрудниковОрганизацийПоВременнойТаблице
//
// Возвращаемое значение:
//   ТаблицаЗначений - Таблица значений, содержащая поля Период
//						(Дата, соответствует указанному параметру ОкончаниеПериода),
//						 Сотрудник, соответствующее сотруднику ФизическоеЛицо, и кадровые данные, указанные в ключе КадровыеДанные
//						 параметра Параметры.
//
Функция СотрудникиОрганизации(ТолькоРазрешенные, Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, ТолькоРазрешенные, Параметры);
	
	Запрос.Текст = 
	"ВЫБРАТЬ СотрудникиОрганизации.* ИЗ ВТСотрудникиОрганизации КАК СотрудникиОрганизации";
	
	СотрудникиОрганизации = Запрос.Выполнить().Выгрузить();
	
	Возврат СотрудникиОрганизации;
	
КонецФункции

// Формирует временную таблицу ВТСотрудникиОрганизации, содержащую поля Сотрудник и ФизическоеЛицо
// Если заданы параметры НачалоПериода и ОкончаниеПериода метод вернет список сотрудников, работавших
// в заданном периоде. Если НачалоПериода и ОкончаниеПериода заданы и равны сформирует таблицу
// Сотрудников работавших на заданную дату.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер ВТ.
//		ТолькоРазрешенные - Булево - только разрешенные.
//		Параметры - Структура - подготовленная с помощью метода ПараметрыПолученияСотрудниковОрганизаций.
//
Процедура СоздатьВТСотрудникиОрганизации(МенеджерВременныхТаблиц, ТолькоРазрешенные, Параметры) Экспорт
	
	Запрос = ЗапросВТСотрудникиОрганизации(
		ТолькоРазрешенные, 
		"ВТСотрудникиОрганизации", 
		Параметры);
		
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Выполняет запрос к временной таблице сотрудников организаций
// Параметры:
//         ТолькоРазрешенные - Булево - только разрешенные.
//         ИмяВТСотрудникиОрганизации - Строка - имя временной таблицы.
//         Параметры - структура - структура параметров.
// Возвращаемое значение:
//		Запрос - подготовленный запрос.
Функция ЗапросВТСотрудникиОрганизации(ТолькоРазрешенные, ИмяВТСотрудникиОрганизации, Параметры) Экспорт
	
	Возврат КадровыйУчетВнутренний.ЗапросВТСотрудникиОрганизации(ТолькоРазрешенные, ИмяВТСотрудникиОрганизации, Параметры);
	
КонецФункции

// Возвращает истину или ложь в зависимости от того, необходимы ли текущие данные сотрудника.
// Параметры:
//   		ИмяПоля - строка - имя поля.
// Возвращаемое значение:
//  Булево - см. описание выше.
Функция НеобходимыТекущиеДанныеСотрудника(Знач ИмяПоля) Экспорт
	
	Возврат КадровыйУчетВнутренний.НеобходимыТекущиеДанныеСотрудника(ИмяПоля);
	
КонецФункции

// Возвращает путь к данным по имени запрашиваемых текущих данных сотрудника.
// Параметры:
//         ИмяПоля - строка - имя поля.
// Возвращаемое значение:
// 	Строка - путь к данным.
Функция ПутьКДаннымПоИмениЗапрашиваемыхТекущихДанныхСотрудника(Знач ИмяПоля) Экспорт
	
	Возврат КадровыйУчетВнутренний.ПутьКДаннымПоИмениЗапрашиваемыхТекущихДанныхСотрудника(ИмяПоля);
	
КонецФункции

// Возвращает пусть к данным по имени запрашиваемй текущей тарифной ставки сотрудника.
// Параметры:
//         ИмяПоля - строка - имя поля.
// Возвращаемое значение:
// 	Строка - путь к данным.
Функция ПутьКДаннымПоИмениЗапрашиваемойТекущейТарифнойСтавкиСотрудника(Знач ИмяПоля) Экспорт
	
	Возврат КадровыйУчетВнутренний.ПутьКДаннымПоИмениЗапрашиваемойТекущейТарифнойСтавкиСотрудника(ИмяПоля);
	
КонецФункции

// Возвращает путь к данным по именам запрашиваемых данных должности
// Возвращаемое значение:
// 	Строка - путь к данным.
Функция ПутиКДаннымПоИменамЗапрашиваемыхДанныхДолжности() Экспорт
	
	Возврат КадровыйУчетВнутренний.ПутиКДаннымПоИменамЗапрашиваемыхДанныхДолжности();
	
КонецФункции

// Формирует временную таблицу ВТКадровыеДанныеФизическихЛиц, содержащую кадровые данные физических лиц,
// переданных ей в качестве параметра на указанную дату.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - в котором формируется временная таблица
//		ТолькоРазрешенные - Булево - только разрешенные.
//		СписокФизическихЛиц - СправочникСсылка.ФизическиеЛица, Массив - Массив ссылок или 
//															ссылка на элемент справочника ФизическиеЛица.
//		КадровыеДанные - Структура - см. описание к функции КадровыеДанныеФизическихЛиц.
//		ДатаПолученияДанных - Дата - Дата, на которую необходимо получить "периодические" данные
//		ПоляОтбораПериодическихДанных -  Структура - см. описание к функции КадровыеДанныеФизическихЛиц.
// 
Процедура СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(МенеджерВременныхТаблиц, ТолькоРазрешенные, СписокФизическихЛиц, КадровыеДанные, Знач ДатаПолученияДанных, ПоляОтбораПериодическихДанных = Неопределено) Экспорт
	
	// Проверим Передана ли нам дата на которую необходимо получать периодические данные.
	Если ДатаПолученияДанных = '00010101000000' Тогда
		ДатаПолученияДанных = ТекущаяДатаСеанса();
	КонецЕсли;
	
	// Проверим, если в качестве параметра СписокФизическихЛиц, передана ссылка, создадим массив.
	Если ТипЗнч(СписокФизическихЛиц) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		МассивФизическихЛиц = Новый Массив;
		МассивФизическихЛиц.Добавить(СписокФизическихЛиц);
	Иначе
		МассивФизическихЛиц = СписокФизическихЛиц;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивФизическихЛиц", МассивФизическихЛиц);
	Запрос.УстановитьПараметр("ДатаПолученияДанных", ДатаПолученияДанных);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	&ДатаПолученияДанных КАК Период,
	|	ФизическиеЛица.Ссылка КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТСписокФизическихЛиц
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В(&МассивФизическихЛиц)";
	
	Если НЕ ТолькоРазрешенные Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	КонецЕсли;	
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		МенеджерВременныхТаблиц,
		"ВТСписокФизическихЛиц");
	СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, ТолькоРазрешенные, КадровыеДанные, ПоляОтбораПериодическихДанных);
	
	Запрос.Текст = "УНИЧТОЖИТЬ ВТСписокФизическихЛиц";
	Запрос.Выполнить();
	
КонецПроцедуры

// Возвращает структуру описания полей отбора для методов получения кадровых данных физических лиц.
//
// Параметры:
//		ИменаПолейВременнойТаблицыОтборовФизическихЛиц - Строка - строка с именами полей отбора
//							физических лиц ",". Строка должна содержать два имени поля, разделенные
//							запятой. Первое имя соответствует полю "ФизическоеЛицо", второе полю "Период".
//
// Возвращаемое значение:
//		Структура - содержащая имена полей отбора сотрудников.
//			 КлючиСтруктуры:
//			 	ФизическоеЛицо,
//				Период.
//
Функция ПоляОтбораФизическихЛиц(ИменаПолейВременнойТаблицыОтборовФизическихЛиц = "ФизическоеЛицо,Период") Экспорт
	
	МассивИменПолейОтбораФизическихЛиц = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолейВременнойТаблицыОтборовФизическихЛиц, ",");
	Возврат Новый Структура("ФизическоеЛицо,Период", МассивИменПолейОтбораФизическихЛиц[0], МассивИменПолейОтбораФизическихЛиц[1]);
	
КонецФункции

// Возвращает структуру с параметрами для метода СоздатьВТКадровыеДанныеФизическихЛиц.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер ВТ.
//		ИмяВременнойТаблицыОтборовФизическихЛиц - Строка - имя временной таблицы - "фильтра"
//		ИменаПолейВременнойТаблицыОтборовФизическихЛиц - Строка - строка с именами полей отбора
//							физических лиц ",". Строка должна содержать два имени поля, разделенные
//							запятой. Первое имя соответствует полю "ФизическоеЛицо", второе полю "Период".
//
// Возвращаемое значение:
//		Структура - с полями:
//			МенеджерВременныхТаблиц
//			ИмяВременнойТаблицыОтборовФизическихЛиц - имя временной таблицы отборов физических лиц.
//			ИмяВТКадровыеДанныеФизическихЛиц - имя создаваемой временной таблицы
//			ПоляОтбораФизическихЛиц - см. ПоляОтбораФизическихЛиц.
//
Функция ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(МенеджерВременныхТаблиц, ИмяВременнойТаблицыОтборовФизическихЛиц, ИменаПолейВременнойТаблицыОтборовФизическихЛиц = "ФизическоеЛицо,Период") Экспорт
	
	ОписательВременныхТаблиц = Новый Структура;
	
	ОписательВременныхТаблиц.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	ОписательВременныхТаблиц.Вставить("ИмяВременнойТаблицыОтборовФизическихЛиц", ИмяВременнойТаблицыОтборовФизическихЛиц);
	ОписательВременныхТаблиц.Вставить("ИмяВТКадровыеДанныеФизическихЛиц", "ВТКадровыеДанныеФизическихЛиц");
	ОписательВременныхТаблиц.Вставить("ПоляОтбораФизическихЛиц", ПоляОтбораФизическихЛиц(ИменаПолейВременнойТаблицыОтборовФизическихЛиц));
	
	Возврат ОписательВременныхТаблиц;
	
КонецФункции

// Формирует временную таблицу ВТКадровыеДанныеФизическихЛиц, список физических лиц и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки ФизическоеЛицо и Период.
//
// Параметры:
//		ОписательВременныхТаблиц - Структура - сформированная 
//				методом ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц
//		ТолькоРазрешенные - Булево - только разрешенные.
//		КадровыеДанные - Структура - см. описание к функции КадровыеДанныеФизическихЛиц
//		ПоляОтбораПериодическихДанных -  Структура - см. описание к функции КадровыеДанныеФизическихЛиц.
//
Процедура СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, ТолькоРазрешенные, КадровыеДанные, ПоляОтбораПериодическихДанных = Неопределено) Экспорт
	
	Если ТипЗнч(КадровыеДанные) = Тип("Строка") Тогда
		// Преобразуем параметр КадровыеДанные из строки в массив идентификаторов
		МассивНеобходимыхКадровыхДанных = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрЗаменить(КадровыеДанные, " ",""), ",");
	Иначе
		МассивНеобходимыхКадровыхДанных = КадровыеДанные;
	КонецЕсли; 
	
	Запрос = ЗапросВТКадровыеДанныеФизическихЛиц(
		ТолькоРазрешенные,
		ОписательВременныхТаблиц.ИмяВТКадровыеДанныеФизическихЛиц,
		ОписательВременныхТаблиц.ИмяВременнойТаблицыОтборовФизическихЛиц,
		ОписательВременныхТаблиц.ПоляОтбораФизическихЛиц,
		МассивНеобходимыхКадровыхДанных,
		ПоляОтбораПериодическихДанных);
		
	Запрос.МенеджерВременныхТаблиц = ОписательВременныхТаблиц.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Функция формирует временную таблицу с кадровыми данными. 
// Параметры:
//		ТолькоРазрешенные - Булево - только разрешенные.
//		ИмяВТКадровыеДанныеФизическихЛиц - Строка - имя временной таблицы.
//		ИмяВременнойТаблицыОтборовФизическихЛиц - Строка - имя временной таблицы.
//		КадровыеДанные - Структура - см. описание к функции КадровыеДанныеФизическихЛиц 
//		ПоляОтбораФизическихЛиц - Структура - поля отбора.
//		ПоляОтбораПериодическихДанных -  Структура - см. описание к функции КадровыеДанныеФизическихЛиц.
//
// Возвращаемое значение:
//		Запрос - подготовленный запрос.
//
Функция ЗапросВТКадровыеДанныеФизическихЛиц(ТолькоРазрешенные, ИмяВТКадровыеДанныеФизическихЛиц, ИмяВременнойТаблицыОтборовФизическихЛиц, ПоляОтбораФизическихЛиц, КадровыеДанные, ПоляОтбораПериодическихДанных) Экспорт
	
	Возврат КадровыйУчетВнутренний.ЗапросВТКадровыеДанныеФизическихЛиц(ТолькоРазрешенные, ИмяВТКадровыеДанныеФизическихЛиц, ИмяВременнойТаблицыОтборовФизическихЛиц, ПоляОтбораФизическихЛиц, КадровыеДанные, ПоляОтбораПериодическихДанных);
	
КонецФункции

// Процедура процеряет соответствие сотрудников организаций 
// Параметры:
//         Организация - СправочникСсылка.Организации - организация.
//         Сотрудник - СправочникСсылка.Сотрудники - сотрудник.
//         Отказ - Булево - отказ.
Процедура ПроверитьСоответствиеСотрудниковОрганизации(Организация, Сотрудник, Отказ) Экспорт
	
	ГоловнаяОрганизация = Организация;
	
	ГоловнаяОрганизацияСотрудника = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сотрудник, "ГоловнаяОрганизация");
	
	Если ГоловнаяОрганизацияСотрудника <> ГоловнаяОрганизация Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Сотрудник %1 не соответствует организации %2.'"),
			Сотрудник,
			Организация);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,
			"Объект.Сотрудник",
			,
			Отказ);
		
	КонецЕсли; 
	
КонецПроцедуры

// Заполняет кадровые движения документа
//		КадроваяИсторияСотрудников
//		ЗанятыеПозицииШтатногоРасписания
//
// Параметры:
//		РегистраторОбъект - ДокументОбъект - регистратор.
//		Движения - Движения - коллекция движений, в которой необходимо заполнить кадровые движения
//		КадровыеДвижения - ТаблицаЗначений - таблица значений с полями:
//			ДатаСобытия
//			ВидСобытия - Перечисление.ВидыКадровыхСобытий
//			Сотрудник
//			ГоловнаяОрганизация
//			Организация
//			Подразделение
//			Должность
//			ВидЗанятости
// 		
Процедура СформироватьКадровыеДвижения(РегистраторОбъект, Движения, КадровыеДвижения) Экспорт
	
	КадровыйУчетВнутренний.СформироватьКадровыеДвижения(РегистраторОбъект, Движения, КадровыеДвижения);
	
КонецПроцедуры

// Обновляет виды контактной информации для Физ Лица
Процедура ОбновитьВидыКонтактнойИнформацииФизическогоЛица() Экспорт
	
	КадровыйУчетВнутренний.ОбновитьВидыКонтактнойИнформацииФизическогоЛица();
	
КонецПроцедуры

// Возвращает временную таблицу тарифных ставок сотрудников.
// Параметры:
//         ТолькоРазрешенные - Булево - только разрешенные.
//         ИмяВТТарифныеСтавкиСотрудников - Строка - имя ВТ.
//         ИмяВременнойТаблицыОтборовСотрудников - Строка - имя ВТ.
//         ПоляОтбораСотрудников  - Структура - структура отбора.
//         ПоляОтбораПериодическихДанных - Структура - см. описание к функции КадровыеДанныеФизическихЛиц.
//
// Возвращаемое значение:
//		Запрос - подготовленный запрос.
//
Функция ЗапросВТТарифныеСтавкиСотрудников(ТолькоРазрешенные, ИмяВТТарифныеСтавкиСотрудников, ИмяВременнойТаблицыОтборовСотрудников, ПоляОтбораСотрудников, ПоляОтбораПериодическихДанных) Экспорт
	
	Возврат КадровыйУчетВнутренний.ЗапросВТТарифныеСтавкиСотрудников(ТолькоРазрешенные, ИмяВТТарифныеСтавкиСотрудников, ИмяВременнойТаблицыОтборовСотрудников, ПоляОтбораСотрудников, ПоляОтбораПериодическихДанных);
	
КонецФункции
#КонецОбласти