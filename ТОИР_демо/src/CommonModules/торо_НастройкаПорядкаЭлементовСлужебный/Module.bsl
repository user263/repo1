////////////////////////////////////////////////////////////////////////////////
// торо_НастройкаПорядкаЭлементовСлужебный: методы, для работы с порядком элементов.
//
////////////////////////////////////////////////////////////////////////////////
#Область ПрограммныйИнтерфейс

// Выполняет перемещение элемента вверх или вниз по списку.
//
// Параметры:
//		СсылкаНаОбъект      - Ссылка - ссылка на перемещаемый элемент.
//		РеквизитДопУпорядочивания - Число - текущее значение реквизита.
//		Направление         - Строка - направление перемещения элемента: "Вверх" или "Вниз" по списку.
//		СтруктураИерархии - СправочникСсылка.торо_СтруктурыОР - структура иерархии.
//		СтруктураСдвига - Структура - структура с параметрами сдвига.
//
// Возвращаемое значение:
//		Строка - описание ошибки.
Функция ИзменитьПорядокЭлементов(СсылкаНаОбъект, РеквизитДопУпорядочивания, Направление, СтруктураИерархии, СтруктураСдвига) Экспорт
	
	Результат = "";
	Если ПустаяСтрока(Результат) Тогда
		ПередвинутьЭлемент(СсылкаНаОбъект, Направление, СтруктураИерархии, РеквизитДопУпорядочивания, СтруктураСдвига);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает структуру с информацией о метаданных объекта.
// 
// Параметры:
//		Ссылка - СправочникСсылка - ссылка на объект.
//		СтруктураИерархии - СправочникСсылка.торо_СтруктурыОР - структура иерархии.
//
// Возвращаемое значение:
//		Структура - информация из метаданных объекта.
Функция ПолучитьИнформациюДляПеремещения(Ссылка, СтруктураИерархии) Экспорт
	
	Информация = Новый Структура;
	
	Запрос = Новый Запрос;
	Если СтруктураИерархии.СтроитсяАвтоматически Тогда
		Информация.Вставить("Родитель", Ссылка[СтруктураИерархии.РеквизитОР]);
		Информация.Вставить("ПолноеИмя", "Справочник." + СтруктураИерархии.ТипРеквизитаОР)
	Иначе
		Если СтруктураИерархии.ИзменяетсяДокументами Тогда
			
			Информация.Вставить("ПолноеИмя", "РегистрСведений.торо_РасположениеОРВСтруктуреИерархии.СрезПоследних");
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	торо_РасположениеОРВСтруктуреИерархииСрезПоследних.ОбъектИерархии,
			|	торо_РасположениеОРВСтруктуреИерархииСрезПоследних.РодительИерархии
			|ИЗ
			|	РегистрСведений.торо_РасположениеОРВСтруктуреИерархии.СрезПоследних(, СтруктураИерархии = &СтруктураИерархии) КАК торо_РасположениеОРВСтруктуреИерархииСрезПоследних
			|ГДЕ
			|	торо_РасположениеОРВСтруктуреИерархииСрезПоследних.ОбъектИерархии = &Ссылка";
			
		Иначе
			
			Информация.Вставить("ПолноеИмя", "РегистрСведений.торо_ИерархическиеСтруктурыОР");
			
			Запрос.Текст =   "ВЫБРАТЬ
			|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии,
			|	торо_ИерархическиеСтруктурыОР.РодительИерархии
			|ИЗ
			|	РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
			|ГДЕ
			|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии = &Ссылка
			|	И торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &СтруктураИерархии" ;
		КонецЕсли;	
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("СтруктураИерархии", СтруктураИерархии);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			Информация.Вставить("Родитель", Выборка.РодительИерархии);
		Иначе
			Информация.Вставить("Родитель", Справочники.торо_ОбъектыРемонта.ПустаяСсылка());
		КонецЕсли;
	КонецЕсли;
	
	Возврат Информация;
	
КонецФункции

// Возвращает значение реквизита доп. упорядочивания для нового объекта.
//
// Параметры:
//		Информация - Структура - информация о метаданных объекта;
//		Родитель   - Ссылка    - ссылка на родителя объекта;
//		СтруктураИерархии - СправочникСсылка.торо_СтруктурыОР - структура иерархии.
//
// Возвращаемое значение:
//		Число - значение реквизита доп. упорядочивания.
Функция ПолучитьНовоеЗначениеРеквизитаДопУпорядочивания(Информация, Родитель, СтруктураИерархии) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таблица.РеквизитДопУпорядочиванияОР КАК РеквизитДопУпорядочивания
	|ИЗ
	|	&Таблица КАК Таблица
	|ГДЕ
	|	Таблица.СтруктураИерархии = &СтруктураИерархии
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеквизитДопУпорядочивания УБЫВ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Таблица", "РегистрСведений.торо_ПорядокОРПоИерархии");
	ЗАпрос.УстановитьПараметр("СтруктураИерархии", СтруктураИерархии);
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат ?(Не ЗначениеЗаполнено(Выборка.РеквизитДопУпорядочивания), 1, Выборка.РеквизитДопУпорядочивания + 1);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Меняет местами выбранный элемент списка с соседним отображаемым элементом.
//
Процедура ПередвинутьЭлемент(СсылкаНаОбъект, Знач Направление, СтруктураИерархииСсылка, РеквизитДопУпорядочивания, СтруктураСдвига)
	
	СтруктураИерархии = Новый Структура;
	СтруктураИерархии.Вставить("ИзменяетсяДокументами");
	СтруктураИерархии.Вставить("СтроитсяАвтоматически");
	СтруктураИерархии.Вставить("ТипРеквизитаОР");
	СтруктураИерархии.Вставить("РеквизитОР");
	

	СтруктураИерархии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтруктураИерархииСсылка,СтруктураИерархии);

	Если СтруктураИерархии.ИзменяетсяДокументами Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	торо_РасположениеОРВСтруктуреИерархииСрезПоследних.ОбъектИерархии КАК ОбъектИерархии,
		|	торо_РасположениеОРВСтруктуреИерархииСрезПоследних.СтруктураИерархии КАК СтруктураИерархии,
		|	торо_РасположениеОРВСтруктуреИерархииСрезПоследних.РодительИерархии КАК РодительИерархии
		|ПОМЕСТИТЬ ТаблицаИерархии
		|ИЗ
		|	РегистрСведений.торо_РасположениеОРВСтруктуреИерархии.СрезПоследних(, СтруктураИерархии = &СтруктураИерархии) КАК торо_РасположениеОРВСтруктуреИерархииСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	торо_ПорядокОРПоИерархии.ОбъектРемонта КАК ОбъектРемонта,
		|	торо_ПорядокОРПоИерархии.СтруктураИерархии КАК СтруктураИерархии,
		|	торо_ПорядокОРПоИерархии.РеквизитДопУпорядочиванияОР КАК РеквизитДопУпорядочиванияОР
		|ИЗ
		|	ТаблицаИерархии КАК торо_ИерархическиеСтруктурыОР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаИерархии КАК торо_ИерархическиеСтруктурыОР1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПорядокОРПоИерархии КАК торо_ПорядокОРПоИерархии
		|			ПО торо_ИерархическиеСтруктурыОР1.ОбъектИерархии = торо_ПорядокОРПоИерархии.ОбъектРемонта
		|				И торо_ИерархическиеСтруктурыОР1.СтруктураИерархии = торо_ПорядокОРПоИерархии.СтруктураИерархии
		|		ПО торо_ИерархическиеСтруктурыОР.СтруктураИерархии = торо_ИерархическиеСтруктурыОР1.СтруктураИерархии
		|			И торо_ИерархическиеСтруктурыОР.РодительИерархии = торо_ИерархическиеСтруктурыОР1.РодительИерархии
		|ГДЕ
		|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии = &СсылкаНаОбъект
		|	И торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &СтруктураИерархии
		|	И торо_ПорядокОРПоИерархии.РеквизитДопУпорядочиванияОР > &РеквизитДопУпорядочивания
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеквизитДопУпорядочиванияОР";
		
	ИначеЕсли СтруктураИерархии.СтроитсяАвтоматически Тогда
		
		ОбъектМетаданных = Метаданные.Справочники.Найти(СтруктураИерархии.ТипРеквизитаОР);
		
		Если Не ОбъектМетаданных = Неопределено Тогда
			Иерархический = ОбъектМетаданных.Иерархический;
		Иначе
			Иерархический = Неопределено;
		КонецЕсли; 


		ТекстЗапроса = "ВЫБРАТЬ
		|	СправочникДляПостроения.Ссылка КАК ОбъектИерархии,
		|	" + ?(Иерархический, "СправочникДляПостроения.Родитель", "Значение(Справочник." + СтруктураИерархии.ТипРеквизитаОР + ".ПустаяСсылка)") + " КАК РодительИерархии,
		|	&СтруктураИерархии КАК СтруктураИерархии
		|ПОМЕСТИТЬ торо_ИерархическиеСтруктурыОР
		|ИЗ
		|	Справочник." + СтруктураИерархии.ТипРеквизитаОР + " КАК СправочникДляПостроения
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	торо_ОбъектыРемонта.Ссылка,
		|	торо_ОбъектыРемонта." + СтруктураИерархии.РеквизитОР + ",
		|	&СтруктураИерархии КАК СтруктураИерархии
		|ИЗ
		|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	торо_ПорядокОРПоИерархии.ОбъектРемонта,
		|	торо_ПорядокОРПоИерархии.СтруктураИерархии,
		|	торо_ПорядокОРПоИерархии.РеквизитДопУпорядочиванияОР КАК РеквизитДопУпорядочиванияОР
		|ИЗ
		|	торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПорядокОРПоИерархии КАК торо_ПорядокОРПоИерархии
		|			ПО торо_ИерархическиеСтруктурыОР1.ОбъектИерархии = торо_ПорядокОРПоИерархии.ОбъектРемонта
		|				И торо_ИерархическиеСтруктурыОР1.СтруктураИерархии = торо_ПорядокОРПоИерархии.СтруктураИерархии
		|		ПО торо_ИерархическиеСтруктурыОР.СтруктураИерархии = торо_ИерархическиеСтруктурыОР1.СтруктураИерархии
		|			И торо_ИерархическиеСтруктурыОР.РодительИерархии = торо_ИерархическиеСтруктурыОР1.РодительИерархии
		|ГДЕ
		|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии = &СсылкаНаОбъект
		|	И торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &СтруктураИерархии
		|	И торо_ПорядокОРПоИерархии.РеквизитДопУпорядочиванияОР > &РеквизитДопУпорядочивания
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеквизитДопУпорядочиванияОР"

	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	торо_ПорядокОРПоИерархии.ОбъектРемонта,
		|	торо_ПорядокОРПоИерархии.СтруктураИерархии,
		|	торо_ПорядокОРПоИерархии.РеквизитДопУпорядочиванияОР КАК РеквизитДопУпорядочиванияОР
		|ИЗ
		|	РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР1
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПорядокОРПоИерархии КАК торо_ПорядокОРПоИерархии
		|			ПО торо_ИерархическиеСтруктурыОР1.ОбъектИерархии = торо_ПорядокОРПоИерархии.ОбъектРемонта
		|				И торо_ИерархическиеСтруктурыОР1.СтруктураИерархии = торо_ПорядокОРПоИерархии.СтруктураИерархии
		|		ПО торо_ИерархическиеСтруктурыОР.СтруктураИерархии = торо_ИерархическиеСтруктурыОР1.СтруктураИерархии
		|			И торо_ИерархическиеСтруктурыОР.РодительИерархии = торо_ИерархическиеСтруктурыОР1.РодительИерархии
		|ГДЕ
		|	торо_ИерархическиеСтруктурыОР.ОбъектИерархии = &СсылкаНаОбъект
		|	И торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &СтруктураИерархии
		|	И торо_ПорядокОРПоИерархии.РеквизитДопУпорядочиванияОР > &РеквизитДопУпорядочивания
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеквизитДопУпорядочиванияОР";
	КонецЕсли;	
	
	СтруктураСдвига.ВеличинаСдвига = 1;
	
	Если Направление = "Вверх" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ">", "<");
		ТекстЗапроса = ТекстЗапроса + " УБЫВ";
		СтруктураСдвига.ВеличинаСдвига = -1;
	КонецЕсли;
	
	ПостроительЗапроса = Новый ПостроительЗапроса(ТекстЗапроса);
	ПостроительЗапроса.ЗаполнитьНастройки();
	
	ПостроительЗапроса.Параметры.Вставить("РеквизитДопУпорядочивания", РеквизитДопУпорядочивания);
	ПостроительЗапроса.Параметры.Вставить("СтруктураИерархии", СтруктураИерархииСсылка);
	ПостроительЗапроса.Параметры.Вставить("СсылкаНаОбъект", СсылкаНаОбъект);
	
	ПостроительЗапроса.Выполнить();
	
	Выборка = ПостроительЗапроса.Результат.Выбрать();
	Если Выборка.Количество() <> 1 Тогда
		СтруктураСдвига.ВеличинаСдвига = 0;
		Возврат;
	КонецЕсли;
	
	Выборка.Следующий();
	
	НачатьТранзакцию();

	Попытка
		
		ПеремещаемыйЭлемент = РеквизитДопУпорядочивания;
		СоседнийЭлемент = Выборка.РеквизитДопУпорядочиванияОР;
		
		СтруктураСдвига.РеквизитДопУпорядочивания = СоседнийЭлемент;
		
		НаборЗаписей = РегистрыСведений.торо_ПорядокОРПоИерархии.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектРемонта.Установить(СсылкаНаОбъект);
		НаборЗаписей.Отбор.СтруктураИерархии.Установить(СтруктураИерархииСсылка);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		
		НС = НаборЗаписей.Добавить();
		НС.ОбъектРемонта = СсылкаНаОбъект;
		НС.СтруктураИерархии = СтруктураИерархииСсылка;
		НС.РеквизитДопУпорядочиванияОР = СоседнийЭлемент;
		НаборЗаписей.Записать();
		
		НаборЗаписей = РегистрыСведений.торо_ПорядокОРПоИерархии.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОбъектРемонта.Установить(Выборка.ОбъектРемонта);
		НаборЗаписей.Отбор.СтруктураИерархии.Установить(СтруктураИерархииСсылка);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		
		НС = НаборЗаписей.Добавить();
		НС.ОбъектРемонта = Выборка.ОбъектРемонта;
		НС.СтруктураИерархии = СтруктураИерархииСсылка;
		НС.РеквизитДопУпорядочиванияОР = ПеремещаемыйЭлемент;
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		СтруктураСдвига.ВеличинаСдвига = 0;
		СтруктураСдвига.РеквизитДопУпорядочивания = Неопределено;
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти


