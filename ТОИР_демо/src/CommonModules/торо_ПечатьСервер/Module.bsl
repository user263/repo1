
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьСтруктуруДанныхРемонтовОборудования(СсылкаНаДок, ИмяТЧ) Экспорт
	
	РемонтыОборудования = Новый Массив;
	
	Для каждого Стр Из СсылкаНаДок[ИмяТЧ] Цикл
		СтруктураТЧ = Новый Структура("ID, ОбъектРемонта, ВидРемонтныхРабот, ДатаНачала, ДатаОкончания, ДокументИсточник");
		ЗаполнитьЗначенияСвойств(СтруктураТЧ, Стр);
		РемонтыОборудования.Добавить(СтруктураТЧ);
	КонецЦикла;
	
	Возврат РемонтыОборудования;
	
КонецФункции

Функция ПолучитьСтруктуруДанныхРегламентныхМероприятий(СсылкаНаДок, ИмяТЧ) Экспорт
	
	мас = Новый Массив;
	Для каждого Стр Из СсылкаНаДок[ИмяТЧ] Цикл
		СтруктураТЧ = Новый Структура("ID, ОбъектРемонта, ВидРемонтныхРабот, ДатаНачала, ДатаОкончания");
		ЗаполнитьЗначенияСвойств(СтруктураТЧ, Стр);
		мас.Добавить(СтруктураТЧ);
	КонецЦикла;
	
	Возврат мас;
	
КонецФункции

Функция ПолучитьСтруктуруДанныхРемонтовОборудованияДляСпискаДокументов(Документ, ИмяТЧ) Экспорт
	
	РемонтыОборудования = Документ[ИмяТЧ].ВыгрузитьКолонку("ID");
	
	Возврат РемонтыОборудования;
	
КонецФункции

Функция ПолучитьСтруктуруДанныхРегламентныхМероприятийДляСпискаДокументов(Документ, ИмяТЧ) Экспорт
	мас = Документ[ИмяТЧ].ВыгрузитьКолонку("ID");
	Возврат мас;
КонецФункции

Функция ПолучитьСписокПодрядчиков(Акт) Экспорт
		
	ПолнаяТаблицаПодрядчиков = Акт.ПодрядчикиРемонтныхРабот.Выгрузить();
	ПолнаяТаблицаПодрядчиков.Свернуть("Контрагент");
	МассивПодрядчиков=ПолнаяТаблицаПодрядчиков.ВыгрузитьКолонку("Контрагент");
	Возврат МассивПодрядчиков; 	
	
КонецФункции

Функция ПолучитьКоличествоПодрядчиков(Акт) Экспорт
	
	Возврат Акт.ПодрядчикиРемонтныхРабот.Количество();
	
КонецФункции

Функция СтруктураПараметровППР(Документ) Экспорт
	
	Если ЗначениеЗаполнено(Документ.ПериодичностьДетализации) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&ДатаНачала, " + Строка(Документ.ПериодичностьДетализации) + ", "+?(Документ.КоличествоПериодов=0,1,Документ.КоличествоПериодов)+") КАК ДатаОкончания";
		
		Запрос.УстановитьПараметр("ДатаНачала", Документ.ДатаПланирования);
		
		Попытка
			Выборка = Запрос.Выполнить().Выбрать();
		Исключение
			Возврат Дата(3999,12,31,23,59,59);
		КонецПопытки;
		
		Если Выборка.Следующий() Тогда
			
			ДатаОкончанияПланирования = ?(Документ.ПериодичностьДетализации = Перечисления.Периодичность.День, Выборка.ДатаОкончания-1, НачалоДня(Выборка.ДатаОкончания)-1);
			
		КонецЕсли;
		
	Иначе 	
		
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбран период планирования!'"), СтатусСообщения.Важное);
		
	КонецЕсли;
	ОтборПечатнойФормы = Новый Структура;
	ОтборПечатнойФормы.Вставить("Имя", "Список объектов регламентного мероприятия");
	ОтборПечатнойФормы.Вставить("Значение");
	ОтборПечатнойФормы.Вставить("Использование", Ложь);
	ОтборПечатнойФормы.Вставить("ВидСравнения");
	
	МассивОтборПечатнойФормы = Новый Массив;
	МассивОтборПечатнойФормы.Добавить(ОтборПечатнойФормы);
	МассивОтборПечатнойФормы.Добавить(ОтборПечатнойФормы);
	
	ПередаваемыйПараметр = Новый Структура;
	ПередаваемыйПараметр.Вставить("ДатаНачала",Документ.ДатаПланирования);
	ПередаваемыйПараметр.Вставить("ДатаКонца",ДатаОкончанияПланирования);	
	ПередаваемыйПараметр.Вставить("ИнтервалРазбиения","Месяц");
	ПередаваемыйПараметр.Вставить("ОтборФормы", МассивОтборПечатнойФормы);
	
	Возврат ПередаваемыйПараметр;
	
КонецФункции

#КонецОбласти
