////////////////////////////////////////////////////////////////////////////////
// торо_РаботаССогласованиямиКлиентСервер: клиент-серверные методы, для работы со статусами документов.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Добавляет запись в таблицу ИсторияСтатусов документа.
// Параметры:
//		Форма - УправляемаяФорма - форма документа.
//		СтатусДокумента - СправочникСсылка.торо_СтатусыСогласованияДокументовРемонтныхРабот - устанавливаемый статус.
//		ЗаКого - СправочникСсылка.Пользователи - за кого, устанавливается статус.
//		Очистить - Булево - очистить историю перед добавлением записи.
//		Комментарий - Строка - Комментарий к статусу.	
//
Процедура ДобавитьСтрокуВИсториюСтатусов(Форма, СтатусДокумента, ЗаКого = Неопределено, Очистить = Ложь, Комментарий = "") Экспорт
	
	Объект = Форма.Объект;
	
	Если Очистить Тогда
		Форма.ИсторияСтатусовРегистр.Очистить();
	КонецЕсли;
	НоваяЗаписьИС = Форма.ИсторияСтатусовРегистр.Добавить();
	НоваяЗаписьИС.Период            = ТекущаяДата();
	НоваяЗаписьИС.Документ			= Объект.Ссылка;
	НоваяЗаписьИС.Пользователь    = Пользователи.ТекущийПользователь();
	НоваяЗаписьИС.ЗаКого          = ЗаКого;
	НоваяЗаписьИС.СтатусДокумента = СтатусДокумента;
	НоваяЗаписьИС.Комментарий = Комментарий;
	
	Если Форма.мХранитьИсториюСогласованияВДокументах Тогда
		Если Очистить Тогда
			Объект.ИсторияСтатусов.Очистить();
		КонецЕсли;
		НоваяЗаписьИС = Объект.ИсторияСтатусов.Добавить();
		НоваяЗаписьИС.Дата            = ТекущаяДата();
		НоваяЗаписьИС.Пользователь    = Пользователи.ТекущийПользователь();
		НоваяЗаписьИС.ЗаКого          = ЗаКого;
		НоваяЗаписьИС.СтатусДокумента = СтатусДокумента;
	КонецЕсли;
	
КонецПроцедуры

// Процедура переносит данные из ДеревоСогласования в таблицу согласующих.
//
// Параметры:
//		Форма - УправляемаяФорма - форма документа.
//
Процедура ЗаписатьДеревоСогласования(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	Форма.СогласующиеРегистр.Очистить();
	Если Форма.мХранитьИсториюСогласованияВДокументах Тогда
		Объект.Согласующие.Очистить();
	КонецЕсли;
	
	МассивСогласованного = Новый Массив;			
	ЗаполнитьМассивИзДерева(МассивСогласованного, Форма.ДеревоСогласования.ПолучитьЭлементы());
	
	Для Каждого ЭлементМассива Из МассивСогласованного Цикл
		Если ЭлементМассива.Согласовано Тогда
			ЗаполнитьЗначенияСвойств(Форма.СогласующиеРегистр.Добавить(), ЭлементМассива);
			Если Форма.мХранитьИсториюСогласованияВДокументах Тогда
				ЗаполнитьЗначенияСвойств(Объект.Согласующие.Добавить(), ЭлементМассива);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Функция устанавливает видимость закладки "согласование и утверждение" 
// во всех документах, для которых реализована эта функция.
//
// Параметры:
//		мИспользоватьСогласованиеДокументов - Булево - признак, что включена функциональная опция.
//		Объект - ДокументОбъект, ДанныеФормыСтруктура - объект формы.
//		ЭтаФорма - УправляемаяФорма - форма документа.
//
Процедура УстановитьВидимостьСогласованиеИУтверждение(мИспользоватьСогласованиеДокументов, Объект, ЭтаФорма) Экспорт
	
	Элементы = ЭтаФорма.Элементы;
	
	Если мИспользоватьСогласованиеДокументов Тогда
		
		Элементы.СпособСогласования.ТолькоПросмотр = (ЗначениеЗаполнено(Объект.СпособСогласования) 
		И ЗначениеЗаполнено(ЭтаФорма.СтатусДокументаРегистр)  
		И ЭтаФорма.СтатусДокументаРегистр <> торо_Ремонты.ПолучитьНачальныйСтатус(Объект.СпособСогласования));
		
		СтруктураДанныхПоСтатусу = торо_Ремонты.ПолучитьДанныеПоСтатусуДокумента(Объект.СпособСогласования, ЭтаФорма.СтатусДокументаРегистр);
		
		Если СтруктураДанныхПоСтатусу.СогласованиеЗавершено = Истина
			И Не торо_РаботаСоСтатусамиДокументовСервер.ДоступнаРоль("ПолныеПрава") Тогда
			
			Исключения = Новый Соответствие;
			Исключения.Вставить("ФормаКоманднаяПанель", Новый Структура("СПодчиненными", Истина));
			УстановитьТолькоПросмотрФормы(ЭтаФорма, Исключения);
			
		КонецЕсли;

	КонецЕсли;	
	
	Элементы.НадписьТекущийСтатусДокумента.Видимость = мИспользоватьСогласованиеДокументов;
	Элементы.ТекущийСтатусДокумента.Видимость        = мИспользоватьСогласованиеДокументов;
	Элементы.ГруппаСогласование.Видимость            = мИспользоватьСогласованиеДокументов;
	Элементы.ДеревоСогласованияУтвердитьСтатус.Доступность = ЗначениеЗаполнено(Объект.СпособСогласования);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьМассивИзДерева(Массив, ЭлементыДерева) Экспорт
	
	Для каждого Элемент Из ЭлементыДерева Цикл
		Массив.Добавить(Элемент);
		ЗаполнитьМассивИзДерева(Массив, Элемент.ПолучитьЭлементы())
	КонецЦикла; 
	
КонецПроцедуры

Процедура УстановитьТолькоПросмотрФормы(Форма, Исключения)
	
	МассивИсключений = Новый Массив;
	
	Для каждого КлючИЗначение из Исключения Цикл
		МассивИсключений.Добавить(КлючИЗначение.Ключ);
		Если КлючИЗначение.Значение.СПодчиненными = Истина Тогда
			ЭлементРодитель = Форма.Элементы.Найти(КлючИЗначение.Ключ);
			Если ЭлементРодитель <> Неопределено Тогда
				ДобавитьПодчиненныеЭлементыВМассив(ЭлементРодитель, МассивИсключений);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Элемент из Форма.Элементы Цикл
		Если МассивИсключений.Найти(Элемент.Имя) = Неопределено Тогда
			Попытка 
				Элемент.ТолькоПросмотр = Истина;
			Исключение
				Попытка 
					Элемент.Доступность = Ложь;	
				Исключение
				КонецПопытки;	
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьПодчиненныеЭлементыВМассив(ЭлементРодитель, МассивИсключений)
	
	Если ТипЗнч(ЭлементРодитель) = Тип("КоманднаяПанельФормы") 
		ИЛИ ТипЗнч(ЭлементРодитель) = Тип("ГруппаФормы")
		ИЛИ ТипЗнч(ЭлементРодитель) = Тип("ТаблицаФормы")
		Тогда
		
		Для каждого ПодчЭлемент из ЭлементРодитель.ПодчиненныеЭлементы Цикл
			МассивИсключений.Добавить(ПодчЭлемент.Имя);
			ДобавитьПодчиненныеЭлементыВМассив(ПодчЭлемент, МассивИсключений);
		КонецЦикла;
			
	КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти
