#Область ПрограммныйИнтерфейс

// Функция - Дата сеанса.
// Возвращает текущее значение даты сеанса.
// Возвращаемое значение:
//  Дата - Дата сеанса.
Функция ДатаСеанса() Экспорт
	
	#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
		Возврат ТекущаяДатаСеанса();
	#Иначе
		Возврат ОбщегоНазначенияКлиент.ДатаСеанса();
	#КонецЕсли
	
КонецФункции

// Возвращает Истина, если переданный объект содержит 
// значения по умолчанию для гражданства.
//
// Параметры:
//	 ИнформацияОГражданстве - Структура - объект, имеющий свойства	
//																	Страна.
//
// Возвращаемое значение:
//  Булево - Истина, если переданный объект содержит значения по умолчанию для гражданства.
//		
Функция ГражданствоПоУмолчанию(ИнформацияОГражданстве) Экспорт
	
	Возврат ИнформацияОГражданстве.Страна = ПредопределенноеЗначение("Справочник.СтраныМира.Россия");
	
КонецФункции

// Возвращает Истина, если переданный объект содержит 
// значения по умолчанию для сведений об инвалидности
// т.е. сотрудник не является инвалидом.
//
// Параметры:
//		СведенияОбИнвалидности - Структура, Объект - объект, имеющий свойства 
//											Инвалидность
//											СрокДействияСправки.
// Возвращаемое значение:
//  Булево - Истина, если сотрудник не является инвалидом.
//		
Функция СведенияОбИнвалидностиПоУмолчанию(СведенияОбИнвалидности) Экспорт
	Возврат (НЕ СведенияОбИнвалидности.Инвалидность)
		И (НЕ ЗначениеЗаполнено(СведенияОбИнвалидности.ДатаВыдачи))
		И (НЕ ЗначениеЗаполнено(СведенияОбИнвалидности.СрокДействияСправки))
КонецФункции

// Возвращает Истина, если переданный объект содержит 
// значения по умолчанию для удостоверения личности.
//
// Параметры:
//	 ИнформацияОбУдостоверенииЛичности - Структура, Объект - объект, имеющий свойства 
//		ВидДокумента
//		Серия
//		Номер
//		ДатаВыдачи
//		КемВыдан
//		КодПодразделения.
//
// Возвращаемое значение:
//  Булево - см. описание выше.
//
Функция УдостоверениеЛичностиПоУмолчанию(ИнформацияОбУдостоверенииЛичности) Экспорт
	
	Возврат (НЕ ЗначениеЗаполнено(ИнформацияОбУдостоверенииЛичности.ВидДокумента))
		И (НЕ ЗначениеЗаполнено(ИнформацияОбУдостоверенииЛичности.Серия))
		И (НЕ ЗначениеЗаполнено(ИнформацияОбУдостоверенииЛичности.Номер))
		И (НЕ ЗначениеЗаполнено(ИнформацияОбУдостоверенииЛичности.ДатаВыдачи))
		И (НЕ ЗначениеЗаполнено(ИнформацияОбУдостоверенииЛичности.СрокДействия))
		И (НЕ ЗначениеЗаполнено(ИнформацияОбУдостоверенииЛичности.КемВыдан))
		И (НЕ ЗначениеЗаполнено(ИнформацияОбУдостоверенииЛичности.КодПодразделения));
		
КонецФункции

// Возвращает Истина, если переданный объект содержит 
// значения по умолчанию для бухучета сотрудника.
//
// Параметры:
//	 БухучетЗарплатыСотрудников - Структура, Объект - объект, имеющий свойства 
//		СпособОтраженияЗарплатыВБухучете
//		ОтношениеКЕНВД.
//		
// Возвращаемое значение:
//  Булево - см. описание выше.
//
Функция СведенияОБухучетеСотрудникаПоУмолчанию(БухучетЗарплатыСотрудников) Экспорт
	Возврат (НЕ ЗначениеЗаполнено(БухучетЗарплатыСотрудников.СпособОтраженияЗарплатыВБухучете))
		И (НЕ ЗначениеЗаполнено(БухучетЗарплатыСотрудников.ОтношениеКЕНВД));
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Универсальный механизм "Месяц строкой"

// Заполняет месяц по дате.
//
// Параметры:
//  РедактируемыйОбъект - СтрокаТабличнойЧасти - строка табличной части.
//  ПутьРеквизита - Строка - путь к реквизиту значения.
//  ПутьРеквизитаПредставления - Строка - путь к реквизиту предствления.
//
Процедура ЗаполнитьМесяцПоДате(РедактируемыйОбъект, ПутьРеквизита, ПутьРеквизитаПредставления) Экспорт
	
	Значение = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизита);
	ОбщегоНазначенияКлиентСервер.УстановитьРеквизитФормыПоПути(РедактируемыйОбъект, ПутьРеквизитаПредставления, ПолучитьПредставлениеМесяца(Значение));
	
КонецПроцедуры

// Заполняет месяц по дате в таблично части.
//
// Параметры:
//  ДанныеТабличнойЧасти - ДанныеФормыКоллекция - данные табличной части.
//  ПутьРеквизита - Строка - путь к реквизиту значения.
//  ПутьРеквизитаПредставления - Строка - путь к реквизиту предствления.
// 
Процедура ЗаполнитьМесяцПоДатеВТабличнойЧасти(ДанныеТабличнойЧасти, ПутьРеквизита, ПутьРеквизитаПредставления) Экспорт
	Для Каждого СтрокаТабличнойЧасти Из ДанныеТабличнойЧасти Цикл
		ЗаполнитьМесяцПоДате(СтрокаТабличнойЧасти, ПутьРеквизита, ПутьРеквизитаПредставления);
	КонецЦикла;
КонецПроцедуры

// Фозвращает представление месяца по дате.
//
// Параметры:
//  ДатаНачалаМесяца - Дата - дата начала месяца.
//
// Возвращаемое значение:
//  Строка - представление месяца.
Функция ПолучитьПредставлениеМесяца(ДатаНачалаМесяца) Экспорт
	
	Возврат Формат(ДатаНачалаМесяца, "ДФ='MMMM yyyy'");
	
КонецФункции

// 
////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Универсальные процедуры и функции

// Проверяет заполнение реквизитов переданного объекта по заданным правилам
// 
// Параметры:
//		ПроверяемыйОбъект	- Объект - проверяемое, любой объект, допускающий доступ к полям по имени
//		ПравилаПроверки - Структура - в которой ключем является проверяемое свойство, 
//						а значением - сообщение об ошибке
//		СообщитьПользователю - Булево - признак, выдавать ли сообщение пользователю.
//								
//	Возвращаемое значение:
//		Булево - Истина - ошибок не обнаружено, Ложь - в противном случае. 
//			
Функция СвойстваЗаполнены(ПроверяемыйОбъект, ПравилаПроверки, СообщитьПользователю = Ложь) Экспорт
	
	НарушенныеПравила = Новый Массив;
	
	Для Каждого ПравилоПроверки Из ПравилаПроверки Цикл
		Если НЕ ЗначениеЗаполнено(ПроверяемыйОбъект[ПравилоПроверки.Ключ]) Тогда
			НарушенныеПравила.Добавить(ПравилоПроверки);
		КонецЕсли;
	КонецЦикла;
	
	Если СообщитьПользователю Тогда
		Для Каждого НарушенноеПравило Из НарушенныеПравила Цикл 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НарушенноеПравило.Значение, ПроверяемыйОбъект, НарушенноеПравило.Ключ);
		КонецЦикла
	КонецЕсли;
	
	Возврат НарушенныеПравила.Количество() = 0;
	
КонецФункции

// Проверяет заполнение реквизитов переданного объекта по заданным правилам.
// 
// Параметры:
//	 Форма - УправляемаяФорма - управляемая форма
//	 ПравилаПроверки - СписокЗначений - в которой значением является путь к данными, 
//						а значением - сообщение об ошибке.
//	 СообщитьПользователю - Булево - признак, выдавать ли сообщение пользователю.
//								
//	Возвращаемое значение:
//		Булево - Истина - все свойства заполнены, Ложь - в противном случае. 
//			
Функция СвойстваФормыЗаполнены(Форма, ПравилаПроверки, СообщитьПользователю = Ложь) Экспорт
	
	НарушенныеПравила = Новый Массив;
	
	Для Каждого ПравилоПроверки Из ПравилаПроверки Цикл
		
		Значение = ОбщегоНазначенияКлиентСервер.ПолучитьРеквизитФормыПоПути(Форма, ПравилоПроверки.Значение);
		
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			НарушенныеПравила.Добавить(ПравилоПроверки);
		КонецЕсли;
	КонецЦикла;
	
	Если СообщитьПользователю Тогда
		Для Каждого НарушенноеПравило Из НарушенныеПравила Цикл 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НарушенноеПравило.Представление, , НарушенноеПравило.Значение);
		КонецЦикла
	КонецЕсли;
	
	Возврат НарушенныеПравила.Количество() = 0;
	
КонецФункции

#КонецОбласти
#Область СлужебныеПроцедурыИФункции

Функция ДатаОтсчетаПериодическихСведений() Экспорт
	
	Возврат '18991231000000';
	
КонецФункции

Функция ДатаОтсчетаПериодическихСведенийСПериодомМесяц() Экспорт
	
	Возврат КонецМесяца(ДатаОтсчетаПериодическихСведений()) + 1;
	
КонецФункции

#КонецОбласти