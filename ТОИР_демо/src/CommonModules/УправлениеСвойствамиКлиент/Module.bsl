////////////////////////////////////////////////////////////////////////////////
// Подсистема "Свойства"
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Открывает форму редактирования набора дополнительных реквизитов.
//
// Параметры:
//  Форма - УправляемаяФорма - предварительно настроенная в процедуре.
//                 УправлениеСвойствами.ПриСозданииНаСервере().
//  Ссылка - Ссылка - ссылка на объект.
//
Процедура РедактироватьСоставСвойств(Форма, Ссылка = Неопределено) Экспорт
	
	Наборы = Форма.Свойства_НаборыДополнительныхРеквизитовОбъекта;
	
	Если Наборы.Количество() = 0
	 ИЛИ НЕ ЗначениеЗаполнено(Наборы[0].Значение) Тогда
		
		ПоказатьПредупреждение(,
			НСтр("ru = 'Не удалось получить наборы дополнительных реквизитов объекта.
			           |
			           |Возможно у объекта не заполнены необходимые реквизиты.'"));
	
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ПоказатьДополнительныеРеквизиты");
		
		ОткрытьФорму("Справочник.НаборыДополнительныхРеквизитовИСведений.ФормаСписка", ПараметрыФормы);
		
		ПараметрыПерехода = Новый Структура;
		ПараметрыПерехода.Вставить("Набор", Наборы[0].Значение);
		ПараметрыПерехода.Вставить("Свойство", Неопределено);
		ПараметрыПерехода.Вставить("ЭтоДополнительноеСведение", Ложь);
		
		ДлинаНачала = СтрДлина("ДополнительныйРеквизитЗначение_");
		ЭтоПолеФормы = (ТипЗнч(Форма.ТекущийЭлемент) = Тип("ПолеФормы"));
		Если ЭтоПолеФормы И ВРег(Лев(Форма.ТекущийЭлемент.Имя, ДлинаНачала)) = ВРег("ДополнительныйРеквизитЗначение_") Тогда
			
			ИдентификаторНабора   = СтрЗаменить(Сред(Форма.ТекущийЭлемент.Имя, ДлинаНачала +  1, 36), "x","-");
			ИдентификаторСвойства = СтрЗаменить(Сред(Форма.ТекущийЭлемент.Имя, ДлинаНачала + 38, 36), "x","-");
			
			Если СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(НРег(ИдентификаторНабора)) Тогда
				ПараметрыПерехода.Вставить("Набор", ИдентификаторНабора);
			КонецЕсли;
			
			Если СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(НРег(ИдентификаторСвойства)) Тогда
				ПараметрыПерехода.Вставить("Свойство", ИдентификаторСвойства);
			КонецЕсли;
		КонецЕсли;
		
		Оповестить("Переход_НаборыДополнительныхРеквизитовИСведений", ПараметрыПерехода);
	КонецЕсли;
	
КонецПроцедуры

// Определяет, что указанное событие - это событие об изменении набора свойств.
//
// Параметры:
//		Форма - УправляемаяФорма - форма.
//		ИмяСобытия - Строка - имя события.
//		Параметр - Произвольный - параметр события.
// 
// Возвращаемое значение:
//  Булево - если Истина, тогда это оповещение об изменении набора свойств и
//           его нужно обработать в форме.
//
Функция ОбрабатыватьОповещения(Форма, ИмяСобытия, Параметр) Экспорт
	
	Если НЕ Форма.Свойства_ИспользоватьСвойства
	 ИЛИ НЕ Форма.Свойства_ИспользоватьДопРеквизиты Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_НаборыДополнительныхРеквизитовИСведений" Тогда
		Если Не Параметр.Свойство("Ссылка") Тогда
			Возврат Истина;
		Иначе
			Возврат Форма.Свойства_НаборыДополнительныхРеквизитовОбъекта.НайтиПоЗначению(Параметр.Ссылка) <> Неопределено;
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Запись_ДополнительныеРеквизитыИСведения" Тогда
		
		Если Форма.ПараметрыСвойств.Свойство("ВыполненаОтложеннаяИнициализация")
			И Не Форма.ПараметрыСвойств.ВыполненаОтложеннаяИнициализация
			Или Не Параметр.Свойство("Ссылка") Тогда
			Возврат Истина;
		Иначе
			Отбор = Новый Структура("Свойство", Параметр.Ссылка);
			Возврат Форма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Отбор).Количество() > 0;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура Свойства_ЗначенияДополнительныхРеквизитовПриИзменении(Форма, Элемент) Экспорт
	
	УправлениеСвойствамиКлиентСервер.УстановитьДоступностьКомандРедактированияДопРеквизитовСведений(Форма);
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура Свойства_ЗначенияДополнительныхРеквизитовПриАктивизацииСтроки(Форма, Элемент) Экспорт
	
	УправлениеСвойствамиКлиентСервер.УстановитьДоступностьКомандРедактированияДопРеквизитовСведений(Форма);
	
КонецПроцедуры

Процедура Свойства_ЗначенияДополнительныхРеквизитовПередНачаломДобавления(Форма, НаборДопРеквизитовСведений, Элемент, Отказ, Копирование, Родитель, Группа) Экспорт
	
	Отказ = Истина;
	ДобавитьДопРеквизитСведение(Форма, НаборДопРеквизитовСведений, "ДопРеквизит");
	
КонецПроцедуры

Процедура Свойства_ЗначенияДополнительныхРеквизитовПередУдалением(Форма, НаборСвойствДопРеквизитовСведений, Элемент, Отказ) Экспорт
	
	ТекущиеДанные = Форма.Элементы.Свойства_ЗначенияДополнительныхРеквизитов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ТипЭлемента = "ДопРеквизит";
	Если ТекущиеДанные.ОбщееСвойство Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеСвойствами.ПометитьТекущееСвойствоНаУдаление(НаборСвойствДопРеквизитовСведений, ТекущиеДанные.Свойство, ТекущиеДанные.ИндексКартинки, ТипЭлемента);

КонецПроцедуры

Процедура Свойства_ЗначенияДополнительныхРеквизитовПриОкончанииРедактирования(Форма, Элемент, НоваяСтрока, ОтменаРедактирования) Экспорт
	
	Форма.Модифицированность = Истина;
	
	ТекущиеДанные = Форма.Элементы.Свойства_ЗначенияДополнительныхРеквизитов.ТекущиеДанные;
	СтрокаОписанияРеквизита = Форма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Свойство", ТекущиеДанные.Свойство));
	Если СтрокаОписанияРеквизита.Количество() > 0 Тогда
		СтрокаОписанияРеквизита = СтрокаОписанияРеквизита[0];
		Форма[СтрокаОписанияРеквизита.ИмяРеквизитаЗначение] = ТекущиеДанные.Значение;
	КонецЕсли;
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(Форма);
	
КонецПроцедуры

Процедура Свойства_ЗначенияДополнительныхРеквизитовВыбор(Форма, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) Экспорт
	
	ИмяТаблицы = "Свойства_ЗначенияДополнительныхРеквизитов";
	
	ТекущиеДанные = Форма.Элементы[ИмяТаблицы].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если Поле.Имя = ИмяТаблицы+"Наименование" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.Свойство);
		
		ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта", ПараметрыФормы, Элемент);
		
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьДопРеквизитСведение(Форма, НаборДопРеквизитовСведений, ТипЭлемента)
	
	Если торо_ОбщегоНазначенияКлиентПовтИсп.ЕстьПраво("Редактирование", "Справочники", "НаборыДополнительныхРеквизитовИСведений")
		  И торо_ОбщегоНазначенияКлиентПовтИсп.ЕстьПраво("Добавление", "ПланыВидовХарактеристик", "ДополнительныеРеквизитыИСведения") Тогда
		  
		Если Не ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
			
			ТекстВопроса = Нстр("ru = 'Данные еще не записаны.
			|Добавление дополнительных свойств возможно только после записи элемента.
			|Записать элемент?'");
			
			ПараметрыОповещения =  Новый Структура("Форма, НаборДопРеквизитовСведений, ТипЭлемента", Форма, НаборДопРеквизитовСведений, ТипЭлемента);
			ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьДопРеквизитСведениеЗавершение", ЭтотОбъект, ПараметрыОповещения), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			Возврат;
			
		КонецЕсли;
		
		ДобавитьДопРеквизитСведениеФрагмент(Форма, НаборДопРеквизитовСведений, ТипЭлемента);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьДопРеквизитСведениеФрагмент(Форма, НаборДопРеквизитовСведений, Знач ТипЭлемента)
	
	Если НЕ ЗначениеЗаполнено(НаборДопРеквизитовСведений) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НаборСвойств"             , НаборДопРеквизитовСведений);
	ПараметрыФормы.Вставить("ТекущийНаборСвойств"      , НаборДопРеквизитовСведений);
	ПараметрыФормы.Вставить("ЭтоДополнительноеСведение", ТипЭлемента <> "ДопРеквизит");
	
	ОткрытьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ФормаОбъекта",
					ПараметрыФормы, Форма.Элементы["Свойства_ЗначенияДополнительныхРеквизитов"]);
	
КонецПроцедуры

Процедура ДобавитьДопРеквизитСведениеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	НаборДопРеквизитовСведений = ДополнительныеПараметры.НаборДопРеквизитовСведений;
	ТипЭлемента = ДополнительныеПараметры.ТипЭлемента;
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ЭлементЗаписан = Форма.Записать();
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Не ЭлементЗаписан Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьДопРеквизитСведениеФрагмент(Форма, НаборДопРеквизитовСведений, ТипЭлемента);
	
КонецПроцедуры

// Обновляет видимость, доступность и обязательность заполнения
// дополнительных реквизитов.
//
// Параметры:
//  УправляемаяФорма - уже настроена в процедуре ПриСозданииНаСервере.
//
Процедура ОбновитьЗависимостиДополнительныхРеквизитов(Форма, Объект = Неопределено) Экспорт
	
	Если НЕ Форма.Свойства_ИспользоватьСвойства
	 ИЛИ НЕ Форма.Свойства_ИспользоватьДопРеквизиты Тогда
		
		Возврат;
	КонецЕсли;
	
	Если Объект = Неопределено Тогда
		ОписаниеОбъекта = Форма.Объект;
	Иначе
		ОписаниеОбъекта = Объект;
	КонецЕсли;
	
	// Доп. реквизиты в таблице++
	Если НЕ Форма.Свойства_ОтображатьЗначенияВТаблице Тогда
	// Доп. реквизиты в таблице--	
		
		Для Каждого ОписаниеЗависимогоРеквизита Из Форма.Свойства_ОписаниеЗависимыхДополнительныхРеквизитов Цикл
			Если ОписаниеЗависимогоРеквизита.УсловиеДоступности <> Неопределено Тогда
				ЗначенияПараметров = ОписаниеЗависимогоРеквизита.УсловиеДоступности.ЗначенияПараметров;
				Результат = Вычислить(ОписаниеЗависимогоРеквизита.УсловиеДоступности.КодУсловия);
				Элемент = Форма.Элементы[ОписаниеЗависимогоРеквизита.ИмяРеквизитаЗначение];
				Если Элемент.Доступность <> Результат Тогда
					Элемент.Доступность = Результат;
				КонецЕсли;
			КонецЕсли;
			Если ОписаниеЗависимогоРеквизита.УсловиеВидимости <> Неопределено Тогда
				ЗначенияПараметров = ОписаниеЗависимогоРеквизита.УсловиеВидимости.ЗначенияПараметров;
				Результат = Вычислить(ОписаниеЗависимогоРеквизита.УсловиеВидимости.КодУсловия);
				Элемент = Форма.Элементы[ОписаниеЗависимогоРеквизита.ИмяРеквизитаЗначение];
				Если Элемент.Видимость <> Результат Тогда
					Элемент.Видимость = Результат;
				КонецЕсли;
			КонецЕсли;
			Если ОписаниеЗависимогоРеквизита.УсловиеОбязательностиЗаполнения <> Неопределено Тогда
				Если Не ОписаниеЗависимогоРеквизита.ЗаполнятьОбязательно Тогда
					Продолжить;
				КонецЕсли;
				ЗначенияПараметров = ОписаниеЗависимогоРеквизита.УсловиеОбязательностиЗаполнения.ЗначенияПараметров;
				Результат = Вычислить(ОписаниеЗависимогоРеквизита.УсловиеОбязательностиЗаполнения.КодУсловия);
				Элемент = Форма.Элементы[ОписаниеЗависимогоРеквизита.ИмяРеквизитаЗначение];
				Если Элемент.АвтоОтметкаНезаполненного <> Результат Тогда
					Элемент.АвтоОтметкаНезаполненного = Результат;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	// Доп. реквизиты в таблице++
	Иначе
		
		Для Каждого ОписаниеЗависимогоРеквизита Из Форма.Свойства_ОписаниеЗависимыхДополнительныхРеквизитов Цикл
			Если ОписаниеЗависимогоРеквизита.УсловиеДоступности <> Неопределено Тогда
				ЗначенияПараметров = ОписаниеЗависимогоРеквизита.УсловиеДоступности.ЗначенияПараметров;
				Результат = Вычислить(ОписаниеЗависимогоРеквизита.УсловиеДоступности.КодУсловия);
				
				СтрокаОписанияРеквизита = Форма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизитаЗначение", ОписаниеЗависимогоРеквизита.ИмяРеквизитаЗначение));
				Если СтрокаОписанияРеквизита.Количество() > 0 Тогда
					СтрокаОписанияРеквизита = СтрокаОписанияРеквизита[0];
					СтрокиЗначений = Форма.Свойства_ЗначенияДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Свойство",СтрокаОписанияРеквизита.Свойство));
					Для каждого СтрокаЗначения из СтрокиЗначений Цикл
						СтрокаЗначения.Доступность = Результат;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			Если ОписаниеЗависимогоРеквизита.УсловиеВидимости <> Неопределено Тогда
				ЗначенияПараметров = ОписаниеЗависимогоРеквизита.УсловиеВидимости.ЗначенияПараметров;
				Результат = Вычислить(ОписаниеЗависимогоРеквизита.УсловиеВидимости.КодУсловия);
				
				СтрокаОписанияРеквизита = Форма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизитаЗначение", ОписаниеЗависимогоРеквизита.ИмяРеквизитаЗначение));
				Если СтрокаОписанияРеквизита.Количество() > 0 Тогда
					СтрокаОписанияРеквизита = СтрокаОписанияРеквизита[0];
					СтрокиЗначений = Форма.Свойства_ЗначенияДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Свойство",СтрокаОписанияРеквизита.Свойство));
					Для каждого СтрокаЗначения из СтрокиЗначений Цикл
						СтрокаЗначения.Видимость = Результат;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			Если ОписаниеЗависимогоРеквизита.УсловиеОбязательностиЗаполнения <> Неопределено Тогда
				Если Не ОписаниеЗависимогоРеквизита.ЗаполнятьОбязательно Тогда
					Продолжить;
				КонецЕсли;
				ЗначенияПараметров = ОписаниеЗависимогоРеквизита.УсловиеОбязательностиЗаполнения.ЗначенияПараметров;
				Результат = Вычислить(ОписаниеЗависимогоРеквизита.УсловиеОбязательностиЗаполнения.КодУсловия);
				
				СтрокаОписанияРеквизита = Форма.Свойства_ОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизитаЗначение", ОписаниеЗависимогоРеквизита.ИмяРеквизитаЗначение));
				Если СтрокаОписанияРеквизита.Количество() > 0 Тогда
					СтрокаОписанияРеквизита = СтрокаОписанияРеквизита[0];
					СтрокиЗначений = Форма.Свойства_ЗначенияДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Свойство",СтрокаОписанияРеквизита.Свойство));
					Для каждого СтрокаЗначения из СтрокиЗначений Цикл
						СтрокаЗначения.АвтоОтметкаНезаполненного = Результат;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	// Доп. реквизиты в таблице--
	
КонецПроцедуры

// Проверяет наличие зависимых дополнительных реквизитов на форме
// и, при необходимости, подключает обработчик ожидания проверки зависимостей реквизитов.
//
// Параметры:
//  УправляемаяФорма - уже настроена в процедуре ПриСозданииНаСервере.
//
Процедура ПослеЗагрузкиДополнительныхРеквизитов(Форма) Экспорт
	
	Если НЕ Форма.Свойства_ИспользоватьСвойства
		Или НЕ Форма.Свойства_ИспользоватьДопРеквизиты Тогда
		
		Возврат;
	КонецЕсли;
	
	Если Форма.Свойства_ОписаниеЗависимыхДополнительныхРеквизитов.Количество() > 0 
		// Доп. реквизиты в таблице++
		И НЕ Форма.Свойства_ОтображатьЗначенияВТаблице Тогда
		// Доп. реквизиты в таблице-
		
		Форма.ПодключитьОбработчикОжидания("ОбновитьЗависимостиДополнительныхРеквизитов", 2);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

