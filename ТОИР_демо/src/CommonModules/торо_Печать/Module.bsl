////////////////////////////////////////////////////////////////////////////////
// торо_Печать: методы для печати.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

&НаКлиенте
// Выводит документ на печать.
//
// Параметры:
//		ИмяОбъектаМетаданных - Строка - Имя объекта метаданных. Например "Документ.торо_АктОВыполненииЭтапаРабот".
//		ИмяПечатнойФормы - Строка - имя печатной формы.
//		ПараметрКоманды - Массив, Ссылка - ссылка или массив ссылок на печатаемые объекты.
//		СтруктураПараметровКоманды - Структура - дополнительные параметры.
//
Процедура НапечататьДокумент(ИмяОбъектаМетаданных, ИмяПечатнойФормы, ПараметрКоманды, СтруктураПараметровКоманды = Неопределено) Экспорт
	
	ПечатьДокументовБезПредварительногоПросмотра = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
	Если ПечатьДокументовБезПредварительногоПросмотра Тогда
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер(
		ИмяОбъектаМетаданных,
		ИмяПечатнойФормы,
		ПараметрКоманды,
		СтруктураПараметровКоманды);
		
	Иначе
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		ИмяОбъектаМетаданных,
		ИмяПечатнойФормы,
		ПараметрКоманды,
		Неопределено, СтруктураПараметровКоманды);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗапроситьУПользователяДополнительныеПараметрыПередПечатью(ПараметрыПечати) Экспорт
	
	ПараметрКоманды = ПараметрыПечати.ОбъектыПечати;
	
	Если ПараметрыПечати.Идентификатор = "Заявка" ИЛИ ПараметрыПечати.Идентификатор = "АктДефектации"
		ИЛИ ПараметрыПечати.Идентификатор = "НарядНаВыполнениеОгневыхРабот" ИЛИ ПараметрыПечати.Идентификатор = "НарядДопускДляРаботыВЭлектроустановках"
		ИЛИ ПараметрыПечати.Идентификатор = "НарядНаПроизводствоРаботПовышеннойОпасности" ИЛИ ПараметрыПечати.Идентификатор = "АктНаПриемкуОборудованияИзРемонта" 
		или ПараметрыПечати.Идентификатор = "НарядНаРаботы_НеОпасные"
		или ПараметрыПечати.Идентификатор = "НарядНаРегламентноеМероприятие"
		ИЛИ ПараметрыПечати.Идентификатор = "АктВыполненныхРемонтныхРабот" Тогда
		
		Если ПараметрКоманды.Количество() = 1 Тогда
			
			Если ПараметрыПечати.Идентификатор = "Заявка" ИЛИ ПараметрыПечати.Идентификатор = "НарядНаВыполнениеОгневыхРабот" ИЛИ ПараметрыПечати.Идентификатор = "НарядДопускДляРаботыВЭлектроустановках"
				ИЛИ ПараметрыПечати.Идентификатор = "НарядНаПроизводствоРаботПовышеннойОпасности" ИЛИ ПараметрыПечати.Идентификатор = "АктНаПриемкуОборудованияИзРемонта" 
				или ПараметрыПечати.Идентификатор = "НарядНаРаботы_НеОпасные"
				ИЛИ ПараметрыПечати.Идентификатор = "АктВыполненныхРемонтныхРабот" Тогда
				РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхРемонтовОборудования(ПараметрКоманды[0], "РемонтыОборудования");
			ИначеЕсли ПараметрыПечати.Идентификатор = "АктДефектации" Тогда
				РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхРемонтовОборудования(ПараметрКоманды[0], "СписокДефектов");
			ИначеЕсли ПараметрыПечати.Идентификатор = "НарядНаРегламентноеМероприятие" Тогда
				РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхРегламентныхМероприятий(ПараметрКоманды[0], "РегламентныеМероприятия");
			КонецЕсли;
		
			Если РемонтыОборудования.Количество() = 1 Тогда
				СтруктураПараметровКоманды = Новый Структура("Док, ID", ПараметрКоманды[0], РемонтыОборудования[0].ID);
				МассивПараметровКоманды = Новый Массив();
				МассивПараметровКоманды.Добавить(ПараметрКоманды[0]);
				
				НапечататьДокумент(ПараметрыПечати.МенеджерПечати,
				ПараметрыПечати.Идентификатор,
				МассивПараметровКоманды, СтруктураПараметровКоманды);
				
			Иначе 		
				ФормаВыбораРемонтаОборудования = ПолучитьФорму("ОбщаяФорма.торо_ФормаВыбораИзОбъектовОборудования", Новый Структура("РемонтыОборудования, КлючНазначенияИспользования", РемонтыОборудования, "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.Идентификатор), ПараметрыПечати.Форма, ПараметрКоманды[0]);
				ФормаВыбораРемонтаОборудования.Открыть();		
			КонецЕсли;
			
		ИначеЕсли   ПараметрКоманды.Количество() > 1 Тогда
			
			Для Каждого Параметр Из ПараметрКоманды Цикл 
				
				Если ПараметрыПечати.Идентификатор = "Заявка" ИЛИ ПараметрыПечати.Идентификатор = "НарядНаВыполнениеОгневыхРабот" ИЛИ ПараметрыПечати.Идентификатор = "НарядДопускДляРаботыВЭлектроустановках"
					ИЛИ ПараметрыПечати.Идентификатор = "НарядНаПроизводствоРаботПовышеннойОпасности" 
					ИЛИ ПараметрыПечати.Идентификатор = "НарядНаРаботы_НеОпасные" 
					Тогда
					РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхРемонтовОборудованияДляСпискаДокументов(Параметр, "РемонтыОборудования");
				ИначеЕсли ПараметрыПечати.Идентификатор = "АктДефектации" Тогда
					РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхРемонтовОборудованияДляСпискаДокументов(Параметр, "СписокДефектов");
				ИначеЕсли ПараметрыПечати.Идентификатор = "НарядНаРегламентноеМероприятие" Тогда
					РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхРегламентныхМероприятийДляСпискаДокументов(Параметр, "РегламентныеМероприятия");
				КонецЕсли;
				
				Для Каждого Ремонт из РемонтыОборудования Цикл 
					
					СтруктураПараметровКоманды = Новый Структура("Док, ID", Параметр, Ремонт);
					МассивПараметровКоманды = Новый Массив();
					МассивПараметровКоманды.Добавить(Параметр);
					НапечататьДокумент(ПараметрыПечати.МенеджерПечати,
					ПараметрыПечати.Идентификатор,
					МассивПараметровКоманды, СтруктураПараметровКоманды);			
					
				КонецЦикла; 			
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ПараметрыПечати.Идентификатор = "ФормаКС2" ИЛИ ПараметрыПечати.Идентификатор = "ФормаКС3" Тогда
		
		Если ПараметрыПечати.Идентификатор = "ФормаКС2" Тогда
			ИмяФормы = "КС-2";
			КлючНазначенияИспользования = "ПАРАМЕТРЫ_ПЕЧАТИ_ПечатьФормаКС2";
		Иначе
			ИмяФормы = "КС-3";
			КлючНазначенияИспользования = "ПАРАМЕТРЫ_ПЕЧАТИ_ПечатьФормаКС3";
		КонецЕсли;
		
		Если ПараметрКоманды.Количество() = 1 Тогда
			РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхРемонтовОборудования(ПараметрКоманды[0], "РемонтыОборудования");
			Если РемонтыОборудования.Количество() = 1 Тогда
				МассивРемонтов = Новый Массив;
				Для каждого Стр Из РемонтыОборудования Цикл
					МассивРемонтов.Добавить(Стр.ID);
				КонецЦикла;
				Оповестить(КлючНазначенияИспользования, МассивРемонтов, ПараметрыПечати.Форма);
			Иначе 		
				ФормаВыбораРемонтаОборудования = ПолучитьФорму("ОбщаяФорма.торо_ФормаВыбораИзОбъектовОборудования", Новый Структура("РемонтыОборудования, КлючНазначенияИспользования", РемонтыОборудования, КлючНазначенияИспользования), ПараметрыПечати.Форма, ПараметрКоманды[0]);
				ФормаВыбораРемонтаОборудования.Открыть();		
			КонецЕсли;
			
		Иначе
			Для Каждого Параметр из ПараметрКоманды Цикл 
				ЧислоПодрядчиков = торо_ПечатьСервер.ПолучитьКоличествоПодрядчиков(Параметр);
				Если ЧислоПодрядчиков = 0 Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = НСтр("ru = 'В документе ""%1"" не указан ни один подрядчик. Формы %2 не будут созданы.'");
					Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Сообщение.Текст,Параметр,ИмяФормы);
					Сообщение.Сообщить();
				Иначе
					
					РемонтыОборудования = торо_ПечатьСервер.ПолучитьСтруктуруДанныхРемонтовОборудованияДляСпискаДокументов(Параметр, "РемонтыОборудования");
					Для Каждого Ремонт из РемонтыОборудования Цикл 
						
						СтруктураПараметровКоманды = Новый Структура("Док, ID", Параметр, Ремонт);
						МассивПараметровКоманды = Новый Массив();
						МассивПараметровКоманды.Добавить(Параметр);
						
						УникальныйНомерВсе = Новый УникальныйИдентификатор;				
						СтруктураПараметровКоманды = Новый Структура("Док, ID, Подрядчик, УникальныйНомерВсе", Параметр, Ремонт, УникальныйНомерВсе, УникальныйНомерВсе);
						НапечататьДокумент("Документ.торо_АктОВыполненииЭтапаРабот", ПараметрыПечати.Идентификатор, МассивПараметровКоманды,СтруктураПараметровКоманды);
						
					КонецЦикла
					
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

Функция ОткрытьФормуЖурналаДефектов(ПараметрыПечати) Экспорт
	
	ОткрытьФорму("Документ.торо_ВыявленныеДефекты.Форма.ФормаЖурналаДефектов", , ПараметрыПечати.Форма, ПараметрыПечати.Идентификатор);
	
КонецФункции

Функция ОбработатьКомандуПечатиППР(ПараметрыПечати) Экспорт
	
	ПараметрКоманды = ПараметрыПечати.ОбъектыПечати;
	
	Если ПараметрКоманды.Количество() = 1 Тогда	
		ФормаВыбораРемонтаОборудования = ПолучитьФорму(ПараметрыПечати.МенеджерПечати + ".Форма.ФормаВводаПериода", 
		Новый Структура("ДокППР, КлючНазначенияИспользования", ПараметрКоманды[0], "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.Идентификатор)
		, ПараметрыПечати.Форма, ПараметрКоманды[0]);
		ФормаВыбораРемонтаОборудования.Открыть();
	Иначе
		
		Для Каждого Параметр из ПараметрКоманды Цикл 
			СтруктураПараметровПечати = торо_ПечатьСервер.СтруктураПараметровППР(Параметр);
			СтруктураПараметровКоманды = Новый Структура("ДокППР, Параметры", Параметр, СтруктураПараметровПечати);
			МассивПараметровКоманды = Новый Массив();
			МассивПараметровКоманды.Добавить(Параметр);
			
			НапечататьДокумент(ПараметрыПечати.МенеджерПечати, ПараметрыПечати.Идентификатор, МассивПараметровКоманды, СтруктураПараметровКоманды);
			
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

Функция ОткрытьЖурналРемонтовППР(ПараметрыПечати) Экспорт
	
	ОткрытьФорму("Документ.торо_ПланГрафикРемонта.Форма.ФормаЖурналаРемонтов", , ПараметрыПечати.Форма, ПараметрыПечати.Идентификатор);
	
КонецФункции

Функция ЗапроситьДопПараметрыПечатиОР(ПараметрыПечати) Экспорт
	
	ТекЭлемент = ПараметрыПечати.Форма.ТекущийЭлемент;
	Если ТекЭлемент.Имя = "СписокОбъектов" Или ТекЭлемент.Имя = "Дерево" Тогда
		ТекДанные = ТекЭлемент.ТекущиеДанные;
		Если ТекДанные <> Неопределено Тогда
			Картинка = ТекДанные.Картинка;
			Если Картинка >= 0 И Картинка <= 3 Тогда
				ОткрытьФорму("Справочник.торо_ОбъектыРемонта.Форма.ФормаВыбораРазделовПаспортаОР", Новый Структура("КлючНазначенияИспользования", "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.Идентификатор), ПараметрыПечати.Форма, ПараметрыПечати.Идентификатор);
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ПараметрыПечати.Форма.ИмяФормы = "Справочник.торо_ОбъектыРемонта.Форма.ФормаЭлемента" Тогда
		ОткрытьФорму("Справочник.торо_ОбъектыРемонта.Форма.ФормаВыбораРазделовПаспортаОР", Новый Структура("КлючНазначенияИспользования", "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.Идентификатор), ПараметрыПечати.Форма, ПараметрыПечати.Идентификатор);
		Возврат Неопределено;
	КонецЕсли;
	ПоказатьПредупреждение(, НСтр("ru = 'Печать возможна только для объекта ремонта!'"));
	
КонецФункции

#КонецОбласти
