////////////////////////////////////////////////////////////////////////////////
// торо_РаботаСНаработкой: методы, для работы с наработкой
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция рассчитывает время работы ОР.
//
// Параметры:
//  ТаблицаПериодовРаботыОборудования - ТаблицаЗначений - таблица периодов.
//  Период - Дата - дата, по которую выполняется рассчет.
//  КопироватьГрафик - Булево - копировать график на будущее, если не заполнен.
//
// Возвращаемое значение:
//  ТаблицаЗначений, Неопределено - таблица периодов наработки.
Функция РасчитатьВремяРаботыОР(ТаблицаПериодовРаботыОборудования, Период, КопироватьГрафик = Ложь) Экспорт
	
	Если ТаблицаПериодовРаботыОборудования.Количество() Тогда
		
		СтрПериод = Строка(Период);
		
		МенеджерВТ = Новый МенеджерВременныхТаблиц;
		
		МассивГрафиков = ТаблицаПериодовРаботыОборудования.ВыгрузитьКолонку("ПлановыйГрафикРаботы");
				
		Запрос = Новый запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТаблицаПериодовРаботыОборудования.ДатаНачала,
		               |	ТаблицаПериодовРаботыОборудования.ДатаОкончания,
		               |	ТаблицаПериодовРаботыОборудования.ПлановыйГрафикРаботы
		               |ПОМЕСТИТЬ ТабПериодов
		               |ИЗ
		               |	&Таб КАК ТаблицаПериодовРаботыОборудования
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НАЧАЛОПЕРИОДА(МИНИМУМ(ТабПериодов.ДатаНачала),"+СтрПериод+") КАК ДатаНачала,
		               |	КОНЕЦПЕРИОДА(МАКСИМУМ(ТабПериодов.ДатаОкончания),"+СтрПериод+") КАК ДатаОкончания
		               |ИЗ
		               |	ТабПериодов КАК ТабПериодов";
					   
		Запрос.УстановитьПараметр("Таб",ТаблицаПериодовРаботыОборудования); 
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			МинДата = Выборка.ДатаНачала;
			МаксДата = Выборка.ДатаОкончания;
		Иначе
			МинДата = ТекущаяДата();
			МаксДата = МинДата;
		КонецЕсли; 
		
		торо_РасчетППР.СоздатьВТРасписанияРаботыНаПериодСКопированиемПериода(МенеджерВТ, МассивГрафиков, НачалоДня(МинДата), МаксДата,КопироватьГрафик);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТаблицаПериодовРаботыОборудования.ОбъектРемонта,
		               |	ТаблицаПериодовРаботыОборудования.ДатаНачала,
		               |	ТаблицаПериодовРаботыОборудования.ДатаОкончания,
		               |	ТаблицаПериодовРаботыОборудования.ПлановыйГрафикРаботы,
		               |	ТаблицаПериодовРаботыОборудования.Показатель
		               |ПОМЕСТИТЬ ТабПериодов
		               |ИЗ
		               |	&Таб КАК ТаблицаПериодовРаботыОборудования
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТРасписанияРаботы.ГрафикРаботы,
		               |	ВТРасписанияРаботы.ДатаГрафика,
		               |	ВТРасписанияРаботы.ВремяНачала,
		               |	ВЫБОР
		               |		КОГДА МИНУТА(ВТРасписанияРаботы.ВремяОкончания) = 59
		               |			ТОГДА ДОБАВИТЬКДАТЕ(ВТРасписанияРаботы.ВремяОкончания, МИНУТА, 1)
		               |		ИНАЧЕ ВТРасписанияРаботы.ВремяОкончания
		               |	КОНЕЦ КАК ВремяОкончания
		               |ПОМЕСТИТЬ ВТРасписанияРаботыИзм
		               |ИЗ
		               |	ВТРасписанияРаботы КАК ВТРасписанияРаботы
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
					   |ВЫБРАТЬ 
					   |	Максимум(ТаблицаПериодов.ДатаОкончания) КАК ДатаОкончания,
					   |	Минимум(ТаблицаПериодов.ДатаНачала) КАК ДатаНачала,
					   |	ТаблицаПериодов.ОбъектРемонта,
		               |	ТаблицаПериодов.ДатаНачала,
		               |	ТаблицаПериодов.ДатаОкончания,
		               |	ТаблицаПериодов.Показатель,
		               |	ТаблицаПериодов.ПлановыйГрафикРаботы
					   |ПОМЕСТИТЬ ТабГрафикиПериодов
					   |ИЗ
					   |	ТабПериодов КАК ТаблицаПериодов
					   |СГРУППИРОВАТЬ ПО
					   |	ТаблицаПериодов.ПлановыйГрафикРаботы,
					   |	ТаблицаПериодов.ОбъектРемонта,
		               |	ТаблицаПериодов.ДатаНачала,
		               |	ТаблицаПериодов.ДатаОкончания,
		               |	ТаблицаПериодов.Показатель      
					   |;
					   |////////////////////////////////////////////////////////////////////////////////
					   |ВЫБРАТЬ
					   |	ЕСТЬNULL(ВТРасписанияРаботы.ДатаГрафика, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК Дата,
		               |	РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала,ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА) КАК СекундДоНачСмены,
		               |	РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания,ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА) КАК СекундДоКонСмены,
		               |	ТаблицаПериодов.ОбъектРемонта,
		               |	ТаблицаПериодов.ДатаНачала,
		               |	ТаблицаПериодов.ДатаОкончания,
		               |	ТаблицаПериодов.Показатель
		               |ПОМЕСТИТЬ ВТСекДоНачКонСмены
		               |ИЗ
		               |	ТабГрафикиПериодов КАК ТаблицаПериодов
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасписанияРаботыИзм КАК ВТРасписанияРаботы
		               |		ПО ВТРасписанияРаботы.ДатаГрафика < ТаблицаПериодов.ДатаОкончания
		               |			И (НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ) <= ВТРасписанияРаботы.ДатаГрафика)
		               |			И ВТРасписанияРаботы.ГрафикРаботы = ТаблицаПериодов.ПлановыйГрафикРаботы
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ЕСТЬNULL(ВТРасписанияРаботы.ДатаГрафика, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)),
		               |	ТаблицаПериодов.ОбъектРемонта,
		               |	ТаблицаПериодов.ДатаНачала,
		               |	ТаблицаПериодов.ДатаОкончания,
		               |	ТаблицаПериодов.Показатель,
					   |	РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала,ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА),
		               |	РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания,ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТСекДоНачКонСмены.Дата,
		               |	ДОБАВИТЬКДАТЕ(ВТСекДоНачКонСмены.Дата, СЕКУНДА, ВТСекДоНачКонСмены.СекундДоНачСмены) КАК ДатаНачалаСмены,
		               |	ДОБАВИТЬКДАТЕ(ВТСекДоНачКонСмены.Дата, СЕКУНДА, ВТСекДоНачКонСмены.СекундДоКонСмены) КАК ДатаОкончанияСмены,
		               |	ВТСекДоНачКонСмены.ДатаНачала,
		               |	ВТСекДоНачКонСмены.ДатаОкончания,
		               |	ВТСекДоНачКонСмены.ОбъектРемонта,
		               |	ВТСекДоНачКонСмены.Показатель
		               |ПОМЕСТИТЬ ВТГрафикиСмены
		               |ИЗ
		               |	ВТСекДоНачКонСмены КАК ВТСекДоНачКонСмены
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТГрафикиСмены.ОбъектРемонта,
		               |	ВТГрафикиСмены.ДатаНачала,
		               |	ВТГрафикиСмены.ДатаОкончания,
		               |	ВТГрафикиСмены.Показатель,
		               |	СУММА(ВЫБОР
		               |			КОГДА ВТГрафикиСмены.ДатаОкончанияСмены <= ВТГрафикиСмены.ДатаНачала
		               |					ИЛИ ВТГрафикиСмены.ДатаНачалаСмены >= ВТГрафикиСмены.ДатаОкончания
		               |				ТОГДА 0
		               |			КОГДА ВТГрафикиСмены.ДатаНачалаСмены <= ВТГрафикиСмены.ДатаНачала
		               |					И ВТГрафикиСмены.ДатаОкончанияСмены >= ВТГрафикиСмены.ДатаОкончания
		               |				ТОГДА РАЗНОСТЬДАТ(ВТГрафикиСмены.ДатаНачала, ВТГрафикиСмены.ДатаОкончания, СЕКУНДА)
		               |			КОГДА ВТГрафикиСмены.ДатаНачалаСмены <= ВТГрафикиСмены.ДатаНачала
		               |				ТОГДА РАЗНОСТЬДАТ(ВТГрафикиСмены.ДатаНачала, ВТГрафикиСмены.ДатаОкончанияСмены, СЕКУНДА)
		               |			КОГДА ВТГрафикиСмены.ДатаОкончанияСмены >= ВТГрафикиСмены.ДатаОкончания
		               |				ТОГДА РАЗНОСТЬДАТ(ВТГрафикиСмены.ДатаНачалаСмены, ВТГрафикиСмены.ДатаОкончания, СЕКУНДА)
		               |			ИНАЧЕ РАЗНОСТЬДАТ(ВТГрафикиСмены.ДатаНачалаСмены, ВТГрафикиСмены.ДатаОкончанияСмены, СЕКУНДА)
		               |		КОНЕЦ) КАК Секунды
		               |ИЗ
		               |	ВТГрафикиСмены КАК ВТГрафикиСмены
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТГрафикиСмены.ОбъектРемонта,
		               |	ВТГрафикиСмены.Показатель,
		               |	ВТГрафикиСмены.ДатаНачала,
		               |	ВТГрафикиСмены.ДатаОкончания";
		
		Запрос.УстановитьПараметр("Таб", ТаблицаПериодовРаботыОборудования);
		Возврат Запрос.Выполнить().Выгрузить();	
	Иначе
		Возврат Неопределено
	КонецЕсли;
	
КонецФункции

// Функция получает интервалы рассчета плановой наработки
//
// Параметры:
//  НаработкаОбъектов - ТаблицаЗначений - таблица наработки объектов.
//  Дата - Дата - дата документа.
//  УчитыватьПростоиОборудования - Булево - флаг учета простоев.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица интервалов наработки.
Функция ПолучитьИнтервалыРасчетаПлановойНаработки(НаработкаОбъектов, Дата, УчитыватьПростоиОборудования = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаДокументаБаза.Объект КАК Справочник.торо_ОбъектыРемонта) КАК Объект,
	|	ТаблицаДокументаБаза.Показатель,
	|	ТаблицаДокументаБаза.ДатаРаботыС,
	|	ТаблицаДокументаБаза.ДатаРаботыПо
	|ПОМЕСТИТЬ ТаблицаДокументаБаза
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокументаБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Объект,
	|	ТаблицаДокумента.Показатель,
	|	ТаблицаДокумента.ДатаРаботыС,
	|	ТаблицаДокумента.ДатаРаботыПо,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ДатаРаботыС = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ТаблицаДокумента.Объект.ДатаВводаВЭксплуатацию
	|		ИНАЧЕ ТаблицаДокумента.ДатаРаботыС
	|	КОНЕЦ КАК ДатаРаботыСДляОтбораСтрок,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ДатаРаботыПо = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА &ДатаДокумента
	|		ИНАЧЕ ТаблицаДокумента.ДатаРаботыПо
	|	КОНЕЦ КАК ДатаРаботыПоДляОтбораСтрок
	|ПОМЕСТИТЬ ТаблицаДокумента";
	Если УчитыватьПростоиОборудования Тогда 
		Запрос.Текст = Запрос.Текст + "0
		|ИЗ
		|	ТаблицаДокументаБаза КАК ТаблицаДокумента
		|;
		|ВЫБРАТЬ
		|	ТаблицаДокумента0.Объект,
		|	ТаблицаДокумента0.Показатель,
		|	ТаблицаДокумента0.ДатаРаботыС,
		|	ТаблицаДокумента0.ДатаРаботыПо,
		|	ТаблицаДокумента0.ДатаРаботыСДляОтбораСтрок,
		|	ТаблицаДокумента0.ДатаРаботыПоДляОтбораСтрок,
		|	МАКСИМУМ(торо_ТекущееСостояниеОР.Период) КАК Период
		|ПОМЕСТИТЬ ТабСостояний
		|ИЗ
		|	ТаблицаДокумента0 КАК ТаблицаДокумента0
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ТекущееСостояниеОР КАК торо_ТекущееСостояниеОР
		|   	ПО ТаблицаДокумента0.Объект = торо_ТекущееСостояниеОР.ОбъектРемонта
		|			И торо_ТекущееСостояниеОР.Период <= ТаблицаДокумента0.ДатаРаботыСДляОтбораСтрок
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента0.Объект,
		|	ТаблицаДокумента0.Показатель,
		|	ТаблицаДокумента0.ДатаРаботыС,
		|	ТаблицаДокумента0.ДатаРаботыПо,
		|	ТаблицаДокумента0.ДатаРаботыСДляОтбораСтрок,
		|	ТаблицаДокумента0.ДатаРаботыПоДляОтбораСтрок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабСостояний.Объект,
		|	ТабСостояний.Показатель,
		|	ТабСостояний.ДатаРаботыС,
		|	ТабСостояний.ДатаРаботыПо,
		|	ТабСостояний.ДатаРаботыСДляОтбораСтрок,
		|	ТабСостояний.ДатаРаботыПоДляОтбораСтрок,
		|	торо_ТекущееСостояниеОР.ВидЭксплуатации.ТипЭксплуатации КАК ТипЭксплуатации
		|ПОМЕСТИТЬ ТаблицаДокумента1
		|ИЗ
		|	ТабСостояний КАК ТабСостояний
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ТекущееСостояниеОР КАК торо_ТекущееСостояниеОР
		|		ПО ТабСостояний.Объект = торо_ТекущееСостояниеОР.ОбъектРемонта
		|			И ТабСостояний.Период = торо_ТекущееСостояниеОР.Период
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	торо_ВремяПростояОборудования.ОбъектРемонта,
		|	торо_ВремяПростояОборудования.Период КАК ДатаОстанова,
		|	торо_ВремяПростояОборудования.ДатаЗапуска,
		|	ТаблицаБаза.Показатель,
		|	ТаблицаБаза.ДатаРаботыС,
		|	ТаблицаБаза.ДатаРаботыПо
		|ПОМЕСТИТЬ ПериодыПростоя
		|ИЗ
		|	РегистрНакопления.торо_ВремяПростояОборудования КАК торо_ВремяПростояОборудования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента1 КАК ТаблицаБаза
		|		ПО торо_ВремяПростояОборудования.ОбъектРемонта = ТаблицаБаза.Объект
		|			И (торо_ВремяПростояОборудования.Период МЕЖДУ ТаблицаБаза.ДатаРаботыСДляОтбораСтрок И ТаблицаБаза.ДатаРаботыПоДляОтбораСтрок
		|				ИЛИ торо_ВремяПростояОборудования.ДатаЗапуска МЕЖДУ ТаблицаБаза.ДатаРаботыСДляОтбораСтрок И ТаблицаБаза.ДатаРаботыПоДляОтбораСтрок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	торо_ОстановленноеОборудование.ОбъектРемонта,
		|	МАКСИМУМ(торо_ОстановленноеОборудование.Период) КАК ДатаОстанова,
		|	ДобавитьКДате(ТаблицаБаза.ДатаРаботыПо, Секунда, 1),
		|	ТаблицаБаза.Показатель,
		|	ТаблицаБаза.ДатаРаботыС,
		|	ТаблицаБаза.ДатаРаботыПо
		|ИЗ
		|	РегистрНакопления.торо_ОстановленноеОборудование КАК торо_ОстановленноеОборудование
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.торо_ОстановленноеОборудование.Остатки(, ) КАК торо_ОстановленноеОборудованиеОстатки
		|		ПО торо_ОстановленноеОборудованиеОстатки.ОбъектРемонта = торо_ОстановленноеОборудование.ОбъектРемонта
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента1 КАК ТаблицаБаза
		|		ПО торо_ОстановленноеОборудование.ОбъектРемонта = ТаблицаБаза.Объект
		|			И торо_ОстановленноеОборудование.Период МЕЖДУ ТаблицаБаза.ДатаРаботыСДляОтбораСтрок И ТаблицаБаза.ДатаРаботыПоДляОтбораСтрок
		|
		|СГРУППИРОВАТЬ ПО
		|	торо_ОстановленноеОборудование.ОбъектРемонта,
		|	ТаблицаБаза.ДатаРаботыПо,
		|	ТаблицаБаза.Показатель,
		|	ТаблицаБаза.ДатаРаботыС,
		|	ТаблицаБаза.ДатаРаботыПо
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыПростоя.ОбъектРемонта,
		|	ПериодыПростоя.Показатель,
		|	ПериодыПростоя.ДатаЗапуска КАК ДатаРаботыСДляОтбораСтрок,
		|	ПериодыПростоя.ДатаРаботыС,
		|	ПериодыПростоя.ДатаРаботыПо
		|ПОМЕСТИТЬ ТаблицаДатНачала
		|ИЗ
		|	ПериодыПростоя КАК ПериодыПростоя
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаБаза.Объект,
		|	ТаблицаБаза.Показатель,
		|	ТаблицаБаза.ДатаРаботыСДляОтбораСтрок,
		|	ТаблицаБаза.ДатаРаботыС,
		|	ТаблицаБаза.ДатаРаботыПо
		|ИЗ
		|	ТаблицаДокумента1 КАК ТаблицаБаза
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыПростоя.ОбъектРемонта,
		|	ПериодыПростоя.Показатель,
		|	ПериодыПростоя.ДатаОстанова КАК ДатаРаботыПоДляОтбораСтрок,
		|	ПериодыПростоя.ДатаРаботыС,
		|	ПериодыПростоя.ДатаРаботыПо
		|ПОМЕСТИТЬ ТаблицаДатОкончания
		|ИЗ
		|	ПериодыПростоя КАК ПериодыПростоя
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаБаза.Объект,
		|	ТаблицаБаза.Показатель,
		|	ТаблицаБаза.ДатаРаботыПоДляОтбораСтрок,
		|	ТаблицаБаза.ДатаРаботыС,
		|	ТаблицаБаза.ДатаРаботыПо
		|ИЗ
		|	ТаблицаДокумента1 КАК ТаблицаБаза
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДатНачала.ОбъектРемонта,
		|	ТаблицаДатНачала.Показатель,
		|	ТаблицаДатНачала.ДатаРаботыСДляОтбораСтрок,
		|	ТаблицаДатНачала.ДатаРаботыС,
		|	ТаблицаДатНачала.ДатаРаботыПо,
		|	ТаблицаБаза.ТипЭксплуатации
		|ПОМЕСТИТЬ ДатыНачала
		|ИЗ
		|	ТаблицаДатНачала КАК ТаблицаДатНачала
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента1 КАК ТаблицаБаза
		|		ПО ТаблицаДатНачала.ОбъектРемонта = ТаблицаБаза.Объект
		|			И ТаблицаДатНачала.Показатель = ТаблицаБаза.Показатель
		|			И ТаблицаДатНачала.ДатаРаботыС = ТаблицаБаза.ДатаРаботыС
		|			И ТаблицаДатНачала.ДатаРаботыПо = ТаблицаБаза.ДатаРаботыПо
		|			И ТаблицаДатНачала.ДатаРаботыСДляОтбораСтрок <= ТаблицаБаза.ДатаРаботыПоДляОтбораСтрок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДатОкончания.ОбъектРемонта,
		|	ТаблицаДатОкончания.Показатель,
		|	ТаблицаДатОкончания.ДатаРаботыПоДляОтбораСтрок,
		|	ТаблицаДатОкончания.ДатаРаботыС,
		|	ТаблицаДатОкончания.ДатаРаботыПо,
		|	ТаблицаБаза.ТипЭксплуатации
		|ПОМЕСТИТЬ ДатыОкончания
		|ИЗ
		|	ТаблицаДатОкончания КАК ТаблицаДатОкончания
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента1 КАК ТаблицаБаза
		|		ПО ТаблицаДатОкончания.ОбъектРемонта = ТаблицаБаза.Объект
		|			И ТаблицаДатОкончания.Показатель = ТаблицаБаза.Показатель
		|			И ТаблицаДатОкончания.ДатаРаботыС = ТаблицаБаза.ДатаРаботыС
		|			И ТаблицаДатОкончания.ДатаРаботыПо = ТаблицаБаза.ДатаРаботыПо
		|			И ТаблицаДатОкончания.ДатаРаботыПоДляОтбораСтрок >= ТаблицаБаза.ДатаРаботыСДляОтбораСтрок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыНачала.ОбъектРемонта КАК Объект,
		|	ДатыНачала.Показатель,
		|	ДатыНачала.ДатаРаботыСДляОтбораСтрок,
		|	МИНИМУМ(ДатыОкончания.ДатаРаботыПоДляОтбораСтрок) КАК ДатаРаботыПоДляОтбораСтрок,
		|	ДатыНачала.ДатаРаботыС,
		|	ДатыНачала.ДатаРаботыПо,
		|	ЕСТЬNULL(ДатыНачала.ТипЭксплуатации, Значение(Перечисление.торо_ТипЭксплуатации.Эксплуатация)) КАК ТипЭксплуатации
		|ПОМЕСТИТЬ ТаблицаДокументаНач
		|ИЗ
		|	ДатыНачала КАК ДатыНачала
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыОкончания КАК ДатыОкончания
		|		ПО ДатыНачала.ОбъектРемонта = ДатыОкончания.ОбъектРемонта
		|			И ДатыНачала.Показатель = ДатыОкончания.Показатель
		|			И ДатыНачала.ДатаРаботыС = ДатыОкончания.ДатаРаботыС
		|			И ДатыНачала.ДатаРаботыПо = ДатыОкончания.ДатаРаботыПо
		|			И ДатыНачала.ДатаРаботыСДляОтбораСтрок < ДатыОкончания.ДатаРаботыПоДляОтбораСтрок
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатыНачала.ОбъектРемонта,
		|	ДатыНачала.Показатель,
		|	ДатыНачала.ДатаРаботыСДляОтбораСтрок,
		|	ДатыНачала.ДатаРаботыС,
		|	ДатыНачала.ДатаРаботыПо,
		|	ДатыНачала.ТипЭксплуатации
		|;
		|ВЫБРАТЬ
		|	ТаблицаДокументаНач.Объект,	
		|   ТаблицаДокументаНач.Показатель,
		|   ТаблицаДокументаНач.ДатаРаботыСДляОтбораСтрок,
		|   ТаблицаДокументаНач.ДатаРаботыПоДляОтбораСтрок,
		|   ТаблицаДокументаНач.ДатаРаботыС,
		|   ТаблицаДокументаНач.ДатаРаботыПо
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ 
		|	ТаблицаДокументаНач КАК ТаблицаДокументаНач
		|ГДЕ
		|	ВЫБОР КОГДА ТаблицаДокументаНач.ДатаРаботыС = ТаблицаДокументаНач.ДатаРаботыСДляОтбораСтрок И ТаблицаДокументаНач.ДатаРаботыПо = ТаблицаДокументаНач.ДатаРаботыПоДляОтбораСтрок ТОГДА
		|		ТаблицаДокументаНач.ТипЭксплуатации	<> ЗНАЧЕНИЕ(Перечисление.торо_ТипЭксплуатации.Простой)
		|	ИНАЧЕ
		|		ИСТИНА
		|КОНЕЦ
		|;";
	Иначе
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	ТаблицаДокументаБаза КАК ТаблицаДокумента
		|;";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст +"   
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Объект,
	|	ТаблицаДокумента.Показатель,
	|	ТаблицаДокумента.ДатаРаботыС,
	|	ТаблицаДокумента.ДатаРаботыПо,
	|	ТаблицаДокумента.ДатаРаботыСДляОтбораСтрок,
	|	ТаблицаДокумента.ДатаРаботыПоДляОтбораСтрок,
	|	ЕСТЬNULL(торо_ПараметрыНаработкиОбъектовРемонта.Период, ТаблицаДокумента.ДатаРаботыС) КАК Период,
	|	ЕСТЬNULL(торо_ПараметрыНаработкиОбъектовРемонта.ПериодПлановойНаработки, ЗНАЧЕНИЕ(Перечисление.Периодичность.День)) КАК ПериодПлановойНаработки,
	|	ЕСТЬNULL(торо_ПараметрыНаработкиОбъектовРемонта.ПродолжительностьПериодаПлановойНаработки, 1) КАК ПродолжительностьПериодаПлановойНаработки,
	|	ЕСТЬNULL(торо_ПараметрыНаработкиОбъектовРемонта.КоэффициентИспользованияОборудования, 1) КАК КоэффициентИспользованияОборудования,
	|	ЕСТЬNULL(торо_ПараметрыНаработкиОбъектовРемонта.ПлановаяНаработка, 0) КАК ПлановаяНаработка
	|ПОМЕСТИТЬ ТаблицаДокументаСПредшествующимиПараметрами
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|		ПО ТаблицаДокумента.Объект = торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта
	|			И ТаблицаДокумента.Показатель = торо_ПараметрыНаработкиОбъектовРемонта.Показатель
	|			И ТаблицаДокумента.ДатаРаботыСДляОтбораСтрок >= торо_ПараметрыНаработкиОбъектовРемонта.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Объект,
	|	ТаблицаДокумента.Показатель,
	|	ТаблицаДокумента.ДатаРаботыС,
	|	ТаблицаДокумента.ДатаРаботыПо,
	|	ТаблицаДокумента.ДатаРаботыСДляОтбораСтрок,
	|	ТаблицаДокумента.ДатаРаботыПоДляОтбораСтрок,
	|	МАКСИМУМ(ТаблицаДокумента.Период) КАК ДатаСреза
	|ПОМЕСТИТЬ ТаблицаДокументаСДатойСреза
	|ИЗ
	|	ТаблицаДокументаСПредшествующимиПараметрами КАК ТаблицаДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Объект,
	|	ТаблицаДокумента.Показатель,
	|	ТаблицаДокумента.ДатаРаботыС,
	|	ТаблицаДокумента.ДатаРаботыПо,
	|	ТаблицаДокумента.ДатаРаботыСДляОтбораСтрок,
	|	ТаблицаДокумента.ДатаРаботыПоДляОтбораСтрок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументаСПредшествующимиПараметрами.Объект,
	|	ТаблицаДокументаСПредшествующимиПараметрами.Показатель,
	|	ТаблицаДокументаСПредшествующимиПараметрами.ДатаРаботыС,
	|	ТаблицаДокументаСПредшествующимиПараметрами.ДатаРаботыПо,
	|	ТаблицаДокументаСПредшествующимиПараметрами.ДатаРаботыСДляОтбораСтрок,
	|	ТаблицаДокументаСПредшествующимиПараметрами.ДатаРаботыПоДляОтбораСтрок,
	|	ТаблицаДокументаСПредшествующимиПараметрами.Период,
	|	ТаблицаДокументаСПредшествующимиПараметрами.ПериодПлановойНаработки,
	|	ТаблицаДокументаСПредшествующимиПараметрами.ПродолжительностьПериодаПлановойНаработки,
	|	ТаблицаДокументаСПредшествующимиПараметрами.КоэффициентИспользованияОборудования,
	|	ТаблицаДокументаСПредшествующимиПараметрами.ПлановаяНаработка
	|ПОМЕСТИТЬ ТаблицаДокументаСНачальнымиПараметрами
	|ИЗ
	|	ТаблицаДокументаСПредшествующимиПараметрами КАК ТаблицаДокументаСПредшествующимиПараметрами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументаСДатойСреза КАК ТаблицаДокументаСДатойСреза
	|		ПО ТаблицаДокументаСПредшествующимиПараметрами.Объект = ТаблицаДокументаСДатойСреза.Объект
	|			И ТаблицаДокументаСПредшествующимиПараметрами.Показатель = ТаблицаДокументаСДатойСреза.Показатель
	|			И ТаблицаДокументаСПредшествующимиПараметрами.ДатаРаботыСДляОтбораСтрок = ТаблицаДокументаСДатойСреза.ДатаРаботыСДляОтбораСтрок
	|			И ТаблицаДокументаСПредшествующимиПараметрами.ДатаРаботыПоДляОтбораСтрок = ТаблицаДокументаСДатойСреза.ДатаРаботыПоДляОтбораСтрок
	|			И ТаблицаДокументаСПредшествующимиПараметрами.Период = ТаблицаДокументаСДатойСреза.ДатаСреза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Объект,
	|	ТаблицаДокумента.Показатель,
	|	ТаблицаДокумента.ДатаРаботыС,
	|	ТаблицаДокумента.ДатаРаботыПо,
	|	ТаблицаДокумента.ДатаРаботыСДляОтбораСтрок,
	|	ТаблицаДокумента.ДатаРаботыПоДляОтбораСтрок,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Период,
	|	торо_ПараметрыНаработкиОбъектовРемонта.ПериодПлановойНаработки,
	|	торо_ПараметрыНаработкиОбъектовРемонта.ПродолжительностьПериодаПлановойНаработки,
	|	торо_ПараметрыНаработкиОбъектовРемонта.КоэффициентИспользованияОборудования,
	|	торо_ПараметрыНаработкиОбъектовРемонта.ПлановаяНаработка
	|ПОМЕСТИТЬ ТаблицаДокументаСПараметрамиЗаИнтервал
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|		ПО ТаблицаДокумента.Объект = торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта
	|			И ТаблицаДокумента.Показатель = торо_ПараметрыНаработкиОбъектовРемонта.Показатель
	|			И ТаблицаДокумента.ДатаРаботыСДляОтбораСтрок <= торо_ПараметрыНаработкиОбъектовРемонта.Период
	|			И ТаблицаДокумента.ДатаРаботыПоДляОтбораСтрок > торо_ПараметрыНаработкиОбъектовРемонта.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Объект,
	|	ТаблицаДокумента.Показатель,
	|	ТаблицаДокумента.ДатаРаботыС,
	|	ТаблицаДокумента.ДатаРаботыПо,
	|	ТаблицаДокумента.ДатаРаботыСДляОтбораСтрок,
	|	ТаблицаДокумента.ДатаРаботыПоДляОтбораСтрок,
	|	ТаблицаДокумента.Период,
	|	ТаблицаДокумента.ПериодПлановойНаработки,
	|	ТаблицаДокумента.ПродолжительностьПериодаПлановойНаработки,
	|	ТаблицаДокумента.КоэффициентИспользованияОборудования,
	|	ТаблицаДокумента.ПлановаяНаработка
	|ПОМЕСТИТЬ ТаблицаДокументаСПараметрами
	|ИЗ
	|	ТаблицаДокументаСПараметрамиЗаИнтервал КАК ТаблицаДокумента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Объект,
	|	ТаблицаДокумента.Показатель,
	|	ТаблицаДокумента.ДатаРаботыС,
	|	ТаблицаДокумента.ДатаРаботыПо,
	|	ТаблицаДокумента.ДатаРаботыСДляОтбораСтрок,
	|	ТаблицаДокумента.ДатаРаботыПоДляОтбораСтрок,
	|	ТаблицаДокумента.ДатаРаботыСДляОтбораСтрок,
	|	ТаблицаДокумента.ПериодПлановойНаработки,
	|	ТаблицаДокумента.ПродолжительностьПериодаПлановойНаработки,
	|	ТаблицаДокумента.КоэффициентИспользованияОборудования,
	|	ТаблицаДокумента.ПлановаяНаработка
	|ИЗ
	|	ТаблицаДокументаСНачальнымиПараметрами КАК ТаблицаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументаСПараметрамиЗаИнтервал.Объект,
	|	ТаблицаДокументаСПараметрамиЗаИнтервал.Показатель,
	|	ТаблицаДокументаСПараметрамиЗаИнтервал.ДатаРаботыС,
	|	ТаблицаДокументаСПараметрамиЗаИнтервал.ДатаРаботыПо,
	|	ТаблицаДокументаСПараметрамиЗаИнтервал.Период КАК НачалоПериода,
	|	ЕСТЬNULL(ТаблицаДокументаСПараметрамиЗаИнтервал1.Период, ТаблицаДокументаСПараметрамиЗаИнтервал.ДатаРаботыПоДляОтбораСтрок) КАК КонецПериода,
	|	ТаблицаДокументаСПараметрамиЗаИнтервал.ПериодПлановойНаработки,
	|	ТаблицаДокументаСПараметрамиЗаИнтервал.ПродолжительностьПериодаПлановойНаработки,
	|	ТаблицаДокументаСПараметрамиЗаИнтервал.КоэффициентИспользованияОборудования,
	|	ТаблицаДокументаСПараметрамиЗаИнтервал.ПлановаяНаработка
	|ПОМЕСТИТЬ СоединениеТаблицСПараметрамиЗаИнтервал
	|ИЗ
	|	ТаблицаДокументаСПараметрами КАК ТаблицаДокументаСПараметрамиЗаИнтервал
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДокументаСПараметрами КАК ТаблицаДокументаСПараметрамиЗаИнтервал1
	|		ПО ТаблицаДокументаСПараметрамиЗаИнтервал.Объект = ТаблицаДокументаСПараметрамиЗаИнтервал1.Объект
	|			И ТаблицаДокументаСПараметрамиЗаИнтервал.Показатель = ТаблицаДокументаСПараметрамиЗаИнтервал1.Показатель
	|			И ТаблицаДокументаСПараметрамиЗаИнтервал.ДатаРаботыС = ТаблицаДокументаСПараметрамиЗаИнтервал1.ДатаРаботыС
	|			И ТаблицаДокументаСПараметрамиЗаИнтервал.ДатаРаботыПо = ТаблицаДокументаСПараметрамиЗаИнтервал1.ДатаРаботыПо
	|			И ТаблицаДокументаСПараметрамиЗаИнтервал.Период < ТаблицаДокументаСПараметрамиЗаИнтервал1.Период
	|			И ТаблицаДокументаСПараметрамиЗаИнтервал.ДатаРаботыПоДляОтбораСтрок > ТаблицаДокументаСПараметрамиЗаИнтервал1.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоединениеТаблицСПараметрамиЗаИнтервал.Объект КАК ОбъектРемонта,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.Показатель,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.ДатаРаботыС,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.ДатаРаботыПо,
	|	МАКСИМУМ(СоединениеТаблицСПараметрамиЗаИнтервал.НачалоПериода) КАК ДатаНачала,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.КонецПериода КАК ДатаОкончания,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.Объект.ПлановыйГрафикРаботы КАК ПлановыйГрафикРаботы,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.ПериодПлановойНаработки,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.ПродолжительностьПериодаПлановойНаработки,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.КоэффициентИспользованияОборудования,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.ПлановаяНаработка,
	|	0 КАК ФактическаяНаработка
	|ИЗ
	|	СоединениеТаблицСПараметрамиЗаИнтервал КАК СоединениеТаблицСПараметрамиЗаИнтервал
	|
	|СГРУППИРОВАТЬ ПО
	|	СоединениеТаблицСПараметрамиЗаИнтервал.Показатель,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.Объект,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.ДатаРаботыС,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.ДатаРаботыПо,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.Объект.ПлановыйГрафикРаботы,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.КонецПериода,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.ПериодПлановойНаработки,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.ПродолжительностьПериодаПлановойНаработки,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.КоэффициентИспользованияОборудования,
	|	СоединениеТаблицСПараметрамиЗаИнтервал.ПлановаяНаработка";
	
	
	Запрос.УстановитьПараметр("ТаблицаДокумента", НаработкаОбъектов);
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	
	Результат = Запрос.Выполнить();
	Возврат Результат.Выгрузить();
	
КонецФункции

// Рассчитывает время работы ОР по периодам
//
// Параметры:
//  ТаблицаПериодовРаботыОборудования - ТаблицаЗначений - таблица периодов.
//  Период - Дата - дата, по которую выполняется рассчет.
//  КопироватьГрафик - Булево - копировать график на будущее, если не заполнен.
//
// Возвращаемое значение:
//  ТаблицаЗначений, Неопределено - таблица периодов наработки.
Функция РассчитатьВремяРаботыОРСПериодами(ТаблицаПериодовРаботыОборудования, Период,КопироватьГрафик = Ложь) Экспорт
	
	Если ТаблицаПериодовРаботыОборудования.Количество() Тогда
		СтрПериод = Строка(Период);
		
		МенеджерВТ = Новый МенеджерВременныхТаблиц;
		
		МассивГрафиков = ТаблицаПериодовРаботыОборудования.ВыгрузитьКолонку("ПлановыйГрафикРаботы");
				
		Запрос = Новый запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТаблицаПериодовРаботыОборудования.ДатаНачала,
		               |	ТаблицаПериодовРаботыОборудования.ДатаОкончания,
		               |	ТаблицаПериодовРаботыОборудования.ПлановыйГрафикРаботы
		               |ПОМЕСТИТЬ ТабПериодов
		               |ИЗ
		               |	&Таб КАК ТаблицаПериодовРаботыОборудования
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НАЧАЛОПЕРИОДА(МИНИМУМ(ТабПериодов.ДатаНачала),"+СтрПериод+") КАК ДатаНачала,
		               |	КОНЕЦПЕРИОДА(МАКСИМУМ(ТабПериодов.ДатаОкончания),"+СтрПериод+") КАК ДатаОкончания
		               |ИЗ
		               |	ТабПериодов КАК ТабПериодов";
					   
		Запрос.УстановитьПараметр("Таб",ТаблицаПериодовРаботыОборудования); 
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			МинДата = Выборка.ДатаНачала;
			МаксДата = Выборка.ДатаОкончания;
		Иначе
			МинДата = ТекущаяДата();
			МаксДата = МинДата;
		КонецЕсли; 
		
		торо_РасчетППР.СоздатьВТРасписанияРаботыНаПериодСКопированиемПериода(МенеджерВТ, МассивГрафиков, МинДата, МаксДата, КопироватьГрафик);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = "ВЫБРАТЬ
		|	ТаблицаПериодовРаботыОборудования.ОбъектРемонта,
		|	ТаблицаПериодовРаботыОборудования.ДатаНачала,
		|	ТаблицаПериодовРаботыОборудования.ДатаОкончания,
		|	ТаблицаПериодовРаботыОборудования.ПлановыйГрафикРаботы,
		|	ТаблицаПериодовРаботыОборудования.Показатель
		|ПОМЕСТИТЬ ТабПериодов
		|ИЗ
		|	&Таб КАК ТаблицаПериодовРаботыОборудования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТРасписанияРаботы.ГрафикРаботы,
		|	ВТРасписанияРаботы.ДатаГрафика,
		|	ВТРасписанияРаботы.НомерДня,
		|	ВТРасписанияРаботы.ВремяНачала,
		|	ВЫБОР
		|		КОГДА МИНУТА(ВТРасписанияРаботы.ВремяОкончания) = 59
		|			ТОГДА ДОБАВИТЬКДАТЕ(ВТРасписанияРаботы.ВремяОкончания, МИНУТА, 1)
		|		ИНАЧЕ ВТРасписанияРаботы.ВремяОкончания
		|	КОНЕЦ КАК ВремяОкончания
		|ПОМЕСТИТЬ ВТРасписанияРаботыИзм
		|ИЗ
		|	ВТРасписанияРаботы КАК ВТРасписанияРаботы    
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	КонецПериода(Максимум(ТаблицаПериодов.ДатаОкончания), "+СтрПериод+") КАК ДатаОкончания,
		|	НачалоПериода(Минимум(ТаблицаПериодов.ДатаНачала), "+СтрПериод+") КАК ДатаНачала,
		|	ТаблицаПериодов.ПлановыйГрафикРаботы
		|ПОМЕСТИТЬ ТабГрафикиПериодов
		|ИЗ
		|	ТабПериодов КАК ТаблицаПериодов
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПериодов.ПлановыйГрафикРаботы      
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТРасписанияРаботы.ГрафикРаботы,
		|	ВТРасписанияРаботы.ДатаГрафика КАК Дата,
		|	ВТРасписанияРаботы.НомерДня,
		|	СУММА(РАЗНОСТЬДАТ(ВТРасписанияРаботы.ВремяНачала, ВТРасписанияРаботы.ВремяОкончания, Час)) КАК Часы
		|ПОМЕСТИТЬ ГрафикиРаботыПоСменам
		|ИЗ
		|	ВТРасписанияРаботыИзм КАК ВТРасписанияРаботы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабГрафикиПериодов КАК ТаблицаПериодов
		|		ПО ВТРасписанияРаботы.ДатаГрафика <= ТаблицаПериодов.ДатаОкончания
		|			И (НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ) <= ВТРасписанияРаботы.ДатаГрафика)
		|			И ВТРасписанияРаботы.ГрафикРаботы = ТаблицаПериодов.ПлановыйГрафикРаботы
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТРасписанияРаботы.ГрафикРаботы,
		|	ВТРасписанияРаботы.ДатаГрафика,
		|	ВТРасписанияРаботы.НомерДня       
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПериодов.ОбъектРемонта,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания,
		|	СУММА(ЕСТЬNULL(ГрафикиРаботыПоСменам.Часы * 3600, 0)) КАК Секунды,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(ГрафикиРаботыПоСменам.Дата, "+СтрПериод+")) КАК ЦелыхПериодов,
		|	ТаблицаПериодов.Показатель
		|ПОМЕСТИТЬ ТаблицаПолныеПериоды
		|ИЗ
		|	ТабПериодов КАК ТаблицаПериодов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ГрафикиРаботыПоСменам КАК ГрафикиРаботыПоСменам
		|		ПО ТаблицаПериодов.ПлановыйГрафикРаботы = ГрафикиРаботыПоСменам.ГрафикРаботы
		|			И (КОНЕЦПЕРИОДА(ТаблицаПериодов.ДатаНачала, "+СтрПериод+") < ГрафикиРаботыПоСменам.Дата)
		|			И (НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, "+СтрПериод+") > ГрафикиРаботыПоСменам.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПериодов.ОбъектРемонта,
		|	ТаблицаПериодов.Показатель,
		|	ТаблицаПериодов.ДатаОкончания,
		|	ТаблицаПериодов.ДатаНачала
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА КОНЕЦПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ) < ГрафикиРаботыПоСменам.Дата
		|					И НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ) > ГрафикиРаботыПоСменам.Дата
		|				ТОГДА ГрафикиРаботыПоСменам.Часы * 3600
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Секунды,
		|	СУММА(ГрафикиРаботыПоСменам.Часы * 3600) КАК СекундыЗаПериод,
		|	ТаблицаПериодов.ОбъектРемонта,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания,
		|	ТаблицаПериодов.Показатель
		|ПОМЕСТИТЬ ТаблицаПолныеДниНачало
		|ИЗ
		|	ТабПериодов КАК ТаблицаПериодов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГрафикиРаботыПоСменам КАК ГрафикиРаботыПоСменам
		|		ПО ТаблицаПериодов.ПлановыйГрафикРаботы = ГрафикиРаботыПоСменам.ГрафикРаботы
		|			И (НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, "+СтрПериод+") <= ГрафикиРаботыПоСменам.Дата)
		|			И (КОНЕЦПЕРИОДА(ТаблицаПериодов.ДатаНачала, "+СтрПериод+") > ГрафикиРаботыПоСменам.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПериодов.ОбъектРемонта,
		|	ТаблицаПериодов.Показатель,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПериодов.ОбъектРемонта,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ) > ГрафикиРаботыПоСменам.Дата
		|					И НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, "+СтрПериод+") <> НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, "+СтрПериод+")
		|				ТОГДА ГрафикиРаботыПоСменам.Часы * 3600
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Секунды,
		|	СУММА(ГрафикиРаботыПоСменам.Часы * 3600) КАК СекундыЗаПериод,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания,
		|	ТаблицаПериодов.Показатель
		|ПОМЕСТИТЬ ТаблицаПолныеДниКонец
		|ИЗ
		|	ТабПериодов КАК ТаблицаПериодов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ГрафикиРаботыПоСменам КАК ГрафикиРаботыПоСменам
		|		ПО ТаблицаПериодов.ПлановыйГрафикРаботы = ГрафикиРаботыПоСменам.ГрафикРаботы
		|			И (КОНЕЦПЕРИОДА(ТаблицаПериодов.ДатаОкончания, "+СтрПериод+") > ГрафикиРаботыПоСменам.Дата)
		|			И (НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, "+СтрПериод+") <= ГрафикиРаботыПоСменам.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПериодов.ОбъектРемонта,
		|	ТаблицаПериодов.Показатель,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПериодов.ОбъектРемонта,
		|	ТаблицаПериодов.ДатаНачала,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ) = НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ)
		|				И РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ), ТаблицаПериодов.ДатаНачала, СЕКУНДА) >= РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА)
		|				И РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ), ТаблицаПериодов.ДатаОкончания, СЕКУНДА) <= РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА)
		|			ТОГДА РАЗНОСТЬДАТ(ТаблицаПериодов.ДатаНачала, ТаблицаПериодов.ДатаОкончания, СЕКУНДА)
		|		КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ), ТаблицаПериодов.ДатаНачала, СЕКУНДА) > РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА)
		|			ТОГДА РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА) - РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, День), ТаблицаПериодов.ДатаНачала, СЕКУНДА)
		|		ИНАЧЕ РАЗНОСТЬДАТ(ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА)
		|	КОНЕЦ КАК Секунды,
		|	ТаблицаПериодов.ДатаОкончания,
		|	ТаблицаПериодов.Показатель
		|ПОМЕСТИТЬ ВремяЗаПервыйДень
		|ИЗ
		|	ВТРасписанияРаботыИзм КАК ВТРасписанияРаботы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабПериодов КАК ТаблицаПериодов
		|		ПО (ТаблицаПериодов.ПлановыйГрафикРаботы = ВТРасписанияРаботы.ГрафикРаботы)
		|			И (ВТРасписанияРаботы.ДатаГрафика = НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ))
		|ГДЕ
		|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ), ТаблицаПериодов.ДатаНачала, СЕКУНДА) <= РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА)
		|	И (НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ)
		|			ИЛИ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ), ТаблицаПериодов.ДатаОкончания, СЕКУНДА) >= РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА)
		|			ИЛИ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ), ТаблицаПериодов.ДатаОкончания, СЕКУНДА) МЕЖДУ РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА) И РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА)
		|				И (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ), ТаблицаПериодов.ДатаНачала, СЕКУНДА) МЕЖДУ РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА) И РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА)))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПериодов.ОбъектРемонта,
		|	ТаблицаПериодов.ДатаНачала,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ) = НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ)
		|				И (РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ), ТаблицаПериодов.ДатаНачала, СЕКУНДА) >= РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА)
		|						И РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ), ТаблицаПериодов.ДатаОкончания, СЕКУНДА) <= РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА)
		|					ИЛИ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ), ТаблицаПериодов.ДатаНачала, СЕКУНДА) < РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА)
		|						И РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ), ТаблицаПериодов.ДатаОкончания, СЕКУНДА) > РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА))
		|			ТОГДА 0
		|		КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ), ТаблицаПериодов.ДатаОкончания, СЕКУНДА) < РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА)
		|			ТОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ), ТаблицаПериодов.ДатаОкончания, СЕКУНДА) - РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА)
		|		ИНАЧЕ РАЗНОСТЬДАТ(ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА)
		|	КОНЕЦ КАК Секунды,
		|	ТаблицаПериодов.ДатаОкончания,
		|	ТаблицаПериодов.Показатель
		|ПОМЕСТИТЬ ВремяЗаПоследнийДень
		|ИЗ
		|	ВТРасписанияРаботыИзм КАК ВТРасписанияРаботы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабПериодов КАК ТаблицаПериодов
		|		ПО (ТаблицаПериодов.ПлановыйГрафикРаботы = ВТРасписанияРаботы.ГрафикРаботы)
		|			И (ВТРасписанияРаботы.ДатаГрафика = НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ))
		|ГДЕ
		|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ), ТаблицаПериодов.ДатаОкончания, СЕКУНДА) >= РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА)
		|	И (НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаНачала, ДЕНЬ) <> НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ)
		|			ИЛИ РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ), ТаблицаПериодов.ДатаОкончания, СЕКУНДА) >= РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяНачала, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)), СЕКУНДА)
		|				И РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТаблицаПериодов.ДатаОкончания, ДЕНЬ), ТаблицаПериодов.ДатаОкончания, СЕКУНДА) < РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0), ЕСТЬNULL(ВТРасписанияРаботы.ВремяОкончания, ДАТАВРЕМЯ(1, 1, 2, 0, 0, 0)), СЕКУНДА))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПолныеДниНачало.ОбъектРемонта,
		|	ТаблицаПолныеДниНачало.Показатель,
		|	ТаблицаПолныеДниНачало.Секунды,
		|	ТаблицаПолныеДниНачало.ДатаНачала,
		|	ТаблицаПолныеДниНачало.ДатаОкончания,
		|	ТаблицаПолныеДниНачало.СекундыЗаПериод
		|ПОМЕСТИТЬ ОбъединениеОтрезковВремениНачало
		|ИЗ
		|	ТаблицаПолныеДниНачало КАК ТаблицаПолныеДниНачало
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВремяЗаПервыйДень.ОбъектРемонта,
		|	ВремяЗаПервыйДень.Показатель,
		|	ВремяЗаПервыйДень.Секунды,
		|	ВремяЗаПервыйДень.ДатаНачала,
		|	ВремяЗаПервыйДень.ДатаОкончания,
		|	0
		|ИЗ
		|	ВремяЗаПервыйДень КАК ВремяЗаПервыйДень
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеОтрезковВремениНачало.ОбъектРемонта,
		|	ОбъединениеОтрезковВремениНачало.Показатель,
		|	СУММА(ОбъединениеОтрезковВремениНачало.Секунды) КАК Секунды,
		|	ОбъединениеОтрезковВремениНачало.ДатаНачала,
		|	ОбъединениеОтрезковВремениНачало.ДатаОкончания,
		|	МАКСИМУМ(ОбъединениеОтрезковВремениНачало.СекундыЗаПериод) КАК СекундыЗаПериод
		|ПОМЕСТИТЬ ОбъединениеОтрезковНачалоСвертка
		|ИЗ
		|	ОбъединениеОтрезковВремениНачало КАК ОбъединениеОтрезковВремениНачало
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеОтрезковВремениНачало.ОбъектРемонта,
		|	ОбъединениеОтрезковВремениНачало.Показатель,
		|	ОбъединениеОтрезковВремениНачало.ДатаНачала,
		|	ОбъединениеОтрезковВремениНачало.ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПолныеДниКонец.ОбъектРемонта,
		|	ТаблицаПолныеДниКонец.Показатель,
		|	ТаблицаПолныеДниКонец.Секунды,
		|	ТаблицаПолныеДниКонец.ДатаНачала,
		|	ТаблицаПолныеДниКонец.ДатаОкончания,
		|	ТаблицаПолныеДниКонец.СекундыЗаПериод
		|ПОМЕСТИТЬ ОбъединениеОтрезковВремениКонец
		|ИЗ
		|	ТаблицаПолныеДниКонец КАК ТаблицаПолныеДниКонец
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВремяЗаПоследнийДень.ОбъектРемонта,
		|	ВремяЗаПоследнийДень.Показатель,
		|	ВремяЗаПоследнийДень.Секунды,
		|	ВремяЗаПоследнийДень.ДатаНачала,
		|	ВремяЗаПоследнийДень.ДатаОкончания,
		|	0
		|ИЗ
		|	ВремяЗаПоследнийДень КАК ВремяЗаПоследнийДень
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеОтрезковВремениКонец.ОбъектРемонта,
		|	ОбъединениеОтрезковВремениКонец.Показатель,
		|	СУММА(ОбъединениеОтрезковВремениКонец.Секунды) КАК Секунды,
		|	ОбъединениеОтрезковВремениКонец.ДатаНачала,
		|	ОбъединениеОтрезковВремениКонец.ДатаОкончания,
		|	МАКСИМУМ(ОбъединениеОтрезковВремениКонец.СекундыЗаПериод) КАК СекундыЗаПериод
		|ПОМЕСТИТЬ ОбъединениеОтрезковКонецСвертка
		|ИЗ
		|	ОбъединениеОтрезковВремениКонец КАК ОбъединениеОтрезковВремениКонец
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеОтрезковВремениКонец.ОбъектРемонта,
		|	ОбъединениеОтрезковВремениКонец.Показатель,
		|	ОбъединениеОтрезковВремениКонец.ДатаНачала,
		|	ОбъединениеОтрезковВремениКонец.ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПолныеПериоды.ОбъектРемонта,
		|	ТаблицаПолныеПериоды.Показатель,
		|	ТаблицаПолныеПериоды.Секунды,
		|	ТаблицаПолныеПериоды.ЦелыхПериодов КАК Периодов,
		|	ТаблицаПолныеПериоды.ДатаНачала,
		|	ТаблицаПолныеПериоды.ДатаОкончания
		|ПОМЕСТИТЬ ОбъединениеОтрезков
		|ИЗ
		|	ТаблицаПолныеПериоды КАК ТаблицаПолныеПериоды
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъединениеОтрезковНачалоСвертка.ОбъектРемонта,
		|	ОбъединениеОтрезковНачалоСвертка.Показатель,
		|	ОбъединениеОтрезковНачалоСвертка.Секунды,
		|	ВЫБОР КОГДА ОбъединениеОтрезковНачалоСвертка.СекундыЗаПериод = 0 ТОГДА 0 ИНАЧЕ 
		|		ВЫРАЗИТЬ(ЕСТЬNULL(ОбъединениеОтрезковНачалоСвертка.Секунды, 0) / ОбъединениеОтрезковНачалоСвертка.СекундыЗаПериод КАК ЧИСЛО(16, 6))
		|	КОНЕЦ,
		|	ОбъединениеОтрезковНачалоСвертка.ДатаНачала,
		|	ОбъединениеОтрезковНачалоСвертка.ДатаОкончания
		|ИЗ
		|	ОбъединениеОтрезковНачалоСвертка КАК ОбъединениеОтрезковНачалоСвертка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъединениеОтрезковКонецСвертка.ОбъектРемонта,
		|	ОбъединениеОтрезковКонецСвертка.Показатель,
		|	ОбъединениеОтрезковКонецСвертка.Секунды,
		|	ВЫБОР КОГДА ОбъединениеОтрезковКонецСвертка.СекундыЗаПериод = 0 ТОГДА 0 ИНАЧЕ
		|		ВЫРАЗИТЬ(ЕСТЬNULL(ОбъединениеОтрезковКонецСвертка.Секунды, 0) / ОбъединениеОтрезковКонецСвертка.СекундыЗаПериод КАК ЧИСЛО(16, 6))
		|	КОНЕЦ,
		|	ОбъединениеОтрезковКонецСвертка.ДатаНачала,
		|	ОбъединениеОтрезковКонецСвертка.ДатаОкончания
		|ИЗ
		|	ОбъединениеОтрезковКонецСвертка КАК ОбъединениеОтрезковКонецСвертка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеОтрезков.ОбъектРемонта,
		|	ОбъединениеОтрезков.Показатель,
		|	ОбъединениеОтрезков.ДатаНачала,
		|	Сумма(ОбъединениеОтрезков.Секунды) КАК Секунды,
		|	ВЫРАЗИТЬ(Сумма(ОбъединениеОтрезков.Периодов)КАК ЧИСЛО(16, 5)) КАК Периодов,
		|	ОбъединениеОтрезков.ДатаОкончания
		|ИЗ
		|	ОбъединениеОтрезков КАК ОбъединениеОтрезков
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеОтрезков.ОбъектРемонта,
		|	ОбъединениеОтрезков.Показатель,
		|	ОбъединениеОтрезков.ДатаНачала,
		|	ОбъединениеОтрезков.ДатаОкончания";
		
		Запрос.УстановитьПараметр("Таб", ТаблицаПериодовРаботыОборудования);
		Возврат Запрос.Выполнить().Выгрузить();
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Функция рассчитывает время работы ОР за полные дни
//
// Параметры:
//  ТаблицаПериодовРаботыОборудования - ТаблицаЗначений - таблица периодов.
//  Период - Дата - дата, по которую выполняется рассчет.
//  КопироватьГрафик - Булево - копировать график на будущее, если не заполнен.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица периодов наработки.
Функция РасчитатьВремяРаботыОРПолныеДни(ТаблицаПериодовРаботыОборудования, Период, КопироватьГрафик = Ложь) Экспорт
	
	Если ТаблицаПериодовРаботыОборудования.Количество() Тогда
		СтрПериод = Строка(Период);
		
		МенеджерВТ = Новый МенеджерВременныхТаблиц;
		
		МассивГрафиков = ТаблицаПериодовРаботыОборудования.ВыгрузитьКолонку("ПлановыйГрафикРаботы");
		Запрос = Новый запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТаблицаПериодовРаботыОборудования.ДатаНачала,
		               |	ТаблицаПериодовРаботыОборудования.ДатаОкончания,
		               |	ТаблицаПериодовРаботыОборудования.ПлановыйГрафикРаботы
		               |ПОМЕСТИТЬ ТабПериодов
		               |ИЗ
		               |	&Таб КАК ТаблицаПериодовРаботыОборудования
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НАЧАЛОПЕРИОДА(МИНИМУМ(ТабПериодов.ДатаНачала),"+СтрПериод+") КАК ДатаНачала,
		               |	КОНЕЦПЕРИОДА(МАКСИМУМ(ТабПериодов.ДатаОкончания),"+СтрПериод+") КАК ДатаОкончания
		               |ИЗ
		               |	ТабПериодов КАК ТабПериодов";
					   
		Запрос.УстановитьПараметр("Таб",ТаблицаПериодовРаботыОборудования); 
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			МинДата = Выборка.ДатаНачала;
			МаксДата = Выборка.ДатаОкончания;
		Иначе
			МинДата = ТекущаяДата();
			МаксДата = МинДата;
		КонецЕсли; 
		
		торо_РасчетППР.СоздатьВТРасписанияРаботыНаПериодСКопированиемПериода(МенеджерВТ, МассивГрафиков, НачалоДня(МинДата), МаксДата,КопироватьГрафик);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = "ВЫБРАТЬ
		|	ТаблицаПериодовРаботыОборудования.ОбъектРемонта,
		|	ТаблицаПериодовРаботыОборудования.ДатаНачала,
		|	ТаблицаПериодовРаботыОборудования.ДатаОкончания,
		|	ТаблицаПериодовРаботыОборудования.ПлановыйГрафикРаботы,
		|	КОНЕЦПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаНачала, "+СтрПериод+") КАК КонецПериодаДатаНачала,
		|	НАЧАЛОПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаОкончания, "+СтрПериод+") КАК НачалоПериодаДатаОкончания,
		|	НАЧАЛОПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаНачала, "+СтрПериод+") КАК НачалоПериодаДатаНачала,
		|	ВЫБОР КОГДА ТаблицаПериодовРаботыОборудования.ДатаОкончания = ДатаВремя(3999,12,31,23,59,59) ТОГДА ДатаВремя(3999,12,31,23,59,59) ИНАЧЕ КОНЕЦПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаОкончания, "+СтрПериод+") КОНЕЦ КАК КонецПериодаДатаОкончания,
		|	НАЧАЛОПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаОкончания, День) КАК НачалоДняДатаОкончания,
		|	НАЧАЛОПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаНачала, ДЕНЬ) КАК НачалоДняДатаНачала,
		|	КОНЕЦПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаОкончания, День) КАК КонецДняДатаОкончания
		|ПОМЕСТИТЬ ТаблицаПериодов1
		|ИЗ
		|	&ТаблицаПериодовРаботыОборудования КАК ТаблицаПериодовРаботыОборудования 
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПериодовРаботыОборудования.ОбъектРемонта,
		|	ТаблицаПериодовРаботыОборудования.ДатаНачала,
		|	ТаблицаПериодовРаботыОборудования.ДатаОкончания,
		|	ТаблицаПериодовРаботыОборудования.ПлановыйГрафикРаботы,
		|	ТаблицаПериодовРаботыОборудования.КонецПериодаДатаНачала,
		|	ТаблицаПериодовРаботыОборудования.НачалоПериодаДатаОкончания,
		|	ТаблицаПериодовРаботыОборудования.НачалоПериодаДатаНачала,
		|	ТаблицаПериодовРаботыОборудования.КонецПериодаДатаОкончания,
		|	ТаблицаПериодовРаботыОборудования.НачалоДняДатаОкончания,
		|	ТаблицаПериодовРаботыОборудования.НачалоДняДатаНачала,
		|	ТаблицаПериодовРаботыОборудования.КонецДняДатаОкончания
		|ПОМЕСТИТЬ ТаблицаПериодов
		|ИЗ
		|	ТаблицаПериодов1 КАК ТаблицаПериодовРаботыОборудования 
		|ГДЕ ТаблицаПериодовРаботыОборудования.ДатаОкончания > ТаблицаПериодовРаботыОборудования.ДатаНачала
		|ИНДЕКСИРОВАТЬ ПО ПлановыйГрафикРаботы, ДатаНачала, ДатаОкончания
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТРасписанияРаботы.ГрафикРаботы,
		|	ВТРасписанияРаботы.ДатаГрафика,
		|	ВТРасписанияРаботы.НомерДня,
		|	ВТРасписанияРаботы.ВремяНачала,
		|	ВЫБОР
		|		КОГДА МИНУТА(ВТРасписанияРаботы.ВремяОкончания) = 59
		|			ТОГДА ДОБАВИТЬКДАТЕ(ВТРасписанияРаботы.ВремяОкончания, МИНУТА, 1)
		|		ИНАЧЕ ВТРасписанияРаботы.ВремяОкончания
		|	КОНЕЦ КАК ВремяОкончания
		|ПОМЕСТИТЬ ВТРасписанияРаботыИзм
		|ИЗ
		|	ВТРасписанияРаботы КАК ВТРасписанияРаботы    
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	КонецПериода(Максимум(ТаблицаПериодов.ДатаОкончания),"+СтрПериод+") КАК ДатаОкончания,
		|	НачалоПериода(Минимум(ТаблицаПериодов.ДатаНачала),"+СтрПериод+") КАК ДатаНачала,
		|	ТаблицаПериодов.ПлановыйГрафикРаботы
		|ПОМЕСТИТЬ ТабГрафикиПериодов
		|ИЗ
		|	ТаблицаПериодов КАК ТаблицаПериодов
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПериодов.ПлановыйГрафикРаботы      
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТРасписанияРаботы.ГрафикРаботы,
		|	ВТРасписанияРаботы.ДатаГрафика КАК Дата,
		|	СУММА(РАЗНОСТЬДАТ(ВТРасписанияРаботы.ВремяНачала, ВТРасписанияРаботы.ВремяОкончания, Час)) КАК Часы
		|ПОМЕСТИТЬ РегистрСведенийГрафикиРаботыПоСменам
		|ИЗ
		|	ВТРасписанияРаботыИзм КАК ВТРасписанияРаботы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабГрафикиПериодов КАК ТаблицаПериодов
		|		ПО ВТРасписанияРаботы.ДатаГрафика <= ТаблицаПериодов.ДатаОкончания
		|			И (ТаблицаПериодов.ДатаНачала <= ВТРасписанияРаботы.ДатаГрафика)
        |			И ВТРасписанияРаботы.ГрафикРаботы = ТаблицаПериодов.ПлановыйГрафикРаботы
		|СГРУППИРОВАТЬ ПО
		|	ВТРасписанияРаботы.ГрафикРаботы,
		|	ВТРасписанияРаботы.ДатаГрафика,
		|	ВТРасписанияРаботы.НомерДня  
		|ИНДЕКСИРОВАТЬ ПО ГрафикРаботы, Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПериодов.ОбъектРемонта,
		|	СУММА(ЕСТЬNULL(ГрафикиРаботыПоСменам.Часы,0) * 3600) КАК Секунды,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания,
		|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(ГрафикиРаботыПоСменам.Дата, "+СтрПериод+")) КАК ЦелыхПериодов
		|ПОМЕСТИТЬ ТаблицаПолныеПериоды
		|ИЗ
		|	ТаблицаПериодов КАК ТаблицаПериодов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийГрафикиРаботыПоСменам КАК ГрафикиРаботыПоСменам
		|		ПО ТаблицаПериодов.ПлановыйГрафикРаботы = ГрафикиРаботыПоСменам.ГрафикРаботы
		|			И (ТаблицаПериодов.КонецПериодаДатаНачала < ГрафикиРаботыПоСменам.Дата)
		|			И (ТаблицаПериодов.НачалоПериодаДатаОкончания > ГрафикиРаботыПоСменам.Дата)
		|			И (ГрафикиРаботыПоСменам.Часы > 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПериодов.ОбъектРемонта,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПериодов.ОбъектРемонта,
		|	СУММА((ВЫБОР
		|			КОГДА (ТаблицаПериодов.ДатаНачала <= ГрафикиРаботыПоСменам.Дата  
		|				И (ТаблицаПериодов.НачалоДняДатаОкончания > ГрафикиРаботыПоСменам.Дата ИЛИ ТаблицаПериодов.НачалоДняДатаОкончания = ГрафикиРаботыПоСменам.Дата И ТаблицаПериодов.ДатаОкончания = ТаблицаПериодов.КонецДняДатаОкончания))
		|					ТОГДА ГрафикиРаботыПоСменам.Часы * 3600
		|			ИНАЧЕ 0
		|		КОНЕЦ)) КАК Секунды,
		|	СУММА(ГрафикиРаботыПоСменам.Часы * 3600) КАК СекундыЗаПериод,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания
		|ПОМЕСТИТЬ ТаблицаПолныеДниНачало
		|ИЗ
		|	ТаблицаПериодов КАК ТаблицаПериодов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийГрафикиРаботыПоСменам КАК ГрафикиРаботыПоСменам
		|		ПО ТаблицаПериодов.ПлановыйГрафикРаботы = ГрафикиРаботыПоСменам.ГрафикРаботы
		|			И (ТаблицаПериодов.НачалоПериодаДатаНачала <= ГрафикиРаботыПоСменам.Дата)
		|			И (ТаблицаПериодов.КонецПериодаДатаНачала > ГрафикиРаботыПоСменам.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПериодов.ОбъектРемонта,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПериодов.ОбъектРемонта,
		|	СУММА((ВЫБОР
		|				КОГДА (ТаблицаПериодов.НачалоДняДатаОкончания > ГрафикиРаботыПоСменам.Дата 
		|						ИЛИ ТаблицаПериодов.НачалоДняДатаОкончания = ГрафикиРаботыПоСменам.Дата И ТаблицаПериодов.ДатаОкончания = ТаблицаПериодов.КонецДняДатаОкончания) 
		|					И ТаблицаПериодов.НачалоПериодаДатаНачала <> ТаблицаПериодов.НачалоПериодаДатаОкончания
		|						ТОГДА ГрафикиРаботыПоСменам.Часы * 3600
		|				ИНАЧЕ 0
		|			КОНЕЦ)) КАК Секунды,
		|	СУММА(ГрафикиРаботыПоСменам.Часы * 3600) КАК СекундыЗаПериод,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания
		|ПОМЕСТИТЬ ТаблицаПолныеДниКонец
		|ИЗ
		|	ТаблицаПериодов КАК ТаблицаПериодов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийГрафикиРаботыПоСменам КАК ГрафикиРаботыПоСменам
		|		ПО ТаблицаПериодов.ПлановыйГрафикРаботы = ГрафикиРаботыПоСменам.ГрафикРаботы
		|			И (ТаблицаПериодов.КонецПериодаДатаОкончания > ГрафикиРаботыПоСменам.Дата)
		|			И (ТаблицаПериодов.НачалоПериодаДатаОкончания <= ГрафикиРаботыПоСменам.Дата)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПериодов.ОбъектРемонта,
		|	ТаблицаПериодов.ДатаНачала,
		|	ТаблицаПериодов.ДатаОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПолныеПериоды.ОбъектРемонта,
		|	ТаблицаПолныеПериоды.Секунды,
		|	ТаблицаПолныеПериоды.ЦелыхПериодов КАК Периодов,
		|	ТаблицаПолныеПериоды.ДатаНачала,
		|	ТаблицаПолныеПериоды.ДатаОкончания
		|ПОМЕСТИТЬ ОбъединениеОтрезков
		|ИЗ
		|	ТаблицаПолныеПериоды КАК ТаблицаПолныеПериоды
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъединениеОтрезковНачалоСвертка.ОбъектРемонта,
		|	ОбъединениеОтрезковНачалоСвертка.Секунды,
		|	Выразить(ЕСТЬNULL(ОбъединениеОтрезковНачалоСвертка.Секунды, 0) / (ВЫБОР КОГДА ОбъединениеОтрезковНачалоСвертка.СекундыЗаПериод = 0 ТОГДА 1 ИНАЧЕ ОбъединениеОтрезковНачалоСвертка.СекундыЗаПериод КОНЕЦ) КАК ЧИСЛО(16, 6)),  
		|	ОбъединениеОтрезковНачалоСвертка.ДатаНачала,
		|	ОбъединениеОтрезковНачалоСвертка.ДатаОкончания
		|ИЗ
		|	ТаблицаПолныеДниНачало КАК ОбъединениеОтрезковНачалоСвертка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОбъединениеОтрезковКонецСвертка.ОбъектРемонта,
		|	ОбъединениеОтрезковКонецСвертка.Секунды,
		|	Выразить(ЕСТЬNULL(ОбъединениеОтрезковКонецСвертка.Секунды, 0) / (ВЫБОР КОГДА ОбъединениеОтрезковКонецСвертка.СекундыЗаПериод = 0 ТОГДА 1 ИНАЧЕ ОбъединениеОтрезковКонецСвертка.СекундыЗаПериод КОНЕЦ) КАК ЧИСЛО(16, 6)),
		|	ОбъединениеОтрезковКонецСвертка.ДатаНачала,
		|	ОбъединениеОтрезковКонецСвертка.ДатаОкончания
		|ИЗ
		|	ТаблицаПолныеДниКонец КАК ОбъединениеОтрезковКонецСвертка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПериодов1.ОбъектРемонта,
		|	ТаблицаПериодов1.ДатаНачала,
		|	СУММА(ЕСТЬNULL(ОбъединениеОтрезков.Секунды,0)) КАК Секунды,
		|	Выразить(СУММА(ЕСТЬNULL(ОбъединениеОтрезков.Периодов,0))  КАК ЧИСЛО(16, 5))КАК Периодов,
		|	ТаблицаПериодов1.ДатаОкончания
		|ИЗ
		|	ТаблицаПериодов1 КАК ТаблицаПериодов1 ЛЕВОЕ СОЕДИНЕНИЕ
		|	ОбъединениеОтрезков КАК ОбъединениеОтрезков
		|		ПО ТаблицаПериодов1.ОбъектРемонта = ОбъединениеОтрезков.ОбъектРемонта
		|			И ТаблицаПериодов1.ДатаНачала = ОбъединениеОтрезков.ДатаНачала
		|           И ТаблицаПериодов1.ДатаОкончания = ОбъединениеОтрезков.ДатаОкончания
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПериодов1.ОбъектРемонта,
		|	ТаблицаПериодов1.ДатаНачала,
		|	ТаблицаПериодов1.ДатаОкончания
		|";
		
		
		Запрос.УстановитьПараметр("ТаблицаПериодовРаботыОборудования", ТаблицаПериодовРаботыОборудования);
		
		Возврат Запрос.Выполнить().Выгрузить();
	Иначе
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
КонецФункции

// Функция рассчитывает время работы ОР за полный период
//
// Параметры:
//  ТаблицаПериодовРаботыОборудования - ТаблицаЗначений - таблица периодов.
//  Период - Дата - дата, по которую выполняется рассчет.
//  КопироватьГрафик - Булево - копировать график на будущее, если не заполнен.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица периодов наработки.
Функция РасчитатьВремяРаботыОРПолныйПериод(ТаблицаПериодовРаботыОборудования, Период, КопироватьГрафик = Ложь) Экспорт
	
	СтрПериод = Строка(Период);

	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	МассивГрафиков = ТаблицаПериодовРаботыОборудования.ВыгрузитьКолонку("ПлановыйГрафикРаботы");
	
	Запрос = Новый запрос;
	Запрос.Текст = "ВЫБРАТЬ
		               |	ТаблицаПериодовРаботыОборудования.ДатаНачала,
		               |	ТаблицаПериодовРаботыОборудования.ДатаОкончания,
		               |	ТаблицаПериодовРаботыОборудования.ПлановыйГрафикРаботы
		               |ПОМЕСТИТЬ ТабПериодов
		               |ИЗ
		               |	&Таб КАК ТаблицаПериодовРаботыОборудования
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НАЧАЛОПЕРИОДА(МИНИМУМ(ТабПериодов.ДатаНачала),"+СтрПериод+") КАК ДатаНачала,
		               |	КОНЕЦПЕРИОДА(МАКСИМУМ(ТабПериодов.ДатаОкончания),"+СтрПериод+") КАК ДатаОкончания
		               |ИЗ
		               |	ТабПериодов КАК ТабПериодов";
					   
	Запрос.УстановитьПараметр("Таб",ТаблицаПериодовРаботыОборудования); 
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		МинДата = Выборка.ДатаНачала;
		МаксДата = Выборка.ДатаОкончания;
	Иначе
		МинДата = ТекущаяДата();
		МаксДата = МинДата;
	КонецЕсли; 

	торо_РасчетППР.СоздатьВТРасписанияРаботыНаПериодСКопированиемПериода(МенеджерВТ, МассивГрафиков, НачалоДня(МинДата), МаксДата,КопироватьГрафик);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаПериодовРаботыОборудования.ОбъектРемонта,
	|	ТаблицаПериодовРаботыОборудования.ДатаНачала,
	|	ТаблицаПериодовРаботыОборудования.ДатаОкончания,
	|	ТаблицаПериодовРаботыОборудования.ПлановыйГрафикРаботы,
	|	КОНЕЦПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаНачала, "+СтрПериод+") КАК КонецПериодаДатаНачала,
	|	НАЧАЛОПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаОкончания, "+СтрПериод+") КАК НачалоПериодаДатаОкончания,
	|	НАЧАЛОПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаНачала, "+СтрПериод+") КАК НачалоПериодаДатаНачала,
	|	КОНЕЦПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаОкончания, "+СтрПериод+") КАК КонецПериодаДатаОкончания,
	|	НАЧАЛОПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаОкончания, День) КАК НачалоДняДатаОкончания,
	|	НАЧАЛОПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаНачала, ДЕНЬ) КАК НачалоДняДатаНачала,
	|	КОНЕЦПЕРИОДА(ТаблицаПериодовРаботыОборудования.ДатаОкончания, День) КАК КонецДняДатаОкончания
	|ПОМЕСТИТЬ ТаблицаПериодов1
	|ИЗ
	|	&ТаблицаПериодовРаботыОборудования КАК ТаблицаПериодовРаботыОборудования 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПериодовРаботыОборудования.ОбъектРемонта,
	|	ТаблицаПериодовРаботыОборудования.ДатаНачала,
	|	ТаблицаПериодовРаботыОборудования.ДатаОкончания,
	|	ТаблицаПериодовРаботыОборудования.ПлановыйГрафикРаботы,
	|	ТаблицаПериодовРаботыОборудования.КонецПериодаДатаНачала,
	|	ТаблицаПериодовРаботыОборудования.НачалоПериодаДатаОкончания,
	|	ТаблицаПериодовРаботыОборудования.НачалоПериодаДатаНачала,
	|	ТаблицаПериодовРаботыОборудования.КонецПериодаДатаОкончания,
	|	ТаблицаПериодовРаботыОборудования.НачалоДняДатаОкончания,
	|	ТаблицаПериодовРаботыОборудования.НачалоДняДатаНачала,
	|	ТаблицаПериодовРаботыОборудования.КонецДняДатаОкончания
	|ПОМЕСТИТЬ ТаблицаПериодов
	|ИЗ
	|	ТаблицаПериодов1 КАК ТаблицаПериодовРаботыОборудования 
	|ГДЕ ТаблицаПериодовРаботыОборудования.ДатаОкончания > ТаблицаПериодовРаботыОборудования.ДатаНачала
	|ИНДЕКСИРОВАТЬ ПО ПлановыйГрафикРаботы, ДатаНачала, ДатаОкончания
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРасписанияРаботы.ГрафикРаботы,
	|	ВТРасписанияРаботы.ДатаГрафика,
	|	ВТРасписанияРаботы.НомерДня,
	|	ВТРасписанияРаботы.ВремяНачала,
	|	ВЫБОР
	|		КОГДА МИНУТА(ВТРасписанияРаботы.ВремяОкончания) = 59
	|			ТОГДА ДОБАВИТЬКДАТЕ(ВТРасписанияРаботы.ВремяОкончания, МИНУТА, 1)
	|		ИНАЧЕ ВТРасписанияРаботы.ВремяОкончания
	|	КОНЕЦ КАК ВремяОкончания
	|ПОМЕСТИТЬ ВТРасписанияРаботыИзм
	|ИЗ
	|	ВТРасписанияРаботы КАК ВТРасписанияРаботы    
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	КонецПериода(Максимум(ТаблицаПериодов.ДатаОкончания),"+СтрПериод+") КАК ДатаОкончания,
	|	НачалоПериода(Минимум(ТаблицаПериодов.ДатаНачала),"+СтрПериод+") КАК ДатаНачала,
	|	ТаблицаПериодов.ПлановыйГрафикРаботы
	|ПОМЕСТИТЬ ТабГрафикиПериодов
	|ИЗ
	|	ТаблицаПериодов КАК ТаблицаПериодов
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПериодов.ПлановыйГрафикРаботы      
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРасписанияРаботы.ГрафикРаботы,
	|	ВТРасписанияРаботы.ДатаГрафика КАК Дата,
	|	СУММА(РАЗНОСТЬДАТ(ВТРасписанияРаботы.ВремяНачала, ВТРасписанияРаботы.ВремяОкончания, Час)) КАК Часы
	|ПОМЕСТИТЬ РегистрСведенийГрафикиРаботыПоСменам
	|ИЗ
	|	ВТРасписанияРаботыИзм КАК ВТРасписанияРаботы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабГрафикиПериодов КАК ТаблицаПериодов
	|		ПО ВТРасписанияРаботы.ДатаГрафика <= ТаблицаПериодов.ДатаОкончания
	|			И (ТаблицаПериодов.ДатаНачала <= ВТРасписанияРаботы.ДатаГрафика)
	|			И ВТРасписанияРаботы.ГрафикРаботы = ТаблицаПериодов.ПлановыйГрафикРаботы
	|СГРУППИРОВАТЬ ПО
	|	ВТРасписанияРаботы.ГрафикРаботы,
	|	ВТРасписанияРаботы.ДатаГрафика,
	|	ВТРасписанияРаботы.НомерДня  
	|ИНДЕКСИРОВАТЬ ПО ГрафикРаботы, Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПериодов.ОбъектРемонта,
	|	СУММА(ЕСТЬNULL(ГрафикиРаботыПоСменам.Часы,0) * 3600) КАК Секунды,
	|	ТаблицаПериодов.ДатаНачала,
	|	ТаблицаПериодов.ДатаОкончания,
	|	КОЛИЧЕСТВО (РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(ГрафикиРаботыПоСменам.Дата, "+СтрПериод+")) КАК ЦелыхПериодов
	|ПОМЕСТИТЬ ТаблицаПолныеПериоды
	|ИЗ
	|	ТаблицаПериодов КАК ТаблицаПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийГрафикиРаботыПоСменам КАК ГрафикиРаботыПоСменам
	|		ПО ТаблицаПериодов.ПлановыйГрафикРаботы = ГрафикиРаботыПоСменам.ГрафикРаботы
	|			И (ТаблицаПериодов.ДатаНачала <= ГрафикиРаботыПоСменам.Дата)
	|			И (ТаблицаПериодов.ДатаОкончания > ГрафикиРаботыПоСменам.Дата)
	|			И (ГрафикиРаботыПоСменам.Часы > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПериодов.ОбъектРемонта,
	|	ТаблицаПериодов.ДатаНачала,
	|	ТаблицаПериодов.ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПолныеПериоды.ОбъектРемонта,
	|	ТаблицаПолныеПериоды.Секунды,
	|	ТаблицаПолныеПериоды.ЦелыхПериодов КАК Периодов,
	|	ТаблицаПолныеПериоды.ДатаНачала,
	|	ТаблицаПолныеПериоды.ДатаОкончания
	|ПОМЕСТИТЬ ОбъединениеОтрезков
	|ИЗ
	|	ТаблицаПолныеПериоды КАК ТаблицаПолныеПериоды
	|
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПериодов1.ОбъектРемонта,
	|	ТаблицаПериодов1.ДатаНачала,
	|	СУММА(ЕСТЬNULL(ОбъединениеОтрезков.Секунды,0)) КАК Секунды,
	|	СУММА(ЕСТЬNULL(ОбъединениеОтрезков.Периодов,0))КАК Периодов,
	|	ТаблицаПериодов1.ДатаОкончания
	|ИЗ
	|	ТаблицаПериодов1 КАК ТаблицаПериодов1 ЛЕВОЕ СОЕДИНЕНИЕ
	|	ОбъединениеОтрезков КАК ОбъединениеОтрезков
	|		ПО ТаблицаПериодов1.ОбъектРемонта = ОбъединениеОтрезков.ОбъектРемонта
	|			И ТаблицаПериодов1.ДатаНачала = ОбъединениеОтрезков.ДатаНачала
	|           И ТаблицаПериодов1.ДатаОкончания = ОбъединениеОтрезков.ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПериодов1.ОбъектРемонта,
	|	ТаблицаПериодов1.ДатаНачала,
	|	ТаблицаПериодов1.ДатаОкончания
	|";
	
	
	Запрос.УстановитьПараметр("ТаблицаПериодовРаботыОборудования", ТаблицаПериодовРаботыОборудования);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

// Рассчитывает наработку в таблице.
//
// Параметры:
//  ТабРемонтныхРабот - ТаблицаЗначений - таблица ремонтных работ.
//  ДатаНачалаПериода - Дата - начало периода расчета.
//  ДатаОкончанияПериода - Дата - конец периода расчета.
//  НаТекДату - Булево - рассчитывать по текущую дату.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица с рассчитанной наработкой.
Функция РассчитатьНаработку(ТабРемонтныхРабот, ДатаНачалаПериода, ДатаОкончанияПериода, НаТекДату = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;	
	
	Если НаТекДату Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	&ТекДата КАК ДатаКон,
		|	НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) КАК ДатаНач, ";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РемонтныеРаботы.ПланируемаяДатаОкончанияРемонта, ДЕНЬ) КАК ДатаКон,
		|	НАЧАЛОПЕРИОДА(РемонтныеРаботы.ПланируемаяДатаНачалаРемонта, ДЕНЬ) КАК ДатаНач, ";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|	РемонтныеРаботы.ВидРемонта КАК ВидРемонтныхРабот,
	|	РемонтныеРаботы.ОбъектРемонта КАК ОбъектРемонтныхРабот,
	|	РемонтныеРаботы.ID_Ремонта КАК ID
	|ПОМЕСТИТЬ ТабДок
	|ИЗ
	|	&РемонтныеРаботы КАК РемонтныеРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабДок.ОбъектРемонтныхРабот КАК ОР,
	|	ТабДок.ОбъектРемонтныхРабот.ТиповойОР КАК РемГр
	|ПОМЕСТИТЬ ТабОР
	|ИЗ
	|	ТабДок КАК ТабДок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_НаработкаОбъектовРемонта.ОбъектРемонта,
	|	торо_НаработкаОбъектовРемонта.Показатель,
	|	торо_НаработкаОбъектовРемонта.Наработка,
	|	ВЫБОР
	|		КОГДА торо_НаработкаОбъектовРемонта.ДатаНач = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА торо_НаработкаОбъектовРемонта.ОбъектРемонта.ДатаВводаВЭксплуатацию
	|		ИНАЧЕ торо_НаработкаОбъектовРемонта.ДатаНач
	|	КОНЕЦ КАК ФактДатаНачала,
	|	&ДатаНач КАК ДатаНач,
	|	торо_НаработкаОбъектовРемонта.ДатаКон КАК ФактДатаОкончания,
	|	ВЫБОР
	|		КОГДА торо_НаработкаОбъектовРемонта.ДатаКон >= &ДатаКон
	|			ТОГДА &ДатаКон
	|		ИНАЧЕ торо_НаработкаОбъектовРемонта.ДатаКон
	|	КОНЕЦ КАК ДатаКон
	|ПОМЕСТИТЬ ТабНаработкиПолная
	|ИЗ
	|	РегистрНакопления.торо_НаработкаОбъектовРемонта КАК торо_НаработкаОбъектовРемонта
	|ГДЕ
	|	торо_НаработкаОбъектовРемонта.ОбъектРемонта В
	|			(ВЫБРАТЬ
	|				ТАб.ОР
	|			ИЗ
	|				ТабОР КАК ТАб)
	|	И торо_НаработкаОбъектовРемонта.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И торо_НаработкаОбъектовРемонта.Наработка <> 0
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабНаработкиПолная.ОбъектРемонта,
	|	ТабНаработкиПолная.Показатель,
	|	ТабНаработкиПолная.Наработка,
	|	ТабНаработкиПолная.ФактДатаНачала КАК ФактДатаНачала,
	|	ТабНаработкиПолная.ДатаНач КАК ДатаНач,
	|	ТабНаработкиПолная.ФактДатаОкончания КАК ФактДатаОкончания,
	|	ТабНаработкиПолная.ДатаКон КАК ДатаКон
	|ПОМЕСТИТЬ ТабНаработки
	|ИЗ
	|	ТабНаработкиПолная КАК ТабНаработкиПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|		ПО (ТабНаработкиПолная.ОбъектРемонта = торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта
	|				И ТабНаработкиПолная.Показатель = торо_ПараметрыНаработкиОбъектовРемонта.Показатель)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабДок.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Период,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель
	|ПОМЕСТИТЬ ТабИзмененийНаработки
	|ИЗ
	|	ТабДок КАК ТабДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|		ПО (торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта = ТабДок.ОбъектРемонтныхРабот)
	|ГДЕ
	|	торо_ПараметрыНаработкиОбъектовРемонта.Период МЕЖДУ торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта.ДатаВводаВЭксплуатацию И &ДатаКон
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ Различные
	|	ТабДок.ОбъектРемонтныхРабот,
	|	торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта.ДатаВводаВЭксплуатацию,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель
	|ИЗ
	|	ТабДок КАК ТабДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|		ПО (торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта = ТабДок.ОбъектРемонтныхРабот)
	|ГДЕ
	|	торо_ПараметрыНаработкиОбъектовРемонта.Период < торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта.ДатаВводаВЭксплуатацию
	|
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабИзмененийНаработки.ОбъектРемонта,
	|	ТабИзмененийНаработки.Период КАК ДатаНач,
	|	ТабИзмененийНаработки.Показатель,
	|	МИНИМУМ(ТабИзмененийНаработки1.Период) КАК ДатаКон
	|ПОМЕСТИТЬ ПериодыНаработки
	|ИЗ
	|	ТабИзмененийНаработки КАК ТабИзмененийНаработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабИзмененийНаработки КАК ТабИзмененийНаработки1
	|		ПО ТабИзмененийНаработки.ОбъектРемонта = ТабИзмененийНаработки1.ОбъектРемонта
	|			И ТабИзмененийНаработки.Показатель = ТабИзмененийНаработки1.Показатель
	|			И ТабИзмененийНаработки.Период < ТабИзмененийНаработки1.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабИзмененийНаработки.ОбъектРемонта,
	|	ТабИзмененийНаработки.Период,
	|	ТабИзмененийНаработки.Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыНаработки.ОбъектРемонта,
	|	ПериодыНаработки.Показатель,
	|	ПериодыНаработки.ДатаНач,
	|	ПериодыНаработки.ДатаКон,
	|	МИНИМУМ(ТабФактНаработки.ФактДатаНачала) КАК ДатаНачФакт,
	|	МАКСИМУМ(ТабФактНаработки.ДатаКон) КАК ДатаКонФакт
	|ПОМЕСТИТЬ ПериодыФакт
	|ИЗ
	|	ПериодыНаработки КАК ПериодыНаработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабНаработки КАК ТабФактНаработки
	|		ПО ПериодыНаработки.ОбъектРемонта = ТабФактНаработки.ОбъектРемонта
	|			И ПериодыНаработки.Показатель = ТабФактНаработки.Показатель
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыНаработки.ОбъектРемонта,
	|	ПериодыНаработки.Показатель,
	|	ПериодыНаработки.ДатаНач,
	|	ПериодыНаработки.ДатаКон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыФакт.ОбъектРемонта,
	|	ПериодыФакт.Показатель,
	|	ВЫБОР
	|		КОГДА ПериодыФакт.ДатаКонФакт ЕСТЬ NULL 
	|			ТОГДА МИНИМУМ(ПериодыФакт.ДатаНач)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(МАКСИМУМ(ПериодыФакт.ДатаКонФакт), СЕКУНДА, 1)
	|	КОНЕЦ КАК ПланНачало
	|ПОМЕСТИТЬ ДатыНачалаПлана
	|ИЗ
	|	ПериодыФакт КАК ПериодыФакт
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыФакт.ОбъектРемонта,
	|	ПериодыФакт.Показатель,
	|	ПериодыФакт.ДатаКонФакт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДок.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	|	ДатыНачалаПлана.Показатель,
	|	ЕСТЬNULL(ДатыНачалаПлана.ПланНачало, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаРаботыС,
	|	ТабДок.ДатаНач КАК ДатаРаботыПо,
	|	ТабДок.ID
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТабДок КАК ТабДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыНачалаПлана КАК ДатыНачалаПлана
	|		ПО ТабДок.ОбъектРемонтныхРабот = ДатыНачалаПлана.ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Результат.ОбъектРемонта КАК Объект,
	|	Результат.Показатель,
	|	Результат.ДатаРаботыС,
	|	Результат.ДатаРаботыПо,
	|	Результат.ID
	|ИЗ
	|	Результат КАК Результат
	|ГДЕ
	|	Результат.ДатаРаботыС < Результат.ДатаРаботыПо";
	
	Запрос.УстановитьПараметр("ДатаНач", ДатаНачалаПериода);
	Запрос.УстановитьПараметр("РемонтныеРаботы", ТабРемонтныхРабот);
	Если НаТекДату Тогда
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Иначе
		Запрос.УстановитьПараметр("ДатаКон", ДатаОкончанияПериода);
	КонецЕсли;
	
	тз1 = Запрос.Выполнить().Выгрузить();
	
	ТаблицаДанныхПоДатамРемонтов = ПолучитьИнтервалыРасчетаПлановойНаработки(тз1, ТекущаяДата());
	
	ВариантыПериодов = ТаблицаДанныхПоДатамРемонтов.Скопировать(,"ПериодПлановойНаработки");
	ВариантыПериодов.Свернуть("ПериодПлановойНаработки",);
	Для Каждого Период Из ВариантыПериодов Цикл
		ТаблицаСПериодом = ТаблицаДанныхПоДатамРемонтов.Скопировать(Новый Структура("ПериодПлановойНаработки", Период.ПериодПлановойНаработки));
		ТаблицаСНаработкой = торо_РаботаСНаработкой.РассчитатьВремяРаботыОРСПериодами(ТаблицаСПериодом,  Период.ПериодПлановойНаработки);
		Для Каждого ЗаписьСНаработкой Из ТаблицаСНаработкой Цикл
			МассивСтрок = ТаблицаДанныхПоДатамРемонтов.НайтиСтроки(Новый Структура("ОбъектРемонта,ДатаНачала,ДатаОкончания, Показатель",
												ЗаписьСНаработкой.ОбъектРемонта,ЗаписьСНаработкой.ДатаНачала,ЗаписьСНаработкой.ДатаОкончания, ЗаписьСНаработкой.Показатель));
												
												
			Для Каждого Строка Из МассивСтрок Цикл
				Строка.ФактическаяНаработка = Строка.ФактическаяНаработка 
												+ ЗаписьСНаработкой.Периодов / ?(Строка.ПродолжительностьПериодаПлановойНаработки = 0,1,Строка.ПродолжительностьПериодаПлановойНаработки) 
														* Строка.КоэффициентИспользованияОборудования * Строка.ПлановаяНаработка;									
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст ="ВЫБРАТЬ
	              |	ТабНаработки.ОбъектРемонта,
	              |	ТабНаработки.Показатель,
	              |	ТабНаработки.Наработка,
	              |	ТабНаработки.ФактДатаНачала КАК ДатаНач,
	              |	ТабНаработки.ДатаКон
	              |ПОМЕСТИТЬ ТабПерФактНаработки
	              |ИЗ
	              |	ТабНаработки КАК ТабНаработки
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабДок КАК ТабДок
	              |		ПО ТабНаработки.ОбъектРемонта = ТабДок.ОбъектРемонтныхРабот
	              |			И (ТабДок.ДатаНач > ТабНаработки.ФактДатаНачала)
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ТабПерФактНаработки.ОбъектРемонта,
	              |	ТабДок.ВидРемонтныхРабот,
	              |	ТабПерФактНаработки.Показатель,
	              |	ТабПерФактНаработки.Наработка,
	              |	ТабПерФактНаработки.ДатаНач,
	              |	ТабПерФактНаработки.ДатаКон,
	              |	ТабДок.ДатаНач КАК ДатаППР,
	              |	ТабДок.ID
	              |ПОМЕСТИТЬ ПериодыФактичНаработки
	              |ИЗ
	              |	ТабПерФактНаработки КАК ТабПерФактНаработки
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ТабДок КАК ТабДок
	              |		ПО ТабПерФактНаработки.ОбъектРемонта = ТабДок.ОбъектРемонтныхРабот
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ПериодыФактичНаработки.ОбъектРемонта,
	              |	ПериодыФактичНаработки.ВидРемонтныхРабот,
	              |	ПериодыФактичНаработки.Показатель,
	              |	ПериодыФактичНаработки.Наработка * 3600 КАК Наработка,
	              |	ВЫБОР
	              |		КОГДА ПериодыФактичНаработки.ДатаКон > ПериодыФактичНаработки.ДатаППР
	              |			ТОГДА РАЗНОСТЬДАТ(ПериодыФактичНаработки.ДатаНач, ПериодыФактичНаработки.ДатаППР, СЕКУНДА)
	              |		ИНАЧЕ NULL
	              |	КОНЕЦ КАК Секунды,
	              |	ВЫБОР
	              |		КОГДА ПериодыФактичНаработки.ДатаКон > ПериодыФактичНаработки.ДатаППР
	              |			ТОГДА РАЗНОСТЬДАТ(ПериодыФактичНаработки.ДатаНач, ПериодыФактичНаработки.ДатаКон, СЕКУНДА)
	              |		ИНАЧЕ NULL
	              |	КОНЕЦ КАК СекундыКонецНачало,
	              |	ПериодыФактичНаработки.ДатаППР,
	              |	ПериодыФактичНаработки.ДатаКон,
	              |	ПериодыФактичНаработки.ДатаНач,
	              |	ПериодыФактичНаработки.ID
	              |ПОМЕСТИТЬ ТабСекунды
	              |ИЗ
	              |	ПериодыФактичНаработки КАК ПериодыФактичНаработки
	              |ГДЕ
	              |	ПериодыФактичНаработки.ДатаНач < ПериодыФактичНаработки.ДатаППР
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТабСекунды.ОбъектРемонта,
	              |	ТабСекунды.ВидРемонтныхРабот,
	              |	ТабСекунды.Показатель,
	              |	СУММА(ВЫБОР
	              |			КОГДА НЕ ТабСекунды.Секунды ЕСТЬ NULL 
	              |				ТОГДА ТабСекунды.Наработка * ТабСекунды.Секунды / ТабСекунды.СекундыКонецНачало / 3600
	              |			ИНАЧЕ ТабСекунды.Наработка / 3600
	              |		КОНЕЦ) КАК ФактНаработка,
	              |	ТабСекунды.ДатаППР,
	              |	ТабСекунды.ID
	              |ПОМЕСТИТЬ ФактическаяНаработка
	              |ИЗ
	              |	ТабСекунды КАК ТабСекунды
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ТабСекунды.ОбъектРемонта,
	              |	ТабСекунды.ВидРемонтныхРабот,
	              |	ТабСекунды.Показатель,
	              |	ТабСекунды.ДатаППР,
	              |	ТабСекунды.ID
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТабПланНаработки.ОбъектРемонта,
	              |	ТабПланНаработки.Показатель,
	              |	ТабПланНаработки.ДатаРаботыС,
	              |	ТабПланНаработки.ДатаРаботыПо,
	              |	ТабПланНаработки.ДатаОкончания,
	              |	ТабПланНаработки.ФактическаяНаработка
	              |ПОМЕСТИТЬ ПлановаяНаработка1
	              |ИЗ
	              |	&ТабПланНаработки КАК ТабПланНаработки
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТабПланНаработки.Объект,
	              |	ТабПланНаработки.Показатель,
	              |	ТабПланНаработки.ДатаРаботыС,
	              |	ТабПланНаработки.ДатаРаботыПо,
	              |	ТабПланНаработки.ID
	              |ПОМЕСТИТЬ ПлановаяНаработка2
	              |ИЗ
	              |	&ТабПлан КАК ТабПланНаработки
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ПлановаяНаработка2.Объект КАК ОбъектРемонта,
	              |	ПлановаяНаработка1.Показатель,
	              |	ПлановаяНаработка2.ДатаРаботыПо КАК ДатаОкончания,
	              |	ЕСТЬNULL(ПлановаяНаработка1.ФактическаяНаработка, 0) КАК ФактическаяНаработка,
	              |	ПлановаяНаработка2.ID
	              |ПОМЕСТИТЬ ПлановаяНаработка
	              |ИЗ
	              |	ПлановаяНаработка2 КАК ПлановаяНаработка2
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ПлановаяНаработка1 КАК ПлановаяНаработка1
	              |		ПО ПлановаяНаработка2.Объект = ПлановаяНаработка1.ОбъектРемонта
	              |			И ПлановаяНаработка2.ДатаРаботыПо = ПлановаяНаработка1.ДатаРаботыПо
	              |			И ПлановаяНаработка2.ДатаРаботыС = ПлановаяНаработка1.ДатаРаботыС
	              |			И ПлановаяНаработка2.Показатель = ПлановаяНаработка1.Показатель
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ПлановаяНаработка.ОбъектРемонта,
	              |	ТабДок.ВидРемонтныхРабот,
	              |	ПлановаяНаработка.Показатель,
	              |	ПлановаяНаработка.ДатаОкончания,
	              |	ПлановаяНаработка.ФактическаяНаработка,
	              |	ПлановаяНаработка.ID
	              |ПОМЕСТИТЬ ПланНаработкаСВидами
	              |ИЗ
	              |	ПлановаяНаработка КАК ПлановаяНаработка
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ТабДок КАК ТабДок
	              |		ПО (ТабДок.ОбъектРемонтныхРабот = ПлановаяНаработка.ОбъектРемонта)
	              |			И (ТабДок.ДатаНач = ПлановаяНаработка.ДатаОкончания)
				  |			И (ТабДок.ID = ПлановаяНаработка.ID)
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ФактическаяНаработка.ОбъектРемонта,
	              |	ФактическаяНаработка.ВидРемонтныхРабот,
	              |	ФактическаяНаработка.Показатель,
	              |	ФактическаяНаработка.ФактНаработка,
	              |	ФактическаяНаработка.ДатаППР,
	              |	ФактическаяНаработка.ID
	              |ПОМЕСТИТЬ ОбъединениеФактПлан
	              |ИЗ
	              |	ФактическаяНаработка КАК ФактическаяНаработка
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	ПланНаработкаСВидами.ОбъектРемонта,
	              |	ПланНаработкаСВидами.ВидРемонтныхРабот,
	              |	ПланНаработкаСВидами.Показатель,
	              |	ПланНаработкаСВидами.ФактическаяНаработка,
	              |	ПланНаработкаСВидами.ДатаОкончания,
	              |	ПланНаработкаСВидами.ID
	              |ИЗ
	              |	ПланНаработкаСВидами КАК ПланНаработкаСВидами
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ОбъединениеФактПлан.ОбъектРемонта КАК ОбъектРемонтныхРабот,
	              |	ОбъединениеФактПлан.ВидРемонтныхРабот,
	              |	ОбъединениеФактПлан.Показатель,
	              |	ОбъединениеФактПлан.ДатаППР КАК ДатаНач,
	              |	ОбъединениеФактПлан.ID,
	              |	СУММА(ВЫБОР
	              |			КОГДА ОбъединениеФактПлан.ФактНаработка < 0
	              |				ТОГДА -ОбъединениеФактПлан.ФактНаработка
	              |			ИНАЧЕ ОбъединениеФактПлан.ФактНаработка
	              |		КОНЕЦ) КАК Наработка
	              |ИЗ
	              |	ОбъединениеФактПлан КАК ОбъединениеФактПлан
	              |ГДЕ
	              |	НЕ ОбъединениеФактПлан.Показатель ЕСТЬ NULL 
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ОбъединениеФактПлан.ОбъектРемонта,
	              |	ОбъединениеФактПлан.ВидРемонтныхРабот,
	              |	ОбъединениеФактПлан.Показатель,
	              |	ОбъединениеФактПлан.ДатаППР,
	              |	ОбъединениеФактПлан.ID";
				  
	Запрос.УстановитьПараметр("ТабПлан", тз1);				
	Запрос.УстановитьПараметр("ТабПланНаработки", ТаблицаДанныхПоДатамРемонтов);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Возврат Запрос.Выполнить().Выгрузить();	
	
КонецФункции

// Рассчитывает наработку в таблице.
//
// Параметры:
//  ТабРемонтныхРабот - ТаблицаЗначений - таблица ремонтных работ.
//  ДатаНачалаПериода - Дата - начало периода расчета.
//  ДатаОкончанияПериода - Дата - конец периода расчета.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица с рассчитанной наработкой.
Функция РассчитатьНаработкуСРемонта(ТабРемонтныхРабот, ДатаНачалаПериода, ДатаОкончанияПериода) Экспорт
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	&ТекДата КАК ДатаКон,
	|	НАЧАЛОПЕРИОДА(РемонтныеРаботы.ДатаНачала, ДЕНЬ) КАК ДатаНач,
	|	РемонтныеРаботы.ВидРемонта КАК ВидРемонтныхРабот,
	|	РемонтныеРаботы.ОбъектРемонта КАК ОбъектРемонтныхРабот,
	|	РемонтныеРаботы.ID_Ремонта КАК ID
	|ПОМЕСТИТЬ ТабДок
	|ИЗ
	|	&РемонтныеРаботы КАК РемонтныеРаботы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабДок.ОбъектРемонтныхРабот КАК ОР,
	|	ТабДок.ОбъектРемонтныхРабот.ТиповойОР КАК РемГр
	|ПОМЕСТИТЬ ТабОР
	|ИЗ
	|	ТабДок КАК ТабДок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	торо_НаработкаОбъектовРемонта.ОбъектРемонта,
	|	торо_НаработкаОбъектовРемонта.Показатель,
	|	торо_НаработкаОбъектовРемонта.Наработка,
	|	ВЫБОР
	|		КОГДА торо_НаработкаОбъектовРемонта.ДатаНач = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА торо_НаработкаОбъектовРемонта.ОбъектРемонта.ДатаВводаВЭксплуатацию
	|		ИНАЧЕ торо_НаработкаОбъектовРемонта.ДатаНач
	|	КОНЕЦ КАК ФактДатаНачала,
	|	&ДатаНач КАК ДатаНач,
	|	торо_НаработкаОбъектовРемонта.ДатаКон КАК ФактДатаОкончания,
	|	ВЫБОР
	|		КОГДА торо_НаработкаОбъектовРемонта.ДатаКон <= &ДатаКон
	|			ТОГДА &ДатаКон
	|		ИНАЧЕ торо_НаработкаОбъектовРемонта.ДатаКон
	|	КОНЕЦ КАК ДатаКон
	|ПОМЕСТИТЬ ТабНаработкиПолная
	|ИЗ
	|	РегистрНакопления.торо_НаработкаОбъектовРемонта КАК торо_НаработкаОбъектовРемонта
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабДок КАК ТабДок
	|	ПО ТабДок.ОбъектРемонтныхРабот = торо_НаработкаОбъектовРемонта.ОбъектРемонта
	|	И ТабДок.ДатаНач <= торо_НаработкаОбъектовРемонта.ДатаКон
	|ГДЕ
	|	торо_НаработкаОбъектовРемонта.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И торо_НаработкаОбъектовРемонта.Наработка <> 0
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабНаработкиПолная.ОбъектРемонта,
	|	ТабНаработкиПолная.Показатель,
	|	ТабНаработкиПолная.Наработка,
	|	ТабНаработкиПолная.ФактДатаНачала КАК ФактДатаНачала,
	|	ТабНаработкиПолная.ДатаНач КАК ДатаНач,
	|	ТабНаработкиПолная.ФактДатаОкончания КАК ФактДатаОкончания,
	|	ТабНаработкиПолная.ДатаКон КАК ДатаКон
	|ПОМЕСТИТЬ ТабНаработки
	|ИЗ
	|	ТабНаработкиПолная КАК ТабНаработкиПолная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|		ПО (ТабНаработкиПолная.ОбъектРемонта = торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта
	|				И ТабНаработкиПолная.Показатель = торо_ПараметрыНаработкиОбъектовРемонта.Показатель)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабДок.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Период,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель
	|ПОМЕСТИТЬ ТабИзмененийНаработки
	|ИЗ
	|	ТабДок КАК ТабДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|		ПО (торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта = ТабДок.ОбъектРемонтныхРабот)
	|И
	|	торо_ПараметрыНаработкиОбъектовРемонта.Период МЕЖДУ торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта.ДатаВводаВЭксплуатацию И &ДатаКон
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТабДок.ОбъектРемонтныхРабот,
	|	МАКСИМУМ(торо_ПараметрыНаработкиОбъектовРемонта.Период),
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель
	|ИЗ
	|	ТабДок КАК ТабДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта КАК торо_ПараметрыНаработкиОбъектовРемонта
	|		ПО (торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта = ТабДок.ОбъектРемонтныхРабот)
	|ГДЕ
	|	торо_ПараметрыНаработкиОбъектовРемонта.Период < торо_ПараметрыНаработкиОбъектовРемонта.ОбъектРемонта.ДатаВводаВЭксплуатацию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабДок.ОбъектРемонтныхРабот,
	|	торо_ПараметрыНаработкиОбъектовРемонта.Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабИзмененийНаработки.ОбъектРемонта,
	|	ТабИзмененийНаработки.Период КАК ДатаНач,
	|	ТабИзмененийНаработки.Показатель,
	|	МИНИМУМ(ТабИзмененийНаработки1.Период) КАК ДатаКон
	|ПОМЕСТИТЬ ПериодыНаработки
	|ИЗ
	|	ТабИзмененийНаработки КАК ТабИзмененийНаработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабИзмененийНаработки КАК ТабИзмененийНаработки1
	|		ПО ТабИзмененийНаработки.ОбъектРемонта = ТабИзмененийНаработки1.ОбъектРемонта
	|			И ТабИзмененийНаработки.Показатель = ТабИзмененийНаработки1.Показатель
	|			И ТабИзмененийНаработки.Период < ТабИзмененийНаработки1.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабИзмененийНаработки.ОбъектРемонта,
	|	ТабИзмененийНаработки.Период,
	|	ТабИзмененийНаработки.Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПериодыНаработки.ОбъектРемонта,
	|	ПериодыНаработки.Показатель,
	|	ПериодыНаработки.ДатаНач,
	|	ПериодыНаработки.ДатаКон,
	|	МИНИМУМ(ТабФактНаработки.ФактДатаНачала) КАК ДатаНачФакт,
	|	МАКСИМУМ(ТабФактНаработки.ФактДатаОкончания) КАК ДатаКонФакт
	|ПОМЕСТИТЬ ПериодыФакт
	|ИЗ
	|	ПериодыНаработки КАК ПериодыНаработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабНаработки КАК ТабФактНаработки
	|		ПО ПериодыНаработки.ОбъектРемонта = ТабФактНаработки.ОбъектРемонта
	|			И ПериодыНаработки.Показатель = ТабФактНаработки.Показатель
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыНаработки.ОбъектРемонта,
	|	ПериодыНаработки.Показатель,
	|	ПериодыНаработки.ДатаНач,
	|	ПериодыНаработки.ДатаКон
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыФакт.ОбъектРемонта,
	|	ПериодыФакт.Показатель,
	|	ВЫБОР
	|		КОГДА ПериодыФакт.ДатаКонФакт ЕСТЬ NULL 
	|			ТОГДА МИНИМУМ(ПериодыФакт.ДатаНач)
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(МАКСИМУМ(ПериодыФакт.ДатаКонФакт), СЕКУНДА, 1)
	|	КОНЕЦ КАК ПланНачало
	|ПОМЕСТИТЬ ДатыНачалаПлана
	|ИЗ
	|	ПериодыФакт КАК ПериодыФакт
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыФакт.ОбъектРемонта,
	|	ПериодыФакт.Показатель,
	|	ПериодыФакт.ДатаКонФакт
	|
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДок.ОбъектРемонтныхРабот КАК ОбъектРемонта,
	|	ДатыНачалаПлана.Показатель,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА ДатыНачалаПлана.ПланНачало > ТабДок.ДатаНач
	|			ТОГДА ДатыНачалаПлана.ПланНачало
	|		ИНАЧЕ ТабДок.ДатаНач
	|	КОНЕЦ, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаРаботыС,
	|	ТабДок.ДатаКон КАК ДатаРаботыПо,
	|	ТабДок.ID
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТабДок КАК ТабДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыНачалаПлана КАК ДатыНачалаПлана
	|		ПО ТабДок.ОбъектРемонтныхРабот = ДатыНачалаПлана.ОбъектРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Результат.ОбъектРемонта КАК Объект,
	|	Результат.Показатель,
	|	Результат.ДатаРаботыС,
	|	Результат.ДатаРаботыПо,
	|	Результат.ID
	|ИЗ
	|	Результат КАК Результат
	|ГДЕ
	|	Результат.ДатаРаботыС < Результат.ДатаРаботыПо";
	
	Запрос.УстановитьПараметр("ДатаНач", ДатаНачалаПериода);
	Запрос.УстановитьПараметр("РемонтныеРаботы", ТабРемонтныхРабот);
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	тз1 = Запрос.Выполнить().Выгрузить();
	
	ТаблицаДанныхПоДатамРемонтов = торо_РаботаСНаработкой.ПолучитьИнтервалыРасчетаПлановойНаработки(тз1, ТекущаяДата());
	
	ВариантыПериодов = ТаблицаДанныхПоДатамРемонтов.Скопировать(,"ПериодПлановойНаработки");
	ВариантыПериодов.Свернуть("ПериодПлановойНаработки",);
	Для Каждого Период Из ВариантыПериодов Цикл
		ТаблицаСПериодом = ТаблицаДанныхПоДатамРемонтов.Скопировать(Новый Структура("ПериодПлановойНаработки", Период.ПериодПлановойНаработки));
		ТаблицаСНаработкой = торо_РаботаСНаработкой.РассчитатьВремяРаботыОРСПериодами(ТаблицаСПериодом,  Период.ПериодПлановойНаработки);
		Для Каждого ЗаписьСНаработкой Из ТаблицаСНаработкой Цикл
			МассивСтрок = ТаблицаДанныхПоДатамРемонтов.НайтиСтроки(Новый Структура("ОбъектРемонта,ДатаНачала,ДатаОкончания, Показатель",
			ЗаписьСНаработкой.ОбъектРемонта,ЗаписьСНаработкой.ДатаНачала,ЗаписьСНаработкой.ДатаОкончания, ЗаписьСНаработкой.Показатель));
			
			
			Для Каждого Строка Из МассивСтрок Цикл
				Строка.ФактическаяНаработка = Строка.ФактическаяНаработка 
				+ ЗаписьСНаработкой.Периодов / ?(Строка.ПродолжительностьПериодаПлановойНаработки = 0,1,Строка.ПродолжительностьПериодаПлановойНаработки) 
				* Строка.КоэффициентИспользованияОборудования * Строка.ПлановаяНаработка;									
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст ="ВЫБРАТЬ
	|	ТабНаработки.ОбъектРемонта,
	|	ТабНаработки.Показатель,
	|	ТабНаработки.Наработка,
	|	ТабНаработки.ФактДатаНачала КАК ДатаНач,
	|	ТабНаработки.ФактДатаОкончания КАК ДатаКон
	|ПОМЕСТИТЬ ТабПерФактНаработки
	|ИЗ
	|	ТабНаработки КАК ТабНаработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабДок КАК ТабДок
	|		ПО ТабНаработки.ОбъектРемонта = ТабДок.ОбъектРемонтныхРабот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабПерФактНаработки.ОбъектРемонта,
	|	ТабДок.ВидРемонтныхРабот,
	|	ТабПерФактНаработки.Показатель,
	|	ТабПерФактНаработки.Наработка,
	|	ТабПерФактНаработки.ДатаНач,
	|	ТабПерФактНаработки.ДатаКон,
	|	ТабДок.ДатаНач КАК ДатаППР,
	|	ТабДок.ID
	|ПОМЕСТИТЬ ПериодыФактичНаработки
	|ИЗ
	|	ТабПерФактНаработки КАК ТабПерФактНаработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабДок КАК ТабДок
	|		ПО ТабПерФактНаработки.ОбъектРемонта = ТабДок.ОбъектРемонтныхРабот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыФактичНаработки.ОбъектРемонта,
	|	ПериодыФактичНаработки.ВидРемонтныхРабот,
	|	ПериодыФактичНаработки.Показатель,
	|	ПериодыФактичНаработки.Наработка * 3600 КАК Наработка,
	|	ВЫБОР
	|		КОГДА ПериодыФактичНаработки.ДатаНач < ПериодыФактичНаработки.ДатаППР
	|			ТОГДА РАЗНОСТЬДАТ(ПериодыФактичНаработки.ДатаППР, ПериодыФактичНаработки.ДатаКон, СЕКУНДА)
	|		ИНАЧЕ РАЗНОСТЬДАТ(ПериодыФактичНаработки.ДатаНач, ПериодыФактичНаработки.ДатаКон, СЕКУНДА)
	|	КОНЕЦ КАК Секунды,
	|	ВЫБОР
	|		КОГДА ПериодыФактичНаработки.ДатаКон > ПериодыФактичНаработки.ДатаППР И ПериодыФактичНаработки.ДатаНач <> ПериодыФактичНаработки.ДатаКон
	|			ТОГДА РАЗНОСТЬДАТ(ПериодыФактичНаработки.ДатаНач, ПериодыФактичНаработки.ДатаКон, СЕКУНДА)
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК СекундыКонецНачало,
	|	ПериодыФактичНаработки.ДатаППР,
	|	ПериодыФактичНаработки.ДатаКон,
	|	ПериодыФактичНаработки.ДатаНач,
	|	ПериодыФактичНаработки.ID
	|ПОМЕСТИТЬ ТабСекунды
	|ИЗ
	|	ПериодыФактичНаработки КАК ПериодыФактичНаработки   
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСекунды.ОбъектРемонта,
	|	ТабСекунды.ВидРемонтныхРабот,
	|	ТабСекунды.Показатель,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ТабСекунды.Секунды ЕСТЬ NULL И НЕ ТабСекунды.СекундыКонецНачало ЕСТЬ NULL
	|				ТОГДА ТабСекунды.Наработка * ТабСекунды.Секунды / ТабСекунды.СекундыКонецНачало / 3600
	|			ИНАЧЕ ТабСекунды.Наработка / 3600
	|		КОНЕЦ) КАК ФактНаработка,
	|	ТабСекунды.ДатаППР,
	|	ТабСекунды.ID
	|ПОМЕСТИТЬ ФактическаяНаработка
	|ИЗ
	|	ТабСекунды КАК ТабСекунды
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСекунды.ОбъектРемонта,
	|	ТабСекунды.ВидРемонтныхРабот,
	|	ТабСекунды.Показатель,
	|	ТабСекунды.ДатаППР,
	|	ТабСекунды.ID            
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабПланНаработки.ОбъектРемонта,
	|	ТабПланНаработки.Показатель,
	|	ТабПланНаработки.ДатаРаботыС,
	|	ТабПланНаработки.ДатаРаботыПо,
	|	ТабПланНаработки.ДатаОкончания,
	|	ТабПланНаработки.ФактическаяНаработка
	|ПОМЕСТИТЬ ПлановаяНаработка1
	|ИЗ
	|	&ТабПланНаработки КАК ТабПланНаработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабПланНаработки.Объект,
	|	ТабПланНаработки.Показатель,
	|	ТабПланНаработки.ДатаРаботыС,
	|	ТабПланНаработки.ДатаРаботыПо,
	|	ТабПланНаработки.ID
	|ПОМЕСТИТЬ ПлановаяНаработка2
	|ИЗ
	|	&ТабПлан КАК ТабПланНаработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлановаяНаработка2.Объект КАК ОбъектРемонта,
	|	ПлановаяНаработка1.Показатель,
	|	ПлановаяНаработка2.ДатаРаботыПо КАК ДатаОкончания,
	|	ЕСТЬNULL(ПлановаяНаработка1.ФактическаяНаработка, 0) КАК ФактическаяНаработка,
	|	ПлановаяНаработка2.ID
	|ПОМЕСТИТЬ ПлановаяНаработка
	|ИЗ
	|	ПлановаяНаработка2 КАК ПлановаяНаработка2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПлановаяНаработка1 КАК ПлановаяНаработка1
	|		ПО ПлановаяНаработка2.Объект = ПлановаяНаработка1.ОбъектРемонта
	|			И ПлановаяНаработка2.ДатаРаботыПо = ПлановаяНаработка1.ДатаРаботыПо
	|			И ПлановаяНаработка2.ДатаРаботыС = ПлановаяНаработка1.ДатаРаботыС
	|			И ПлановаяНаработка2.Показатель = ПлановаяНаработка1.Показатель    
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПлановаяНаработка.ОбъектРемонта,
	|	ТабДок.ВидРемонтныхРабот,
	|	ПлановаяНаработка.Показатель,
	|	ТабДок.ДатаНач,
	|	ПлановаяНаработка.ФактическаяНаработка,
	|	ПлановаяНаработка.ID
	|ПОМЕСТИТЬ ПланНаработкаСВидами
	|ИЗ
	|	ПлановаяНаработка КАК ПлановаяНаработка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабДок КАК ТабДок
	|		ПО (ТабДок.ОбъектРемонтныхРабот = ПлановаяНаработка.ОбъектРемонта)
	|			И (ТабДок.ID = ПлановаяНаработка.ID)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФактическаяНаработка.ОбъектРемонта,
	|	ФактическаяНаработка.ВидРемонтныхРабот,
	|	ФактическаяНаработка.Показатель,
	|	ФактическаяНаработка.ФактНаработка,
	|	ФактическаяНаработка.ДатаППР,
	|	ФактическаяНаработка.ID
	|ПОМЕСТИТЬ ОбъединениеФактПлан
	|ИЗ
	|	ФактическаяНаработка КАК ФактическаяНаработка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПланНаработкаСВидами.ОбъектРемонта,
	|	ПланНаработкаСВидами.ВидРемонтныхРабот,
	|	ПланНаработкаСВидами.Показатель,
	|	ПланНаработкаСВидами.ФактическаяНаработка,
	|	ПланНаработкаСВидами.ДатаНач,
	|	ПланНаработкаСВидами.ID
	|ИЗ
	|	ПланНаработкаСВидами КАК ПланНаработкаСВидами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъединениеФактПлан.ОбъектРемонта КАК ОбъектРемонтныхРабот,
	|	ОбъединениеФактПлан.ВидРемонтныхРабот,
	|	ОбъединениеФактПлан.Показатель,
	|	ОбъединениеФактПлан.ДатаППР КАК ДатаНач,
	|	ОбъединениеФактПлан.ID,
	|	СУММА(ВЫБОР
	|			КОГДА ОбъединениеФактПлан.ФактНаработка < 0
	|				ТОГДА -ОбъединениеФактПлан.ФактНаработка
	|			ИНАЧЕ ОбъединениеФактПлан.ФактНаработка
	|		КОНЕЦ) КАК Наработка
	|ИЗ
	|	ОбъединениеФактПлан КАК ОбъединениеФактПлан
	|ГДЕ
	|	НЕ ОбъединениеФактПлан.Показатель ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъединениеФактПлан.ОбъектРемонта,
	|	ОбъединениеФактПлан.ВидРемонтныхРабот,
	|	ОбъединениеФактПлан.Показатель,
	|	ОбъединениеФактПлан.ДатаППР,
	|	ОбъединениеФактПлан.ID";
	
	Запрос.УстановитьПараметр("ТабПлан", тз1);				
	Запрос.УстановитьПараметр("ТабПланНаработки", ТаблицаДанныхПоДатамРемонтов);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Возврат Запрос.Выполнить().Выгрузить();	
	
КонецФункции

// Функция возвращает таблицу объектов ремонта из переданной в качестве параметра таблицы иерархии, 
// родителями которых является указаный ОР.
//
// Параметры:
//  ТаблицаИерархииОР - ТаблицаЗначений - таблица иерархии ОР.
//  ОбъектРемонта		 - СправочникСсылка.торо_ОбъектыРемонта - объект ремонта.
//  ОРДляКоэф			 - СправочникСсылка.торо_ОбъектыРемонта - объект ремонта, 
//								из которого получается коэффициент пропорциональности.
//  ДатаС				 - Дата - Дата начала проверяемого периода.
//  ДатаПо				 - Дата - Дата окончания проверяемого периода.
//  Показатель			 - СправочникСсылка.ПараметрыВыработкиОС - показатель наработки.
//  ТекКоэффициент	 - Число - текущее значение коэффициента.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица подчиненных обектов ремонта.
//
Функция ПолучитьЗависимыеОР(ТаблицаИерархииОР, ОбъектРемонта, ОРДляКоэф, ДатаС, ДатаПо, Показатель, ТекКоэффициент = 1) Экспорт

	ВспомогательнаяТаблица = ТаблицаИерархииОР.НайтиСтроки(Новый Структура("РодительИерархии",ОбъектРемонта));
	
	ТаблицаЗависимыхОР = Новый ТаблицаЗначений;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.торо_ОбъектыРемонта"));
	ТаблицаЗависимыхОР.Колонки.Добавить("ОбъектИерархии", Новый ОписаниеТипов(МассивТипов));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Число"));
	КЧ = Новый КвалификаторыЧисла(15,3);
	ОписаниеТипаЧисло = Новый ОписаниеТипов(МассивТипов, , , КЧ);
	
	ТаблицаЗависимыхОР.Колонки.Добавить("Коэффициент", ОписаниеТипаЧисло);
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов);
	
	ТаблицаЗависимыхОР.Колонки.Добавить("ДатаНачала",ОписаниеТиповДата);
	ТаблицаЗависимыхОР.Колонки.Добавить("ДатаОкончания",ОписаниеТиповДата);
	
	Если Не ВспомогательнаяТаблица.Количество() = 0 Тогда
		
		Для Каждого СтрокаСвязанныхОР Из ВспомогательнаяТаблица Цикл
			
			ОбъектЯвлГруппой = торо_РаботаСИерархией.ЯвляетсяЛиОбъектГруппой(СтрокаСвязанныхОР.ОбъектИерархии);
			Если ОбъектЯвлГруппой Тогда
				Если ОРДляКоэф = Неопределено Тогда
					ОрДляКоэф = СтрокаСвязанныхОР.РодительИерархии;
				КонецЕсли;
				СтрокиКоэф = Новый Массив;
			ИначеЕсли торо_РаботаСИерархией.ЯвляетсяЛиОбъектГруппой(СтрокаСвязанныхОР.РодительИерархии) Тогда
				СтрокиКоэф = ПолучитьКоэффициентПропорциональности(ОРДляКоэф, СтрокаСвязанныхОР.ОбъектИерархии, Показатель, ДатаПо - 1);
			Иначе
				СтрокиКоэф = ПолучитьКоэффициентПропорциональности(СтрокаСвязанныхОР.РодительИерархии, СтрокаСвязанныхОР.ОбъектИерархии, Показатель, ДатаПо - 1);
			КонецЕсли;
			
			Если СтрокиКоэф.Количество() = 0 Тогда
				Коэф = 1;
				Если ОбъектЯвлГруппой И НЕ ОРДляКоэф = Неопределено Тогда
					ТаблицаПодчиненныхПотомку = ПолучитьЗависимыеОР(ТаблицаИерархииОР, СтрокаСвязанныхОР.ОбъектИерархии, ОРДляКоэф, ДатаС,ДатаПо,Показатель,ТекКоэффициент*Коэф);
				Иначе
					ТаблицаПодчиненныхПотомку = ПолучитьЗависимыеОР(ТаблицаИерархииОР, СтрокаСвязанныхОР.ОбъектИерархии, Неопределено, ДатаС,ДатаПо,Показатель,ТекКоэффициент*Коэф);
				КонецЕсли;
				Если ТаблицаЗависимыхОР = Неопределено Тогда
					ТаблицаЗависимыхОР = ТаблицаПодчиненныхПотомку.Скопировать(,"ОбъектИерархии,Коэффициент,ДатаС,ДатаПо");
				Иначе
					Для Каждого ПодчиненныйПотомкуОР Из ТаблицаПодчиненныхПотомку Цикл
						ДобавляемаяСтрока = ТаблицаЗависимыхОР.Добавить();
						ДобавляемаяСтрока.ОбъектИерархии = ПодчиненныйПотомкуОР.ОбъектИерархии;
						ДобавляемаяСтрока.Коэффициент = ТекКоэффициент * ПодчиненныйПотомкуОР.Коэффициент;
						ДобавляемаяСтрока.ДатаНачала = ПодчиненныйПотомкуОР.ДатаНачала;
						ДобавляемаяСтрока.ДатаОкончания = ПодчиненныйПотомкуОР.ДатаОкончания;
					КонецЦикла;	
				КонецЕсли;
				ДобавляемаяСтрока = ТаблицаЗависимыхОР.Добавить();
				ДобавляемаяСтрока.ОбъектИерархии = СтрокаСвязанныхОР.ОбъектИерархии;
				ДобавляемаяСтрока.Коэффициент = ТекКоэффициент * Коэф;
				ДобавляемаяСтрока.ДатаНачала = ДатаС;
				ДобавляемаяСтрока.ДатаОкончания = ДатаПо;
				
			ИначеЕсли СтрокиКоэф[0].Период < ДатаС Тогда
				Коэф = СтрокиКоэф[0].КоэффициентПересчета;
				
				ТаблицаПодчиненныхПотомку = ПолучитьЗависимыеОР(ТаблицаИерархииОР, СтрокаСвязанныхОР.ОбъектИерархии, Неопределено,ДатаС,ДатаПо,Показатель,ТекКоэффициент*Коэф);
				Если ТаблицаЗависимыхОР = Неопределено Тогда
					ТаблицаЗависимыхОР = ТаблицаПодчиненныхПотомку.Скопировать(,"ОбъектИерархии,Коэффициент,ДатаС,ДатаПо");
					
				Иначе
					Для Каждого ПодчиненныйПотомкуОР Из ТаблицаПодчиненныхПотомку Цикл
						ДобавляемаяСтрока = ТаблицаЗависимыхОР.Добавить();
						ДобавляемаяСтрока.ОбъектИерархии = ПодчиненныйПотомкуОР.ОбъектИерархии;
						ДобавляемаяСтрока.Коэффициент = ТекКоэффициент * ПодчиненныйПотомкуОР.Коэффициент;
						ДобавляемаяСтрока.ДатаНачала = ПодчиненныйПотомкуОР.ДатаНачала;
						ДобавляемаяСтрока.ДатаОкончания = ПодчиненныйПотомкуОР.ДатаОкончания;
					КонецЦикла;	
				КонецЕсли;
				
				ДобавляемаяСтрока = ТаблицаЗависимыхОР.Добавить();
				ДобавляемаяСтрока.ОбъектИерархии = СтрокаСвязанныхОР.ОбъектИерархии;
				ДобавляемаяСтрока.Коэффициент = ТекКоэффициент * Коэф;
				ДобавляемаяСтрока.ДатаНачала = ДатаС;
				ДобавляемаяСтрока.ДатаОкончания = ДатаПо;
			Иначе
				мДатаС = СтрокиКоэф[0].Период;
				Коэф = СтрокиКоэф[0].КоэффициентПересчета;
				мДатаПо = ДатаПо;
				Пока Истина Цикл
					
					
					ТаблицаПодчиненныхПотомку = ПолучитьЗависимыеОР(ТаблицаИерархииОР, СтрокаСвязанныхОР.ОбъектИерархии, Неопределено, мДатаС, мДатаПо,Показатель,ТекКоэффициент*Коэф);
					Если ТаблицаЗависимыхОР = Неопределено Тогда
						ТаблицаЗависимыхОР = ТаблицаПодчиненныхПотомку.Скопировать(,"ОбъектИерархии,Коэффициент,ДатаС,ДатаПо");
					Иначе
						Для Каждого ПодчиненныйПотомкуОР Из ТаблицаПодчиненныхПотомку Цикл
							ДобавляемаяСтрока = ТаблицаЗависимыхОР.Добавить();
							ДобавляемаяСтрока.ОбъектИерархии = ПодчиненныйПотомкуОР.ОбъектИерархии;
							ДобавляемаяСтрока.Коэффициент = ПодчиненныйПотомкуОР.Коэффициент;
							ДобавляемаяСтрока.ДатаНачала = ПодчиненныйПотомкуОР.ДатаНачала;
							ДобавляемаяСтрока.ДатаОкончания = ПодчиненныйПотомкуОР.ДатаОкончания;
						КонецЦикла;	
					КонецЕсли;
					
					ДобавляемаяСтрока = ТаблицаЗависимыхОР.Добавить();
					ДобавляемаяСтрока.ОбъектИерархии = СтрокаСвязанныхОР.ОбъектИерархии;
					ДобавляемаяСтрока.Коэффициент = ТекКоэффициент * Коэф;
					ДобавляемаяСтрока.ДатаНачала = мДатаС;
					ДобавляемаяСтрока.ДатаОкончания = мДатаПо;
					
					Если мДатаС > ДатаС Тогда
						мДатаПо = мДатаС;
						
						Коэф = НайтиПредыдущийКоэффициентПересчета(мДатаПо,СтрокаСвязанныхОР,ОРДляКоэф, Показатель, ТаблицаИерархииОР, ТаблицаЗависимыхОР, ТекКоэффициент, ДатаС, ДатаПо);
											
						мДатаС = ДатаС;
						Если Коэф = Неопределено Тогда
							Прервать;
						КонецЕсли;
					Иначе
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
						
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТаблицаЗависимыхОР.ОбъектИерархии,
	|	ТаблицаЗависимыхОР.ДатаНачала,
	|	ТаблицаЗависимыхОР.ДатаОкончания,
	|	ТаблицаЗависимыхОР.Коэффициент,
	|	&Показатель КАК Показатель
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	&ТаблицаЗависимыхОР КАК ТаблицаЗависимыхОР
	|ГДЕ
	|	ТаблицаЗависимыхОР.ОбъектИерархии ССЫЛКА Справочник.торо_ОбъектыРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблица.ОбъектИерархии,
	|	ВременнаяТаблица.ДатаНачала,
	|	ВременнаяТаблица.ДатаОкончания,
	|	ВременнаяТаблица.Коэффициент КАК Коэффициент,
	|	ВременнаяТаблица.Показатель
	|ИЗ
	|	ВременнаяТаблица КАК ВременнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ПараметрыНаработкиОбъектовРемонта.СрезПоследних КАК торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних
	|		ПО ВременнаяТаблица.ОбъектИерархии = торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.ОбъектРемонта
	|			И ВременнаяТаблица.Показатель = торо_ПараметрыНаработкиОбъектовРемонтаСрезПоследних.Показатель";
	
	Запрос.УстановитьПараметр("ТаблицаЗависимыхОР", ТаблицаЗависимыхОР);
	Запрос.УстановитьПараметр("Показатель",Показатель);
	ТаблицаЗависимыхОРБезГрупп = Запрос.Выполнить().Выгрузить();
	ТаблицаЗависимыхОРБезГрупп.Колонки.Добавить("ПодчиняющийОР");
	ТаблицаЗависимыхОРБезГрупп.ЗаполнитьЗначения(ОбъектРемонта, "ПодчиняющийОР");
	Возврат ТаблицаЗависимыхОРБезГрупп;
	
КонецФункции

// Возвращает структуру со значением и датой последней наработки по объекту ремонта.
//
// Параметры:
//  ОбъектРемонта	 - СправочникСсылка.торо_ОбъектыРемонта - объект ремонта. 
//  Показатель		 - СправочникСсылка.ПараметрыВыработкиОС - показатель наработки. 
//  Ссылка			 - ДокументСсылка.торо_УчетНаработкиОборудования - документ, движения которого не надо учитывать.
// 
// Возвращаемое значение:
//  Структура - структура данных о наработке с полями:
//		* НаработаноДата - Дата - дата, до которой введена наработка.
//		* НаработаноЗначение - Число - значение наработки.
//
Функция ПолучитьТекущееЗначениеНаработки(ОбъектРемонта, Показатель, Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_НаработкаОбъектовРемонтаОстатки.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НаработкаОбъектовРемонтаОстатки.Показатель КАК Показатель,
	|	торо_НаработкаОбъектовРемонтаОстатки.НаработкаОстаток КАК НаработкаОстаток
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.торо_НаработкаОбъектовРемонта.Остатки(
	|			,
	|			ОбъектРемонта = &ОбъектРемонта
	|				И Показатель = &Показатель) КАК торо_НаработкаОбъектовРемонтаОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ПериодыНаработкиОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ПериодыНаработкиОРСрезПоследних.Показатель КАК Показатель,
	|	торо_ПериодыНаработкиОРСрезПоследних.Период КАК Период
	|ПОМЕСТИТЬ ВТ_Даты
	|ИЗ
	|	РегистрСведений.торо_ПериодыНаработкиОР.СрезПоследних(
	|			,
	|			ОбъектРемонта = &ОбъектРемонта
	|				И Показатель = &Показатель
	|				И Регистратор <> &Регистратор) КАК торо_ПериодыНаработкиОРСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Даты.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТ_Даты.Показатель КАК Показатель,
	|	ВТ_Даты.Период КАК НаработаноДата,
	|	ЕСТЬNULL(ВТ_Остатки.НаработкаОстаток, 0) КАК НаработаноЗначение
	|ИЗ
	|	ВТ_Даты КАК ВТ_Даты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	|		ПО ВТ_Даты.ОбъектРемонта = ВТ_Остатки.ОбъектРемонта
	|			И ВТ_Даты.Показатель = ВТ_Остатки.Показатель";
	
	
	Запрос.УстановитьПараметр("Показатель", Показатель);
	Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	Запрос.УстановитьПараметр("Регистратор",Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	СтруктураРезультат = Новый Структура;
	Если Выборка.Следующий() Тогда
		
		СтруктураРезультат.Вставить("НаработаноЗначение", Выборка.НаработаноЗначение);
		СтруктураРезультат.Вставить("НаработаноДата", Выборка.НаработаноДата);
		
	Иначе
		
		СтруктураРезультат.Вставить("НаработаноДата",ОбъектРемонта.ДатаВводаВЭксплуатацию);
		СтруктураРезультат.Вставить("НаработаноЗначение",0);
		
	КонецЕсли;
	
	Возврат СтруктураРезультат;
	
КонецФункции

// Функция определяет значения наработки для каждого объекта в таблице на дату
//
// Параметры:
//		ТаблицаОбъектыРемонта - ТаблицаЗначений - таблица объектов ремонта для получения наработки.
//		Ссылка - ДокументСсылка - ссылка на документ регистратор, который не нужно учитывать.
//
// Возвращаемое значение:
//		ТаблицаЗначений - таблица со значениями наработки.	
//
Функция ТекущееЗначениеНаработкиТаблица(ТаблицаОбъектыРемонта, Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаОбъектыРемонта.ОбъектИерархии КАК Справочник.торо_ОбъектыРемонта) КАК ОбъектРемонта,
	|	ТаблицаОбъектыРемонта.Показатель КАК Показатель,
	|	ТаблицаОбъектыРемонта.Коэффициент КАК Коэффициент,
	|	ТаблицаОбъектыРемонта.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ ВТОбъектыРемонта
	|ИЗ
	|	&ТаблицаОбъектыРемонта КАК ТаблицаОбъектыРемонта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.Показатель КАК Показатель,
	|	СУММА(торо_НаработкаОбъектовРемонтаОстаткиИОбороты.НаработкаПриход) КАК НаработаноЗначение
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.торо_НаработкаОбъектовРемонта.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			(ОбъектРемонта, Показатель) В
	|				(ВЫБРАТЬ
	|					ВТОбъектыРемонта.ОбъектРемонта КАК ОбъектРемонта,
	|					ВТОбъектыРемонта.Показатель
	|				ИЗ
	|					ВТОбъектыРемонта КАК ВТОбъектыРемонта)) КАК торо_НаработкаОбъектовРемонтаОстаткиИОбороты
	|ГДЕ
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.Регистратор <> &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.ОбъектРемонта,
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.Показатель
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ПериодыНаработкиОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ПериодыНаработкиОРСрезПоследних.Показатель КАК Показатель,
	|	торо_ПериодыНаработкиОРСрезПоследних.Период КАК НаработаноДата
	|ПОМЕСТИТЬ ВТ_Даты
	|ИЗ
	|	РегистрСведений.торо_ПериодыНаработкиОР.СрезПоследних(
	|			,
	|			(ОбъектРемонта, Показатель) В
	|					(ВЫБРАТЬ
	|						ВТОбъектыРемонта.ОбъектРемонта КАК ОбъектРемонта,
	|						ВТОбъектыРемонта.Показатель
	|					ИЗ
	|						ВТОбъектыРемонта КАК ВТОбъектыРемонта)
	|				И Регистратор <> &Регистратор) КАК торо_ПериодыНаработкиОРСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъектыРемонта.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТОбъектыРемонта.Показатель КАК Показатель,
	|	ВТОбъектыРемонта.Коэффициент КАК Коэффициент,
	|	ВТОбъектыРемонта.ДатаНачала КАК ДатаНачала,
	|	ЕСТЬNULL(ВТ_Даты.НаработаноДата, ВТОбъектыРемонта.ОбъектРемонта.ДатаВводаВЭксплуатацию) КАК НаработаноДата,
	|	ВТОбъектыРемонта.Коэффициент * ЕСТЬNULL(ВТ_Остатки.НаработаноЗначение, 0) КАК НаработаноЗначение
	|ПОМЕСТИТЬ ИтогТабл
	|ИЗ
	|	ВТОбъектыРемонта КАК ВТОбъектыРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Даты КАК ВТ_Даты
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	|			ПО ВТ_Даты.ОбъектРемонта = ВТ_Остатки.ОбъектРемонта
	|				И ВТ_Даты.Показатель = ВТ_Остатки.Показатель
	|		ПО ВТОбъектыРемонта.ОбъектРемонта = ВТ_Даты.ОбъектРемонта
	|			И ВТОбъектыРемонта.Показатель = ВТ_Даты.Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ИтогТабл.НаработаноЗначение) КАК НаработаноЗначение,
	|	МАКСИМУМ(ИтогТабл.НаработаноДата) КАК НаработаноДата,
	|	ИтогТабл.ОбъектРемонта КАК ОбъектРемонта,
	|	МИНИМУМ(ИтогТабл.ДатаНачала) КАК ДатаНачала,
	|	ИтогТабл.Показатель КАК Показатель
	|ИЗ
	|	ИтогТабл КАК ИтогТабл
	|
	|СГРУППИРОВАТЬ ПО
	|	ИтогТабл.Показатель,
	|	ИтогТабл.ОбъектРемонта
	|
	|УПОРЯДОЧИТЬ ПО
	|	МАКСИМУМ(ИтогТабл.НаработаноДата) УБЫВ";
	
	
	Запрос.УстановитьПараметр("ТаблицаОбъектыРемонта", ТаблицаОбъектыРемонта);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
		
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Функция определяет значения наработки на дату.
//
//	Параметры:
//		Док - ДокументСсылка - ссылка на документ регистратор, который нужно игнорировать.
//		ОбъектРемонта - СправочникСсылка.торо_ОбъектыРемонта - объект ремонта, наработка которого получется.
//		Показатель - СправочникСсылка.ПараметрыВыработкиОС - параметр наработки.
//
//	Возвращаемое значение:
//		Число - значение наработки.
Функция АбсолютноеЗначениеНаработки(Документ, ОбъектРемонта,Показатель) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(торо_НаработкаОбъектовРемонтаОстаткиИОбороты.НаработкаПриход), 0) КАК НаработаноЗначение
	|ИЗ
	|	РегистрНакопления.торо_НаработкаОбъектовРемонта.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			ОбъектРемонта = &ОбъектРемонта
	|				И Показатель = &Показатель) КАК торо_НаработкаОбъектовРемонтаОстаткиИОбороты
	|ГДЕ
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.Регистратор <> &Регистратор";
	
	Запрос.УстановитьПараметр("Показатель", Показатель);
	Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	Запрос.УстановитьПараметр("Регистратор", Документ);
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.НаработаноЗначение;
	Иначе
		Возврат 0;
	КонецЕсли;

КонецФункции

// Функция определяет значения наработки для каждого объекта в таблице на дату
//
// Параметры:
//		ТаблицаОбъектыРемонта - ТаблицаЗначений - таблица объектов ремонта для получения наработки.
//		Ссылка - ДокументСсылка - ссылка на документ регистратор, который не нужно учитывать.
//
// Возвращаемое значение:
//		ТаблицаЗначений - таблица со значениями абсолютной наработки.
Функция АбсолютноеЗначениеНаработкиТаблица(ТаблицаОбъектыРемонта, Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаОбъектыРемонта.ОбъектРемонта КАК Справочник.торо_ОбъектыРемонта) КАК ОбъектРемонта,
	|	ТаблицаОбъектыРемонта.Показатель КАК Показатель,
	|	ТаблицаОбъектыРемонта.Коэффициент КАК Коэффициент,
	|	ТаблицаОбъектыРемонта.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ ВТОбъектыРемонта
	|ИЗ
	|	&ТаблицаОбъектыРемонта КАК ТаблицаОбъектыРемонта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.Показатель КАК Показатель,
	|	СУММА(торо_НаработкаОбъектовРемонтаОстаткиИОбороты.НаработкаПриход) КАК НаработаноЗначение,
	|	СУММА(торо_НаработкаОбъектовРемонтаОстаткиИОбороты.НаработкаОборот) КАК НаработкаКонечныйОстаток
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.торо_НаработкаОбъектовРемонта.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			(ОбъектРемонта, Показатель) В
	|				(ВЫБРАТЬ
	|					ВТОбъектыРемонта.ОбъектРемонта КАК ОбъектРемонта,
	|					ВТОбъектыРемонта.Показатель
	|				ИЗ
	|					ВТОбъектыРемонта КАК ВТОбъектыРемонта)) КАК торо_НаработкаОбъектовРемонтаОстаткиИОбороты
	|ГДЕ
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.Регистратор <> &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.ОбъектРемонта,
	|	торо_НаработкаОбъектовРемонтаОстаткиИОбороты.Показатель
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_ПериодыНаработкиОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ПериодыНаработкиОРСрезПоследних.Показатель КАК Показатель,
	|	торо_ПериодыНаработкиОРСрезПоследних.Период КАК НаработаноДата
	|ПОМЕСТИТЬ ВТ_Даты
	|ИЗ
	|	РегистрСведений.торо_ПериодыНаработкиОР.СрезПоследних(
	|			,
	|			(ОбъектРемонта, Показатель) В
	|					(ВЫБРАТЬ
	|						ВТОбъектыРемонта.ОбъектРемонта КАК ОбъектРемонта,
	|						ВТОбъектыРемонта.Показатель
	|					ИЗ
	|						ВТОбъектыРемонта КАК ВТОбъектыРемонта)
	|				И Регистратор <> &Регистратор) КАК торо_ПериодыНаработкиОРСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбъектыРемонта.ОбъектРемонта КАК ОбъектРемонта,
	|	ВТОбъектыРемонта.Коэффициент КАК Коэффициент,
	|	ВТОбъектыРемонта.Показатель КАК Показатель,
	|	ВТОбъектыРемонта.ДатаНачала КАК ДатаНачала,
	|	ЕСТЬNULL(ВТ_Остатки.НаработаноЗначение, 0) КАК НаработаноЗначение,
	|	ЕСТЬNULL(ВТ_Остатки.НаработкаКонечныйОстаток, 0) КАК ЗафиксированнаяНаработка,
	|	ЕСТЬNULL(ВТ_Даты.НаработаноДата, ВТОбъектыРемонта.ОбъектРемонта.ДатаВводаВЭксплуатацию) КАК НаработаноДата
	|ПОМЕСТИТЬ ИтогТабл
	|ИЗ
	|	ВТОбъектыРемонта КАК ВТОбъектыРемонта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Даты КАК ВТ_Даты
	|		ПО ВТОбъектыРемонта.ОбъектРемонта = ВТ_Даты.ОбъектРемонта
	|			И ВТОбъектыРемонта.Показатель = ВТ_Даты.Показатель
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ВТ_Остатки
	|		ПО (ВТ_Даты.ОбъектРемонта = ВТ_Остатки.ОбъектРемонта)
	|			И (ВТ_Даты.Показатель = ВТ_Остатки.Показатель)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ИтогТабл.НаработаноЗначение) КАК АбсолютнаяНаработка,
	|	МАКСИМУМ(ИтогТабл.НаработаноДата) КАК ДатаНаработка,
	|	ИтогТабл.ОбъектРемонта КАК ОбъектРемонта,
	|	ИтогТабл.Показатель КАК Показатель,
	|	МИНИМУМ(ИтогТабл.ДатаНачала) КАК ДатаНачала,
	|	СУММА(ИтогТабл.ЗафиксированнаяНаработка * ИтогТабл.Коэффициент) КАК ЗафиксированнаяНаработка
	|ИЗ
	|	ИтогТабл КАК ИтогТабл
	|
	|СГРУППИРОВАТЬ ПО
	|	ИтогТабл.Показатель,
	|	ИтогТабл.ОбъектРемонта
	|
	|УПОРЯДОЧИТЬ ПО
	|	МАКСИМУМ(ИтогТабл.НаработаноДата) УБЫВ";
	
	Запрос.УстановитьПараметр("ТаблицаОбъектыРемонта", ТаблицаОбъектыРемонта);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

// Возвращает объекты ремонта, по поторым есть зарегистрированная наработка
// на дату более позднюю, чем в таблице из параметра.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблицей с таблицей "торо_УчетНаработкиОборудованияНаработкаОбъектов",
//										содержащей поля Объект, Показатель, ДатаРаботыПо.
//
// Возвращаемое значение:
//		РезультатЗапроса - результат запроса, с клонками Объект, Показатель, ДатаРаботыПо, ДатаКон.
//
Функция ПолучитьОбъектыРемонтаСНаработкойВБудущем(МенеджерВременныхТаблиц, Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	торо_ПериодыНаработкиОРСрезПоследних.ОбъектРемонта КАК ОбъектРемонта,
	|	торо_ПериодыНаработкиОРСрезПоследних.Показатель КАК Показатель,
	|	торо_ПериодыНаработкиОРСрезПоследних.Период КАК Период
	|ПОМЕСТИТЬ ВТ_Даты
	|ИЗ
	|	РегистрСведений.торо_ПериодыНаработкиОР.СрезПоследних(
	|			,
	|			(ОбъектРемонта, Показатель) В
	|					(ВЫБРАТЬ
	|						торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект КАК Объект,
	|						торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель
	|					ИЗ
	|						торо_УчетНаработкиОборудованияНаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов)
	|				И Регистратор <> &Ссылка) КАК торо_ПериодыНаработкиОРСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектРемонта,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект КАК Объект,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель КАК Показатель,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыПо КАК ДатаРаботыПо,
	|	ВТ_Даты.Период КАК ДатаКон
	|ИЗ
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Даты КАК ВТ_Даты
	|		ПО торо_УчетНаработкиОборудованияНаработкаОбъектов.Объект = ВТ_Даты.ОбъектРемонта
	|			И торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель = ВТ_Даты.Показатель
	|ГДЕ
	|	ВТ_Даты.Период > торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаРаботыПо";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Возврат Результат;
	
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура РаспространитьНаработкуНаПодчиненныхДляТекСтроки(ТекСтрокаНаработкаОбъектов, ТабЗначенийНаработкиПодчиненных, ТаблицаПодчиненныхОР, Объект) Экспорт
	
	ТаблицаИнтервалов = Новый ТаблицаЗначений;
	ТаблицаИнтервалов.Колонки.Добавить("ОбъектРемонта", Новый ОписаниеТипов("СправочникСсылка.торо_ОбъектыРемонта"));
	ТаблицаИнтервалов.Колонки.Добавить("ПлановыйГрафикРаботы", Новый ОписаниеТипов("СправочникСсылка.Календари"));
	ТаблицаИнтервалов.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	ТаблицаИнтервалов.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	ТаблицаИнтервалов.Колонки.Добавить("Показатель", Новый ОписаниеТипов("СправочникСсылка.ПараметрыВыработкиОС"));
	
	НСТаблицаИнтервалов = ТаблицаИнтервалов.Вставить(0);
	НСТаблицаИнтервалов.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.Объект;
	НСТаблицаИнтервалов.ПлановыйГрафикРаботы = ПолучитьЗначениеПлановогоГрафикаРаботОбъектаРемонта(ТекСтрокаНаработкаОбъектов.Объект);
	НСТаблицаИнтервалов.ДатаНачала = ТекСтрокаНаработкаОбъектов.ДатаРаботыС;
	НСТаблицаИнтервалов.ДатаОкончания = ТекСтрокаНаработкаОбъектов.ДатаРаботыПо;
	НСТаблицаИнтервалов.Показатель = ТекСтрокаНаработкаОбъектов.Показатель;
	
	ТабВозврата = торо_РаботаСНаработкой.РасчитатьВремяРаботыОР(ТаблицаИнтервалов.Скопировать(), ПредопределенноеЗначение("Перечисление.Периодичность.День"));
	
	ВремяРаботыГоловногоОбъекта = ТабВозврата.НайтиСтроки(Новый Структура("ОбъектРемонта,ДатаНачала",
		ТекСтрокаНаработкаОбъектов.Объект,ТекСтрокаНаработкаОбъектов.ДатаРаботыС))[0].Секунды;
		
	ТаблицаИнтервалов.Очистить();			
	
	Для Каждого ОР ИЗ ТаблицаПодчиненныхОР Цикл
		НСТаблицаИнтервалов = ТаблицаИнтервалов.Добавить();
		НСТаблицаИнтервалов.ОбъектРемонта = ТекСтрокаНаработкаОбъектов.Объект;
		НСТаблицаИнтервалов.ПлановыйГрафикРаботы = ТекСтрокаНаработкаОбъектов.Объект.ПлановыйГрафикРаботы;
		ДатаВвода = ОР.ОбъектИерархии.ДатаВводаВЭксплуатацию;
		НСТаблицаИнтервалов.ДатаНачала = ?(ДатаВвода > ОР.ДатаНачала,ДатаВвода,ОР.ДатаНачала);
		НСТаблицаИнтервалов.ДатаОкончания = ОР.ДатаОкончания;
		НСТаблицаИнтервалов.Показатель = ТекСтрокаНаработкаОбъектов.Показатель;
	КонецЦикла;
	
	ТабДляРассчетаВремениРаботы = ТаблицаИнтервалов.Скопировать();
	ТабДляРассчетаВремениРаботы.Свернуть("ОбъектРемонта,ПлановыйГрафикРаботы,ДатаНачала,ДатаОкончания,Показатель",);
	
	ТаблицаСВременемРаботы = торо_РаботаСНаработкой.РасчитатьВремяРаботыОР(ТабДляРассчетаВремениРаботы, ПредопределенноеЗначение("Перечисление.Периодичность.День"));
	
	ТабПодчиненныхССумНаработкой = ТаблицаПодчиненныхОР.Скопировать();
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Число"));   
	ОписаниеТиповЧисло = Новый ОписаниеТипов(МассивТипов);
	ТабПодчиненныхССумНаработкой.Колонки.Добавить("СуммНаработка",ОписаниеТиповЧисло);
	Для Каждого СтрокаСЗависимымОР ИЗ ТабПодчиненныхССумНаработкой Цикл
		
		ДатаВвода = СтрокаСЗависимымОР.ОбъектИерархии.ДатаВводаВЭксплуатацию;
		пДатаНачала = ?(ДатаВвода > СтрокаСЗависимымОР.ДатаНачала, ДатаВвода, СтрокаСЗависимымОР.ДатаНачала);
		
		Если ВремяРаботыГоловногоОбъекта = 0 Тогда
			Если ТаблицаСВременемРаботы.НайтиСтроки(Новый Структура("ДатаНачала,ДатаОкончания",пДатаНачала, СтрокаСЗависимымОР.ДатаОкончания))[0].Секунды = 0 Тогда
				КоэфПропорциональностиНаработки = СтрокаСЗависимымОР.Коэффициент;
			Иначе
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Проверьте заполненность графика работы %1 на %2 год.'"),ТекСтрокаНаработкаОбъектов.Объект.ПлановыйГрафикРаботы,Формат(ТекСтрокаНаработкаОбъектов.ДатаРаботыС,"ДФ=гггг")));
				ТекСтрокаНаработкаОбъектов.РаспространятьНаПодчиненных = Ложь;
				Возврат;
			КонецЕсли;
		Иначе
		    КоэфПропорциональностиНаработки = ТаблицаСВременемРаботы.НайтиСтроки(Новый Структура("ДатаНачала,ДатаОкончания",
			пДатаНачала, СтрокаСЗависимымОР.ДатаОкончания))[0].Секунды / ВремяРаботыГоловногоОбъекта;
		КонецЕсли;
		СтрокаСЗависимымОР.СуммНаработка = ТекСтрокаНаработкаОбъектов.Наработка * КоэфПропорциональностиНаработки * СтрокаСЗависимымОР.Коэффициент;
	КонецЦикла;
	ТабПодчиненныхССумНаработкой.Свернуть("ОбъектИерархии","СуммНаработка");
	СтруктураНаработкиПодчСМаксЗнач = ПолучитьАбсолютныеЗначенияНаработки(ТабЗначенийНаработкиПодчиненных);
	
	Для Каждого СтрокаСЗависимымОР ИЗ СтруктураНаработкиПодчСМаксЗнач Цикл 

		СтрокаПодчНаработка = Объект.НаработкаПодчиненныхОбъектов.Добавить();
		СтрокаПодчНаработка.ДатаРаботыС 	 = ТекСтрокаНаработкаОбъектов.ДатаРаботыС;
		СтрокаПодчНаработка.ДатаРаботыПо 	 = ТекСтрокаНаработкаОбъектов.ДатаРаботыПо;
		СтрокаПодчНаработка.Показатель 		 = ТекСтрокаНаработкаОбъектов.Показатель;
		НаработкаОР = ТабПодчиненныхССумНаработкой.НайтиСтроки(Новый Структура("ОбъектИерархии",СтрокаСЗависимымОР.ОбъектРемонта)); 
		Если НЕ НаработкаОР.Количество() = 0 Тогда
			СтрокаПодчНаработка.Наработка 		 = НаработкаОР[0].СуммНаработка;
		КонецЕсли;
		
		СтрокаПодчНаработка.Объект 				= СтрокаСЗависимымОР.ОбъектРемонта; 
		СтрокаПодчНаработка.РодительИерархии 	= ТекСтрокаНаработкаОбъектов.Объект;
		
		СтрокаПодчНаработка.СтароеЗначение 						= СтрокаСЗависимымОР.НаработаноЗначение;
		СтрокаПодчНаработка.НаработкаСНачалаЭксплуатацииНачало 	= СтрокаСЗависимымОР.НаработаноЗначение;
		СтрокаПодчНаработка.НаработкаСНачалаЭксплуатации 		= СтрокаПодчНаработка.НаработкаСНачалаЭксплуатацииНачало + СтрокаПодчНаработка.Наработка;
		
		Если ЗначениеЗаполнено(СтрокаСЗависимымОР.МаксимальноеЗначение)
			И СтрокаСЗависимымОР.НаработаноЗначение + СтрокаПодчНаработка.Наработка > СтрокаСЗависимымОР.МаксимальноеЗначение Тогда
			
			КоличествоСбросовСчетчика = Цел((СтрокаСЗависимымОР.НаработаноЗначение + СтрокаПодчНаработка.Наработка) / СтрокаСЗависимымОР.МаксимальноеЗначение);
			СтрокаПодчНаработка.НовоеЗначение = СтрокаСЗависимымОР.НаработаноЗначение + СтрокаПодчНаработка.Наработка - КоличествоСбросовСчетчика * СтрокаСЗависимымОР.МаксимальноеЗначение;
			
		Иначе
			СтрокаПодчНаработка.НовоеЗначение = СтрокаПодчНаработка.СтароеЗначение + СтрокаПодчНаработка.Наработка;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьКоэффициентПропорциональности(ОбъектРемонта, ЗависимыйОбъектРемонта, ПараметрНаработки, ДатаРаботыПо)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.ПараметрНаработки,
		|	торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.ОрганизацияЗависимогоОР,
		|	торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.ПодразделениеЗависимогоОР,
		|	торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.НаправлениеЗависимогоОР,
		|	торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.ТипОРЗависимогоОбъектаРемонта,
		|	торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.ЗависимыйОбъектРемонта,
		|	торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.КоэффициентПересчета,
		|	ВЫБОР
		|		КОГДА НЕ торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.ЗависимыйОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка)
		|			ТОГДА 1
		|		КОГДА НЕ торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.ТипОРЗависимогоОбъектаРемонта = ЗНАЧЕНИЕ(Справочник.торо_ТиповыеОР.ПустаяСсылка)
		|			ТОГДА 2
		|		КОГДА НЕ торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.НаправлениеЗависимогоОР = ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка)
		|			ТОГДА 3
		|		КОГДА НЕ торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.ПодразделениеЗависимогоОР = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА 4
		|		КОГДА НЕ торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.ОрганизацияЗависимогоОР = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА 5
		|	КОНЕЦ КАК Приоритет,
		|	торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.Период
		|ИЗ
		|	РегистрСведений.торо_НастройкаРегистрацииНаработкиЗависимыхОР.СрезПоследних(
		|			&Дата,
		|			ОбъектРемонта = &ОбъектРемонта
		|				И ПараметрНаработки = &ПараметрНаработки
		|				И (ЗависимыйОбъектРемонта = &ЗависимыйОбъектРемонта
		|					ИЛИ ЗависимыйОбъектРемонта = ЗНАЧЕНИЕ(Справочник.торо_ОбъектыРемонта.ПустаяСсылка))
		|				И (ПодразделениеЗависимогоОР = &ПодразделениеЗависимогоОР
		|					ИЛИ ПодразделениеЗависимогоОР = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|				И (НаправлениеЗависимогоОР = &НаправлениеЗависимогоОР
		|					ИЛИ НаправлениеЗависимогоОР = ЗНАЧЕНИЕ(Справочник.торо_НаправленияОбъектовРемонтныхРабот.ПустаяСсылка))
		|				И (ТипОРЗависимогоОбъектаРемонта = &ТипОРЗависимогоОбъектаРемонта
		|					ИЛИ ТипОРЗависимогоОбъектаРемонта = ЗНАЧЕНИЕ(Справочник.торо_ТиповыеОР.ПустаяСсылка))
		|				И (ОрганизацияЗависимогоОР = &Организация
		|					ИЛИ ОрганизацияЗависимогоОР = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))) КАК торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет,
		|	торо_НастройкаРегистрацииНаработкиЗависимыхОРСрезПоследних.Период УБЫВ";

		ОрганизацияЗависимогоОР = ЗависимыйОбъектРемонта.Организация;
		ПодразделениеЗависимогоОР = ЗависимыйОбъектРемонта.Подразделение;
		НаправлениеЗависимогоОР = ЗависимыйОбъектРемонта.Направление;
		ТипОРЗависимогоОбъектаРемонта = ЗависимыйОбъектРемонта.ТиповойОР;
		
		
	Запрос.УстановитьПараметр("Дата", ДатаРаботыПо);
	Запрос.УстановитьПараметр("ЗависимыйОбъектРемонта", ЗависимыйОбъектРемонта);
	Запрос.УстановитьПараметр("НаправлениеЗависимогоОР", НаправлениеЗависимогоОР);
	Запрос.УстановитьПараметр("ОбъектРемонта", ОбъектРемонта);
	Запрос.УстановитьПараметр("Организация", ОрганизацияЗависимогоОР);
	Запрос.УстановитьПараметр("ПараметрНаработки", ПараметрНаработки);
	Запрос.УстановитьПараметр("ПодразделениеЗависимогоОР", ПодразделениеЗависимогоОР);
	Запрос.УстановитьПараметр("ТипОРЗависимогоОбъектаРемонта", ТипОРЗависимогоОбъектаРемонта);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выгрузить();

	Возврат ВыборкаДетальныеЗаписи;
КонецФункции

Функция НайтиПредыдущийКоэффициентПересчета(мДатаПо,СтрокаСвязанныхОР,ОРДляКоэф, Показатель, ТаблицаИерархииОР, ТаблицаЗависимыхОР, ТекКоэффициент, ДатаС, ДатаПо);
	
	Если СтрокаСвязанныхОР.ОбъектИерархии.ЭтоГруппа Тогда
		Если ОРДляКоэф = Неопределено Тогда
			ОрДляКоэф = СтрокаСвязанныхОР.РодительИерархии;
		КонецЕсли;
		СтрокиКоэф = Новый Массив;
	ИначеЕсли СтрокаСвязанныхОР.РодительИерархии.ЭтоГруппа Тогда
		СтрокиКоэф = ПолучитьКоэффициентПропорциональности(ОРДляКоэф, СтрокаСвязанныхОР.ОбъектИерархии, Показатель, мДатаПо - 1);
	Иначе
		СтрокиКоэф = ПолучитьКоэффициентПропорциональности(СтрокаСвязанныхОР.РодительИерархии, СтрокаСвязанныхОР.ОбъектИерархии, Показатель, мДатаПо - 1);
	КонецЕсли;
	
	Если СтрокиКоэф.Количество() = 0 Тогда
		Возврат 1;
	ИначеЕсли СтрокиКоэф[0].Период < ДатаС Тогда
		Возврат СтрокиКоэф[0].КоэффициентПересчета;
	Иначе
			
	мДатаС = СтрокиКоэф[0].Период;
	Коэф = СтрокиКоэф[0].КоэффициентПересчета;
	Пока Истина Цикл
		
		
		ТаблицаПодчиненныхПотомку = торо_РаботаСНаработкой.ПолучитьЗависимыеОР(ТаблицаИерархииОР, СтрокаСвязанныхОР.ОбъектИерархии, Неопределено,мДатаС,мДатаПо,Показатель,ТекКоэффициент*Коэф);
		Если ТаблицаЗависимыхОР = Неопределено Тогда
			ТаблицаЗависимыхОР = ТаблицаПодчиненныхПотомку.Скопировать(,"ОбъектИерархии,Коэффициент,ДатаС,ДатаПо");
			
		Иначе
			Для Каждого ПодчиненныйПотомкуОР Из ТаблицаПодчиненныхПотомку Цикл
				ДобавляемаяСтрока = ТаблицаЗависимыхОР.Добавить();
				ДобавляемаяСтрока.ОбъектИерархии = ПодчиненныйПотомкуОР.ОбъектИерархии;
				ДобавляемаяСтрока.Коэффициент = ПодчиненныйПотомкуОР.Коэффициент;
				ДобавляемаяСтрока.ДатаНачала = ПодчиненныйПотомкуОР.ДатаНачала;
				ДобавляемаяСтрока.ДатаОкончания = ПодчиненныйПотомкуОР.ДатаОкончания;
			КонецЦикла;	
		КонецЕсли;
		
		ДобавляемаяСтрока = ТаблицаЗависимыхОР.Добавить();
		ДобавляемаяСтрока.ОбъектИерархии = СтрокаСвязанныхОР.ОбъектИерархии;
		ДобавляемаяСтрока.Коэффициент = ТекКоэффициент * Коэф;
		ДобавляемаяСтрока.ДатаНачала = мДатаС;
		ДобавляемаяСтрока.ДатаОкончания = мДатаПо;
		
		Если мДатаС > ДатаС Тогда
			мДатаПо = мДатаС;
			
			Коэф = НайтиПредыдущийКоэффициентПересчета(мДатаПо,СтрокаСвязанныхОР,ОРДляКоэф, Показатель, ТаблицаИерархииОР, ТаблицаЗависимыхОР, ТекКоэффициент, ДатаС, ДатаПо);
			
			мДатаС = ДатаС;
			
		Иначе
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	КонецЕсли;
	
КонецФункции

Функция ПолучитьАбсолютныеЗначенияНаработки(ТабЗначенийНаработкиПодчиненных)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабНаработанныхЗначений.НаработаноЗначение,
	|	ТабНаработанныхЗначений.НаработаноДата,
	|	ТабНаработанныхЗначений.ДатаНачала,
	|	ТабНаработанныхЗначений.ОбъектРемонта,
	|	ТабНаработанныхЗначений.Показатель
	|ПОМЕСТИТЬ торо_УчетНаработкиОборудованияНаработкаОбъектов
	|ИЗ 
	|	&ТабНаработанныхЗначений КАК ТабНаработанныхЗначений
	|;
	|ВЫБРАТЬ
	|	торо_МаксимальныеЗначенияНаработкиОР.МаксимальноеЗначение,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.ОбъектРемонта,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.НаработаноЗначение,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.НаработаноДата,
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов.ДатаНачала
	|ИЗ
	|	торо_УчетНаработкиОборудованияНаработкаОбъектов КАК торо_УчетНаработкиОборудованияНаработкаОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.торо_МаксимальныеЗначенияНаработкиОР КАК торо_МаксимальныеЗначенияНаработкиОР
	|		ПО торо_УчетНаработкиОборудованияНаработкаОбъектов.ОбъектРемонта = торо_МаксимальныеЗначенияНаработкиОР.ОбъектРемонта
	|			И торо_УчетНаработкиОборудованияНаработкаОбъектов.Показатель = торо_МаксимальныеЗначенияНаработкиОР.Показатель
	|			И торо_МаксимальныеЗначенияНаработкиОР.МаксимальноеЗначение <> 0";
	
	Запрос.УстановитьПараметр("ТабНаработанныхЗначений", ТабЗначенийНаработкиПодчиненных);
	Выборка = Запрос.Выполнить().Выбрать();			
	
	СтруктураВозврата = Новый Массив;
	Пока Выборка.Следующий() Цикл
		
		СтруктураВозврата.Добавить(Новый Структура("НаработаноЗначение, НаработаноДата, ОбъектРемонта, ДатаНачала, Показатель, МаксимальноеЗначение",
		Выборка.НаработаноЗначение, Выборка.НаработаноДата, Выборка.ОбъектРемонта, Выборка.ДатаНачала, Выборка.Показатель, Выборка.МаксимальноеЗначение));	
		
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ПолучитьЗначениеПлановогоГрафикаРаботОбъектаРемонта(ОбъектРемонта) Экспорт
	
	Возврат ОбъектРемонта.ПлановыйГрафикРаботы;
	
КонецФункции


Функция ПолучитьСтруктуруДанныхДокументаСинхронизации(МассивСтрокНаработки,Ссылка,Дата=Неопределено) Экспорт
	
	Если Дата = Неопределено Тогда
		Дата = Ссылка.Дата;
	КонецЕсли;
	
	НаработкаОбъектов = Новый ТаблицаЗначений;
	НаработкаОбъектов.Колонки.Добавить("ОбъектРемонта");
	НаработкаОбъектов.Колонки.Добавить("Показатель");
	НаработкаОбъектов.Колонки.Добавить("ДатаИВремяОперации");
	НаработкаОбъектов.Колонки.Добавить("ПричинаИзмененияНаработки");
	НаработкаОбъектов.Колонки.Добавить("ДатаПоследнейНаработки");
	НаработкаОбъектов.Колонки.Добавить("ЗафиксированнаяНаработка");
	НаработкаОбъектов.Колонки.Добавить("НаработкаПослеОперации");
	НаработкаОбъектов.Колонки.Добавить("НаработкаДоОперации");
	
	Для Каждого СтрокаНаработки Из МассивСтрокНаработки Цикл
		
		ТаблицаИерархииОРтек = торо_РаботаСИерархией.ПолучитьТаблицуИерархии(СтрокаНаработки.Иерархия,Дата,Истина);
		
		ТаблицаПодчиненныхОРТек = торо_РаботаСНаработкой.ПолучитьЗависимыеОР(ТаблицаИерархииОРтек, СтрокаНаработки.Объект, Неопределено, СтрокаНаработки.ДатаРаботыС, СтрокаНаработки.ДатаРаботыПо,СтрокаНаработки.Показатель);
		ТаблицаНаработокПодчиненных = торо_РаботаСНаработкой.ТекущееЗначениеНаработкиТаблица(ТаблицаПодчиненныхОРТек,Ссылка);
		
		ДатаСинхронизации = СтрокаНаработки.ДатаРаботыС;
		
		Для Каждого СтрокаСНаработкойПред Из ТаблицаНаработокПодчиненных Цикл
			
			Если СтрокаСНаработкойПред.НаработаноДата <> СтрокаСНаработкойПред.ДатаНачала Тогда 
				
				Если ДатаСинхронизации < СтрокаСНаработкойПред.НаработаноДата Тогда
					ДатаСинхронизации = СтрокаСНаработкойПред.НаработаноДата;
				КонецЕсли;
				
				Если СтрокаСНаработкойПред.НаработаноДата <> ДатаСинхронизации Тогда
					// Новая строка подчиненного
					НС = НаработкаОбъектов.Добавить();
					ЗначениеНаработки =	торо_РаботаСНаработкой.ПолучитьТекущееЗначениеНаработки(СтрокаСНаработкойПред.ОбъектРемонта,СтрокаНаработки.Показатель,Ссылка);	
					НС.ОбъектРемонта = СтрокаСНаработкойПред.ОбъектРемонта;
					НС.ДатаИВремяОперации = ДатаСинхронизации;
					НС.Показатель = СтрокаСНаработкойПред.Показатель;
					НС.ПричинаИзмененияНаработки = Справочники.торо_ПричиныИзмененияНаработки.СинхронизацияПериодовНаработки;
					Если ЗначениеЗаполнено(ЗначениеНаработки) Тогда
						НС.ДатаПоследнейНаработки = ?(ЗначениеЗаполнено(ЗначениеНаработки.НаработаноДата),ЗначениеНаработки.НаработаноДата,СтрокаСНаработкойПред.ОбъектРемонта.ДатаВводаВЭксплуатацию);
						НС.ЗафиксированнаяНаработка = ЗначениеНаработки.НаработаноЗначение;
						НС.НаработкаПослеОперации = ЗначениеНаработки.НаработаноЗначение;
						НС.НаработкаДоОперации = ЗначениеНаработки.НаработаноЗначение;
					Иначе
						НС.ДатаПоследнейНаработки = СтрокаСНаработкойПред.ОбъектРемонта.ДатаВводаВЭксплуатацию;
					КонецЕсли;
				Иначе
					Массив = НаработкаОбъектов.НайтиСтроки(Новый Структура("ОбъектРемонта,Показатель",СтрокаНаработки.Объект,СтрокаНаработки.Показатель));
					Если Массив.Количество() = 0 Тогда
						// Новая строка родителя
						ЗначениеНаработки = торо_РаботаСНаработкой.ПолучитьТекущееЗначениеНаработки(СтрокаНаработки.Объект,СтрокаНаработки.Показатель,Ссылка);
						НС = НаработкаОбъектов.Добавить();
						НС.ОбъектРемонта  = СтрокаНаработки.Объект;
						НС.ДатаИВремяОперации = ДатаСинхронизации;
						НС.Показатель = СтрокаНаработки.Показатель;
						НС.ПричинаИзмененияНаработки = Справочники.торо_ПричиныИзмененияНаработки.СинхронизацияПериодовНаработки;
						Если ЗначениеЗаполнено(ЗначениеНаработки) Тогда
							НС.ДатаПоследнейНаработки = ?(ЗначениеЗаполнено(ЗначениеНаработки.НаработаноДата),ЗначениеНаработки.НаработаноДата,СтрокаНаработки.Объект.ДатаВводаВЭксплуатацию);
							НС.ЗафиксированнаяНаработка = ЗначениеНаработки.НаработаноЗначение;
							НС.НаработкаПослеОперации = ЗначениеНаработки.НаработаноЗначение;
							НС.НаработкаДоОперации = ЗначениеНаработки.НаработаноЗначение;
						Иначе
							НС.ДатаПоследнейНаработки = СтрокаНаработки.Объект.ДатаВводаВЭксплуатацию;
						КонецЕсли;
					Иначе
						// Изменение существующей строки родителя
						НС = Массив[0];
						НС.ДатаИВремяОперации = ДатаСинхронизации;
					КонецЕсли;
				КонецЕсли;

			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	СтруктураВозврата = Новый Структура;
	
	МассивНаработки = Новый Массив;
	
	Для Каждого СтрокаНаработки Из НаработкаОбъектов Цикл
		
		НС = СоздатьСтруктуруНаработкиНаСервере();
		ЗаполнитьЗначенияСвойств(НС,СтрокаНаработки);
		МассивНаработки.Добавить(НС);
		
	КонецЦикла;
	
	СтруктураВозврата.Вставить("МассивНаработки", МассивНаработки);

	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция СоздатьСтруктуруНаработкиНаСервере()
	
	Возврат Новый Структура("ОбъектРемонта,ДатаИВремяОперации,Показатель,ЗафиксированнаяНаработка,
	|Наработка,НаработкаДоОперации,АбсолютнаяНаработка,НаработкаПослеОперации,ПричинаИзмененияНаработки,
	|РаспространятьНаПодчиненных,Иерархия,ДатаПоследнейНаработки");
	
КонецФункции

#КонецОбласти