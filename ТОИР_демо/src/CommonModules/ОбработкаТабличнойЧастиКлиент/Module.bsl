
#Область ПрограммныйИнтерфейс
// Обработка строки табличной части - вызывается из форм документов.
//
// Параметры:
//		ТекущаяСтрока - ДанныеФормыЭлементКоллекции - Обрабатываемя строка таблицы.
//		СтруктураДействий - Структура - Возможно передавать следующие поля:
//  		"ПроверитьХарактеристикуПоВладельцу", Характеристика.
//  		"ПроверитьЗаполнитьУпаковкуПоВладельцу"      , Упаковка.
//  		"ПересчитатьКоличествоЕдиниц",
//  		"ПересчитатьКоличествоЕдиницСуффикс", Суффикс                                       - не исп.
//  		"ПересчитатьКоличествоУпаковок", Имя
//  		"ПересчитатьКоличествоУпаковокСуффикс", Суффикс                                     - не исп.
//  		"ЗаполнитьОбъемВесУпаковки"	        , Упаковка.
//  		"ЗаполнитьЦенуПродажи"              , СтруктураПараметровДействия.
//  		"ПересчитатьСумму". ИмяКоличества
//  		"ПересчитатьСуммуСУчетомРучнойСкидки"     , СтруктураПараметровДействия.            - не исп.
//  		"ПересчитатьСуммуСУчетомАвтоматическойСкидки"     , СтруктураПараметровДействия.
//  		"ПересчитатьЦенуСкидкуПоСуммеВОприходовании"
//  		"ПересчитатьЦенуЗаУпаковку"         , КоличествоЕдиницДоПересчета.
//  		"ПересчитатьСуммуНДС".
//  		"ЗаполнитьСтавкуНДС".
//  		"ОбработатьШтрихкоды".
//  		"ЗаполнитьУсловияПродажВСтрокеТЧ"
//  		"ЗаполнитьЦенуПродажиРозница" , СтруктураПараметровДействия.
//  		"ПересчитатьСуммуРучнойСкидки".
//  		"ПересчитатьПроцентРучнойСкидки".
//  		"ПроверитьСтатьюАналитикуРасходов"
//  		"ЗаполнитьФлагИзлишекПорча"
//  		"ЗаполнитьФлагРасхождение"
//  		"ОчиститьСуммуВзаиморасчетов"
//  		"ЗаполнитьФлагиНедоборНеотгружаемыеИзлишкиНедостачи"
//  		"ПересчитатьКоличествоНеОтгружать".
//		КэшированныеЗначения - Структура, Неопределено - структура кэша.
//
Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = Новый Структура;
		КэшированныеЗначения.Вставить("КоэффициентыУпаковок",	Новый Соответствие);
	КонецЕсли;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НеобходимВызовСервера(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Тогда
		
		ТекущаяСтрокаСтруктура = ПолучитьТекущуюСтрокуСтруктурой(ТекущаяСтрока,СтруктураДействий);
		
		ОбработкаТабличнойЧастиВызовСервера.ОбработатьСтрокуТЧ(ТекущаяСтрокаСтруктура, СтруктураДействий, КэшированныеЗначения);
		
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока,ТекущаяСтрокаСтруктура);
		
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(    ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПроверитьКорректностьЗаполнитьХарактеристикиИУпаковки( ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьКоличествоЕдиницВСтрокеТЧ(                  ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьКоличествоУпаковокВСтрокеТЧ(                ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьЦенуЗаУпаковкуВСтрокеТЧ(                    ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ЗаполнитьСтавкуНДСВСтрокеТЧ(                           ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьСуммуВСтрокеТЧ(                             ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьЦенуПоСуммеВСтрокеТЧ(                       ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьСуммуНДСВСтрокеТЧ(                          ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	УстановитьАктивностьСтроки(                            ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПроверитьЗаполнитьСкладВСтрокеТЧ(                      ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	ПересчитатьСуммуСНДСВСтрокеТЧ(						   ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Процедуры, вызываемые при обработке табличных частей

Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТипНоменклатуры") Тогда
		ТекущаяСтрока.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакХарактеристикиИспользуются") Тогда
		ТекущаяСтрока.ХарактеристикиИспользуются = Ложь;
	КонецЕсли;
		
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЭтоУслуга") Тогда
		ТекущаяСтрока.ЭтоУслуга = Ложь;
	КонецЕсли;
			
КонецПроцедуры // ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ()
Процедура ПроверитьКорректностьЗаполнитьХарактеристикиИУпаковки(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)

	Если СтруктураДействий.Свойство("ПроверитьХарактеристикуПоВладельцу") Тогда
		ТекущаяСтрока.Характеристика             = Неопределено;
		ТекущаяСтрока.ХарактеристикиИспользуются = Ложь;
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьУпаковкуПоВладельцу") Тогда
		ТекущаяСтрока.Упаковка = Неопределено;
	КонецЕсли;

КонецПроцедуры
Процедура ПересчитатьКоличествоЕдиницВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 

	Перем Упаковка;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиниц", Упаковка) Тогда
		Если Упаковка = Неопределено Тогда
			ТекущаяСтрока.Количество = ТекущаяСтрока.КоличествоУпаковок
		   		* ПолучитьКоэффициентУпаковки(ТекущаяСтрока.Упаковка, КэшированныеЗначения);
		Иначе
			ТекущаяСтрока.Количество = ТекущаяСтрока.КоличествоУпаковок
		   		* ПолучитьКоэффициентУпаковки(Упаковка, КэшированныеЗначения);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
Процедура ПересчитатьКоличествоУпаковокВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковок") Тогда
		ТекущаяСтрока.КоличествоУпаковок = ТекущаяСтрока.Количество
		   / ПолучитьКоэффициентУпаковки(ТекущаяСтрока.Упаковка, КэшированныеЗначения);
	КонецЕсли;

КонецПроцедуры
Процедура ПересчитатьЦенуЗаУпаковкуВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 

	Перем КоличествоЕдиницДоПересчета;

	Если СтруктураДействий.Свойство("ПересчитатьЦенуЗаУпаковку", КоличествоЕдиницДоПересчета)
	   И КоличествоЕдиницДоПересчета <> 0 Тогда
		ТекущаяСтрока.Цена = ТекущаяСтрока.Цена
		   / КоличествоЕдиницДоПересчета
		   * ТекущаяСтрока.Количество;
	КонецЕсли;

КонецПроцедуры
Процедура ЗаполнитьСтавкуНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 

	Если СтруктураДействий.Свойство("ЗаполнитьСтавкуНДС") Тогда
		ТекущаяСтрока.СтавкаНДС = Неопределено;
	КонецЕсли;

КонецПроцедуры
Процедура ПересчитатьСуммуВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 

	ИмяКоличества = Неопределено;
	
	Если СтруктураДействий.Свойство("ПересчитатьСумму", ИмяКоличества) Тогда
		Если НЕ ЗначениеЗаполнено(ИмяКоличества) Тогда
			ИмяКоличества = "КоличествоУпаковок"
		Конецесли;
		Если ТекущаяСтрока <> Неопределено Тогда
			ТекущаяСтрока.Сумма = ТекущаяСтрока.Цена * ТекущаяСтрока[ИмяКоличества];
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
Процедура ПересчитатьЦенуПоСуммеВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 
	
	ИмяКоличества = Неопределено;
	
	Если СтруктураДействий.Свойство("ПересчитатьЦенуПоСумме",ИмяКоличества) Тогда
		Если Не ЗначениеЗаполнено(ИмяКоличества) Тогда
			ИмяКоличества = "КоличествоУпаковок";
		КонецЕсли;
		Если ТекущаяСтрока[ИмяКоличества] = 0 Тогда
			ТекущаяСтрока.Цена = ТекущаяСтрока.Сумма;
		Иначе
			ТекущаяСтрока.Цена = Окр(ТекущаяСтрока.Сумма / ТекущаяСтрока[ИмяКоличества], 2);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
Процедура ПересчитатьСуммуНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 
	
	Перем СтруктураПараметровДействия;
	Перем СтавкаНДС;
	
	Если СтруктураДействий.Свойство("ПересчитатьСуммуНДС", СтруктураПараметровДействия) Тогда
		
		Если Не СтруктураПараметровДействия.Свойство("СтавкаНДС", СтавкаНДС) Тогда
			СтавкаНДС = ТекущаяСтрока.СтавкаНДС;
		КонецЕсли;
		
		ТекПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(СтавкаНДС);
		ТекущаяСтрока.СуммаНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(ТекущаяСтрока.Сумма, ТекПроцентНДС, СтруктураПараметровДействия.ЦенаВключаетНДС);
		
	КонецЕсли;
	
КонецПроцедуры
Процедура УстановитьАктивностьСтроки(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Если СтруктураДействий.Свойство("УстановитьАктивность") Тогда
		ТекущаяСтрока.Активность = Истина;
	КонецЕсли;
	
КонецПроцедуры
Процедура ПроверитьЗаполнитьСкладВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Если СтруктураДействий.Свойство("Склад") И Не ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		ТекущаяСтрока.Склад = ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПересчитатьСуммуСНДСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) 
	
	Перем СтруктураПараметровДействия;
	
	Если СтруктураДействий.Свойство("ПересчитатьСуммуСНДС", СтруктураПараметровДействия) Тогда
		
		ТекущаяСтрока.СуммаСНДС = ТекущаяСтрока.Сумма + ?(СтруктураПараметровДействия.ЦенаВключаетНДС, 0, ТекущаяСтрока.СуммаНДС);
	
	КонецЕсли;

КонецПроцедуры

// Функции, вызываемые процедурами


Функция НеобходимВызовСервера(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения)
	
	Перем СтруктураПараметровДействия;
	
	Если СтруктураДействий.Свойство("НеобходимоОбработатьВсюТЧ")
		И СтруктураДействий.НеобходимоОбработатьВсюТЧ Тогда
		ТекстИсключения = НСтр("ru = 'Для обработки всей ТЧ, необходимо сделать контекстный вызов серверной фукнции ""ОбработкаТабличнойЧастиСервер.ОбработатьТЧ""'");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьХарактеристикуПоВладельцу")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьУпаковкуПоВладельцу")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьСтатьюАналитикуРасходов")
		И (ЗначениеЗаполнено(ТекущаяСтрока.СтатьяРасходов) Или
			ЗначениеЗаполнено(ТекущаяСтрока.АналитикаРасходов)) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Упаковка = Неопределено;
	
	Если (СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиниц", Упаковка)
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницСуффикс") 
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковок")
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковокСуффикс")
		Или СтруктураДействий.Свойство("ЗаполнитьОбъемВесУпаковки")) Тогда
		
		Если Упаковка = Неопределено Тогда
			Если ЗначениеЗаполнено(ТекущаяСтрока.Упаковка)
				И КэшированныеЗначения.КоэффициентыУпаковок[ТекущаяСтрока.Упаковка] = Неопределено Тогда
				Возврат Истина;
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Упаковка)
				И КэшированныеЗначения.КоэффициентыУпаковок[Упаковка] = Неопределено Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЦенуПродажи", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Валюта)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЦенуПродажиПоАссортименту", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Валюта)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьЦенуЗакупки", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Валюта)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьСтавкуНДС", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьУсловияПродаж", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Соглашение)
		И ЗначениеЗаполнено(СтруктураПараметровДействия.Валюта)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруПоНоменклатуреПоставщика", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока.НоменклатураПоставщика) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьНоменклатуруПоставщикаПоНоменклатуре", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
	    Возврат Истина;
	КонецЕсли;
	
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакИспользованияХарактеристик")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
		
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЭтоУслуга")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАртикул")
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьРеквизитыПоНоменклатуре", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьСклад", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
		Возврат Истина;
	КонецЕсли;
	
	
	Возврат Ложь;
	
КонецФункции

// Функция возвращает строку ввиде структуры с необходимыми, исходя из структуры действий, ключами
// и соответствующими им значениями строки.
Функция ПолучитьТекущуюСтрокуСтруктурой(ТекущаяСтрока, СтруктураДействий)
	
	Перем СтруктураПараметровДействия;

	СтруктураПолейТЧ = Новый Структура;

	Если СтруктураДействий.Свойство("ПроверитьХарактеристикуПоВладельцу") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("ХарактеристикиИспользуются");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьУпаковкуПоВладельцу") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Упаковка");
	КонецЕсли;

	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиниц")
		Или СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковок") Тогда
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок", 0);
		СтруктураПолейТЧ.Вставить("Количество", 0);
	КонецЕсли;

	
	Если СтруктураДействий.Свойство("ЗаполнитьЦенуПродажи") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Характеристика");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("ВидЦены");
		СтруктураПолейТЧ.Вставить("Цена", 0);
	КонецЕсли;
	
	
	Если СтруктураДействий.Свойство("ЗаполнитьСтавкуНДС")
		 ИЛИ СтруктураДействий.Свойство("ЗаполнитьСтавкуНДСПоНоменклатуре") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("СтавкаНДС");
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуНДС") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"    , 0);
		СтруктураПолейТЧ.Вставить("СтавкаНДС", 0);
		СтруктураПолейТЧ.Вставить("СуммаНДС" , 0);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьСуммуБезНДС") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"    , 0);
		СтруктураПолейТЧ.Вставить("СуммаНДС" , 0);
		СтруктураПолейТЧ.Вставить("СуммаБезНДС", 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПересчитатьСуммуСНДС") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"    , 0);
		СтруктураПолейТЧ.Вставить("СуммаНДС" , 0);
		СтруктураПолейТЧ.Вставить("СуммаСНДС", 0);
	КонецЕсли;


	Если СтруктураДействий.Свойство("ПересчитатьСумму") Тогда
		СтруктураПолейТЧ.Вставить("Сумма"             , 0);
		СтруктураПолейТЧ.Вставить("Цена"              , 0);
		СтруктураПолейТЧ.Вставить(?(ПустаяСтрока(СтруктураДействий.ПересчитатьСумму),"КоличествоУпаковок",СтруктураДействий.ПересчитатьСумму), 0);
	КонецЕсли;
	
	
		
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоУпаковок") Тогда
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковокПоДаннымУчета", 0);
		СтруктураПолейТЧ.Вставить("КоличествоПоДаннымУчета"        , 0);
	КонецЕсли;

	Если СтруктураДействий.Свойство("ПроверитьЗаполнитьСклад") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Склад");
		СтруктураПолейТЧ.Вставить("ТипНоменклатуры");
	КонецЕсли;
		
		
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакЭтоУслуга", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("УстановитьАктивность") Тогда
		СтруктураПолейТЧ.Вставить("Активность");
		СтруктураПолейТЧ.Вставить("ИндексКартинки");
	КонецЕсли;
	
		
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакАртикул", СтруктураПараметровДействия) 
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		Для Каждого Поле Из СтруктураПараметровДействия Цикл
			СтруктураПолейТЧ.Вставить(Поле.Ключ);
			СтруктураПолейТЧ.Вставить(Поле.Значение);
		КонецЦикла;
	КонецЕсли;
	
	
	ЗаполнитьЗначенияСвойств(СтруктураПолейТЧ,ТекущаяСтрока);
	
	Возврат СтруктураПолейТЧ;
	
КонецФункции

Функция ПолучитьКоэффициентУпаковки(ТекУпаковка, КэшированныеЗначения)

	Если ЗначениеЗаполнено(ТекУпаковка) Тогда
		ТекКоэффициент = КэшированныеЗначения.КоэффициентыУпаковок[ТекУпаковка];
	Иначе
		ТекКоэффициент = 1;
	КонецЕсли;

	Возврат ТекКоэффициент;

КонецФункции

#КонецОбласти