
#Область СлужебныеПроцедурыИФункции

Функция ПолучитьНаименованиеЭлементаНоменклатуры(Номер) Экспорт
	
	Возврат "Номенклатура "+Формат(Номер, "ЧГ=0");
	
КонецФункции

Функция ПолучитьНаименованиеЭлементаТехОперации(Номер) Экспорт
	
	Возврат "Тех. операция "+Формат(Номер, "ЧГ=0");
	
КонецФункции

Функция ПолучитьНаименованиеЭлементаТехКарты(Номер) Экспорт
	
	Возврат "Тех. карта "+Формат(Номер, "ЧГ=0");
	
КонецФункции

Функция ПолучитьНаименованиеЭлементаПодразделение(Номер) Экспорт
	
	Возврат "Подразделение "+Формат(Номер, "ЧГ=0");
	
КонецФункции

Функция ПолучитьНаименованиеЭлементаОрганизация(Номер) Экспорт
	
	Возврат "Филиал "+Формат(Номер, "ЧГ=0");
	
КонецФункции

Функция ПолучитьНаименованиеЭлементаОР(Номер) Экспорт
	
	Возврат "ОР "+Формат(Номер, "ЧГ=0");
	
КонецФункции

Функция ПолучитьКоэффициентыТестирования(ТипТеста) Экспорт
	
	Если ТипТеста = 0 Тогда  // примитивный
		КоличествоОРНаПользователя = 100;
		КоличествоПользователейВПодразделении = 5;
		КоличествоПодразделенийВФилиале = 50;
		КоличествоТехОперацийВКарте = 3;
	Иначе  // реальный
		КоличествоОРНаПользователя = 500;
		КоличествоПользователейВПодразделении = 2;
		КоличествоПодразделенийВФилиале = 140;
		КоличествоТехОперацийВКарте = 3;
	КонецЕсли;
	
	СтруктураКоэффициентов = Новый Структура;
	СтруктураКоэффициентов.Вставить("КоличествоОРНаПользователя",КоличествоОРНаПользователя);
	СтруктураКоэффициентов.Вставить("КоличествоПользователейВПодразделении",КоличествоПользователейВПодразделении);
	СтруктураКоэффициентов.Вставить("КоличествоПодразделенийВФилиале",КоличествоПодразделенийВФилиале);
	СтруктураКоэффициентов.Вставить("КоличествоТехОперацийВКарте",КоличествоТехОперацийВКарте);
	
	Возврат СтруктураКоэффициентов;
	
КонецФункции

Функция ВычислитьНомерОрганизацииИПодразделенияПоНомеруОР(НомерОР, КоличествоОРНаПользователя, КоличествоПользователейВПодразделении, КоличествоПодразделенийВФилиале) Экспорт
	
	НомерПользователя = торо_СценарноеТестированиеКлиентСервер.ОкруглитьВверх(НомерОР/КоличествоОРНаПользователя);
	
	НомерПодразделения = торо_СценарноеТестированиеКлиентСервер.ОкруглитьВверх(НомерПользователя/КоличествоПользователейВПодразделении);
	НаименованиеПодразделения = торо_СценарноеТестированиеКлиентСервер.ПолучитьНаименованиеЭлементаПодразделение(НомерПодразделения);
	ПодразделениеПользователя = торо_СценарноеТестированиеСервер.НайтиЭлементСправочникаПоНаименованию("СтруктураПредприятия", НаименованиеПодразделения);
	
	НомерОрганизации = торо_СценарноеТестированиеКлиентСервер.ОкруглитьВверх(НомерПодразделения/КоличествоПодразделенийВФилиале);
	НаименованиеОрганизации = торо_СценарноеТестированиеКлиентСервер.ПолучитьНаименованиеЭлементаОрганизация(НомерОрганизации);
	ОрганизацияПользователя = торо_СценарноеТестированиеСервер.НайтиЭлементСправочникаПоНаименованию("Организации", НаименованиеОрганизации);
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("НомерПодразделения", НомерПодразделения);
	СтруктураРезультата.Вставить("НаименованиеПодразделения", НаименованиеПодразделения);
	СтруктураРезультата.Вставить("ПодразделениеПользователя", ПодразделениеПользователя);
	
	СтруктураРезультата.Вставить("НомерОрганизации", НомерОрганизации);
	СтруктураРезультата.Вставить("НаименованиеОрганизации", НаименованиеОрганизации);
	СтруктураРезультата.Вставить("ОрганизацияПользователя", ОрганизацияПользователя);
	
	Возврат СтруктураРезультата;
	
КонецФункции


Функция ОкруглитьВверх(Число) Экспорт
	
	Возврат ?(Цел(Число)=Число, Число, Цел(Число)+1);
	
КонецФункции


// из ТЦОбщий

// Разделить строку на составляющие по разделителю и поместить
// части строки в массив.
//
// Параметры:
//  РазделяемаяСтрока - Строка - Строка, которую нужно разделить
//  Разделитель - Строка - символ разделяющий части строки
//  ПустыеСтроки - Булево - Истина - включать пустые строки в результат,
//                 Ложь - не включать пустые строки в результат.
//
// Возвращаемое значение:
//  Массив - части строк.
//
Функция РазделитьСтроку(ИсходнаяСтрока, Разделитель, ПустыеСтроки = Ложь) Экспорт
	
	Результат = Новый Массив;
	ДлинаСтроки = СтрДлина(ИсходнаяСтрока);
	ТекущаяСтрока = "";
	
	Для Сч = 1 По ДлинаСтроки Цикл
		
		ТекущийСимвол = Сред(ИсходнаяСтрока, Сч, 1);
		
		Если ТекущийСимвол = Разделитель Тогда
			
			ОбработаннаяСтрока = СокрЛП(ТекущаяСтрока);
			
			Если Не ПустаяСтрока(ОбработаннаяСтрока) Или ПустыеСтроки Тогда
				Результат.Добавить(ОбработаннаяСтрока);
			КонецЕсли;
			
			ТекущаяСтрока = "";
			
		Иначе
			ТекущаяСтрока = ТекущаяСтрока + ТекущийСимвол;
		КонецЕсли;
		
	КонецЦикла;
	
	ОбработаннаяСтрока = СокрЛП(ТекущаяСтрока);
	
	Если Не ПустаяСтрока(ОбработаннаяСтрока) Тогда
		Результат.Добавить(ОбработаннаяСтрока);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // РазделитьСтроку()

// Удалить ограничивающие строку кавычки.
//
// Параметры:
//  ИсходнаяСтрока - Строка, для которой нужно удалить кавычки.
//
// Возвращаемое значение:
//  Строка - строка без ограничивающих ее кавычек.
//
Функция УдалитьКавычки(ИсходнаяСтрока) Экспорт
	
	Результат = СокрЛП(ИсходнаяСтрока);
	
	Если Лев(Результат, 1) <> """" Или Прав(Результат, 1) <> """" Тогда
		Возврат Результат;
	КонецЕсли;
	
	Возврат Сред(Результат, 2, СтрДлина(Результат) - 2);
	
КонецФункции // УдалитьКавычки()

// Получить структурированные параметры подключения к информационной базе
// на основе строки подключения к ней.
//
// Параметры:
//  СтрокаПодключения - Строка, строка подключения к информационной базе.
//
// Возвращаемое значение:
//  Структура - результат анализа строки подключения.
//
Функция ПолучитьПараметрыПодключения(СтрокаПодключения) Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	// Разделить строку подключения по точке с запятой ";"
	Фрагменты = РазделитьСтроку(СтрокаПодключения, ";");
	
	// Для каждой комбинации параметра и значения
	Для Каждого Фрагмент Из Фрагменты Цикл
		// Отделить имена параметров от их значений
		Параметры = РазделитьСтроку(Фрагмент, "=");
		
		// Сохранить параметры
		ИмяПараметра = Параметры[0];
		ЗначениеПараметра = ?(Параметры.Количество() > 1, Параметры[1], "");
		
		// Разобрать имя сервера
		Если ВРег(Лев(ИмяПараметра, 4)) = "SRVR" Тогда
			КомпонентыИмениСервера = РазделитьСтроку(УдалитьКавычки(ЗначениеПараметра), ":");
			СтруктураПараметров.Вставить("ИмяСервера", КомпонентыИмениСервера[0]);
			Если КомпонентыИмениСервера.Количество() > 1 Тогда
				ПортКластера = Число(КомпонентыИмениСервера[1]);
			Иначе
				ПортКластера = 1541;
			КонецЕсли;
			СтруктураПараметров.Вставить("ПортКластера", ПортКластера);
		КонецЕсли;
		
		СтруктураПараметров.Вставить(ИмяПараметра, ЗначениеПараметра);
	КонецЦикла;
	
	Возврат СтруктураПараметров;
	
КонецФункции // ПолучитьПараметрыПодключения()

#КонецОбласти
