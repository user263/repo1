
#Область ПрограммныйИнтерфейс

// Изменяет статус согласования документа.
//
// Параметры:
//		Форма - УправляемаяФорма - форма документа.
//
Процедура УстановитьСтатус(Форма) Экспорт
	
	Объект = Форма.Объект;
	Если Форма.мХранитьИсториюСогласованияВДокументах И Не торо_ОбщегоНазначенияКлиентПовтИсп.ЕстьПраво("Редактирование", "Документы", Сред(Форма.ИмяФормы, 10, Найти(Форма.ИмяФормы, ".Фор") - 10)) Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Недостаточно прав для редактирования документа!'"));
	Иначе
		Если Объект.Ссылка.пустая() Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("ОбработатьВопрос_ЗаписатьДокумент", ЭтотОбъект, Новый Структура("Форма", Форма)), НСтр("ru = 'Перед выполнением процедуры согласования необходимо записать документ! Записать?'"), РежимДиалогаВопрос.ДаНет, 60); 
		Иначе
			ТекущийПользователь = Пользователи.ТекущийПользователь();
			СписокСледующихСтатусов = торо_Ремонты.ПолучитьСписокСледующихСтатусовДокумента(Объект.СпособСогласования, Форма.СтатусДокументаРегистр);
			ПоказатьВопрос(Новый ОписаниеОповещения("ВыбратьСтатус", ЭтотОбъект, Новый Структура("СписокСледующихСтатусов, ТекущийПользователь, Форма", СписокСледующихСтатусов, ТекущийПользователь, Форма)), НСтр("ru = 'Вы уверены, что хотите утвердить статус?'"), РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработатьВопрос_ЗаписатьДокумент(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Попытка
			Форма.Записать(Новый Структура ("РежимЗаписи", РежимЗаписиДокумента.Запись));
		Исключение
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки; 
		
		ТекущийПользователь = торо_РаботаСУведомлениями.ПолучитьТекущегоПользователя();
		СписокСледующихСтатусов = торо_Ремонты.ПолучитьСписокСледующихСтатусовДокумента(Объект.СпособСогласования, Форма.СтатусДокументаРегистр);
		ПоказатьВопрос(Новый ОписаниеОповещения("ВыбратьСтатус", ЭтотОбъект, Новый Структура("СписокСледующихСтатусов, ТекущийПользователь, Форма", СписокСледующихСтатусов, ТекущийПользователь, Форма)), НСтр("ru = 'Вы уверены, что хотите утвердить статус?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбратьСтатус(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	СписокСледующихСтатусов = ДополнительныеПараметры.СписокСледующихСтатусов;
	ТекущийПользователь = ДополнительныеПараметры.ТекущийПользователь;
	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Если СписокСледующихСтатусов.Количество() > 0 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПроставитьГалочкиЗаТекущегоПользователя", ЭтотОбъект, ДополнительныеПараметры);
			ПараметрыФормы = Новый Структура("СписокСледующихСтатусов", СписокСледующихСтатусов);
			ОткрытьФорму("ОбщаяФорма.торо_ФормаВыбораСтатусаСогласования", ПараметрыФормы, Форма,,ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеОповещения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроставитьГалочкиЗаТекущегоПользователя(ВыбранныйЭлемент,ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	ВыбранныйСтатус = ВыбранныйЭлемент.ВыбранныйСтатус;
	КомментарийКСтатусу = ВыбранныйЭлемент.Комментарий;
	СписокСледующихСтатусов = ДополнительныеПараметры.СписокСледующихСтатусов;
	ТекущийПользователь = ДополнительныеПараметры.ТекущийПользователь;
	
	Если Не ВыбранныйСтатус = Неопределено Тогда
		
		МассивСтрокСогласования = Новый Массив;
		МассивСтрокДереваСогласования = Новый Массив;			
		ЗаполнитьМассивИзДерева(МассивСтрокДереваСогласования, 	Форма.ДеревоСогласования.ПолучитьЭлементы());
		
		// отбор строк, где пользователь является согласующим
		Для каждого Строка Из МассивСтрокДереваСогласования Цикл
			Если (Строка.Согласующий = ТекущийПользователь или Строка.Начальный = Истина)
				И Строка.Замещающий = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")
				И Строка.Согласовано = Ложь 
				Тогда
				МассивСтрокСогласования.Добавить(Строка);
			КонецЕсли; 
		КонецЦикла; 
				
		// отбор строк, где пользователь является замещающим
		МассивСтрокЗамещения = Новый Массив;

		Для каждого Строка Из МассивСтрокДереваСогласования Цикл
			Если Строка.Замещающий  = ТекущийПользователь
				И Строка.Согласовано = Ложь 
				Тогда
				МассивСтрокЗамещения.Добавить(Строка);
			КонецЕсли; 
		КонецЦикла;
		
		// отбор строк, где пользователь является замещающим (но не согласующим при этом)
		МассивОсновнойНеЗамещающий = Новый Массив; 
		Для Каждого Строка Из МассивСтрокЗамещения Цикл
			Если Строка.Согласующий <> ТекущийПользователь Тогда
				МассивОсновнойНеЗамещающий.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;
		
		// Обработка строк, где пользователь является согласующим
		Попытка
			Для Каждого СтрокаДЗ Из МассивСтрокСогласования Цикл
				Для Каждого СтрокаДЗП Из СтрокаДЗ.ПолучитьЭлементы() Цикл
					СтрокаДЗП.Согласовано = Ложь;
				КонецЦикла; 
				
				СтрокаДЗ.Согласовано = (СтрокаДЗ.СтатусДокумента = ВыбранныйСтатус);
				
				Если СтрокаДЗ.СтатусДокумента = ВыбранныйСтатус Тогда
					торо_РаботаССогласованиямиКлиентСервер.ДобавитьСтрокуВИсториюСтатусов(Форма, ВыбранныйСтатус, ТекущийПользователь,,КомментарийКСтатусу);
				КонецЕсли; 
			КонецЦикла; 
		Исключение
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
		// Обработка строк, где пользователь является замещающим, но не согласующим
		Попытка
			Для Каждого СтрокаДЗ Из МассивОсновнойНеЗамещающий Цикл
				СтрокаДЗ.Согласовано = (СтрокаДЗ.СтатусДокумента = ВыбранныйСтатус);
				Если СтрокаДЗ.СтатусДокумента = ВыбранныйСтатус Тогда
					торо_РаботаССогласованиямиКлиентСервер.ДобавитьСтрокуВИсториюСтатусов(Форма, ВыбранныйСтатус, СтрокаДЗ.Согласующий,,КомментарийКСтатусу);
					
					// поднимаем галочку и за согласующего тоже
					Для каждого Строка Из МассивСтрокДереваСогласования Цикл
						Если (Строка.Согласующий = СтрокаДЗ.Согласующий)
							И Строка.Замещающий = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")
							И Строка.СтатусДокумента = ВыбранныйСтатус
							Тогда
							Строка.Согласовано = Истина;
						КонецЕсли; 
					КонецЦикла;
					
				КонецЕсли; 
			КонецЦикла; 
		Исключение
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		
		торо_РаботаССогласованиямиКлиентСервер.ЗаписатьДеревоСогласования(Форма);
		УстановитьНовыйСтатус(ВыбранныйСтатус, Форма);			   
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьНовыйСтатус(ВыбранныйСтатус, Форма)
	
	Объект = Форма.Объект;
	
	Попытка
		
		СменитьСтатус = Ложь;
		СтрокаСтатус  = Новый Массив;
		Массив  = Форма.ДеревоСогласования.ПолучитьЭлементы();
		
		Для каждого Строка Из Массив Цикл
			Если Строка.СтатусДокумента = ВыбранныйСтатус Тогда
				СтрокаСтатус.Добавить(Строка);
			КонецЕсли; 
		КонецЦикла; 
		
		Если СтрокаСтатус.Количество() >= 1 Тогда
			
			КоличествоСогласовавших = 0;
			ОбщееКоличествоСтрок    = 0;
			Для Каждого СтрокаДЗ Из СтрокаСтатус Цикл
				
				Для каждого Строка Из СтрокаДЗ.ПолучитьЭлементы() Цикл
					ОбщееКоличествоСтрок = ОбщееКоличествоСтрок + 1;
				КонецЦикла; 
				
				Если СтрокаДЗ.Согласовано Тогда
					КоличествоСогласовавших = ОбщееКоличествоСтрок;
				Иначе
					Для Каждого СтрокаДЗЗ Из СтрокаДЗ.ПолучитьЭлементы() Цикл
						Если СтрокаДЗЗ.Согласовано Тогда
							КоличествоСогласовавших = КоличествоСогласовавших + 1;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли; 
			КонецЦикла;
			
			СменитьСтатус = (ОбщееКоличествоСтрок = КоличествоСогласовавших);
			
		КонецЕсли; 
		
		стрПараметров = Новый Структура;
		Если СменитьСтатус Тогда
			
			Форма.СтатусДокументаРегистр = ВыбранныйСтатус;
			Если Форма.мХранитьИсториюСогласованияВДокументах Тогда
				Объект.СтатусДокумента = Форма.СтатусДокументаРегистр;
			КонецЕсли;
			
			ПроводитьДокумент = Ложь;
			СтруктураДанных = торо_Ремонты.ПолучитьДанныеПоСтатусуДокумента(Объект.СпособСогласования, Форма.СтатусДокументаРегистр);
			ПроводитьДокумент = СтруктураДанных.ПроводитьДокумент;
			
			Если ПроводитьДокумент И Объект.Проведен Тогда
				стрПараметров.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
				стрПараметров.Вставить("РежимПроведения", РежимПроведенияДокумента.Неоперативный);
			Иначе 
				стрПараметров.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
			КонецЕсли;
		Иначе
			стрПараметров.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
		КонецЕсли;
		
		Форма.ЗаписатьРегистрыСогласования();
		Если Форма.мХранитьИсториюСогласованияВДокументах Тогда
			Форма.Записать(стрПараметров);
		КонецЕсли;
		
		торо_Согласования.ДобавитьСтатусыСогласованияПоДокументу(Объект.Ссылка);
		
		Форма.ОбновитьДеревоСогласующих();
		торо_РаботаССогласованиямиКлиентСервер.УстановитьВидимостьСогласованиеИУтверждение(Форма.мИспользоватьСогласованиеДокументов, Объект, Форма);
		
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьМассивИзДерева(Массив, ЭлементыДерева)
	
	Для каждого Элемент Из ЭлементыДерева Цикл
		Массив.Добавить(Элемент);
		Если Элемент.ПолучитьЭлементы().Количество() > 0 Тогда
			ЗаполнитьМассивИзДерева(Массив, Элемент.ПолучитьЭлементы())
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

// Открывает форму для посмотра и редактирования комментария к статусу.
Процедура ОткрытьЗаписьИсторииСтатусов(Форма, ДанныеСтроки) Экспорт
	
	СтруктураКлюча = Новый Структура("Документ, Пользователь, ЗаКого, Период");
	ЗаполнитьЗначенияСвойств(СтруктураКлюча, ДанныеСтроки);
	
	Если НЕ ЗначениеЗаполнено(СтруктураКлюча.Документ) Тогда
		Возврат;
	КонецЕсли;
	
	НачальныйСтатус = торо_Ремонты.ПолучитьНачальныйСтатус(Форма.Объект.СпособСогласования);
	Если ДанныеСтроки.СтатусДокумента = НачальныйСтатус Тогда
		Возврат;
	КонецЕсли;
		
	КлючЗаписи = торо_Согласования.ПолучитьКлючЗаписиИсторииСтатусовДокументов(СтруктураКлюча);
	ПараметрыФормы = Новый Структура("Ключ", КлючЗаписи);
	
	ДопПараметры = Новый Структура("Форма, СтруктураКлюча", Форма, СтруктураКлюча);
	Оповещение = Новый ОписаниеОповещения("ПослеРедактированияКомментарияКСтатусу", ЭтотОбъект, ДопПараметры); 
	
	ОткрытьФорму("РегистрСведений.торо_ИсторияСтатусовДокументов.ФормаЗаписи", ПараметрыФормы, Форма,,,,Оповещение);
	
КонецПроцедуры


Процедура ПослеРедактированияКомментарияКСтатусу(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	СтруктураКлюча = ДополнительныеПараметры.СтруктураКлюча;
	
	ТекущаяСтрока = Неопределено;
	Для каждого Строка из Форма.ИсторияСтатусовРегистр Цикл
		Если Строка.Период = СтруктураКлюча.Период
			И Строка.Пользователь = СтруктураКлюча.Пользователь
			И Строка.ЗаКого = СтруктураКлюча.ЗаКого Тогда
			ТекущаяСтрока = Строка;
		КонецЕсли;
	КонецЦикла;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Форма.Элементы.ИсторияСтатусов.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
		ТекущаяСтрока.Комментарий = торо_Согласования.ПолучитьКомментарийКСтатусуСогласования(СтруктураКлюча);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
