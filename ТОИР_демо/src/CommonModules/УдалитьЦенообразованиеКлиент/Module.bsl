////////////////////////////////////////////////////////////////////////////////
// Модуль содержит процедуры и функции для обработки действий пользователя
// в процессе работы с ценами.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ПроцедурыИФункцииПроверкиВозможностиВыполненияДействий

// Проверяет заполненность реквизитов, необходимых для пересчета из валюты в валюту.
//
// Параметры:
//	Документ - ДокументОбъект, для которого выполняются проверки,
//	СтараяВалюта - Предыдущая валюта документа,
//	ИмяТЧ - Имя табличной части.
//
// Возвращаемое значение:
//	Булево
//	Ложь, если необходимые данные не заполнены.
//
Функция НеобходимПересчетВВалюту(Документ, СтараяВалюта, ИмяТЧ="Товары") Экспорт

	Если Не ЗначениеЗаполнено(Документ.Валюта) Тогда
		Документ.Валюта = СтараяВалюта;
		Возврат Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(СтараяВалюта) Тогда
		Возврат Ложь;
	ИначеЕсли СтараяВалюта = Документ.Валюта Тогда
		Возврат Ложь;
	ИначеЕсли Документ[ИмяТч].Итог("Цена") = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

// Проверяет заполненность реквизитов, необходимых пересчета сумм взаиморасчетов
//
// Параметры:
// 		Документ - ДокументОбъект, для которого выполняются проверки
// 		СтараяВалюта - Предыдущая валюта взаиморасчетов
// 		ИмяТЧ - Имя табличной части
//
// Возвращаемое значение:
// 		Булево - Ложь, если необходимые пересчитать суммы взаиморасчетов
//
Функция НеобходимПересчетСуммыВзаиморасчетов(Документ, СтараяВалюта, ИмяТЧ="Товары") Экспорт

	Если Не ЗначениеЗаполнено(Документ.ВалютаВзаиморасчетов) Тогда
		Документ.ВалютаВзаиморасчетов = СтараяВалюта;
		Возврат Ложь;
	ИначеЕсли Не ЗначениеЗаполнено(СтараяВалюта) Тогда
		Возврат Истина;
	ИначеЕсли СтараяВалюта = Документ.ВалютаВзаиморасчетов Тогда
		Возврат Ложь;
	ИначеЕсли Документ[ИмяТч].Итог("СуммаВзаиморасчетов") = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти

#Область ПроцедурыОповещенияПользователяОВыполненныхДействиях

// Показывает оповещение пользователя об окончании заполнения этапов графика оплаты.
//
Процедура ОповеститьОбОкончанииЗаполненияЭтаповГрафикаОплаты() Экспорт

	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Этапы оплаты заполнены'"),
		,
		НСтр("ru='Этапы графика оплаты заполнены'"),
		БиблиотекаКартинок.Информация32);

КонецПроцедуры

// Показывает оповещение пользователя о невозможности заполнения этапов графика оплаты.
//
Процедура ОповеститьОНевозможностиЗаполненияЭтаповГрафикаОплаты() Экспорт

	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Этапы оплаты очищены'"),
		,
		"Сумма неотмененных строк заказа нулевая. Таблица этапов оплаты очищена",
		БиблиотекаКартинок.Информация32);

КонецПроцедуры

// Показывает оповещение пользователя об окончании пересчета сумм из валюты в валюту.
//
// Параметры:
// ВалютаИсточник - СправочникСсылка.Валюты - валюта, из которой осуществлялся пересчет,
// ВалютаПриемник - СправочникСсылка.Валюты - валюта, в которую осуществляется пересчет.
//
Процедура ОповеститьОбОкончанииПересчетаСуммВВалюту(ВалютаИсточник, ВалютаПриемник) Экспорт

	СтрокаСообщения = НСтр("ru='Суммы в документе пересчитаны из валюты %ВалютаИсточник% в валюту %ВалютаПриемник%'");
	СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%ВалютаИсточник%", ВалютаИсточник);
	СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%ВалютаПриемник%", ВалютаПриемник);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Суммы пересчитаны'"),
		,
		СтрокаСообщения,
		БиблиотекаКартинок.Информация32);

КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииЗаполненияЭтаповОплаты

// Стандартный обработчик события "ПриИзменении" поля "ЭтапыГрафикаОплатыПроцентПлатежа".
//
// Параметры:
// ТекущиеДанные          - ДанныеФормыЭлементКоллекции - строка с текущими данными таблицы этапов оплаты,
// ЭтапыГрафикаОплаты     - ДанныеФормыКоллекция - таблица этапов оплаты,
// СуммаОплатыПоДокументу - Число - сумма оплаты документа.
//
Процедура ЭтапыГрафикаОплатыПроцентПлатежаПриИзменении(ТекущиеДанные, ЭтапыГрафикаОплаты, Знач СуммаОплатыПоДокументу) Экспорт
	
	Если ТекущиеДанные.ПроцентПлатежа > 0 И ЭтапыГрафикаОплаты.Итог("ПроцентПлатежа") = 100 Тогда
		
		СуммаПлатежа = 0;
		Для Каждого ТекСтрока Из ЭтапыГрафикаОплаты Цикл
			Если ТекСтрока.НомерСтроки <> ТекущиеДанные.НомерСтроки Тогда
				СуммаПлатежа = СуммаПлатежа + ТекСтрока.СуммаПлатежа;
			КонецЕсли;
		КонецЦикла;
		
		ТекущиеДанные.СуммаПлатежа = СуммаОплатыПоДокументу - СуммаПлатежа;
	Иначе
		
		ТекущиеДанные.СуммаПлатежа = СуммаОплатыПоДокументу * ТекущиеДанные.ПроцентПлатежа / 100;
		
	КонецЕсли;
	
КонецПроцедуры

// Стандартный обработчик события "ПриИзменении" поля "ЭтапыГрафикаОплатыСуммаПлатежа".
//
// Параметры:
// ТекущиеДанные          - ДанныеФормыЭлементКоллекции - строка с текущими данными таблицы этапов оплаты,
// ЭтапыГрафикаОплаты     - ДанныеФормыКоллекция - таблица этапов оплаты,
// СуммаОплатыПоДокументу - Число - сумма оплаты документа.
//
Процедура ЭтапыГрафикаОплатыСуммаПлатежаПриИзменении(ТекущиеДанные, ЭтапыГрафикаОплаты, Знач СуммаОплатыПоДокументу) Экспорт
	
	Если СуммаОплатыПоДокументу <> 0 Тогда
		
		Если ТекущиеДанные.СуммаПлатежа <> 0 И
			ЭтапыГрафикаОплаты.Итог("СуммаПлатежа") = СуммаОплатыПоДокументу Тогда
			
			ПроцентПлатежа = 0;
			Для Каждого ТекСтрока Из ЭтапыГрафикаОплаты Цикл
				Если ТекСтрока.НомерСтроки <> ТекущиеДанные.НомерСтроки Тогда
					ПроцентПлатежа = ПроцентПлатежа + ТекСтрока.ПроцентПлатежа;
				КонецЕсли;
			КонецЦикла;
			
			ТекущиеДанные.ПроцентПлатежа = 100 - ПроцентПлатежа;
			
		Иначе
			ТекущиеДанные.ПроцентПлатежа = ТекущиеДанные.СуммаПлатежа * 100 / СуммаОплатыПоДокументу;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Стандартный обработчик события "ПриИзменении" поля "ЭтапыГрафикаОплатыПроцентЗалогаЗаТару".
//
// Параметры:
// ТекущиеДанные          - ДанныеФормыЭлементКоллекции - строка с текущими данными таблицы этапов оплаты,
// ЭтапыГрафикаОплаты     - ДанныеФормыКоллекция - таблица этапов оплаты,
// СуммаЗалогаПоДокументу - Число - сумма залога за тару по документу.
//
Процедура ЭтапыГрафикаОплатыПроцентЗалогаЗаТаруПриИзменении(ТекущиеДанные, ЭтапыГрафикаОплаты, Знач СуммаЗалогаПоДокументу) Экспорт
	
	Если ТекущиеДанные.ПроцентЗалогаЗаТару > 0 И ЭтапыГрафикаОплаты.Итог("ПроцентЗалогаЗаТару") = 100 Тогда
		
		СуммаЗалогаЗаТару = 0;
		Для Каждого ТекСтрока Из ЭтапыГрафикаОплаты Цикл
			Если ТекСтрока.НомерСтроки <> ТекущиеДанные.НомерСтроки Тогда
				СуммаЗалогаЗаТару = СуммаЗалогаЗаТару + ТекСтрока.СуммаЗалогаЗаТару;
			КонецЕсли;
		КонецЦикла;
		
		ТекущиеДанные.СуммаЗалогаЗаТару = СуммаЗалогаПоДокументу - СуммаЗалогаЗаТару;
	Иначе
		
		ТекущиеДанные.СуммаЗалогаЗаТару = СуммаЗалогаПоДокументу * ТекущиеДанные.ПроцентЗалогаЗаТару / 100;
		
	КонецЕсли;
	
КонецПроцедуры

// Стандартный обработчик события "ПриИзменении" поля "ЭтапыГрафикаОплатыСуммаЗалогаЗаТару".
//
// Параметры:
// ТекущиеДанные          - ДанныеФормыЭлементКоллекции - строка с текущими данными таблицы этапов оплаты,
// ЭтапыГрафикаОплаты     - ДанныеФормыКоллекция - таблица этапов оплаты,
// СуммаЗалогаПоДокументу - Число - сумма залога за тару по документу.
//
Процедура ЭтапыГрафикаОплатыСуммаЗалогаЗаТаруПриИзменении(ТекущиеДанные, ЭтапыГрафикаОплаты, Знач СуммаЗалогаПоДокументу) Экспорт
	
	Если СуммаЗалогаПоДокументу <> 0 Тогда
		
		Если ТекущиеДанные.СуммаЗалогаЗаТару <> 0 И
			ЭтапыГрафикаОплаты.Итог("СуммаЗалогаЗаТару") = СуммаЗалогаПоДокументу Тогда
			
			ПроцентЗалогаЗаТару = 0;
			Для Каждого ТекСтрока Из ЭтапыГрафикаОплаты Цикл
				Если ТекСтрока.НомерСтроки <> ТекущиеДанные.НомерСтроки Тогда
					ПроцентЗалогаЗаТару = ПроцентЗалогаЗаТару + ТекСтрока.ПроцентЗалогаЗаТару;
				КонецЕсли;
			КонецЦикла;
			
			ТекущиеДанные.ПроцентЗалогаЗаТару = 100 - ПроцентЗалогаЗаТару;
			
		Иначе
			ТекущиеДанные.ПроцентЗалогаЗаТару = ТекущиеДанные.СуммаЗалогаЗаТару * 100 / СуммаЗалогаПоДокументу;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
