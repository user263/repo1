////////////////////////////////////////////////////////////////////////////////
// Подсистема "Свойства"
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Заполняет наборы свойств объекта. Обычно требуется, если наборов более одного.
//
// Параметры:
//  Объект       - ЛюбаяССылка - Ссылка на владельца свойств.
//                 Объект владельца свойств.
//                 ДанныеФормыСтруктура (по типу объекта владельца свойств).
//
//  ТипСсылки    - Тип - тип ссылки владельца свойств.
//
//  НаборыСвойств - ТаблицаЗначений - с колонками:
//                    Набор - СправочникСсылка.НаборыДополнительныхРеквизитовИСведений.
//
//                    // Далее свойства элемента формы типа ГруппаФормы вида обычная группа
//                    // или страница, которая создается, если наборов больше одного без учета
//                    // пустого набора, который описывает свойства группы удаленных реквизитов.
//                    
//                    // Если значение Неопределено, значит использовать значение по умолчанию.
//                    
//                    // Для любой группы управляемой формы.
//                    Высота                   - Число.
//                    Заголовок                - Строка.
//                    Подсказка                - Строка.
//                    РастягиватьПоВертикали   - Булево.
//                    РастягиватьПоГоризонтали - Булево.
//                    ТолькоПросмотр           - Булево.
//                    ЦветТекстаЗаголовка      - Цвет.
//                    Ширина                   - Число.
//                    ШрифтЗаголовка           - Шрифт.
//                    
//                    // Для обычной группы и страницы.
//                    Группировка              - ГруппировкаПодчиненныхЭлементовФормы.
//                    
//                    // Для обычной группы.
//                    Отображение              - ОтображениеОбычнойГруппы.
//
//                    
//                    // Для страницы.
//                    Картинка                 - Картинка.
//                    ОтображатьЗаголовок      - Булево.
//
//  СтандартнаяОбработка - Булево - начальное значение Истина. Указывает получать ли
//                         основной набор, когда НаборыСвойств.Количество() равно нулю.
//
//  КлючНазначения   - Неопределено - (начальное значение) - указывает вычислить
//                      ключ назначения автоматически и добавить к значениям свойств
//                      формы КлючНазначенияИспользования и КлючСохраненияПоложенияОкна,
//                      чтобы изменения формы (настройки, положение и размер) сохранялись
//                      отдельно для разного состава наборов.
//                      Например, для каждого вида номенклатуры - свой состав наборов.
//
//                    - Строка - (не более 32 символа) - использовать указанный ключ
//                      назначения для добавления к значениям свойств формы.
//                      Пустая строка - не изменять свойства ключей формы, т.к. они
//                      устанавливается в форме и уже учитывают различия состава наборов.
//
//                    Добавка имеет формат "КлючНаборовСвойств<КлючНазначения>",
//                    чтобы <КлючНазначения> можно было обновлять без повторной добавки.
//                    При автоматическом вычислении <КлючНазначения> содержит хэш
//                    идентификаторов ссылок упорядоченных наборов свойств.
//
Процедура ЗаполнитьНаборыСвойствОбъекта(Объект, ТипСсылки, НаборыСвойств, СтандартнаяОбработка, КлючНазначения) Экспорт
	
	Если ТипСсылки = Тип("СправочникСсылка.торо_ОбъектыРемонта") Тогда  	
		ЗаполнитьНаборСвойствДляОр(Объект, ТипСсылки, НаборыСвойств);
	ИначеЕсли  ТипСсылки = Тип("СправочникСсылка.торо_ТиповыеОР") Тогда
		ЗаполнитьНаборСвойствПоВидуНаправленийДляТиповыхОР(Объект, ТипСсылки, НаборыСвойств);
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Номенклатура") Тогда
		ЗаполнитьНаборыСвойствНоменклатуры(Объект, ТипСсылки, НаборыСвойств);
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ХарактеристикиНоменклатуры") Тогда
		ЗаполнитьНаборыСвойствХарактеристикНоменклатуры(Объект, ТипСсылки, НаборыСвойств);
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Партнеры") Тогда
	 	ЗаполнитьНаборыСвойствПартнер(Объект,Типссылки, НаборыСвойств);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьНаборСвойствДляОР(торо_ОР, ТипСсылки, НаборыСвойств)
	
	Если торо_ОР.ЭтоГруппа = Ложь Тогда
		Если ЗначениеЗаполнено(торо_ОР.Направление) Тогда	
			Строка = НаборыСвойств.Добавить();
			Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_торо_НаправленияОбъектовРемонтныхРабот_Общие;

			Строка = НаборыСвойств.Добавить();
			Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(торо_ОР.Направление, "НаборСвойствОР");
		КонецЕсли;
		
		// Общие реквизиты и сведения типового ОР для ОР будем добавлять если выбран хоть какой то типовой ОР.
		Если ЗначениеЗаполнено(торо_ОР.ТиповойОР) Тогда
			Строка = НаборыСвойств.Добавить();
			Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_торо_ТиповыеОР_Общие;
			
			Строка = НаборыСвойств.Добавить();
			Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(торо_ОР.ТиповойОР, "НаборСвойствОР");
		КонецЕсли;
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_торо_ОбъектыРемонта_Общие;
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(торо_ОР.Ссылка, "НаборСвойств");
	КонецЕсли;		

КонецПроцедуры

// Получает набор свойств объекта по виду номенклатуры.
Процедура ЗаполнитьНаборСвойствПоВидуНаправленийДляТиповыхОР(ТиповойОР, ТипСсылки, НаборыСвойств)
	
	Если ТиповойОР.ЭтоГруппа = Ложь Тогда	
		Если ЗначениеЗаполнено(ТиповойОР.Направление) Тогда
			Строка = НаборыСвойств.Добавить();
			Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_торо_НаправленияОбъектовРемонтныхРабот_Общие;
			
			Строка = НаборыСвойств.Добавить();
			Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТиповойОР.Направление, "НаборСвойствОР");
		КонецЕсли;
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_торо_ТиповыеОР_Общие;
		
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ТиповойОР.НаборСвойствОР;
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствНоменклатуры(Номенклатура,Типссылки, НаборыСвойств)
	Если Не Номенклатура.ЭтоГруппа Тогда
		
		// Реквизиты номенклатуры
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие;
				
		// Реквизиты Вида номенклатуры
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Номенклатура.ВидНоменклатуры, "НаборСвойств");

	КонецЕсли; 	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствХарактеристикНоменклатуры(Характеристика,Типссылки, НаборыСвойств)
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие;
	
	Если ТипЗнч(Характеристика.Владелец) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
		Строка = НаборыСвойств.Добавить();
		Строка.Набор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		Характеристика.Владелец, "НаборСвойствХарактеристик");
	ИначеЕсли ТипЗнч(Характеристика.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыНоменклатуры.НаборСвойствХарактеристик КАК НаборСвойств
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
		|ГДЕ
		|	Номенклатура.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Характеристика.Владелец);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Строка = НаборыСвойств.Добавить();
			Строка.Набор = ВыборкаДетальныеЗаписи.НаборСвойств;
		КонецЦикла;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьНаборыСвойствПартнер(Партнер, Типссылки, НаборыСвойств)
	
	Строка = НаборыСвойств.Добавить();
	Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Общие;
	
	Если Партнер.Клиент = Истина Тогда
   	Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Клиенты;
	КонецЕсли;
	
	Если Партнер.Поставщик = Истина Тогда
   	Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Поставщики;
	КонецЕсли;

	Если Партнер.ПрочиеОтношения = Истина Тогда
   	Строка = НаборыСвойств.Добавить();
		Строка.Набор = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Прочие;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти