#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СсылкаДляМатрицы = ?(ЗначениеЗаполнено(Параметры.ЗначениеКопирования), Параметры.ЗначениеКопирования, Объект.Ссылка);
	ЗаполнитьМатрицуПерехода(СсылкаДляМатрицы);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Для каждого Стр Из МатрицаПерехода Цикл
		
		Стр.НомерСтатуса = МатрицаПерехода.Индекс(Стр);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МатрицаПерехода.ТекущийСтатус,
	               |	МатрицаПерехода.Начальный,
	               |	МатрицаПерехода.СогласованиеЗавершено,
	               |	МатрицаПерехода.ПроводитьДокумент,
	               |	МатрицаПерехода.НеИспользоватьВПодборах,
				   |	МатрицаПерехода.НомерСтатуса
	               |ПОМЕСТИТЬ втМатрицаПерехода
	               |ИЗ
	               |	&МатрицаПерехода КАК МатрицаПерехода
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СтатусыПерехода.ТекущийСтатус,
	               |	СтатусыПерехода.НовыйСтатус
	               |ПОМЕСТИТЬ втСтатусыПерехода
	               |ИЗ
	               |	&СтатусыПерехода КАК СтатусыПерехода
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&СпособСогласования КАК СпособСогласования,
	               |	втСтатусыПерехода.НовыйСтатус КАК СледующийСтатус,
	               |	втМатрицаПерехода.Начальный,
	               |	втМатрицаПерехода.СогласованиеЗавершено,
	               |	втМатрицаПерехода.ПроводитьДокумент,
	               |	втМатрицаПерехода.НеИспользоватьВПодборах,
	               |	втМатрицаПерехода.ТекущийСтатус,
				   |	втМатрицаПерехода.НомерСтатуса
	               |ИЗ
	               |	втМатрицаПерехода КАК втМатрицаПерехода
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втСтатусыПерехода КАК втСтатусыПерехода
	               |		ПО втМатрицаПерехода.ТекущийСтатус = втСтатусыПерехода.ТекущийСтатус";
	
	Запрос.УстановитьПараметр("СпособСогласования", Объект.Ссылка);
	Запрос.УстановитьПараметр("МатрицаПерехода"   , МатрицаПерехода.Выгрузить());
	Запрос.УстановитьПараметр("СтатусыПерехода"   , СтатусыПерехода.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = РегистрыСведений.торо_МатрицаПереходаСтатусовДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СпособСогласования.Использование = Истина;
	НаборЗаписей.Отбор.СпособСогласования.ВидСравнения   = ВидСравнения.Равно;
	НаборЗаписей.Отбор.СпособСогласования.Значение      = Объект.Ссылка;
	
	НаборЗаписей.Загрузить(РезультатЗапроса);
	НаборЗаписей.Записать();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	МассивСостояний = МатрицаПерехода.НайтиСтроки(Новый Структура("Начальный", Ложь));
	
	Для Каждого Выборка Из МассивСостояний Цикл
		
		Если Объект.ПорядокСогласования.НайтиСтроки(Новый Структура("ТекущийСтатус",Выборка.ТекущийСтатус)).Количество() < 1 Тогда			
	
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Для статуса ""%1"" не задан ни один согласующий!'"),Выборка.ТекущийСтатус));
			Отказ = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	МассивСостоянийСПроведением = МатрицаПерехода.НайтиСтроки(Новый Структура("ПроводитьДокумент", Истина));
	
	Для Каждого Выборка Из МассивСостоянийСПроведением Цикл
		
		СледующиеСтатусы = СтатусыПерехода.НайтиСтроки(Новый Структура("ТекущийСтатус", Выборка.ТекущийСтатус));
		Для каждого СледующийСтатус из СледующиеСтатусы Цикл
			СтрокаСледующегоСтатуса = МатрицаПерехода.НайтиСтроки(Новый Структура("ТекущийСтатус", СледующийСтатус.НовыйСтатус));
			Если СтрокаСледующегоСтатуса.Количество() > 0 
				И СтрокаСледующегоСтатуса[0].ПроводитьДокумент = Ложь	Тогда
				торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Статус ""%1"", запрещающий проведение, идет после статуса ""%2"", разрешающего проведение.'"),СледующийСтатус.НовыйСтатус,Выборка.ТекущийСтатус));
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	
    Если Отказ Тогда
		
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Запись не выполнена!'"), 60);
		Возврат;
	
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОповещаемыеЛица
&НаКлиенте
Процедура ОповещаемыеЛицаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ПередНачаломДобавления(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ОповещаемыеЛицаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НЕ ОтменаРедактирования И Элемент.ТекущиеДанные <> Неопределено 
		И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.ОповещаемоеЛицо) Тогда
		
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено оповещаемое лицо!'"));
		Отказ = Истина;
		
	КонецЕсли;
	
	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования);
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМатрицаПерехода
&НаКлиенте
Процедура МатрицаПереходаНачальныйПриИзменении(Элемент)
	
	// доступность согласующих и замещающих
	ТекущаяСтрокаСтатусов = Элементы.МатрицаПерехода.ТекущиеДанные;
	
	Если ТекущаяСтрокаСтатусов <> Неопределено Тогда 
		
		
		Если ТекущаяСтрокаСтатусов.Начальный Тогда
			
			МассивСтрок = Объект.ПорядокСогласования.НайтиСтроки(Новый Структура("ТекущийСтатус", ТекущаяСтрокаСтатусов.ТекущийСтатус));
			
			ПоказатьВопрос(Новый ОписаниеОповещения("МатрицаПереходаНачальныйПриИзмененииЗавершение", ЭтотОбъект, Новый Структура("МассивСтрок, ТекущаяСтрокаСтатусов", МассивСтрок, ТекущаяСтрокаСтатусов)), НСтр("ru = 'При установке признака начального статуса документа, данные, связанные с этим статусом будут очищены. Продолжить?'"),РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			
		Иначе
			
			ТекущаяСтрокаСтатусов.Начальный = Не ТекущаяСтрокаСтатусов.Начальный;
			
		КонецЕсли;
		
					
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаНачальныйПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    МассивСтрок = ДополнительныеПараметры.МассивСтрок;
    ТекущаяСтрокаСтатусов = ДополнительныеПараметры.ТекущаяСтрокаСтатусов;
    
	 Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		 
        Для Каждого Строка Из МассивСтрок Цикл
            
            МассвивЗамещающих = Объект.Замещающие.НайтиСтроки(Новый Структура("Пользователь",Строка.Пользователь));
            
            Если МассвивЗамещающих.Количество() > 0 Тогда
                
                Для Каждого СтрокаЗамещающих Из МассвивЗамещающих Цикл 
                    
                    Объект.Замещающие.Удалить(СтрокаЗамещающих.НомерСтроки - 1);
                    
                КонецЦикла;
                
            КонецЕсли;
            
            Объект.ПорядокСогласования.Удалить(Строка.НомерСтроки - 1);
            
        КонецЦикла;
        
        Элементы.ПорядокСогласования.Доступность = Не ТекущаяСтрокаСтатусов.Начальный;
        Элементы.Замещающие.Доступность          = Не ТекущаяСтрокаСтатусов.Начальный;
        
        МассивСтрок = МатрицаПерехода.НайтиСтроки(Новый Структура("Начальный", Истина));
        
        Для Каждого Строка из МассивСтрок Цикл
            Если Строка.ТекущийСтатус <> ТекущаяСтрокаСтатусов.ТекущийСтатус Тогда
                Строка.Начальный = Ложь;
            КонецЕсли;
        КонецЦикла;
        
 	Иначе
	 
        ТекущаяСтрокаСтатусов.Начальный = Не ТекущаяСтрокаСтатусов.Начальный;
        
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда	
		
		УстановитьОтборыВСвязанныхТЧ(ТекущаяСтрока);
		
		// доступность согласующих и замещающих
		Элементы.ПорядокСогласования.Доступность = Не ТекущаяСтрока.Начальный;
		Элементы.Замещающие.Доступность          = Не ТекущаяСтрока.Начальный;
		
		// доступность статусов перехода
		Элементы.СтатусыПерехода.Доступность     = Не ТекущаяСтрока.СогласованиеЗавершено;
		
		ПорядокСогласованияПриАктивизацииСтроки(Элементы.ПорядокСогласования);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаСогласованиеЗавершеноПриИзменении(Элемент)
	ТекущаяСтрокаСтатусов = Элементы.МатрицаПерехода.ТекущиеДанные;
	
	Если ТекущаяСтрокаСтатусов <> Неопределено Тогда 
		
		Если ТекущаяСтрокаСтатусов.СогласованиеЗавершено Тогда
			
			МассивСтрок = СтатусыПерехода.НайтиСтроки(Новый Структура("ТекущийСтатус", ТекущаяСтрокаСтатусов.ТекущийСтатус));
			ДополнительныеПараметры = Новый Структура("МассивСтрок, ТекущаяСтрокаСтатусов", МассивСтрок, ТекущаяСтрокаСтатусов);
			
			Если МассивСтрок.Количество() > 0 Тогда
				ПоказатьВопрос(Новый ОписаниеОповещения("МатрицаПереходаСогласованиеЗавершеноПриИзмененииЗавершение", ЭтотОбъект, ДополнительныеПараметры), НСтр("ru = 'При установке признака завершения согласования дальнейшая смена статусов будет невозможна и табличная часть ""Новый статус"" будет очищена. Продолжить?'"),РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
			Иначе 
				МатрицаПереходаСогласованиеЗавершеноПриИзмененииЗавершение(Неопределено, ДополнительныеПараметры);
			КонецЕсли;
			
		Иначе
			
			Элементы.СтатусыПерехода.Доступность = Не ТекущаяСтрокаСтатусов.СогласованиеЗавершено;
			
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаСогласованиеЗавершеноПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    МассивСтрок = ДополнительныеПараметры.МассивСтрок;
    ТекущаяСтрокаСтатусов = ДополнительныеПараметры.ТекущаяСтрокаСтатусов;
    
    
    Если МассивСтрок.Количество() > 0 И РезультатВопроса = КодВозвратаДиалога.Да Тогда 
        
        Для Каждого Строка Из МассивСтрок Цикл
            
            СтатусыПерехода.Удалить(Строка);
            
        КонецЦикла;
        
        Элементы.СтатусыПерехода.Доступность = Не ТекущаяСтрокаСтатусов.СогласованиеЗавершено;
        
    ИначеЕсли  МассивСтрок.Количество() > 0 Тогда 
        
        ТекущаяСтрокаСтатусов.СогласованиеЗавершено = Не ТекущаяСтрокаСтатусов.СогласованиеЗавершено;
        
    Иначе 
        
        Элементы.СтатусыПерехода.Доступность = Не ТекущаяСтрокаСтатусов.СогласованиеЗавершено;
        
	КонецЕсли;
	
	ТекущаяСтрокаСтатусов.ПроводитьДокумент = ТекущаяСтрокаСтатусов.СогласованиеЗавершено;

КонецПроцедуры

&НаКлиенте
Процедура МатрицаПереходаПроводитьДокументПриИзменении(Элемент)
	
	ТекущаяСтрокаСтатусов = Элементы.МатрицаПерехода.ТекущиеДанные;
	
	Если ТекущаяСтрокаСтатусов <> Неопределено Тогда 
		
		Если ТекущаяСтрокаСтатусов.СогласованиеЗавершено Тогда
			
			ТекущаяСтрокаСтатусов.ПроводитьДокумент = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПорядокСогласования
&НаКлиенте
Процедура ПорядокСогласованияПриАктивизацииСтроки(Элемент)
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	ТекСтатус = Элементы.МатрицаПерехода.ТекущиеДанные;
	Если ТекСтатус <> Неопределено Тогда
		ТекСтатус = ТекСтатус.ТекущийСтатус;
	Иначе
		ТекСтатус = "------------";
	КонецЕсли;
		
	Если ТекущаяСтрока <> Неопределено Тогда
		
		// Отбор в новых Замещающих
		Элементы.Замещающие.ОтборСтрок = Новый ФиксированнаяСтруктура("Пользователь, ТекущийСтатус", ТекущаяСтрока.Пользователь, ТекСтатус);
	Иначе 
		
		Элементы.Замещающие.ОтборСтрок = Новый ФиксированнаяСтруктура("Пользователь, ТекущийСтатус", "------------", ТекСтатус);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПорядокСогласованияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Если Не (НоваяСтрока И ОтменаРедактирования) И Не ЗначениеЗаполнено(ТекДанные.Пользователь) Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Не выбран согласующий!'");
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования);
	
	Если НЕ ОтменаРедактирования Тогда
		МассивСтрок = Объект.ПорядокСогласования.НайтиСтроки(Новый Структура("Пользователь, ТекущийСтатус", ТекДанные.Пользователь, ТекДанные.ТекущийСтатус));
		Если МассивСтрок.Количество() > 1 Тогда
			Отказ = Истина;
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Пользователь %1 уже добавлен в список согласующих!'"),ТекДанные.Пользователь));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокСогласованияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ПередНачаломДобавления(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокСогласованияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не (НоваяСтрока И ОтменаРедактирования) Тогда
		
		ТекДанные = Элемент.ТекущиеДанные;
		Если ТекДанные <> Неопределено И Элементы.Замещающие.ОтборСтрок.Свойство("Пользователь") И ТекДанные.Пользователь <> Элементы.Замещающие.ОтборСтрок.Пользователь Тогда
			ТекущийОтбор = Новый Структура;
			Для каждого КлючИЗначение из Элементы.Замещающие.ОтборСтрок Цикл
				ТекущийОтбор.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			КонецЦикла;
			
			НайденныеСтроки = Объект.Замещающие.НайтиСтроки(ТекущийОтбор);
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НайденнаяСтрока.Пользователь = ТекДанные.Пользователь;
			КонецЦикла;
			
			ТекущийОтбор.Пользователь = ТекДанные.Пользователь;
			Элементы.Замещающие.ОтборСтрок = Новый ФиксированнаяСтруктура(ТекущийОтбор);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСтатусыПерехода
&НаКлиенте
Процедура СтатусыПереходаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда 
		
		ТекущаяСтрока = Элемент.ТекущиеДанные;
		
		Если ТекущаяСтрока <> Неопределено Тогда
			
			МассивСтрок = МатрицаПерехода.НайтиСтроки(Новый Структура("ТекущийСтатус",ТекущаяСтрока.НовыйСтатус));
			Если МассивСтрок.Количество() < 1 Тогда
				
				 нс = МатрицаПерехода.Добавить();
				 нс.ТекущийСтатус = ТекущаяСтрока.НовыйСтатус;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусыПереходаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ПередНачаломДобавления(Отказ);
КонецПроцедуры

&НаКлиенте
Процедура СтатусыПереходаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НЕ ОтменаРедактирования Тогда
		ТекДанные = Элементы.СтатусыПерехода.ТекущиеДанные;
		Если НЕ ЗначениеЗаполнено(ТекДанные.НовыйСтатус) Тогда
			Отказ = Истина;
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнен новый статус документа'"));
		Иначе 
			МассивСтрок = МатрицаПерехода.НайтиСтроки(Новый Структура("Начальный", Истина));
			Если МассивСтрок.Количество() Тогда
				НачальныйСтатус = МассивСтрок[0].ТекущийСтатус;
				Если ТекДанные.НовыйСтатус = НачальныйСтатус Тогда
					Отказ = Истина;
					торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Нельзя установить в качестве нового статуса согласования статус, помеченный флагом начальный!'"));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования);
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЗамещающие
&НаКлиенте
Процедура ЗамещающиеПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Если Не (НоваяСтрока И ОтменаРедактирования) И Не ЗначениеЗаполнено(ТекДанные.Замещающий) Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Не выбран замещающий!'");
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования);
	
	ТекущаяСтрока = Элементы.ПорядокСогласования.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		Элемент.ТекущиеДанные.Пользователь = ТекущаяСтрока.Пользователь;

	КонецЕсли;
	
	Если НЕ ОтменаРедактирования Тогда
		МассивСтрок = Объект.Замещающие.НайтиСтроки(Новый Структура("Замещающий, ТекущийСтатус, Пользователь", ТекДанные.Замещающий, ТекДанные.ТекущийСтатус, ТекДанные.Пользователь));
		Если МассивСтрок.Количество() > 1 Тогда
			Отказ = Истина;
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Пользователь %1 уже добавлен в список замещающих!'"),ТекДанные.Замещающий));
		КонецЕсли;
		
		Если ТекДанные.Пользователь = ТекДанные.Замещающий Тогда
			Отказ = Истина;
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Пользователь %1 указан в качестве согласующего. Согласующий и замещающий не должны совпадать!'"),ТекДанные.Замещающий));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗамещающиеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекущаяСтрока = Элементы.ПорядокСогласования.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Выберите пользователя, корого нужно заместить.'"));
		Отказ = Истина;

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОповещаемые

&НаКлиенте
Процедура ОповещаемыеЛицаОповещаемоеЛицоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ОповещаемыеЛица.ТекущиеДанные;
	ТекущийСтатус = Элементы.МатрицаПерехода.ТекущиеДанные;
	
	Если Не ВыбранноеЗначение = Неопределено
		И Не ТекущиеДанные = Неопределено
		И Не ТекущийСтатус = Неопределено Тогда
		
		АдресЭП = ОбработкаВыбораОповещаемогоНаСервере(ВыбранноеЗначение);
		
		Если НЕ АдресЭП = Неопределено Тогда
			ТекущиеДанные.ОповещаемоеЛицо       = ВыбранноеЗначение;
			ТекущиеДанные.АдресЭлектроннойПочты = АдресЭП;
			ТекущиеДанные.ТекущийСтатус         = ТекущийСтатус.ТекущийСтатус;
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаполнитьМатрицуПерехода(Ссылка)
	
	МатрицаПерехода.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_МатрицаПереходаСтатусовДокументов.ТекущийСтатус,
	               |	торо_МатрицаПереходаСтатусовДокументов.СледующийСтатус КАК НовыйСтатус,
	               |	торо_МатрицаПереходаСтатусовДокументов.Начальный,
	               |	торо_МатрицаПереходаСтатусовДокументов.СогласованиеЗавершено,
	               |	торо_МатрицаПереходаСтатусовДокументов.ПроводитьДокумент,
	               |	торо_МатрицаПереходаСтатусовДокументов.ШаблонСообщенияЭлектроннойПочты,
	               |	торо_МатрицаПереходаСтатусовДокументов.НеИспользоватьВПодборах
	               |ИЗ
	               |	РегистрСведений.торо_МатрицаПереходаСтатусовДокументов КАК торо_МатрицаПереходаСтатусовДокументов
	               |ГДЕ
	               |	торо_МатрицаПереходаСтатусовДокументов.СпособСогласования = &СпособСогласования
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	торо_МатрицаПереходаСтатусовДокументов.НомерСтатуса";
	
	Запрос.УстановитьПараметр("СпособСогласования", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТЗМатрицаПерехода = РезультатЗапроса.Скопировать(,"ТекущийСтатус, Начальный, СогласованиеЗавершено, ПроводитьДокумент, НеИспользоватьВПодборах");
	ТЗМатрицаПерехода.Свернуть("ТекущийСтатус,Начальный, СогласованиеЗавершено, ПроводитьДокумент, НеИспользоватьВПодборах");
	МатрицаПерехода.Загрузить(ТЗМатрицаПерехода);
	
	ТЗСтатусыПерехода = РезультатЗапроса.Скопировать(,"ТекущийСтатус, НовыйСтатус");
	ТЗСтатусыПерехода.Свернуть("ТекущийСтатус, НовыйСтатус");
	
	Для Каждого Строка Из ТЗСтатусыПерехода Цикл
		
		Если Не ЗначениеЗаполнено(Строка.НовыйСтатус) Тогда
			
			ТЗСтатусыПерехода.Удалить(Строка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СтатусыПерехода.Загрузить(ТЗСтатусыПерехода);
	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборыВСвязанныхТЧ(ТекущаяСтрока)
	
	// Отбор в новых статусах
	Элементы.СтатусыПерехода.ОтборСтрок     = Новый ФиксированнаяСтруктура("ТекущийСтатус", ТекущаяСтрока.ТекущийСтатус);
	
	// Отбор в Согласующих
	Элементы.ПорядокСогласования.ОтборСтрок = Новый ФиксированнаяСтруктура("ТекущийСтатус", ТекущаяСтрока.ТекущийСтатус);
	
	// Отбор в оповещаемых
	Элементы.ОповещаемыеЛица.ОтборСтрок     = Новый ФиксированнаяСтруктура("ТекущийСтатус", ТекущаяСтрока.ТекущийСтатус);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередНачаломДобавления(Отказ) 
	ТекущаяСтрокаСтатуса = Элементы.МатрицаПерехода.ТекущиеДанные;
	
	Если ТекущаяСтрокаСтатуса = Неопределено Тогда
		
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Необходимо сначало выбрать статус согласования.'");
		Сообщение.Сообщить();
		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущаяСтрокаСтатуса = Элементы.МатрицаПерехода.ТекущиеДанные;
	
	Если ТекущаяСтрокаСтатуса <> Неопределено Тогда
		
		Если НоваяСтрока И Не ОтменаРедактирования И Элемент.ТекущиеДанные <> Неопределено Тогда
			
			Элемент.ТекущиеДанные.ТекущийСтатус = ТекущаяСтрокаСтатуса.ТекущийСтатус;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьОтборыВСвязанныхТЧ(ТекущаяСтрокаСтатуса);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбработкаВыбораОповещаемогоНаСервере(Оповещаемый)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ФизическиеЛицаКонтактнаяИнформация.Представление
	               |ИЗ
	               |	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |ГДЕ
	               |	ФизическиеЛицаКонтактнаяИнформация.Ссылка = &Ссылка
	               |	И ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)";
	Запрос.УстановитьПараметр("Ссылка", Оповещаемый.ФизическоеЛицо);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Представление;
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'У физического лица, связанного с сотрудником <%1> не указано ни одного адреса электроннной почты.'"),Оповещаемый);
		Сообщение.Сообщить();
		Возврат "";
		
	КонецЕсли; 
КонецФункции

#КонецОбласти


