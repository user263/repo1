#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
Процедура ПриКопировании(ОбъектКопирования)
	
	Наименование = "";
	ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
	ТекущийПроцентСевернойНадбавки = 0;
	ВАрхиве = Ложь;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
		
		ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(
			ПроверяемыеРеквизиты,
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ГоловнаяОрганизация"));
		

КонецПроцедуры

#КонецОбласти
#Область СлужебныеПроцедурыИФункции

// Подсистема "Управление доступом"

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора.
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Сотрудник",	Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КадроваяИсторияСотрудников.Сотрудник КАК Сотрудник,
	|	КадроваяИсторияСотрудников.Организация,
	|	КадроваяИсторияСотрудников.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.КадроваяИсторияСотрудников КАК КадроваяИсторияСотрудников
	|ГДЕ
	|	КадроваяИсторияСотрудников.Сотрудник = &Сотрудник
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТекущиеКадровыеДанныеСотрудников.Сотрудник,
	|	ТекущиеКадровыеДанныеСотрудников.ТекущаяОрганизация,
	|	ТекущиеКадровыеДанныеСотрудников.ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
	|ГДЕ
	|	ТекущиеКадровыеДанныеСотрудников.Сотрудник = &Сотрудник
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Сотрудники.Ссылка,
	|	Сотрудники.ГоловнаяОрганизация,
	|	Сотрудники.ФизическоеЛицо
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.Ссылка = &Сотрудник";
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Строка = Таблица.Добавить();
		Строка.ЗначениеДоступа	= ФизическоеЛицо;
		
	Иначе
		Выборка = Результат.Выбрать();
		
		НомерНабора = 0;
		
		Пока Выборка.Следующий() Цикл
			СтрокаТаб = Таблица.Добавить();
			СтрокаТаб.НомерНабора			= НомерНабора;
			СтрокаТаб.ЗначениеДоступа		= Выборка.Организация;
			
			НомерНабора = НомерНабора + 1;
		КонецЦикла;
		
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Подсистема "Управление доступом"

#КонецОбласти
#КонецЕсли
