#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
// Процедура - Рассчитать продолжительность по операциям
//
// Параметры:
//  ПоНормамТО	 - Булево - выполнять ли расчет по нормам ТО.
Процедура РассчитатьПродолжительностьПоОперациям(ПоНормамТО = Ложь) Экспорт
	
	Продолжительность =  РассчитатьПродолжительность(ПоНормамТО);
	ТекстПродолжительности = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(Продолжительность);
	
	НормаВремени      = Продолжительность;
	НормаВремениТекст = ТекстПродолжительности;
	
КонецПроцедуры

// Процедура - Рассчитать продолжительность по трудозатратам
Процедура РассчитатьПродолжительностьПоТрудозатратам() Экспорт
	
	Продолжительность = 0;
	Для Каждого СтрокаТЧ Из ТрудовыеЗатраты Цикл
	
		Продолжительность = Продолжительность + СтрокаТЧ.ВремяРаботы;
	
	КонецЦикла; 
	
	РассчитатьПродолжительностьВложеннойТехКартыПоТрудозатратам(СписокОпераций, Продолжительность);
	
	ТекстПродолжительности = торо_ОбщегоНазначенияКлиентСервер.СформироватьЗаголовокПоПродолжительности(Продолжительность);
	
	НормаВремени      = Продолжительность;
	НормаВремениТекст = ТекстПродолжительности;

	
КонецПроцедуры

Процедура РассчитатьПродолжительностьВложеннойТехКартыПоТрудозатратам(табСписокОпераций, Продолжительность)
	
	Для каждого СтрОперации Из табСписокОпераций Цикл
		
		Если ТипЗнч(СтрОперации.Операция) = Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда
			Продолжить;
		Иначе
			ОперацияТехКарта = ПолучитьТехКартуПоИдентификатору(СтрОперации.Операция);
			
			Если ОперацияТехКарта <> ПредопределенноеЗначение("Справочник.торо_ИдентификаторыТехКарт.ПустаяСсылка") Тогда
				Продолжительность = Продолжительность + ОперацияТехКарта.ТрудовыеЗатраты.Итог("ВремяРаботы");
			КонецЕсли;
			
			РассчитатьПродолжительностьВложеннойТехКартыПоТрудозатратам(ОперацияТехКарта.СписокОпераций, Продолжительность);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТехКартуПоИдентификатору(Идентификатор, Дата = Неопределено)
	
	Если Не Дата = Неопределено Тогда
		Таб = РегистрыСведений.торо_ВерсииТехКарт.СрезПоследних(Новый Граница(Дата,ВидГраницы.Включая),Новый Структура("ИдентификаторТехКарты", Идентификатор));
	Иначе
		Таб = РегистрыСведений.торо_ВерсииТехКарт.СрезПоследних(    ,Новый Структура("ИдентификаторТехКарты", Идентификатор));// обработано
	КонецЕсли;
	
	Если Таб.Количество() Тогда
		Возврат Таб[0].ТехКарта;
	Иначе
		Возврат Справочники.торо_ТехКарты.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА торо_ТехКартыСписокОпераций.Операция ССЫЛКА Справочник.торо_ИдентификаторыТехКарт
	               |			ТОГДА торо_ВерсииТехКартСрезПоследних.ТехКарта
	               |		ИНАЧЕ торо_ТехКартыСписокОпераций.Операция
	               |	КОНЕЦ КАК Состав,
	               |	ВЫБОР
	               |		КОГДА торо_ТехКартыСписокОпераций.Операция ССЫЛКА Справочник.торо_ИдентификаторыТехКарт
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Операция_Техкарта,
	               |	торо_ТехКартыСписокОпераций.Количество
	               |ИЗ
	               |	Справочник.торо_ТехКарты.СписокОпераций КАК торо_ТехКартыСписокОпераций
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт.СрезПоследних(&ДатаПринятия) КАК торо_ВерсииТехКартСрезПоследних
	               |		ПО торо_ТехКартыСписокОпераций.Операция = торо_ВерсииТехКартСрезПоследних.ИдентификаторТехКарты
	               |ГДЕ
	               |	торо_ТехКартыСписокОпераций.Ссылка = &Ссылка
	               |	И торо_ТехКартыСписокОпераций.Операция ССЫЛКА Справочник.торо_ИдентификаторыТехКарт";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ДатаПринятия", новый Граница(ДатаПринятия,ВидГраницы.Включая));
	ТабДанных = Запрос.Выполнить().Выгрузить();
	
	ТабЗаписи = ТабДанных.Скопировать();
	
	Для каждого ТекСтрока Из ТабДанных Цикл
		ДополнитьТаблицуТехкарт(ТекСтрока.Состав,ТабЗаписи);
	КонецЦикла;
	
	ТабЗаписи.Свернуть("Состав","Количество");
	
	НаборЗаписей = РегистрыСведений.торо_СоставИерархическихТехкартРемонтов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Техкарта.Установить(Ссылка);
	
	Для каждого ТекСтрока Из ТабЗаписи Цикл
		Запись = НаборЗаписей.Добавить();
		Запись.Техкарта = Ссылка;
		Запись.Состав = ТекСтрока.Состав;
		Запись.Количество = ТекСтрока.Количество;
	КонецЦикла;
	
	НаборЗаписей.Записать();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ДополнитьТаблицуТехкарт(техКарта,ТабЗаписи)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА торо_ТехКартыСписокОпераций.Операция ССЫЛКА Справочник.торо_ИдентификаторыТехКарт
	               |			ТОГДА торо_ВерсииТехКартСрезПоследних.ТехКарта
	               |		ИНАЧЕ торо_ТехКартыСписокОпераций.Операция
	               |	КОНЕЦ КАК Состав,
	               |	ВЫБОР
	               |		КОГДА торо_ТехКартыСписокОпераций.Операция ССЫЛКА Справочник.торо_ИдентификаторыТехКарт
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Операция_Техкарта,
	               |	торо_ТехКартыСписокОпераций.Количество
	               |ИЗ
	               |	Справочник.торо_ТехКарты.СписокОпераций КАК торо_ТехКартыСписокОпераций
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_ВерсииТехКарт.СрезПоследних(&ДатаПринятия) КАК торо_ВерсииТехКартСрезПоследних
	               |		ПО торо_ТехКартыСписокОпераций.Операция = торо_ВерсииТехКартСрезПоследних.ИдентификаторТехКарты
	               |ГДЕ
	               |	торо_ТехКартыСписокОпераций.Ссылка = &Ссылка
	               |	И торо_ТехКартыСписокОпераций.Операция ССЫЛКА Справочник.торо_ИдентификаторыТехКарт";
	
	Запрос.УстановитьПараметр("Ссылка",техКарта);
	Запрос.УстановитьПараметр("ДатаПринятия", новый Граница(ДатаПринятия,ВидГраницы.Включая));
	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТабЗаписи.Добавить(),Выборка);
		ДополнитьТаблицуТехкарт(Выборка.Состав,ТабЗаписи);
	КонецЦикла;
КонецПроцедуры

Функция РассчитатьПродолжительность(ПоНормамТО = Ложь)
	
	Продолжительность = 0;
	
	Для Каждого СтрокаОпераций Из СписокОпераций Цикл
		
		Если ТипЗнч(СтрокаОпераций.Операция) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") Тогда
			Таб = РегистрыСведений.торо_ВерсииТехКарт.СрезПоследних(?(ЗначениеЗаполнено(ДатаПринятия), ДатаПринятия, ТекущаяДата()), Новый Структура("ИдентификаторТехКарты", СтрокаОпераций.Операция));
			Если Таб.Количество() > 0 Тогда
				
				ТехКартаСсылка = Таб[0].ТехКарта;
				
			Иначе
				Продолжить;
			КонецЕсли; 
		КонецЕсли;
		
		Продолжительность = Продолжительность + ?(ТипЗнч(СтрокаОпераций.Операция) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт")
													, ?(ПоНормамТО, ТехКартаСсылка.НормаВремени          , СтрокаОпераций.НормаВремениВСекундах)*СтрокаОпераций.Количество
													, ?(ПоНормамТО, СтрокаОпераций.Операция.НормаВремени , СтрокаОпераций.НормаВремениВСекундах)*СтрокаОпераций.Количество);
		
	КонецЦикла;
	
	Возврат Продолжительность;
	
КонецФункции

#КонецОбласти

#КонецЕсли