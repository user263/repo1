#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Заполняет список команд печати.
//
// Параметры:
// КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Технологическая карта
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Справочник.торо_ИдентификаторыТехКарт";
	КомандаПечати.Идентификатор = "ТехКарта";
	КомандаПечати.Представление = НСтр("ru = 'Технологическая карта'");
	КомандаПечати.СразуНаПринтер = ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
	"НастройкиТОиР",
	"ПечатьДокументовБезПредварительногоПросмотра",
	Ложь);
	
КонецПроцедуры

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТехКарта") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
															"ТехКарта", 
															"Технологическая карта", 
															ПечатьТехКарты(МассивОбъектов, ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьТехКарты(МассивОбъектов, ПараметрыПечати)
	
	Перем Ячейка;
	
	Таб = РегистрыСведений.торо_ВерсииТехКарт.СрезПоследних(ТекущаяДата() ,Новый Структура("ИдентификаторТехКарты", МассивОбъектов[0]));
	Если Таб.Количество() Тогда
		ТехКарта = Таб[0].ТехКарта;	
	КонецЕсли;
	
	Если ТехКарта = Неопределено Тогда
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.торо_ИдентификаторыТехКарт.ТехКарта"); 
	
	ОбластьНаименования = Макет.ПолучитьОбласть("Название");
	ОбластьНаименования.Параметры.Наименование = Строка(МассивОбъектов[0]);
	ТабДок.Вывести(ОбластьНаименования);
	
	ОбластьШапки = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапки.Параметры.Наименование = Строка(МассивОбъектов[0]);
	ОбластьШапки.Параметры.ПродолжительностьТехКарты = ПреобразоватьВремя(ТехКарта.НормаВремени);
	ОбластьШапки.Параметры.ДатаНачала = Формат(ТехКарта.ДатаПринятия, "ДФ=dd.MM.yyyy");
	ТабДок.Вывести(ОбластьШапки);
	
	Если ТехКарта.СодержитОпасныеОперации Тогда
		ОблСодержитОпасныеОперации = Макет.ПолучитьОбласть("СодержитОпасныеОперации");
		ТабДок.Вывести(ОблСодержитОпасныеОперации);
	КонецЕсли;
	
	Если ТехКарта.СодержитРаботыПовышеннойОпасности Тогда
		ОблСодержитРаботыПовышОпасности = Макет.ПолучитьОбласть("СодержитРаботыПовышеннойОпасности");
		ТабДок.Вывести(ОблСодержитРаботыПовышОпасности);	
	КонецЕсли;
	
	ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(ШапкаТаблицы);
	
	Ячейка = 1;
	
	ТЗ = Новый ТаблицаЗначений;
	Дерево = Новый ДеревоЗначений;
	Индекс = 0;
	ЗаполнитьТЗ(МассивОбъектов[0],ТЗ, Индекс, ,ТехКарта.ДатаПринятия);
	ИндексДерева = 0;
	ЗаполнитьДерево(МассивОбъектов[0],Дерево,ИндексДерева,);
	
	
	НовыйТЗ = Новый ТаблицаЗначений;
	НовыйТЗ = ТЗ.Скопировать();
	
	Если ТЗ.Количество() <> 0 Тогда
		НовыйТЗ.Свернуть( "Родитель1, Операция, СпособВыполнения, Кратность" );
	КонецЕсли;
	
	ИтоговаяТз = НОвый ТаблицаЗначений;
	ИтоговаяТз.Колонки.Добавить( "Родитель1" );
	ИтоговаяТз.Колонки.Добавить( "ТехнологическаяОперация" );
	ИтоговаяТз.Колонки.Добавить( "Продолжительность" );
	ИтоговаяТз.Колонки.Добавить( "СпособВыполнения" );
	ИтоговаяТз.Колонки.Добавить( "МатериальныеЗатратыИКоличество" );
	ИтоговаяТз.Колонки.Добавить( "ТрудозатратыКоличествоВремяРаботы" );
	ИтоговаяТз.Колонки.Добавить( "ИнстурментыИТехника" );
	ИтоговаяТз.Колонки.Добавить( "Показатель" );
	ИтоговаяТз.Колонки.Добавить( "МерыБезопасности" );
	ИтоговаяТз.Колонки.Добавить( "Опасная" );
	ИтоговаяТз.Колонки.Добавить( "ПовышеннойОпасности" );
	ИтоговаяТз.Колонки.Добавить( "ПолноеНаименование" );
	ИтоговаяТз.Колонки.Добавить( "Кратность" );

	Для Каждого СтрокаНовыйТЗ Из НовыйТЗ Цикл
		
		МассивСтрок = ТЗ.НайтиСтроки(Новый Структура( "Родитель1, Операция",СтрокаНовыйТЗ.Родитель1, СтрокаНовыйТЗ.Операция ));
		НоваяСтрокаИтоговойТаблицы = ИтоговаяТз.Добавить();
		
		НоваяСтрокаИтоговойТаблицы.Родитель1               = СтрокаНовыйТЗ.Родитель1;
        НоваяСтрокаИтоговойТаблицы.ТехнологическаяОперация = СтрокаНовыйТЗ.Операция;
		НоваяСтрокаИтоговойТаблицы.СпособВыполнения 	   = СтрокаНовыйТЗ.СпособВыполнения;
		НоваяСтрокаИтоговойТаблицы.Кратность		       = СтрокаНовыйТЗ.Кратность;
		
		Если ТипЗнч(СтрокаНовыйТЗ.Операция) = Тип("СправочникСсылка.торо_ТехнологическиеОперации") Тогда
			НоваяСтрокаИтоговойТаблицы.ПолноеНаименование		   = СтрокаНовыйТЗ.Операция.СодержаниеРабот;
			Опасная = СтрокаНовыйТЗ.Операция.Опасная;
			Если Опасная Тогда
				НоваяСтрокаИтоговойТаблицы.Опасная				   = Опасная;
			КонецЕсли;
			ПовышеннойОпасности = СтрокаНовыйТЗ.Операция.РаботаПовышеннойОпасности;
			Если ПовышеннойОпасности Тогда
				НоваяСтрокаИтоговойТаблицы.ПовышеннойОпасности	   = ПовышеннойОпасности;
			КонецЕсли;
		КонецЕсли;
		
		ВремяЧасов = Цел(МассивСтрок[0].Продолжительность);
		ВремяМинут = Цел(Число(МассивСтрок[0].Продолжительность - ВремяЧасов) * 60);
		
		НоваяСтрокаИтоговойТаблицы.Продолжительность       = Строка(ВремяЧасов) + " ч. " + Строка(ВремяМинут) + " мин. ";
		
		Материалы         = "";
		Трудозатраты      = "";
		Инструмент        = "";
		Показатель        = "";
		МерыБезопасности  = "";
		
		Для Каждого СтрокаМассива Из МассивСтрок Цикл
			
			Если ЗначениеЗаполнено(СтрокаМассива.Номенклатура) Тогда
				ПереносСПервойСтроки = ?(Материалы = "","", Символ(13));
				Материалы = Материалы + ПереносСПервойСтроки + Строка(СтрокаМассива.Номенклатура) + ", " + Строка(СтрокаМассива.Количество) + " " + Строка(СтрокаМассива.ЕдиницаИзмерения) + ".";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаМассива.Квалификация) Тогда
				ПереносСПервойСтроки = ?(Трудозатраты = "","", Символ(13));
				Трудозатраты = Трудозатраты + ПереносСПервойСтроки + Строка(СтрокаМассива.Квалификация) + ", " + Строка(СтрокаМассива.КолКвалификаций) + ", " + ПреобразоватьВремя(СтрокаМассива.ВремяРаботы);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаМассива.Инструмент) Тогда
				ПереносСПервойСтроки = ?(Инструмент = "","", Символ(13));
				Инструмент = Инструмент + ПереносСПервойСтроки + Строка(СтрокаМассива.Инструмент) + ", " + Строка(СтрокаМассива.КолИнстр) + " " + Строка(СтрокаМассива.ЕдИзмИнстр);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаМассива.Показатель) Тогда
				ПереносСПервойСтроки = ?(Показатель = "","", Символ(13));
				Показатель = Показатель + ПереносСПервойСтроки + Строка(СтрокаМассива.Показатель);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаМассива.МерыБезопасности) Тогда
				ПереносСПервойСтроки = ?(МерыБезопасности = "","", Символ(13));
				МерыБезопасности = МерыБезопасности + ПереносСПервойСтроки + Строка(СтрокаМассива.МерыБезопасности);
			КонецЕсли;
	
		КонецЦикла;
		
		НоваяСтрокаИтоговойТаблицы.МатериальныеЗатратыИКоличество = Материалы;
		НоваяСтрокаИтоговойТаблицы.ТрудозатратыКоличествоВремяРаботы = Трудозатраты;
		НоваяСтрокаИтоговойТаблицы.ИнстурментыИТехника = Инструмент;
		НоваяСтрокаИтоговойТаблицы.Показатель = Показатель;
		НоваяСтрокаИтоговойТаблицы.МерыБезопасности = МерыБезопасности;
	КонецЦикла;

	МассивУровней = Новый Массив;
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	Для Каждого Строка Из  ИтоговаяТз Цикл
		
		МассивСтрокДерева = Дерево.Строки.НайтиСтроки(Новый Структура("Родитель1, Операция", Строка.Родитель1, СТрока.ТехнологическаяОперация),Истина);
		Уровень = МассивСтрокДерева[ 0 ].Уровень();
		
		КолЭлем = МассивУровней.ВГраница();
		Если КолЭлем >= Уровень Тогда
			Номер = МассивУровней.Получить(Уровень);
			МассивУровней.Удалить(Уровень);
			МассивУровней.Вставить(Уровень, Номер + 1);
		Иначе
			МассивУровней.Вставить(Уровень,1);
		КонецЕсли;
		СтрокаОперации = Макет.ПолучитьОбласть( "СтрокаТаблицы" );
		СтрокаОперации.Параметры.Заполнить( Строка );
		СтрокаОперации.Параметры.НомерТО = МассивУровней.Получить(Уровень);
        
		НоваяСтрока = ТабДок.Вывести( СтрокаОперации, Уровень );
		ТабДок.Область(НоваяСтрока.Верх,1).Отступ = Уровень * 2;
		ТабДок.Область(НоваяСтрока.Верх,2).Отступ = Уровень * 2;
		Если ТипЗнч(Строка.ТехнологическаяОперация) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") Тогда
			ТабДок.Область("СтрокаТаблицы").ЦветФона = Новый Цвет(156,156,156);
		КонецЕсли;
		
	КонецЦикла;
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;
	
КонецФункции

Процедура ЗаполнитьДерево(ТехКарта, Дерево,ИндексДерева, СтрокаРодитель = Неопределено)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	&ТехКарта КАК Родитель1,
	               |	торо_ТехКарты_СписокОпераций.Продолжительность,
	               |	торо_ТехКарты_СписокОпераций.ID,
	               |	торо_ТехКарты_СписокОпераций.Операция
	               |ИЗ
	               |	РегистрСведений.торо_ВерсииТехКарт.СрезПоследних(, ИдентификаторТехКарты = &ТехКарта) КАК торо_ВерсииТехКартСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.СписокОпераций КАК торо_ТехКарты_СписокОпераций
	               |		ПО торо_ВерсииТехКартСрезПоследних.ТехКарта = торо_ТехКарты_СписокОпераций.Ссылка";

	Запрос.УстановитьПараметр("ТехКарта",ТехКарта);

	Результат = Запрос.Выполнить();
	Таблица = Запрос.Выполнить().Выгрузить();

	Для каждого Строка Из Таблица Цикл
		
		Если ИндексДерева =0 Тогда
			
			ДобавитьКолонкиВДерево(Дерево,Строка,ИндексДерева);
			
		КонецЕсли;
		
		Если ТипЗнч(Строка.Операция) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") Тогда
			Если СтрокаРодитель = Неопределено Тогда
				НС = Дерево.Строки.Добавить();
			Иначе
				НС = СтрокаРодитель.Строки.Добавить();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(НС, Строка);
			ЗаполнитьДерево(Строка.Операция, Дерево,ИндексДерева, НС);
		Иначе
			Если СтрокаРодитель = Неопределено Тогда
				НС = Дерево.Строки.Добавить();
			Иначе
				НС = СтрокаРодитель.Строки.Добавить();
			КонецЕсли;
				ЗаполнитьЗначенияСвойств(НС, Строка);
				
		КонецЕсли;
	
	КонецЦикла;

	
КонецПроцедуры

Процедура ЗаполнитьТЗ (ТехКарта, ТЗ, Индекс, СтрокаРодитель = Неопределено, Дата = Неопределено) Экспорт

	Запрос = Новый Запрос;

	Запрос.Текст = "ВЫБРАТЬ
	               |	торо_ТехКарты_СписокОпераций.Продолжительность,
	               |	торо_ТехКарты_СписокОпераций.ID,
	               |	торо_ТехКарты_СписокОпераций.Операция,
	               |	торо_ТехКарты_СписокОпераций.Ссылка,
	               |	торо_ТехКарты_СписокОпераций.СпособВыполнения,
	               |	торо_ТехКарты_СписокОпераций.Количество КАК Кратность
	               |ПОМЕСТИТЬ СписокОпераций
	               |ИЗ
	               |	РегистрСведений.торо_ВерсииТехКарт.СрезПоследних(&Дата, ИдентификаторТехКарты = &ТехКарта) КАК торо_ВерсииТехКартСрезПоследних
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты.СписокОпераций КАК торо_ТехКарты_СписокОпераций
	               |		ПО торо_ВерсииТехКартСрезПоследних.ТехКарта = торо_ТехКарты_СписокОпераций.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	торо_РемонтыМатериальныеЗатраты.Номенклатура,
	               |	торо_РемонтыМатериальныеЗатраты.ЕдиницаИзмерения,
	               |	торо_РемонтыМатериальныеЗатраты.Количество,
	               |	торо_РемонтыМатериальныеЗатраты.ID,
	               |	NULL КАК Квалификация,
	               |	NULL КАК ВремяРаботы,
	               |	NULL КАК КолКвалификаций,
	               |	NULL КАК Инструмент,
	               |	NULL КАК КолИнстр,
	               |	NULL КАК ЕдИзмИнстр,
	               |	NULL КАК Показатель,
	               |	NULL КАК МерыБезопасности
	               |ПОМЕСТИТЬ СписокМатериалов
	               |ИЗ
	               |	Справочник.торо_ТехКарты.МатериальныеЗатраты КАК торо_РемонтыМатериальныеЗатраты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокОпераций КАК СписокОпераций
	               |		ПО торо_РемонтыМатериальныеЗатраты.Ссылка = СписокОпераций.Ссылка
	               |			И торо_РемонтыМатериальныеЗатраты.ID = СписокОпераций.ID
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	торо_РемонтыТрудовыеЗатраты.ID,
	               |	торо_РемонтыТрудовыеЗатраты.Квалификация,
	               |	торо_РемонтыТрудовыеЗатраты.ВремяРаботы,
	               |	торо_РемонтыТрудовыеЗатраты.Количество,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL
	               |ИЗ
	               |	Справочник.торо_ТехКарты.ТрудовыеЗатраты КАК торо_РемонтыТрудовыеЗатраты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокОпераций КАК СписокОпераций
	               |		ПО торо_РемонтыТрудовыеЗатраты.Ссылка = СписокОпераций.Ссылка
	               |			И торо_РемонтыТрудовыеЗатраты.ID = СписокОпераций.ID
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	торо_РемонтыИнструментыИТехника.ID,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	торо_РемонтыИнструментыИТехника.Инструмент,
	               |	торо_РемонтыИнструментыИТехника.Количество,
	               |	торо_РемонтыИнструментыИТехника.ЕдиницаИзмерения,
	               |	NULL,
	               |	NULL
	               |ИЗ
	               |	Справочник.торо_ТехКарты.ИнструментыИТехника КАК торо_РемонтыИнструментыИТехника
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокОпераций КАК СписокОпераций
	               |		ПО торо_РемонтыИнструментыИТехника.Ссылка = СписокОпераций.Ссылка
	               |			И торо_РемонтыИнструментыИТехника.ID = СписокОпераций.ID
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	торо_РемонтыИзмеряемыеПоказатели.ID,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	торо_РемонтыИзмеряемыеПоказатели.Показатель,
	               |	NULL
	               |ИЗ
	               |	Справочник.торо_ТехКарты.ИзмеряемыеПоказатели КАК торо_РемонтыИзмеряемыеПоказатели
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокОпераций КАК СписокОпераций
	               |		ПО торо_РемонтыИзмеряемыеПоказатели.Ссылка = СписокОпераций.Ссылка
	               |			И торо_РемонтыИзмеряемыеПоказатели.ID = СписокОпераций.ID
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	СписокОпераций.ID,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	торо_ТехКартыМерыБезопасности.МерыБезопасности
	               |ИЗ
	               |	Справочник.торо_ТехКарты.МерыБезопасности КАК торо_ТехКартыМерыБезопасности
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокОпераций КАК СписокОпераций
	               |		ПО торо_ТехКартыМерыБезопасности.Ссылка = СписокОпераций.Ссылка
	               |			И торо_ТехКартыМерыБезопасности.ID = СписокОпераций.ID
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&ТехКарта КАК Родитель1,
	               |	СписокОпераций.Операция,
	               |	СписокОпераций.Продолжительность,
	               |	СписокМатериалов.Номенклатура,
	               |	СписокМатериалов.ЕдиницаИзмерения,
	               |	isnull(СписокМатериалов.Количество, 0) КАК Количество,
	               |	СписокМатериалов.Квалификация,
	               |	СписокМатериалов.ВремяРаботы,
	               |	СписокМатериалов.КолКвалификаций,
	               |	СписокМатериалов.Инструмент,
	               |	СписокМатериалов.КолИнстр,
	               |	СписокМатериалов.Показатель,
	               |	СписокМатериалов.ЕдИзмИнстр,
	               |	СписокОпераций.СпособВыполнения,
	               |	СписокМатериалов.МерыБезопасности,
	               |	СписокОпераций.Кратность
	               |ИЗ
	               |	СписокОпераций КАК СписокОпераций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СписокМатериалов КАК СписокМатериалов
	               |		ПО (СписокМатериалов.ID = СписокОпераций.ID)";


	Запрос.УстановитьПараметр("ТехКарта",ТехКарта);

	Запрос.УстановитьПараметр("Дата", Дата);
	
	
	Результат = Запрос.Выполнить();
	Таблица = Запрос.Выполнить().Выгрузить();

	Для каждого Строка Из Таблица Цикл
		
		Если ТипЗнч(Строка.Операция) = Тип("СправочникСсылка.торо_ИдентификаторыТехКарт") Тогда
			Если Индекс =0 Тогда
				ДобавитьКолонкиВТЗ(ТЗ,Строка, Индекс)
			КонецЕсли;
			НС = ТЗ.Добавить();
			НС.Родитель1 = СтрокаРодитель;
			ЗаполнитьЗначенияСвойств(НС, Строка);
			
			ТехнолКарта = РегистрыСведений.торо_ВерсииТехКарт.ПолучитьПоследнее(    ,Новый Структура("ИдентификаторТехКарты", Строка.Операция)).ТехКарта;// обработано
			
			ЗаполнитьТЗ(Строка.Операция, ТЗ, Индекс, СтрокаРодитель, ТехнолКарта.ДатаПринятия);
		Иначе	
			Если Индекс =0 Тогда
				ДобавитьКолонкиВТЗ(ТЗ,Строка, Индекс)
            КонецЕсли;
			
			НС = ТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НС, Строка);
			
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

Процедура ДобавитьКолонкиВДерево(Дерево,Строка,ИндексДерева)

	Колонки = Строка.Владелец().Колонки;
	Для Каждого Колонка из Колонки Цикл
		Дерево.Колонки.Добавить(Колонка.Имя);
	КонецЦикла;
 ИндексДерева = ИндексДерева +1;
КонецПроцедуры

Процедура ДобавитьКолонкиВТЗ(ТЗ,Строка, Индекс)

	Колонки = Строка.Владелец().Колонки;
	Для Каждого Колонка из Колонки Цикл
		ТЗ.Колонки.Добавить(Колонка.Имя);
	КонецЦикла;
    Индекс = Индекс +1;
КонецПроцедуры

Функция ПреобразоватьВремя(ВремяРаботы)
	Часы   = Цел( ВремяРаботы / 3600 );
	Минуты = Цел( ( ВремяРаботы - Часы * 3600 ) /60 );
	Сек    = ВремяРаботы -Часы * 3600 - Минуты * 60;
	ИтоговаяСтрока = Строка( Часы ) + "ч. " + Строка( Минуты ) + "мин." + Строка( Сек ) + "с.";
	Возврат ИтоговаяСтрока;
КонецФункции

#КонецОбласти

#Область РаботаСПредставлениями

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	ФорматнаяСтрока = торо_РаботаСПользовательскимПредставлениемПовтИсп.ПолучитьФорматнуюСтроку("Справочники.торо_ИдентификаторыТехКарт");
	Если ФорматнаяСтрока = Неопределено Тогда
		Возврат;
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
	Поля.Добавить("Ссылка");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ФорматнаяСтрока = торо_РаботаСПользовательскимПредставлениемПовтИсп.ПолучитьФорматнуюСтроку("Справочники.торо_ИдентификаторыТехКарт");
	Если ФорматнаяСтрока = Неопределено Тогда
		Возврат;
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	СписокПолей = торо_РаботаСПользовательскимПредставлением.ПолучитьСписокПолей(ФорматнаяСтрока);
	Если СписокПолей.Количество() > 0 Тогда
		ТекстЗапроса = "ВЫБРАТЬ ";
		Для Каждого ЭлСписка Из СписокПолей Цикл
			ТекстЗапроса = ТекстЗапроса + "торо_ТехКарты."+ЭлСписка+",";
		КонецЦикла;
		ТекстЗапроса = Лев(ТекстЗапроса,СтрДлина(ТекстЗапроса)-1);
		ТекстЗапроса = ТекстЗапроса + " ИЗ
		               |	РегистрСведений.торо_ВерсииТехКарт.СрезПоследних(, ИдентификаторТехКарты = &ID_ТК) КАК торо_ВерсииТехКартСрезПоследних
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.торо_ТехКарты КАК торо_ТехКарты
		               |		ПО торо_ВерсииТехКартСрезПоследних.ТехКарта = торо_ТехКарты.Ссылка";
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ID_ТК",Данные.Ссылка);
		Запрос.Текст = ТекстЗапроса;
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СтруктураДанных = Новый Структура;
			Для Каждого ЭлСписка Из СписокПолей Цикл
				СтруктураДанных.Вставить(ЭлСписка,Выборка[ЭлСписка]);
			КонецЦикла;
			Представление = торо_РаботаСПользовательскимПредставлением.ПолучитьПредставлениеПоФорматнойСтроке(ФорматнаяСтрока,СтруктураДанных);
		Иначе
			Запрос.Текст = "ВЫБРАТЬ торо_ИдентификаторыТехКарт.Наименование ИЗ Справочник.торо_ИдентификаторыТехКарт КАК торо_ИдентификаторыТехКарт ГДЕ торо_ИдентификаторыТехКарт.Ссылка = &ID_ТК";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Представление = Выборка.Наименование;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Представление = ФорматнаяСтрока;
	КонецЕсли;

КонецПроцедуры

// Функция - заполняет список реквизитов, которые можно использовать при формировании форматной строки в конструкторе.
//
// Параметры:
//  СписокРеквизитов - СписокЗначений - пустой список значений для заполнения.
Процедура ЗаполнитьСписокРеквизитовДляФорматнойСтроки(СписокРеквизитов) Экспорт
	
	СписокРеквизитов.Добавить("Наименование",		"Наименование");
	СписокРеквизитов.Добавить("Код",				"Код");
	СписокРеквизитов.Добавить("ДатаПринятия",		"Дата принятия");
	СписокРеквизитов.Добавить("НормаВремениТекст",	"Норма времени");
	СписокРеквизитов.Добавить("ВремяПростояТекст",	"Время простоя");
	СписокРеквизитов.Добавить("Комментарий",		"Комментарий");

КонецПроцедуры

#КонецОбласти

#КонецЕсли


