#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекСтруктураИерархии = Параметры.СтруктураИерархии;
	
	Если Объект.Ссылка = Справочники.торо_ОбъектыРемонта.ПустаяСсылка() Тогда
		РодительИерархии = Параметры.РодительИерархии;
		Родитель = РодительИерархии;
	Иначе	
		Родитель = НайтиРодителяИерархии(?(ЗначениеЗаполнено(ТекСтруктураИерархии), ТекСтруктураИерархии, Константы.торо_ИерархияДляВводаНовыхОР.Получить()), Объект.Ссылка);
	КонецЕсли;
	
	Если Параметры.Свойство("Копирование") Тогда
		
		СтруктураРевизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Копирование, "Наименование, Организация");
		ЗаполнитьЗначенияСвойств(Объект, СтруктураРевизитов);
		
	КонецЕсли; 
	
	Элементы.ФормаПечать.Видимость = Ложь;
	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Объект.Ссылка = Справочники.торо_ОбъектыРемонта.ПустаяСсылка() Тогда
		Попытка
			
			Если Объект.Ссылка = Справочники.торо_ОбъектыРемонта.ПустаяСсылка() Тогда
				СсылкаНаОбъект = торо_ОбщегоНазначения.ПолучитьСсылкуНаОбъект(ТекущийОбъект);
			Иначе 
				СсылкаНаОбъект = Объект.Ссылка;
			КонецЕсли;
			
			Если ТекСтруктураИерархии.ИзменяетсяДокументами Тогда
				
				НовДок = Документы.торо_ИзменениеПоложенияВСтруктуреИерархии.СоздатьДокумент();
				НовДок.Дата = ТекущаяДата();
				
				НовДок.СтруктураИерархии = ТекСтруктураИерархии;
				
				НовДок.Организация = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
				"НастройкиТОиР",
				"ОсновнаяОрганизация",
				Справочники.Организации.ПустаяСсылка());
				
				НовДок.Подразделение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
				"НастройкиТОиР",
				"ОсновноеПодразделение",
				Справочники.СтруктураПредприятия.ПустаяСсылка());
				
				НовДок.Ответственный = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
				"НастройкиТОиР",
				"ОсновнойОтветственный",
				Справочники.Пользователи.ПустаяСсылка());
				
				НС = НовДок.ПоложенияВСтруктуреИерархии.Добавить();
				НС.ОбъектИерархии = СсылкаНаОбъект;
				НС.РодительИерархии = РодительИерархии;
				НС.ПредыдущееПоложение = "Внесен в структуру иерархии";	
				
				НовДок.Записать(РежимЗаписиДокумента.Проведение);
				
			Иначе
				
				МенеджерЗаписи = РегистрыСведений.торо_ИерархическиеСтруктурыОР.СоздатьМенеджерЗаписи();
				МенеджерЗаписи.ОбъектИерархии     = СсылкаНаОбъект;
				МенеджерЗаписи.СтруктураИерархии  = ТекСтруктураИерархии;
				МенеджерЗаписи.РодительИерархии   = РодительИерархии;
				МенеджерЗаписи.Записать(Истина);
				
			КонецЕсли;
			
			Справочники.торо_ОбъектыРемонта.ИзменитьЗаписьВРСторо_ОбъектыРемонтаГруппы(РодительИерархии,ТекСтруктураИерархии, Истина);
			
			Если НЕ ТекущийОбъект.ОбменДанными.Загрузка Тогда
					торо_НастройкаПорядкаЭлементов.ЗаполнитьЗначениеРеквизитаУпорядочивания(СсылкаНаОбъект, ТекСтруктураИерархии, Отказ);
					
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	торо_СтруктурыОР.Ссылка,
					|	торо_СтруктурыОР.РеквизитОР
					|ИЗ
					|	Справочник.торо_СтруктурыОР КАК торо_СтруктурыОР
					|ГДЕ
					|	торо_СтруктурыОР.СтроитсяАвтоматически";
					
					РезультатЗапроса = Запрос.Выполнить();
					
					Выборка = РезультатЗапроса.Выбрать();
					
					Пока Выборка.Следующий() Цикл
						
						торо_НастройкаПорядкаЭлементов.ЗаполнитьЗначениеРеквизитаУпорядочивания(СсылкаНаОбъект, Выборка.Ссылка, Отказ);		
						
					КонецЦикла;
					
				КонецЕсли;
			
		Исключение
			Отказ = Истина;
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервереБезКонтекста
Функция НайтиРодителяИерархии(Иерархия, ОбъектРемонта)
	
	Запрос = Новый Запрос;
	
	Если Иерархия.ИзменяетсяДокументами Тогда
		Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			               |	торо_ИерархическиеСтруктурыОР.СтруктураИерархии,
			               |	торо_ИерархическиеСтруктурыОР.РодительИерархии,
			               |	торо_ИерархическиеСтруктурыОР.ОбъектИерархии
			       
			               |ИЗ
			               |	РегистрСведений.торо_РасположениеОРВСтруктуреИерархии.СрезПоследних(, СтруктураИерархии = &СтруктураИерархии И ОбъектИерархии = &ОбъектРемонта) КАК торо_ИерархическиеСтруктурыОР
			               |ГДЕ
			               |	торо_ИерархическиеСтруктурыОР.Удален = ЛОЖЬ";

	Иначе
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			               |	торо_ИерархическиеСтруктурыОР.СтруктураИерархии,
			               |	торо_ИерархическиеСтруктурыОР.РодительИерархии,
			               |	торо_ИерархическиеСтруктурыОР.ОбъектИерархии
			              
			               |ИЗ
			               |	РегистрСведений.торо_ИерархическиеСтруктурыОР КАК торо_ИерархическиеСтруктурыОР
			               |ГДЕ
			               |	торо_ИерархическиеСтруктурыОР.СтруктураИерархии = &СтруктураИерархии
			               |	И торо_ИерархическиеСтруктурыОР.ОбъектИерархии = &ОбъектРемонта";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СтруктураИерархии", Иерархия);
	Запрос.УстановитьПараметр("ОбъектРемонта"    , ОбъектРемонта);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.РодительИерархии;
	Иначе
		Возврат Справочники.торо_ОбъектыРемонта.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

#КонецОбласти