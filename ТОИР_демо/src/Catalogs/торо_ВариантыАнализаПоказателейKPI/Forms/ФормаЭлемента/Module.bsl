
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗначениеВДанныеФормы(торо_ПоказателиKPI.ПолучитьТаблицуСоответствиТиповАнализаИТиповДиаграмм(), СоответствиеТиповСравненияИТиповДиаграмм);
	ЗаполнитьСписокВыбораЗначенияИОбъектаАнализа();
	ЗаполнитьТаблицуДоступныхАгрегаций();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОграничениеТипаДиаграммы();
	УстановитьОграничениеВариантаОтображения();
	УстановитьОграничениеАгрегацииДанных();
	УстановитьОграничениеСортировки();
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ЗаполнитьСписокВыбораЗначенияИОбъектаАнализа();
	
	ПроверитьДопустимостьАгрегацииДанных();
	УстановитьОграничениеАгрегацииДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипАнализаПриИзменении(Элемент)
	
	ПроверитьДопустимостьТипаДиаграммы();
	УстановитьОграничениеТипаДиаграммы();
	
   ПроверитьДопустимостьВариантаОтображения();
	УстановитьОграничениеВариантаОтображения();
	
	ПроверитьДопустимостьАгрегацииДанных();
	УстановитьОграничениеАгрегацииДанных();
	
	ПроверитьДопустимостьСортировки();
	УстановитьОграничениеСортировки();
	
	УстановитьВидимостьДоступностьЭлементовФормыПоТипуАнализа();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСортировкуПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтображенияПоУмолчаниюПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеАнализаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ДоступныеЗначенияАнализа;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УправлениеФормой()
	
	Элементы.КоличествоВыбираемыхЭлементов.Видимость = (Объект.ВыбратьСортировку = ПредопределенноеЗначение("Перечисление.торо_ВариантыСортировки.Лучшие")
																	ИЛИ Объект.ВыбратьСортировку = ПредопределенноеЗначение("Перечисление.торо_ВариантыСортировки.Худшие"));
																	
	Элементы.ТипДиаграммы.Видимость = (Объект.ВариантОтображенияПоУмолчанию = ПредопределенноеЗначение("Перечисление.торо_ВариантыОтображенияВариантовАнализа.Диаграмма"));
	
	ТипАнализаСПериодами = (Объект.ТипАнализа = ПредопределенноеЗначение("Перечисление.торо_ТипыАнализа.ДинамикаИзменения") 
									ИЛИ Объект.ТипАнализа = ПредопределенноеЗначение("Перечисление.торо_ТипыАнализа.ПокомпонентноеСравнениеДинамика"));
	
	Элементы.ОтображатьНулевыеЗначения.Видимость = (Объект.ВариантОтображенияПоУмолчанию = ПредопределенноеЗначение("Перечисление.торо_ВариантыОтображенияВариантовАнализа.Диаграмма")
																	И ТипАнализаСПериодами);
																	
	УстановитьВидимостьДоступностьЭлементовФормыПоТипуАнализа();
	
КонецПроцедуры

&НаКлиенте 
Процедура УстановитьВидимостьДоступностьЭлементовФормыПоТипуАнализа()
	
	НастройкиПоТипуАнализа = НастройкиПоТипуАнализа(Объект, ЭтаФорма.СоответствиеТиповСравненияИТиповДиаграмм);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДопустимостьТипаДиаграммы()
	
	Если ЗначениеЗаполнено(Объект.ТипДиаграммы) Тогда
		МассивДопустимыхЗначений = ПолучитьРазрешенныеТипыДиаграммы();
		Если МассивДопустимыхЗначений.Найти(Объект.ТипДиаграммы) = Неопределено Тогда
			Объект.ТипДиаграммы = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОграничениеТипаДиаграммы()
	
	МассивДопустимыхЗначений = ПолучитьРазрешенныеТипыДиаграммы();
	масПараметрыВыбора = Новый Массив;
	масПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивДопустимыхЗначений)));
	Элементы.ТипДиаграммы.ПараметрыВыбора = Новый ФиксированныйМассив(масПараметрыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДопустимостьВариантаОтображения()
	
	Если ЗначениеЗаполнено(Объект.ВариантОтображенияПоУмолчанию) Тогда
		МассивДопустимыхЗначений = ПолучитьРазрешенныеВариантыОтображения();
		Если МассивДопустимыхЗначений.Найти(Объект.ВариантОтображенияПоУмолчанию) = Неопределено Тогда
			Объект.ВариантОтображенияПоУмолчанию = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОграничениеВариантаОтображения()
	
	МассивДопустимыхЗначений = ПолучитьРазрешенныеВариантыОтображения();
	масПараметрыВыбора = Новый Массив;
	масПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивДопустимыхЗначений)));
	Элементы.ВариантОтображенияПоУмолчанию.ПараметрыВыбора = Новый ФиксированныйМассив(масПараметрыВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДопустимостьАгрегацииДанных()
	
	МассивДопустимыхЗначений = ПолучитьРазрешенныеАгрегации();
	Если МассивДопустимыхЗначений.Количество() = 0 Тогда
		Возврат;
	ИначеЕсли МассивДопустимыхЗначений.Количество() = 1 Тогда
	   Объект.АгрегацияДанных = МассивДопустимыхЗначений[0];
	ИначеЕсли ЗначениеЗаполнено(Объект.АгрегацияДанных) Тогда
		Если МассивДопустимыхЗначений.Найти(Объект.АгрегацияДанных) = Неопределено Тогда
			Объект.АгрегацияДанных = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОграничениеАгрегацииДанных()
	
	МассивДопустимыхЗначений = ПолучитьРазрешенныеАгрегации();
	Если МассивДопустимыхЗначений.Количество() = 0 Тогда
		Элементы.АгрегацияДанных.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
	Иначе
		масПараметрыВыбора = Новый Массив;
		масПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивДопустимыхЗначений)));
		Элементы.АгрегацияДанных.ПараметрыВыбора = Новый ФиксированныйМассив(масПараметрыВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДопустимостьСортировки()
	
	МассивДопустимыхЗначений = ПолучитьРазрешенныеСортировки();
	Если МассивДопустимыхЗначений.Количество() = 0 Тогда
		Возврат;
	ИначеЕсли МассивДопустимыхЗначений.Количество() = 1 Тогда
	   Объект.ВыбратьСортировку = МассивДопустимыхЗначений[0];
		ВыбратьСортировкуПриИзменении(Элементы.ВыбратьСортировку);
	ИначеЕсли ЗначениеЗаполнено(Объект.ВыбратьСортировку) Тогда
		Если МассивДопустимыхЗначений.Найти(Объект.ВыбратьСортировку) = Неопределено Тогда
			Объект.ВыбратьСортировку = Неопределено;
			ВыбратьСортировкуПриИзменении(Элементы.ВыбратьСортировку);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОграничениеСортировки()
	
	МассивДопустимыхЗначений = ПолучитьРазрешенныеСортировки();
	Если МассивДопустимыхЗначений.Количество() = 0 Тогда
		Элементы.ВыбратьСортировку.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
	Иначе
		масПараметрыВыбора = Новый Массив;
		масПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивДопустимыхЗначений)));
		Элементы.ВыбратьСортировку.ПараметрыВыбора = Новый ФиксированныйМассив(масПараметрыВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораЗначенияИОбъектаАнализа()
	
	ДоступныеЗначенияАнализа.Очистить();
	ДоступныеОбъектыАнализа.Очистить();
	
	Если НЕ ЗначениеЗаполнено(Объект.Владелец) Тогда
		Возврат;
	КонецЕсли;
	
	торо_ПоказателиKPI.ЗаполнитьДоступныеЗначенияИОбъектыАнализа(Объект.Владелец, ДоступныеЗначенияАнализа, ДоступныеОбъектыАнализа);
	
КонецПроцедуры

///////////////////////////////////////////
// Вспомогательные

&НаКлиенте
Функция ПолучитьРазрешенныеТипыДиаграммы()
	
	МассивТипов = Новый Массив;
	
	ОтборПоТипуСравнения = Новый Структура("ТипАнализа", Объект.ТипАнализа);
	НайденныеТипыДиаграмм = СоответствиеТиповСравненияИТиповДиаграмм.НайтиСтроки(ОтборПоТипуСравнения);
	
	Для Каждого ТекНайденныйТипДиаграммы Из НайденныеТипыДиаграмм Цикл 
		МассивТипов.Добавить(ТекНайденныйТипДиаграммы.ТипДиаграммы);
	КонецЦикла;
	
	Возврат МассивТипов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция НастройкиПоТипуАнализа(ВариантАнализа, СоответствиеТиповСравненияИТиповДиаграмм)
	
	СтруктураНастроекОформления  = Новый Структура;
	СтруктураНастроекОформления.Вставить("ТипАнализа");
	СтруктураНастроекОформления.Вставить("ТипДиаграммы");

	ОтборПоТипуАнализа = Новый Структура("ТипАнализа", ВариантАнализа.ТипАнализа);
	НайденныеНастройки = СоответствиеТиповСравненияИТиповДиаграмм.НайтиСтроки(ОтборПоТипуАнализа);
	Если НайденныеНастройки.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(СтруктураНастроекОформления, НайденныеНастройки[0]);
	КонецЕсли;
	
	Возврат СтруктураНастроекОформления;
	
КонецФункции

&НаКлиенте
Функция ПолучитьРазрешенныеВариантыОтображения()
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(ПредопределенноеЗначение("Перечисление.торо_ВариантыОтображенияВариантовАнализа.Диаграмма"));
	МассивТипов.Добавить(ПредопределенноеЗначение("Перечисление.торо_ВариантыОтображенияВариантовАнализа.Таблица"));
	
	Если Объект.ТипАнализа = ПредопределенноеЗначение("Перечисление.торо_ТипыАнализа.ИзмерениеТекущегоСостояния")
		ИЛИ Объект.ТипАнализа = ПредопределенноеЗначение("Перечисление.торо_ТипыАнализа.СравнениеСПрошлымПериодом") Тогда
		МассивТипов.Добавить(ПредопределенноеЗначение("Перечисление.торо_ВариантыОтображенияВариантовАнализа.Кратко"));
	КонецЕсли;
		
	Возврат МассивТипов;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуДоступныхАгрегаций()
	
	ДоступныеАгрегацииДанных.Очистить();
	
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("НастройкиАгрегации");
	ОбластьДанных = Макет.Область("Данные");
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьДанных);
	ПостроительЗапроса.Выполнить();
	РезультатЗапроса = ПостроительЗапроса.Результат;
	ВыборкаДанных = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДанных.Следующий() Цикл
		НовСтр = ДоступныеАгрегацииДанных.Добавить();
		НовСтр.ТипПоказателя = Перечисления.торо_ТипыПоказателейKPI[ВыборкаДанных.ТипПоказателя];
		НовСтр.ТипАнализа = Перечисления.торо_ТипыАнализа[ВыборкаДанных.ТипАнализа];
		
		СписокАгрегаций = СтрРазделить(ВыборкаДанных.АгрегацияДанных, ",", Ложь);
		Для каждого НазваниеАгрегации из СписокАгрегаций Цикл
			ЗначениеАгрегации = Перечисления.торо_АгрегацияДанных[СокрЛП(НазваниеАгрегации)];
			НовСтр.АгрегацияДанных.Добавить(ЗначениеАгрегации);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьРазрешенныеАгрегации()
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ТипПоказателя", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ТипПоказателя"));
	СтруктураПоиска.Вставить("ТипАнализа", Объект.ТипАнализа);
	
	СтрокаРазрешенных = ДоступныеАгрегацииДанных.НайтиСтроки(СтруктураПоиска);
	
	Если СтрокаРазрешенных.Количество() = 0 Тогда
		Возврат Новый Массив;
	Иначе
		Возврат СтрокаРазрешенных[0].АгрегацияДанных.ВыгрузитьЗначения();
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПолучитьРазрешенныеСортировки()
	
	МассивТипов = Новый Массив;
	
	Если Объект.ТипАнализа = ПредопределенноеЗначение("Перечисление.торо_ТипыАнализа.ДинамикаИзменения")
		ИЛИ Объект.ТипАнализа = ПредопределенноеЗначение("Перечисление.торо_ТипыАнализа.ИзмерениеТекущегоСостояния")
		ИЛИ Объект.ТипАнализа = ПредопределенноеЗначение("Перечисление.торо_ТипыАнализа.СравнениеСПрошлымПериодом") Тогда
		МассивТипов.Добавить(ПредопределенноеЗначение("Перечисление.торо_ВариантыСортировки.НеИспользуется"));
	КонецЕсли;
	
	Возврат МассивТипов;
	
КонецФункции


#КонецОбласти