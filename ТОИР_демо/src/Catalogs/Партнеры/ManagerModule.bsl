#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	МассивУстановленныхОтборов = Новый Массив;
	Если Параметры.Отбор.Свойство("Клиент") Тогда
		МассивУстановленныхОтборов.Добавить("Клиент");
	КонецЕсли;
	Если Параметры.Отбор.Свойство("Поставщик") Тогда
		МассивУстановленныхОтборов.Добавить("Поставщик");
	КонецЕсли;
	Если Параметры.Отбор.Свойство("Конкурент") Тогда
		МассивУстановленныхОтборов.Добавить("Конкурент");
	КонецЕсли;
	Если Параметры.Отбор.Свойство("ПрочиеОтношения") Тогда
		МассивУстановленныхОтборов.Добавить("ПрочиеОтношения");
	КонецЕсли;
	Если Параметры.Отбор.Свойство("ОбслуживаетсяТорговымиПредставителями") Тогда
		МассивУстановленныхОтборов.Добавить("ОбслуживаетсяТорговымиПредставителями");
	КонецЕсли;
	
	ИспользоватьПартнеровКакКонтрагентов = ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов");
	
	Если МассивУстановленныхОтборов.Количество() > 0 ИЛИ ИспользоватьПартнеровКакКонтрагентов Тогда
		
		Запрос = Новый Запрос;
		
		УстанавливатьОтборПоТипуПартнераКакИЛИ = Ложь;
		
		Если Параметры.Свойство("УстанавливатьОтборПоТипуПартнераКакИЛИ") И Параметры.УстанавливатьОтборПоТипуПартнераКакИЛИ Тогда
			УстанавливатьОтборПоТипуПартнераКакИЛИ = Истина;
		КонецЕсли;
		
		СтандартнаяОбработка = ЛОЖЬ;
		СтрокаОтбора = "";
		СтрокаУсловия = ?(УстанавливатьОтборПоТипуПартнераКакИЛИ," ИЛИ "," И ");
		
		Для каждого ЭлементМассива Из МассивУстановленныхОтборов Цикл
		
			СтрокаОтбора = СтрокаОтбора + СтрокаУсловия + "Партнеры." + ЭлементМассива; 
		
		КонецЦикла;
		
		СтрокаОтбора = Прав(СтрокаОтбора,СтрДлина(СтрокаОтбора) - ?(УстанавливатьОтборПоТипуПартнераКакИЛИ,4,2));
		СтрокаОтбора = ?(ПустаяСтрока(СтрокаОтбора),""," И (" + СтрокаОтбора + ")");
		
		Если Параметры.Отбор.Свойство("БизнесРегион") Тогда
			СтрокаОтбора = " И Партнеры.БизнесРегион = &БизнесРегион";
			Запрос.УстановитьПараметр("БизнесРегион", Параметры.Отбор.БизнесРегион);
		КонецЕсли;
		
		Если ИспользоватьПартнеровКакКонтрагентов Тогда
			СтрокаОтбора = СтрокаОтбора + " И (НЕ Партнеры.Ссылка = Значение(Справочник.Партнеры.НашеПредприятие)) ";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("СтрокаВвода",Параметры.СтрокаПоиска + "%" );
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Партнеры.Ссылка КАК Партнер,
		|	ПРЕДСТАВЛЕНИЕ(Партнеры.Ссылка) КАК Представление,
		|	Партнеры.ПометкаУдаления КАК ПометкаУдаления,
		|	"""" КАК ИНН,
		|	""НайденоПоНаименованию"" КАК НайденоПо
		|ИЗ
		|	Справочник.Партнеры КАК Партнеры
		|ГДЕ
		|	Партнеры.Наименование ПОДОБНО &СтрокаВвода " + СтрокаОтбора + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Партнеры.Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(Партнеры.Ссылка),
		|	Партнеры.ПометкаУдаления,
		|	Контрагенты.ИНН КАК ИНН,
		|	""НайденоПоИНН""
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
		|		ПО Контрагенты.Партнер = Партнеры.Ссылка
		|ГДЕ
		|	Контрагенты.ИНН ПОДОБНО &СтрокаВвода " + СтрокаОтбора;
		
		Выборка = Запрос.Выполнить().Выбрать();
		ДанныеВыбора = Новый СписокЗначений;
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.НайденоПо = "НайденоПоНаименованию" Тогда
				ТекстПредставление = Выборка.Представление;
			Иначе
				ТекстПредставление = Выборка.ИНН + " (" +Выборка.Представление + ")";
			КонецЕсли;
			
			Если Выборка.ПометкаУдаления Тогда
				СтруктураЗначение = Новый Структура("Значение,ПометкаУдаления", Выборка.Партнер, Выборка.ПометкаУдаления);
				ДанныеВыбора.Добавить(СтруктураЗначение,ТекстПредставление,, БиблиотекаКартинок.ПометитьНаУдаление);
			Иначе
				ДанныеВыбора.Добавить(Выборка.Партнер, ТекстПредставление);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ИспользоватьПолнотекстовыйПоиск = ОбщегоНазначенияУТВызовСервера.ИспользуетсяПолнотекстовыйПоиск("ИспользоватьПолнотекстовыйПоиск");
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
			
			ВыбраннаяФорма = "ФормаЭлементаРеквизитыКонтрагента";
			СтандартнаяОбработка = Ложь;
			
		ИначеЕсли Параметры.Свойство("РежимВыбора") И Параметры.РежимВыбора Тогда
			
			ВыбраннаяФорма = "ПомощникНового";
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Заполняет предопределенные элементы справочника "Партнеры".
//
Процедура ЗаполнитьПредопределенныхПартнеров() Экспорт
	
	СправочникОбъект = Справочники.Партнеры.НашеПредприятие.ПолучитьОбъект();
	СправочникОбъект.ДатаРегистрации = Дата(1980, 1, 1);
	СправочникОбъект.НаименованиеПолное = НСтр("ru = 'Наше предприятие'");
	СправочникОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	Попытка
		СправочникОбъект.Записать();
	Исключение
	КонецПопытки;
	
	СправочникОбъект = Справочники.Партнеры.РозничныйПокупатель.ПолучитьОбъект();
	СправочникОбъект.Клиент = Истина;
	СправочникОбъект.ДатаРегистрации = Дата(1980, 1, 1);
	СправочникОбъект.НаименованиеПолное = НСтр("ru = 'Розничный покупатель'");
	СправочникОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	Попытка
		СправочникОбъект.Записать();
		// Контрагент "Розничный покупатель" заполняется в соответствующей процедуре модуле менеджера справочника "Контрагенты".
	Исключение
	КонецПопытки;
	
	СправочникОбъект = Справочники.Партнеры.НеизвестныйПартнер.ПолучитьОбъект();
	СправочникОбъект.Клиент = Истина;
	СправочникОбъект.Поставщик = Истина;
	СправочникОбъект.ПрочиеОтношения = Истина;
	СправочникОбъект.ДатаРегистрации = Дата(1980, 1, 1);
	СправочникОбъект.НаименованиеПолное = НСтр("ru = 'Неизвестный партнер'");
	СправочникОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	Попытка
		СправочникОбъект.Записать();
	Исключение
	КонецПопытки;
	
КонецПроцедуры

// Устанавливает значение констант ИспользоватьПартнеровИКонтрагентов и ИспользоватьПартнеровКакКонтрагентов
// в зависимости от наличия в ИБ партнеров, к которым привязано более чем один контрагент.
Процедура УстановитьЗначениеКонстантИспользованиеПартнеровИКонтрагентов() Экспорт
	
	ИспользоватьПартнеровИКонтрагентов = Константы.ИспользоватьПартнеровИКонтрагентов.Получить();
	Если НЕ ИспользоватьПартнеровИКонтрагентов Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Партнеры.Ссылка,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Контрагенты.Ссылка) КАК КоличествоКонтрагентов
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
		|		ПО Контрагенты.Партнер = Партнеры.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Партнеры.Ссылка
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Контрагенты.Ссылка) > 1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Партнеры.Ссылка,
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Партнеры КАК Партнеры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО (Контрагенты.Партнер = Партнеры.Ссылка)
		|ГДЕ
		|	Контрагенты.Ссылка ЕСТЬ NULL ";
		
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			Константы.ИспользоватьПартнеровИКонтрагентов.Установить(Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Константы.ИспользоватьПартнеровКакКонтрагентов.Установить(Не Константы.ИспользоватьПартнеровИКонтрагентов.Получить());
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Ссылка";

	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Ссылка");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
