#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Свойства
	Контекст = Новый Структура();
	Контекст.Вставить("Объект",                     Объект);
	Контекст.Вставить("ИмяЭлементаДляРазмещения",   "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, Контекст);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Функциональные опции
	
	ФОУчетНаработкиОборудования = ПолучитьФункциональнуюОпцию("торо_УчетНаработкиОборудования");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Объект.ПараметрыНаработки.Количество() > 1 Тогда
		СписокПараметровНаработки = Истина;
	Иначе
		СписокПараметровНаработки = Ложь;
		Если Объект.ПараметрыНаработки.Количество() > 0 Тогда
			ПараметрНаработки          = Объект.ПараметрыНаработки[0].ПараметрНаработки;
			ЗначениеПараметраНаработки = Объект.ПараметрыНаработки[0].ЗначениеПараметраНаработки;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДеньНедели) Тогда
		УчитыватьДеньНедели = Истина;
	Иначе
		УчитыватьДеньНедели = Ложь;
	КонецЕсли;
	

	// Настройка видимости элементов планирования по периодичности
	Элементы.ГруппаПериодичность.Видимость = Объект.ИспользоватьПериодичность;/////
	Элементы.УчитыватьДеньНедели.Доступность = Объект.ИспользоватьПериодичность;
	Элементы.ДеньНедели.Доступность          = УчитыватьДеньНедели;
	
	// Настройка видимости элементов планирования по наработке
	Элементы.ГруппаПараметрыНаработки.Видимость  = ФОУчетНаработкиОборудования И Объект.ИспользоватьПараметрыНаработки; /////
	Элементы.ПараметрыНаработки.Видимость          = СписокПараметровНаработки;
	Элементы.ГруппаПараметрНаработки.Видимость     = Не СписокПараметровНаработки;
	Элементы.СписокПараметровНаработки.Доступность = Объект.ИспользоватьПараметрыНаработки;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ИспПериодичность = Объект.ИспользоватьПериодичность;
	ИспПараметрыНаработки = Объект.ИспользоватьПараметрыНаработки;
	
	Если Объект.ИспользоватьПериодичность ИЛИ Объект.ИспользоватьПараметрыНаработки Тогда
		
		Если НЕ ИспПериодичность Тогда
			Объект.ПериодичностьРемонтныхРабот   = "";
			Объект.КоличествоПериодов            = "";
		Иначе
			
			Если Не ЗначениеЗаполнено(Объект.ПериодичностьРемонтныхРабот) Тогда
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = НСтр("ru = 'Не заполнено поле ""Периодичность ремонтных работ"".'");
				Сообщение.КлючДанных  = Объект.Ссылка;
				Сообщение.ПутьКДанным = "Объект";
				Сообщение.Поле        = "ПериодичностьРемонтныхРабот";
				Сообщение.Сообщить();
			КонецЕсли; 
		
		КонецЕсли;
		
		Если НЕ УчитыватьДеньНедели Тогда
			ДеньНедели = ПредопределенноеЗначение("Перечисление.ДниНедели.ПустаяСсылка");
		ИначеЕсли Не ЗначениеЗаполнено(ДеньНедели) Тогда
			ДеньНедели = ПредопределенноеЗначение("Перечисление.ДниНедели.Понедельник");
		КонецЕсли;
		
	Иначе
		Отказ = Истина;
		торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В способе планирования ремонтных работ нельзя одновременно отключить использование периодичности и параметров наработки!'"));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Объект.ПараметрНаработки = ПараметрНаработки;
	Объект.ЗначениеПараметраНаработки = ЗначениеПараметраНаработки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура УчитыватьДеньНеделиПриИзменении(Элемент)
			
	Если Не УчитыватьДеньНедели И ЗначениеЗаполнено(Объект.ДеньНедели) Тогда
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("УчитыватьДеньНеделиПриИзмененииЗавершение", ЭтотОбъект), НСтр("ru = 'Поле ""День недели"" будет очищено. Продолжить?'"),РежимДиалогаВопрос.ДаНет,0);
        Возврат;
		
		
	КонецЕсли;
	УчитыватьДеньНеделиПриИзмененииФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПериодичностьПриИзменении(Элемент)
		Элементы.ГруппаПериодичность.Видимость   = Объект.ИспользоватьПериодичность;/////
		Элементы.УчитыватьДеньНедели.Доступность = Объект.ИспользоватьПериодичность;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПараметрыНаработкиПриИзменении(Элемент)
	Элементы.ГруппаПараметрыНаработки.Видимость  = Объект.ИспользоватьПараметрыНаработки;/////
	Элементы.СписокПараметровНаработки.Доступность = Объект.ИспользоватьПараметрыНаработки;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрНаработкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ОтразитьИзменениеНаработкиВТаблице(ВыбранноеЗначение)
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПараметраНаработкиПриИзменении(Элемент)
	ОтразитьИзменениеНаработкиВТаблице(ЗначениеПараметраНаработки);
КонецПроцедуры

&НаКлиенте
Процедура СписокПараметровНаработкиПриИзменении(Элемент)
	Если Объект.ПараметрыНаработки.Количество() > 1 И Не СписокПараметровНаработки Тогда
		
		Ответ = Неопределено;

		
		ПоказатьВопрос(Новый ОписаниеОповещения("СписокПараметровНаработкиПриИзмененииЗавершение", ЭтотОбъект), НСтр("ru = 'Все строки параметров наработки, кроме первой, будут удалены. Продолжить?'"),РежимДиалогаВопрос.ДаНет,0);
        Возврат;
	КонецЕсли;
	
	СписокПараметровНаработкиПриИзмененииФрагмент();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПараметрыНаработки
&НаКлиенте
Процедура ПараметрыНаработкиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если НЕ ОтменаРедактирования Тогда
		
		ТекДанные = Элемент.ТекущиеДанные;
		МассивСтрок = Объект.ПараметрыНаработки.НайтиСтроки(НОвый Структура("ПараметрНаработки", ТекДанные.ПараметрНаработки));
		Если МассивСтрок.Количество() > 1 Тогда
			Отказ = Истина;
			торо_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Данный параметр наработки уже добавлен!'"), СтатусСообщения.Важное);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
// СтандартныеПодсистемы.Свойства
 &НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура УчитыватьДеньНеделиПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Да Тогда
        
        Объект.ДеньНедели = ПредопределенноеЗначение("Перечисление.ДниНедели.ПустаяСсылка");
        
    Иначе УчитыватьДеньНедели = Истина;
    КонецЕсли;
    
    
    
    УчитыватьДеньНеделиПриИзмененииФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура УчитыватьДеньНеделиПриИзмененииФрагмент()
    
    Элементы.ДеньНедели.Доступность = УчитыватьДеньНедели;

КонецПроцедуры

&НаКлиенте
Процедура ОтразитьИзменениеНаработкиВТаблице(Значение)
	
	Если Объект.ПараметрыНаработки.Количество() > 0 Тогда
		СтрокаРедактирования = Объект.ПараметрыНаработки[0];
	Иначе
		СтрокаРедактирования = Объект.ПараметрыНаработки.Добавить();
	КонецЕсли;
	
	Если ТипЗнч(Значение) = Тип("СправочникСсылка.ПараметрыВыработкиОС") Тогда
		СтрокаРедактирования.ПараметрНаработки = Значение;
	ИначеЕсли ТипЗнч(Значение) = Тип("Число") Тогда
		СтрокаРедактирования.ЗначениеПараметраНаработки = Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПараметровНаработкиПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Да Тогда
        
        Пока Объект.ПараметрыНаработки.Количество() > 1 Цикл
            СтрокаУдаления = Объект.ПараметрыНаработки[1];
            Объект.ПараметрыНаработки.Удалить(СтрокаУдаления);
        КонецЦикла;
        
    Иначе 
        СписокПараметровНаработки = Истина;
    КонецЕсли;
    
    СписокПараметровНаработкиПриИзмененииФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура СписокПараметровНаработкиПриИзмененииФрагмент()
    
    Если Не СписокПараметровНаработки Тогда
        Если Объект.ПараметрыНаработки.Количество() > 0 Тогда
            ПараметрНаработки          = Объект.ПараметрыНаработки[0].ПараметрНаработки;
            ЗначениеПараметраНаработки = Объект.ПараметрыНаработки[0].ЗначениеПараметраНаработки;
        КонецЕсли;
    КонецЕсли;
    Элементы.ПараметрыНаработки.Видимость = СписокПараметровНаработки;
    Элементы.ГруппаПараметрНаработки.Видимость = Не СписокПараметровНаработки;

КонецПроцедуры

// СтандартныеПодсистемы.Свойства 
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
      УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
      УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти