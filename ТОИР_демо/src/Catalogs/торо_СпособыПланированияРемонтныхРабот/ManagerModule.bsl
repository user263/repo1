#Область РаботаСПредставлениями

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	ФорматнаяСтрока = торо_РаботаСПользовательскимПредставлениемПовтИсп.ПолучитьФорматнуюСтроку("Справочники.торо_СпособыПланированияРемонтныхРабот");
	Если ФорматнаяСтрока = Неопределено Тогда
		Возврат;
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	СписокПолей = торо_РаботаСПользовательскимПредставлением.ПолучитьСписокПолей(ФорматнаяСтрока);
	
	Для Каждого Поле Из СписокПолей Цикл
		
		Поля.Добавить(Поле);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	ФорматнаяСтрока = торо_РаботаСПользовательскимПредставлениемПовтИсп.ПолучитьФорматнуюСтроку("Справочники.торо_СпособыПланированияРемонтныхРабот");
	Если ФорматнаяСтрока = Неопределено Тогда
		Возврат;
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	Представление = торо_РаботаСПользовательскимПредставлением.ПолучитьПредставлениеПоФорматнойСтроке(ФорматнаяСтрока,Данные);
	
КонецПроцедуры

// Функция - заполняет список реквизитов, которые можно использовать при формировании форматной строки в конструкторе.
//
// Параметры:
//  СписокРеквизитов - СписокЗначений - пустой список значений для заполнения.
Процедура ЗаполнитьСписокРеквизитовДляФорматнойСтроки(СписокРеквизитов) Экспорт
	
	СписокРеквизитов.Добавить("Наименование",				 "Наименование");
	СписокРеквизитов.Добавить("Код",						 "Код");
	СписокРеквизитов.Добавить("КоличествоПериодов",			 "Количество периодов");
	СписокРеквизитов.Добавить("ПериодичностьРемонтныхРабот", "Периодичность");
	СписокРеквизитов.Добавить("ПараметрНаработки",			 "Параметр наработки");
	СписокРеквизитов.Добавить("ЗначениеПараметраНаработки",	 "Значение параметра наработки");
	СписокРеквизитов.Добавить("Комментарий",				 "Комментарий");
	
КонецПроцедуры

#КонецОбласти