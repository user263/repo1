
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикВыбораПоказателей();
	
КонецПроцедуры

&НаСервере
Процедура ПодключитьОбработчикВыбораПоказателей()
	
	ЭтаФорма.Элементы.КомпоновщикНастроекПользовательскиеНастройкиЗначение.УстановитьДействие("НачалоВыбора", "Подключаемый_ПоказателиKPIНачалоВыбора");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПоказателиKPIНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = ЭтаФорма.Элементы.КомпоновщикНастроекПользовательскиеНастройки.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ТекущиеДанные.Настройка = "Показатели (KPI)" Тогда
		СтандартнаяОбработка = Ложь;
				
		ПараметрТипПоказателей = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "ТипПоказателей");
		ПараметрПоказателиKPI = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "ПоказателиKPI", Истина);
	
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТипПоказателя", ПараметрТипПоказателей);
		ПараметрыФормы.Вставить("СписокЗначений", ПараметрПоказателиKPI);
		ОткрытьФорму("Отчет.торо_МониторKPI.Форма.ФормаВыбораВариантовАнализа", ПараметрыФормы, Элемент, ЭтаФорма.УникальныйИдентификатор, ВариантОткрытияОкна.ОтдельноеОкно);
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено И (ТекущиеДанные.Настройка = "Организация" ИЛИ ТекущиеДанные.Настройка = "Подразделение" ИЛИ ТекущиеДанные.Настройка = "Объект ремонта") Тогда
		СтандартнаяОбработка = Ложь;
				
		Если ТекущиеДанные.Настройка = "Организация" Тогда
			ОбъектНастройки = "Организации";
			СписокЗначений = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "Организация", Истина);
		ИначеЕсли ТекущиеДанные.Настройка = "Подразделение" Тогда
			ОбъектНастройки = "СтруктураПредприятия";
			СписокЗначений = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "Подразделение", Истина);
		ИначеЕсли ТекущиеДанные.Настройка = "Объект ремонта" Тогда
			ОбъектНастройки = "торо_ОбъектыРемонта";
			СписокЗначений = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "ОбъектРемонта", Истина);
		КонецЕсли; 
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОбъектНастройки", ОбъектНастройки);
		ПараметрыФормы.Вставить("СписокЗначений", СписокЗначений);
		ОткрытьФорму("Отчет.торо_МониторKPI.Форма.ФормаВыбораСпискаЗначений", ПараметрыФормы, Элемент, ЭтаФорма.УникальныйИдентификатор, ВариантОткрытияОкна.ОтдельноеОкно);
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьНастройкиВФайл(Команда)
	
	#Если НЕ ВебКлиент Тогда
	
		ОписаниеОповещения = Новый ОписаниеОповещения("СохранитьНастройкиВФайлЗавершение", ЭтотОбъект);
	
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогВыбораФайла.Фильтр = "Файлы xml(*.xml)|*.xml";
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
	#Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Функция не доступна в веб-клиенте.'"));
		
	#КонецЕсли
		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиИзФайла(Команда)
	
	#Если НЕ ВебКлиент Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьНастройкиИзФайлаЗавершение", ЭтотОбъект);
		
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбораФайла.Фильтр = "Файлы xml(*.xml)|*.xml";
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		ДиалогВыбораФайла.Показать(ОписаниеОповещения);
		
	#Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Функция не доступна в веб-клиенте.'"));
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьЗначениеПараметраИзПользовательскихНастроек(Форма, ИмяПараметра, ПреобразоватьКСпискуЗначений = Ложь)
	
	ЗначениеПараметра = Неопределено;
	Для каждого ЭлементНастройки из Форма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если Строка(ЭлементНастройки.Параметр) = ИмяПараметра Тогда
			ЗначениеПараметра = ЭлементНастройки.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеДляВозврата = ЗначениеПараметра;
	
	Если ПреобразоватьКСпискуЗначений И ТипЗнч(ЗначениеПараметра) <> Тип("СписокЗначений") Тогда
		ЗначениеДляВозврата = Новый СписокЗначений;
		Если ЗначениеПараметра <> Неопределено Тогда
			ЗначениеДляВозврата.Добавить(ЗначениеПараметра);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЗначениеДляВозврата;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьИспользованиеПараметраИзПользовательскихНастроек(Форма, ИмяПараметра)
	
	ИспользованиеПараметра = Ложь;
	Для каждого ЭлементНастройки из Форма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если Строка(ЭлементНастройки.Параметр) = ИмяПараметра Тогда
			ИспользованиеПараметра = ЭлементНастройки.Использование;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ИспользованиеПараметра;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗначениеПараметраПользовательскихНастроек(Форма, ИмяПараметра, ЗначениеПараметра, ИспользованиеПараметра = Неопределено)
	
	НайденнаяНастройка = Неопределено;
	Для каждого ЭлементНастройки из Форма.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если Строка(ЭлементНастройки.Параметр) = ИмяПараметра Тогда
			НайденнаяНастройка = ЭлементНастройки;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Если НайденнаяНастройка <> Неопределено Тогда
		Если ИспользованиеПараметра <> Неопределено Тогда
			НайденнаяНастройка.Использование = ИспользованиеПараметра;
		КонецЕсли;
		
		Если ТипЗнч(ЗначениеПараметра) = Тип("СписокЗначений") И ТипЗнч(НайденнаяНастройка.Значение) = Тип("СписокЗначений") Тогда
			НайденнаяНастройка.Значение.ЗагрузитьЗначения(ЗначениеПараметра.ВыгрузитьЗначения());
		Иначе
			НайденнаяНастройка.Значение = ЗначениеПараметра;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#Если НЕ ВебКлиент Тогда

&НаКлиенте
Процедура СохранитьНастройкиВФайлЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКФайлу = ВыбранныеФайлы[0];
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ПутьКФайлу);
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	
	ЗаписьXML.ЗаписатьНачалоЭлемента("НастройкиМонитораKPI");
		
	ЗначениеНастройки = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "КоличествоКолонокПоказателя");
	ЗаписатьЗначениеНастройкиВXML(ЗаписьXML, ЗначениеНастройки, "КоличествоКолонокПоказателя");
	
	ЗначениеНастройки = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "ТипПоказателей");
	ЗаписатьЗначениеНастройкиВXML(ЗаписьXML, ЗначениеНастройки, "ТипПоказателей");
	
	ЗначениеНастройки = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "ТипСерийИнтегральнойОценки");
	ЗаписатьЗначениеНастройкиВXML(ЗаписьXML, ЗначениеНастройки, "ЗначениеНастройки");
	
	ЗначениеНастройки = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "Период");
	ЗаписатьЗначениеНастройкиВXML(ЗаписьXML, ЗначениеНастройки, "Период");

	ЗначениеНастройки = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "ДетализацияПоПериоду");
	ИспользованиеНастройки = ПолучитьИспользованиеПараметраИзПользовательскихНастроек(ЭтаФорма, "ДетализацияПоПериоду");
	ЗаписатьЗначениеНастройкиВXML(ЗаписьXML, ЗначениеНастройки, "ДетализацияПоПериоду", ИспользованиеНастройки);

	ЗначениеНастройки = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "ПериодСравнения");
	ЗаписатьЗначениеНастройкиВXML(ЗаписьXML, ЗначениеНастройки, "ПериодСравнения");

	СписокНастроек = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "ПоказателиKPI", Истина);
	ЗаписатьЗначениеСпискаПоказателейВXML(ЗаписьXML, СписокНастроек, "ПоказателиKPI");
	
	СписокНастроек = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "Организация", Истина);
	ИспользованиеНастройки = ПолучитьИспользованиеПараметраИзПользовательскихНастроек(ЭтаФорма, "Организация");
	ЗаписатьЗначениеСпискаНастроекВXML(ЗаписьXML, СписокНастроек, "Организация", "Наименование", ИспользованиеНастройки);
	
	СписокНастроек = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "Подразделение", Истина);
	ИспользованиеНастройки = ПолучитьИспользованиеПараметраИзПользовательскихНастроек(ЭтаФорма, "Подразделение");
	ЗаписатьЗначениеСпискаНастроекВXML(ЗаписьXML, СписокНастроек, "Подразделение", "Наименование", ИспользованиеНастройки);
	
	СписокНастроек = ПолучитьЗначениеПараметраИзПользовательскихНастроек(ЭтаФорма, "ОбъектРемонта", Истина);
	ИспользованиеНастройки = ПолучитьИспользованиеПараметраИзПользовательскихНастроек(ЭтаФорма, "ОбъектРемонта");
	ЗаписатьЗначениеСпискаНастроекВXML(ЗаписьXML, СписокНастроек, "ОбъектРемонта", "Наименование, ЭтоГруппа", ИспользованиеНастройки);
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	ЗаписьXML.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиИзФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКФайлу = ВыбранныеФайлы[0];

	ЧтениеXML = Новый ЧтениеXML;
	Попытка
		ЧтениеXML.ОткрытьФайл(ПутьКФайлу);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки);
		Возврат;
	КонецПопытки;
	
	ЗначениеПараметра = Неопределено;
	ИспользованиеПараметра = Неопределено;
	ИмяСписка = "";
	
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ЛокальноеИмя = ЧтениеXML.ЛокальноеИмя;
			Если ЛокальноеИмя = "КоличествоКолонокПоказателя"
				ИЛИ ЛокальноеИмя = "ТипПоказателей"
				ИЛИ ЛокальноеИмя = "ТипСерийИнтегральнойОценки"
				ИЛИ ЛокальноеИмя = "Период"
				ИЛИ ЛокальноеИмя = "ДетализацияПоПериоду"
				ИЛИ ЛокальноеИмя = "ПериодСравнения" Тогда

				ИмяСписка = "";
				ЗначениеПараметра = Неопределено;
				ИспользованиеПараметра = Неопределено;
				
				Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
					Если ЧтениеXML.ЛокальноеИмя = "Значение" Тогда
						ЗначениеПараметра = ПолучитьЗначениеИзВнутреннегоПредставления(ЧтениеXML.Значение);
					ИначеЕсли ЧтениеXML.ЛокальноеИмя = "Использование" Тогда	
						ИспользованиеПараметра = ПолучитьЗначениеИзВнутреннегоПредставления(ЧтениеXML.Значение);
					КонецЕсли;
				КонецЦикла;
				
				УстановитьЗначениеПараметраПользовательскихНастроек(ЭтаФорма, ЛокальноеИмя, ЗначениеПараметра, ИспользованиеПараметра);
				
			ИначеЕсли ЛокальноеИмя = "ПоказателиKPI"
				ИЛИ ЛокальноеИмя = "Организация"
				ИЛИ ЛокальноеИмя = "Подразделение"
				ИЛИ ЛокальноеИмя = "ОбъектРемонта" Тогда
				
				ИмяСписка = ЛокальноеИмя;
				ЗначениеПараметра = Новый СписокЗначений;
				ИспользованиеПараметра = Неопределено;
				
				Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
					Если ЧтениеXML.ЛокальноеИмя = "Использование" Тогда	
						ИспользованиеПараметра = ПолучитьЗначениеИзВнутреннегоПредставления(ЧтениеXML.Значение);
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли ЛокальноеИмя = "ЭлементСписка" Тогда
				
				СтруктураРеквизитов = Новый Структура;
				Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
					СтруктураРеквизитов.Вставить(ЧтениеXML.ЛокальноеИмя, ПолучитьЗначениеИзВнутреннегоПредставления(ЧтениеXML.Значение));
				КонецЦикла;
				
				// Найти элемент справочника по реквизитам и добавить в список ЗначениеПараметра.
				Если ЗначениеЗаполнено(ИмяСписка) Тогда
					ЭлементСсылка = НайтиЭлементСпискаПоРеквизитам(ИмяСписка, СтруктураРеквизитов);
					Если ЗначениеЗаполнено(ЭлементСсылка) Тогда
						ЗначениеПараметра.Добавить(ЭлементСсылка);
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			ЛокальноеИмя = ЧтениеXML.ЛокальноеИмя;
			Если ЛокальноеИмя = "ПоказателиKPI" 
				ИЛИ ЛокальноеИмя = "Организация"
				ИЛИ ЛокальноеИмя = "Подразделение"
				ИЛИ ЛокальноеИмя = "ОбъектРемонта" Тогда
				
				ИмяСписка = "";
				УстановитьЗначениеПараметраПользовательскихНастроек(ЭтаФорма, ЛокальноеИмя, ЗначениеПараметра, ИспользованиеПараметра);
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗначениеНастройкиВXML(ЗаписьXML, ЗначениеНастройки, ИмяНастройки, Использование = Неопределено)
	
	ЗаписьXML.ЗаписатьНачалоЭлемента(ИмяНастройки);
	ЗаписьXML.ЗаписатьАтрибут("Значение", ПолучитьВнутреннееПредставление(ЗначениеНастройки));
	ЗаписьXML.ЗаписатьАтрибут("Представление", XMLСтрока(Строка(ЗначениеНастройки)));
	Если Использование <> Неопределено Тогда
		ЗаписьXML.ЗаписатьАтрибут("Использование", ПолучитьВнутреннееПредставление(Использование));
	КонецЕсли;
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗначениеСпискаНастроекВXML(ЗаписьXML, СписокНастроек, ИмяНастройки, КлючевыеРеквизиты, Использование = Неопределено)
	
	ЗаписьXML.ЗаписатьНачалоЭлемента(ИмяНастройки);
   Если Использование <> Неопределено Тогда
		ЗаписьXML.ЗаписатьАтрибут("Использование", ПолучитьВнутреннееПредставление(Использование));
	КонецЕсли;

	Для каждого ЭлементСписка из СписокНастроек Цикл
		Если НЕ ЗначениеЗаполнено(ЭлементСписка.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлементСписка.Значение, КлючевыеРеквизиты);
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ЭлементСписка");
		Для каждого ЭлементСтруктуры из ЗначенияРеквизитов Цикл
			ЗаписьXML.ЗаписатьАтрибут(ЭлементСтруктуры.Ключ, ПолучитьВнутреннееПредставление(ЭлементСтруктуры.Значение));
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗначениеСпискаПоказателейВXML(ЗаписьXML, СписокНастроек, ИмяНастройки)
	
	ЗаписьXML.ЗаписатьНачалоЭлемента(ИмяНастройки);

	Для каждого ЭлементСписка из СписокНастроек Цикл
		Если НЕ ЗначениеЗаполнено(ЭлементСписка.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		КлючевыеРеквизиты = "ИДПоставляемойМодели, Наименование, ТипАнализа, ЗначениеАнализа";
		КлючевыеРеквизитыВладельца = "ИДПоставляемойМодели, Наименование, ТипПоказателя, ВариантЗаполнения";
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("ЭлементСписка");
		
		ЗначенияРеквизитовОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЭлементСписка.Значение, КлючевыеРеквизиты);
		Для каждого ЭлементСтруктуры из ЗначенияРеквизитовОбъекта Цикл
			ЗаписьXML.ЗаписатьАтрибут(ЭлементСтруктуры.Ключ, ПолучитьВнутреннееПредставление(ЭлементСтруктуры.Значение));
		КонецЦикла;
		
		Владелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементСписка.Значение, "Владелец");
		Если ЗначениеЗаполнено(Владелец) Тогда
			ЗначенияРеквизитовВладельца = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, КлючевыеРеквизитыВладельца);
			Для каждого ЭлементСтруктуры из ЗначенияРеквизитовВладельца Цикл
				ЗаписьXML.ЗаписатьАтрибут("Владелец_"+ЭлементСтруктуры.Ключ, ПолучитьВнутреннееПредставление(ЭлементСтруктуры.Значение));
			КонецЦикла;
		КонецЕсли;

		ЗаписьXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	
	ЗаписьXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВнутреннееПредставление(Значение)
	
	Возврат ЗначениеВСтрокуВнутр(Значение);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеИзВнутреннегоПредставления(ВнутреннееПредставление)
	
	Возврат ЗначениеИзСтрокиВнутр(ВнутреннееПредставление);
	
КонецФункции

#КонецЕсли


&НаСервереБезКонтекста
Функция НайтиЭлементСпискаПоРеквизитам(ИмяСписка, СтруктураРеквизитов)
	
	ШаблонСообщенияАтрибуты = НСтр("ru='Для элементов списка ""%1"" не заданы необходимые свойства.
									|Ожидаемый набор атрибутов: %2.'");
									
	ШаблонСообщенияНеНайдено = НСтр("ru='Не найден элемент справочника ""%1"" с наименованием ""%2"".'");
										
	Если ИмяСписка = "ПоказателиKPI" Тогда
		
		СтрокаОжидаемыхРеквизитов = "ИДПоставляемойМодели, Наименование, ТипАнализа, ЗначениеАнализа,
		|Владелец_ИДПоставляемойМодели, Владелец_Наименование, Владелец_ТипПоказателя, Владелец_ВариантЗаполнения";
		СтруктураОжидаемыхРеквизитов = Новый Структура(СтрокаОжидаемыхРеквизитов);
		
		ЕстьВсеРеквизиты = Истина;
		Для каждого ЭлементСтруктуры из СтруктураОжидаемыхРеквизитов Цикл
			Если НЕ СтруктураРеквизитов.Свойство(ЭлементСтруктуры.Ключ) Тогда
				ЕстьВсеРеквизиты = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ ЕстьВсеРеквизиты Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщенияАтрибуты, НСтр("ru='Показатели KPI'"), СтрокаОжидаемыхРеквизитов); 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Неопределено;
		КонецЕсли;

		Возврат НайтиВариантАанализаПоказателяПоРеквизитам(СтруктураРеквизитов);
		
	ИначеЕсли ИмяСписка = "Организация" Тогда
		// По наименованию.
		Если НЕ СтруктураРеквизитов.Свойство("Наименование") Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщенияАтрибуты, НСтр("ru='Организация'"), "Наименование");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Неопределено;
		КонецЕсли;

		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.Наименование = &Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организации.ПометкаУдаления";
		Запрос.УстановитьПараметр("Наименование", СтруктураРеквизитов.Наименование);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе
			ТекстСообщения = СтрШаблон(ШаблонСообщенияНеНайдено, НСтр("ru='Организации'"), СтруктураРеквизитов.Наименование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
	ИначеЕсли ИмяСписка = "Подразделение" Тогда
		// По наименованию.
		Если НЕ СтруктураРеквизитов.Свойство("Наименование") Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщенияАтрибуты, НСтр("ru='Подразделение'"), "Наименование");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Неопределено;
		КонецЕсли;

		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтруктураПредприятия.Ссылка
		|ИЗ
		|	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		|ГДЕ
		|	СтруктураПредприятия.Наименование = &Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтруктураПредприятия.ПометкаУдаления";
		Запрос.УстановитьПараметр("Наименование", СтруктураРеквизитов.Наименование);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе
			ТекстСообщения = СтрШаблон(ШаблонСообщенияНеНайдено, НСтр("ru='Структура предприятия'"), СтруктураРеквизитов.Наименование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
	ИначеЕсли ИмяСписка = "ОбъектРемонта" Тогда
		// По Наименование + ЭтоГруппа.
		Если НЕ СтруктураРеквизитов.Свойство("Наименование") Тогда
			ТекстСообщения = СтрШаблон(ШаблонСообщенияАтрибуты, НСтр("ru='Объект ремонта'"), "Наименование, ЭтоГруппа");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Неопределено;
		КонецЕсли;

      Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	торо_ОбъектыРемонта.Ссылка
		|ИЗ
		|	Справочник.торо_ОбъектыРемонта КАК торо_ОбъектыРемонта
		|ГДЕ
		|	торо_ОбъектыРемонта.Наименование = &Наименование
		|	И торо_ОбъектыРемонта.ЭтоГруппа = &ЭтоГруппа
		|
		|УПОРЯДОЧИТЬ ПО
		|	торо_ОбъектыРемонта.ПометкаУдаления";
		Запрос.УстановитьПараметр("Наименование", СтруктураРеквизитов.Наименование);
		Запрос.УстановитьПараметр("ЭтоГруппа", СтруктураРеквизитов.ЭтоГруппа);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе
			ТекстСообщения = СтрШаблон(ШаблонСообщенияНеНайдено, НСтр("ru='Объекты ремонта'"), СтруктураРеквизитов.Наименование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;	
		
	КонецЕсли;
		
КонецФункции

&НаСервереБезКонтекста
Функция НайтиВариантАанализаПоказателяПоРеквизитам(СтруктураРеквизитов)
	
	// Проверить вначале ИДПоставляемойМодели. 
	// Если не заполнено, 
	// то по Наименование + ТипАнализа + ЗначениеАнализа + Владелец.

	Если ЗначениеЗаполнено(СтруктураРеквизитов.ИДПоставляемойМодели) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	торо_ВариантыАнализаПоказателейKPI.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.торо_ВариантыАнализаПоказателейKPI КАК торо_ВариантыАнализаПоказателейKPI
		|ГДЕ
		|	торо_ВариантыАнализаПоказателейKPI.ИДПоставляемойМодели = &ИДПоставляемойМодели
		|
		|УПОРЯДОЧИТЬ ПО
		|	торо_ВариантыАнализаПоказателейKPI.ПометкаУдаления,
		|	Ссылка";
		Запрос.УстановитьПараметр("ИДПоставляемойМодели", СтруктураРеквизитов.ИДПоставляемойМодели);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе
			ШаблонСообщения = НСтр("ru='Не найден элемент справочника ""1"" с идентификатором поставляемой модели ""%2"".
												|Обновите поставляемую модель показателей в системе и попробуйте снова.'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru='Варианты анализа показателей'"), СтруктураРеквизитов.ИДПоставляемойМодели);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	Иначе
		
		Владелец = НайтиВладельцаВариантаАанализаПоказателяПоРеквизитам(СтруктураРеквизитов);
		Если ЗначениеЗаполнено(Владелец) Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	торо_ВариантыАнализаПоказателейKPI.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.торо_ВариантыАнализаПоказателейKPI КАК торо_ВариантыАнализаПоказателейKPI
			|ГДЕ
			|	торо_ВариантыАнализаПоказателейKPI.Наименование = &Наименование
			|	И торо_ВариантыАнализаПоказателейKPI.ТипАнализа = &ТипАнализа
			|	И торо_ВариантыАнализаПоказателейKPI.ЗначениеАнализа = &ЗначениеАнализа
			|	И торо_ВариантыАнализаПоказателейKPI.Владелец = &Владелец
			|
			|УПОРЯДОЧИТЬ ПО
			|	торо_ВариантыАнализаПоказателейKPI.ПометкаУдаления,
			|	Ссылка";
			Запрос.УстановитьПараметр("Наименование", СтруктураРеквизитов.Наименование);
			Запрос.УстановитьПараметр("ТипАнализа", СтруктураРеквизитов.ТипАнализа);
			Запрос.УстановитьПараметр("ЗначениеАнализа", СтруктураРеквизитов.ЗначениеАнализа);
			Запрос.УстановитьПараметр("Владелец", Владелец);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				Возврат Выборка.Ссылка;
			Иначе
				ШаблонСообщения = НСтр("ru='Не найден элемент справочника ""1"" с реквизитами ""Наименование""=""%2"",
										|""Тип анализа""=""%3"", ""Значение""=""%4"", ""Показатель""=""%5"".'");
				ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru='Варианты анализа показателей'"), СтруктураРеквизитов.Наименование,
										СтруктураРеквизитов.ТипАнализа, СтруктураРеквизитов.ЗначениеАнализа, Владелец);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
		
КонецФункции

&НаСервереБезКонтекста
Функция НайтиВладельцаВариантаАанализаПоказателяПоРеквизитам(СтруктураРеквизитов)
	
	// Алгоритм поиска владельца:
	// вначале ИДПоставляемойМодели, 
	// потом Наименование + ТипПоказателя + ВариантЗаполнения.
	
	Если ЗначениеЗаполнено(СтруктураРеквизитов.Владелец_ИДПоставляемойМодели) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	торо_ПоказателиKPI.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.торо_ПоказателиKPI КАК торо_ПоказателиKPI
		|ГДЕ
		|	торо_ПоказателиKPI.ИДПоставляемойМодели = &ИДПоставляемойМодели
		|
		|УПОРЯДОЧИТЬ ПО
		|	торо_ПоказателиKPI.ПометкаУдаления,
		|	Ссылка";
		Запрос.УстановитьПараметр("ИДПоставляемойМодели", СтруктураРеквизитов.Владелец_ИДПоставляемойМодели);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе
			ШаблонСообщения = НСтр("ru='Не найден элемент справочника ""1"" с идентификатором поставляемой модели ""%2"".
												|Обновите поставляемую модель показателей в системе и попробуйте снова.'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru='Показатели процессов (KPI)'"), СтруктураРеквизитов.Владелец_ИДПоставляемойМодели);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	торо_ПоказателиKPI.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.торо_ПоказателиKPI КАК торо_ПоказателиKPI
		|ГДЕ
		|	торо_ПоказателиKPI.Наименование = &Наименование
		|	И торо_ПоказателиKPI.ТипПоказателя = &ТипПоказателя
		|	И торо_ПоказателиKPI.ВариантЗаполнения = &ВариантЗаполнения
		|
		|УПОРЯДОЧИТЬ ПО
		|	торо_ПоказателиKPI.ПометкаУдаления,
		|	Ссылка";
		Запрос.УстановитьПараметр("Наименование", СтруктураРеквизитов.Владелец_Наименование);
		Запрос.УстановитьПараметр("ТипПоказателя", СтруктураРеквизитов.Владелец_ТипПоказателя);
		Запрос.УстановитьПараметр("ВариантЗаполнения", СтруктураРеквизитов.Владелец_ВариантЗаполнения);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе
			ШаблонСообщения = НСтр("ru='Не найден элемент справочника ""1"" с реквизитами ""Наименование""=""%2"",
										|""Тип показателя""=""%3"", ""Вариант заполнения""=""%4"".'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru='Показатели процессов (KPI)'"), СтруктураРеквизитов.Владелец_Наименование,
												СтруктураРеквизитов.Владелец_ТипПоказателя, СтруктураРеквизитов.Владелец_ВариантЗаполнения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции


#КонецОбласти
