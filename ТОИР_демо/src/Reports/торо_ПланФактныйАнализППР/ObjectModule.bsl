#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПЕРЕМЕННЫЕ
Перем ИспользоватьУчетСостоянийОборудования;                    

#Область ОбработчикиСобытий
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
		ИдентификаторПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета")).ИдентификаторПользовательскойНастройки;
		ЗначениеПериода = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдентификаторПериода).Значение;
		НеИспользоватьПериод = Не КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдентификаторПериода).Использование;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	КалендарныеГрафики.ДатаГрафика
			|ИЗ
			|	РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
			|ГДЕ
			|	(&НеИспользоватьПериод ИЛИ (КалендарныеГрафики.ДатаГрафика МЕЖДУ &ДатаНачала И &ДатаОкончания))
			|	И КалендарныеГрафики.Календарь = &Календарь";
		
		Запрос.УстановитьПараметр("ДатаНачала", ЗначениеПериода.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", ЗначениеПериода.ДатаОкончания);
		Запрос.УстановитьПараметр("Календарь", Константы.торо_ГрафикРемонтныхРабот.Получить());
		Запрос.УстановитьПараметр("НеИспользоватьПериод", НеИспользоватьПериод);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			
			ЭтотОбъект.СхемаКомпоновкиДанных.НаборыДанных.НаборДанных1.Запрос = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	торо_ПланГрафикРемонта.ВидРемонтныхРабот КАК ВидРемонта,
			|	торо_ПланГрафикРемонта.ОбъектРемонтныхРабот КАК Объект,
			|	торо_ПланГрафикРемонта.ДатаОкончанияРемонтныхРабот КАК ДатаОкончания,
			|	торо_ПланГрафикРемонта.ID КАК ID,
			|	торо_ПланГрафикРемонта.ДатаНачалаРемонтныхРабот КАК ДатаНачала
			|ПОМЕСТИТЬ ТабПлан
			|ИЗ
			|	РегистрСведений.торо_ПлановыеРемонтныеРаботы.СрезПоследних КАК торо_ПланГрафикРемонта
			|ГДЕ
			|	НЕ торо_ПланГрафикРемонта.Отменен
			|	И НЕ торо_ПланГрафикРемонта.Замещен
			|	И ВЫБОР
			|			КОГДА &СсылкаНаППР = ЗНАЧЕНИЕ(Документ.торо_ПланГрафикРемонта.ПустаяСсылка)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ торо_ПланГрафикРемонта.Регистратор В (&СсылкаНаППР)
			|		КОНЕЦ
			|{ГДЕ
			|	(торо_ПланГрафикРемонта.ДатаНачалаРемонтныхРабот МЕЖДУ &ДатаНачала И &ДатаОкончания
			|			ИЛИ торо_ПланГрафикРемонта.ДатаОкончанияРемонтныхРабот МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК Поле2}
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	торо_ЗавершенныеРемонтныеРаботы.ВидРемонтныхРабот КАК ВидРемонта,
			|	торо_ЗавершенныеРемонтныеРаботы.ОбъектРемонта КАК Объект,
			|	ВЫБОР
			|		КОГДА МИНИМУМ(торо_ЗавершенныеРемонтныеРаботы.ДатаНачала) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|			ТОГДА МАКСИМУМ(торо_ЗавершенныеРемонтныеРаботы.ДатаОкончания)
			|		ИНАЧЕ МИНИМУМ(торо_ЗавершенныеРемонтныеРаботы.ДатаНачала)
			|	КОНЕЦ КАК ДатаНачала,
			|	МАКСИМУМ(торо_ЗавершенныеРемонтныеРаботы.ДатаОкончания) КАК ДатаОкончания,
			|	торо_ЗавершенныеРемонтныеРаботы.ID
			|ПОМЕСТИТЬ ИтогТаб
			|ИЗ
			|	РегистрСведений.торо_ЗавершенныеРемонтныеРаботы КАК торо_ЗавершенныеРемонтныеРаботы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.торо_Ремонты КАК торо_Ремонты
			|		ПО торо_ЗавершенныеРемонтныеРаботы.ID = торо_Ремонты.ID
			|ГДЕ
			|	торо_Ремонты.Регистратор ССЫЛКА Документ.торо_ПланГрафикРемонта
			|{ГДЕ
			|	(торо_ЗавершенныеРемонтныеРаботы.ДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания
			|			ИЛИ торо_ЗавершенныеРемонтныеРаботы.ДатаОкончания МЕЖДУ &ДатаНачала И &ДатаОкончания) КАК Поле2}
			|
			|СГРУППИРОВАТЬ ПО
			|	торо_Ремонты.ID,
			|	торо_ЗавершенныеРемонтныеРаботы.ОбъектРемонта,
			|	торо_ЗавершенныеРемонтныеРаботы.ВидРемонтныхРабот,
			|	торо_ЗавершенныеРемонтныеРаботы.ID
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИтогТаб.ВидРемонта,
			|	ИтогТаб.Объект,
			|	КОНЕЦПЕРИОДА(ИтогТаб.ДатаОкончания, ДЕНЬ) КАК ДатаОкончания,
			|	ИтогТаб.ДатаОкончания КАК ДатаОкончанияНастоящая,
			|	ИтогТаб.ID,
			|	НАЧАЛОПЕРИОДА(ИтогТаб.ДатаНачала, ДЕНЬ) КАК ДатаНачала,
			|	ИтогТаб.ДатаНачала КАК ДатаНачалаНастоящая
			|ПОМЕСТИТЬ ТабФакт
			|ИЗ
			|	ИтогТаб КАК ИтогТаб
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	торо_ВидыЭксплуатации.Ссылка
			|ПОМЕСТИТЬ ЭксплуатацияПростой
			|ИЗ
			|	Справочник.торо_ВидыЭксплуатации КАК торо_ВидыЭксплуатации
			|ГДЕ
			|	(&Останов
			|			ИЛИ &ОтображатьПростоиБезПлановыхРемонтов)
			|	И торо_ВидыЭксплуатации.ТипЭксплуатации = ЗНАЧЕНИЕ(Перечисление.торо_ТипЭксплуатации.Простой)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	торо_ТекущееСостояниеОР.ВидЭксплуатации КАК ВидЭксплуатации,
			|	торо_ТекущееСостояниеОР.ОбъектРемонта,
			|	торо_ТекущееСостояниеОР.Период КАК Период,
			|	торо_ТекущееСостояниеОР.Регистратор
			|ПОМЕСТИТЬ ТаблицаСостояний
			|ИЗ
			|	РегистрСведений.торо_ТекущееСостояниеОР КАК торо_ТекущееСостояниеОР
			|ГДЕ
			|	(&Останов
			|			ИЛИ &ОтображатьПростоиБезПлановыхРемонтов)
			|	И ВЫБОР
			|			КОГДА НЕ &ОтображатьПростоиБезПлановыхРемонтов
			|				ТОГДА торо_ТекущееСостояниеОР.ОбъектРемонта В
			|						(ВЫБРАТЬ
			|							торо_ПланГрафикРемонта.Объект
			|						ИЗ
			|							ТабПлан КАК торо_ПланГрафикРемонта)
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаСостояний.ВидЭксплуатации КАК ВидЭксплуатации,
			|	ТаблицаСостояний.ОбъектРемонта,
			|	ТаблицаСостояний.Период КАК Период,
			|	МИНИМУМ(ЕСТЬNULL(ВспромогательнаяТаблица.Период, &ДатаОкончания)) КАК ДатаКон,
			|	торо_ОстановленноеОборудование.ПричинаПростоя,
			|	торо_ОстановленноеОборудование.ПричинаПростоя.ВидПростоя КАК ВидПростоя
			|ПОМЕСТИТЬ ПростоиОР
			|ИЗ
			|	ТаблицаСостояний КАК ТаблицаСостояний
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСостояний КАК ВспромогательнаяТаблица
			|		ПО ТаблицаСостояний.Период < ВспромогательнаяТаблица.Период
			|			И ТаблицаСостояний.ОбъектРемонта = ВспромогательнаяТаблица.ОбъектРемонта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.торо_ОстановленноеОборудование КАК торо_ОстановленноеОборудование
			|		ПО ТаблицаСостояний.ОбъектРемонта = торо_ОстановленноеОборудование.ОбъектРемонта
			|			И ТаблицаСостояний.Период = торо_ОстановленноеОборудование.Период
			|			И ТаблицаСостояний.Регистратор = торо_ОстановленноеОборудование.Регистратор
			|ГДЕ
			|	ТаблицаСостояний.ВидЭксплуатации В
			|			(ВЫБРАТЬ
			|				ЭксплуатацияПростой.Ссылка
			|			ИЗ
			|				ЭксплуатацияПростой КАК ЭксплуатацияПростой)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаСостояний.ОбъектРемонта,
			|	ТаблицаСостояний.Период,
			|	ТаблицаСостояний.ВидЭксплуатации,
			|	торо_ОстановленноеОборудование.ПричинаПростоя,
			|	торо_ОстановленноеОборудование.ПричинаПростоя.ВидПростоя
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПростоиОР.ОбъектРемонта КАК Объект,
			|	ВЫБОР
			|		КОГДА ПростоиОР.Период < &ДатаНачала
			|			ТОГДА &ДатаНачала
			|		ИНАЧЕ ПростоиОР.Период
			|	КОНЕЦ КАК ДатаНачала,
			|	ВЫБОР
			|		КОГДА ПростоиОР.ДатаКон > &ДатаОкончания
			|			ТОГДА &ДатаОкончания
			|		ИНАЧЕ ПростоиОР.ДатаКон
			|	КОНЕЦ КАК ДатаОкончания
			|ПОМЕСТИТЬ ВремТаб
			|ИЗ
			|	ПростоиОР КАК ПростоиОР
			|ГДЕ
			|	ВЫБОР
			|			КОГДА &ВидПростоя = ЗНАЧЕНИЕ(Перечисление.торо_ВидыПростояОборудования.ПустаяСсылка)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ПростоиОР.ВидПростоя = &ВидПростоя
			|		КОНЕЦ
			|	И ВЫБОР
			|			КОГДА &ПричинаПростоя = ЗНАЧЕНИЕ(Справочник.торо_ПричиныПростояОборудования.ПустаяСсылка)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ПростоиОР.ПричинаПростоя = &ПричинаПростоя
			|		КОНЕЦ
			|{ГДЕ
			|	(ПростоиОР.Период > &ДатаНачала
			|				И ПростоиОР.Период < &ДатаОкончания
			|			ИЛИ ПростоиОР.ДатаКон > &ДатаНачала
			|				И ПростоиОР.ДатаКон < &ДатаОкончания) КАК Поле2}
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТабПлан.ВидРемонта КАК ВидРемонта,
			|	ВремТаб.Объект,
			|	ВремТаб.ДатаОкончания,
			|	NULL КАК ID,
			|	ВремТаб.ДатаНачала КАК ДатаНачала
			|ПОМЕСТИТЬ ТабОстанов
			|ИЗ
			|	ВремТаб КАК ВремТаб
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТабПлан КАК ТабПлан
			|		ПО (ТабПлан.Объект = ВремТаб.Объект)
			|ГДЕ
			|	ВЫБОР
			|			КОГДА НЕ &ОтображатьПростоиБезПлановыхРемонтов
			|				ТОГДА НЕ ТабПлан.ВидРемонта ЕСТЬ NULL 
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТабПлан.Объект КАК Объект,
			|	ТабПлан.ВидРемонта КАК ВидРемонта,
			|	ТабПлан.ДатаНачала КАК ДатаНачала,
			|	ТабПлан.ДатаОкончания КАК ДатаОкончания,
			|	ТабПлан.ID,
			|	""План"" КАК Вид
			|ПОМЕСТИТЬ ТабДат
			|ИЗ
			|	ТабПлан КАК ТабПлан
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТабФакт.Объект,
			|	ТабФакт.ВидРемонта,
			|	ТабФакт.ДатаНачала,
			|	ТабФакт.ДатаОкончания,
			|	ТабФакт.ID,
			|	""Факт""
			|ИЗ
			|	ТабФакт КАК ТабФакт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТабОстанов.Объект,
			|	ТабОстанов.ВидРемонта,
			|	ТабОстанов.ДатаНачала,
			|	ТабОстанов.ДатаОкончания,
			|	ТабОстанов.ID,
			|	""Останов""
			|ИЗ
			|	ТабОстанов КАК ТабОстанов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТабДат.Объект,
			|	ТабДат.ВидРемонта,
			|	ТабДат.Вид,
			|	ТабДат.ID,
			|	ТабДат.ДатаНачала КАК НачалоРемонта,
			|	1 КАК ЗначРесурса,
			|	ВЫБОР
			|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
			|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, ДЕНЬ)
			|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
			|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, МЕСЯЦ)
			|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
			|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, ГОД)
			|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
			|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, КВАРТАЛ)
			|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
			|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, НЕДЕЛЯ)
			|	КОНЕЦ КАК ДатаНачала
			|ПОМЕСТИТЬ ВТ_ДанныеТаблицы
			|ИЗ
			|	ТабДат КАК ТабДат
			|
			|СГРУППИРОВАТЬ ПО
			|	ТабДат.Объект,
			|	ТабДат.Вид,
			|	ТабДат.ID,
			|	ТабДат.ВидРемонта,
			|	ВЫБОР
			|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
			|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, ДЕНЬ)
			|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
			|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, МЕСЯЦ)
			|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
			|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, ГОД)
			|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
			|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, КВАРТАЛ)
			|		КОГДА &Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
			|			ТОГДА НАЧАЛОПЕРИОДА(ТабДат.ДатаНачала, НЕДЕЛЯ)
			|	КОНЕЦ,
			|	ТабДат.ДатаНачала
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ТабДат.ID,
			|	ТабДат.Вид
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТабПлан.Объект,
			|	ТабПлан.ID КАК ID,
			|	ТабПлан.ДатаНачала,
			|	ТабПлан.ДатаОкончания,
			|	""План"" КАК Вид,
			|	1 КАК ЭтоПлан
			|ПОМЕСТИТЬ ВТ_План
			|ИЗ
			|	ТабПлан КАК ТабПлан
			|
			|СГРУППИРОВАТЬ ПО
			|	ТабПлан.Объект,
			|	ТабПлан.ID,
			|	ТабПлан.ДатаНачала,
			|	ТабПлан.ДатаОкончания
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ID
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТабФакт.Объект,
			|	ТабФакт.ID КАК ID,
			|	ТабФакт.ДатаНачалаНастоящая КАК ДатаНачала,
			|	ТабФакт.ДатаОкончанияНастоящая КАК ДатаОкончания,
			|	""Факт"" КАК Вид,
			|	1 КАК ЭтоФакт
			|ПОМЕСТИТЬ ВТ_Факт
			|ИЗ
			|	ТабФакт КАК ТабФакт
			|
			|СГРУППИРОВАТЬ ПО
			|	ТабФакт.Объект,
			|	ТабФакт.ID,
			|	ТабФакт.ДатаНачалаНастоящая,
			|	ТабФакт.ДатаОкончанияНастоящая
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ID
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(ВТ_План.ЭтоПлан, 0) КАК ЭтоПлан,
			|	ЕСТЬNULL(ВТ_Факт.ЭтоФакт, 0) КАК ЭтоФакт,
			|	ВЫБОР
			|		КОГДА НЕ ВТ_План.Вид ЕСТЬ NULL 
			|			ТОГДА ВТ_План.Вид
			|		ИНАЧЕ ВТ_Факт.Вид
			|	КОНЕЦ КАК Вид,
			|	ВЫБОР
			|		КОГДА НЕ ВТ_План.Объект ЕСТЬ NULL 
			|				И НЕ ВТ_Факт.Объект ЕСТЬ NULL 
			|				И ВТ_Факт.ДатаНачала >= ВТ_План.ДатаНачала
			|				И ВТ_Факт.ДатаОкончания <= КонецПериода(ВТ_План.ДатаОкончания, ДЕНЬ)
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ВСрок,
			|	ВЫБОР
			|		КОГДА НЕ ВТ_План.Объект ЕСТЬ NULL 
			|				И НЕ ВТ_Факт.Объект ЕСТЬ NULL 
			|				И ВТ_Факт.ДатаОкончания > КонецПериода(ВТ_План.ДатаОкончания, ДЕНЬ)
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Позже,
			|	ВЫБОР
			|		КОГДА НЕ ВТ_План.Объект ЕСТЬ NULL 
			|				И НЕ ВТ_Факт.Объект ЕСТЬ NULL 
			|				И ВТ_Факт.ДатаНачала < ВТ_План.ДатаНачала
			|				И ВТ_Факт.ДатаОкончания <= КонецПериода(ВТ_План.ДатаОкончания, ДЕНЬ)
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Раньше,
			|	1 КАК Всего,
			|	ВЫБОР
			|		КОГДА НЕ ВТ_Факт.ID ЕСТЬ NULL 
			|			ТОГДА ВТ_Факт.ID
			|		ИНАЧЕ ВТ_План.ID
			|	КОНЕЦ КАК ID,
			|	ВЫБОР
			|		КОГДА НЕ ВТ_Факт.ID ЕСТЬ NULL 
			|			ТОГДА ВТ_Факт.ДатаНачала
			|		ИНАЧЕ ВТ_План.ДатаНачала
			|	КОНЕЦ КАК НачалоРемонта
			|ПОМЕСТИТЬ ВТ_Данные
			|ИЗ
			|	ВТ_План КАК ВТ_План
			|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Факт КАК ВТ_Факт
			|		ПО ВТ_План.ID = ВТ_Факт.ID
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ID,
			|	Вид
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ВТ_ДанныеТаблицы.Вид = ""План""
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ЭтоПлан,
			|	ВЫБОР
			|		КОГДА ВТ_ДанныеТаблицы.Вид = ""Факт""
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ЭтоФакт,
			|	ВЫБОР
			|		КОГДА ВТ_ДанныеТаблицы.Вид = ""Факт""
			|			ТОГДА ВТ_Данные.ВСрок
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ВСрок,
			|	ВЫБОР
			|		КОГДА ВТ_ДанныеТаблицы.Вид = ""Факт""
			|			ТОГДА ВТ_Данные.Позже
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Позже,
			|	ВЫБОР
			|		КОГДА ВТ_ДанныеТаблицы.Вид = ""Факт""
			|			ТОГДА ВТ_Данные.Раньше
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Раньше,
			|	ВЫБОР
			|		КОГДА ВТ_ДанныеТаблицы.Вид = ""Факт""
			|			ТОГДА ВТ_Данные.Всего
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Всего,
			|	ВЫБОР
			|		КОГДА ВТ_Данные.Всего = 0
			|			ТОГДА 0
			|		ИНАЧЕ ВТ_Данные.ВСрок / ВТ_Данные.Всего * 100
			|	КОНЕЦ КАК ПроцентВСрок,
			|	ВЫБОР
			|		КОГДА ВТ_Данные.Всего = 0
			|			ТОГДА 0
			|		ИНАЧЕ ВТ_Данные.Позже / ВТ_Данные.Всего * 100
			|	КОНЕЦ КАК ПроцентПозже,
			|	ВЫБОР
			|		КОГДА ВТ_Данные.Всего = 0
			|			ТОГДА 0
			|		ИНАЧЕ ВТ_Данные.Раньше / ВТ_Данные.Всего * 100
			|	КОНЕЦ КАК ПроцентРаньше,
			|	ВТ_ДанныеТаблицы.Объект,
			|	ВТ_ДанныеТаблицы.ВидРемонта,
			|	ВТ_ДанныеТаблицы.Вид,
			|	ВТ_ДанныеТаблицы.ЗначРесурса,
			|	ВТ_ДанныеТаблицы.ДатаНачала,
			|	ВТ_ДанныеТаблицы.ID
			|ПОМЕСТИТЬ ВТ_ФинальныеДанные
			|ИЗ
			|	ВТ_ДанныеТаблицы КАК ВТ_ДанныеТаблицы
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Данные КАК ВТ_Данные
			|		ПО ВТ_ДанныеТаблицы.ID = ВТ_Данные.ID
			|			//И (ВТ_ДанныеТаблицы.НачалоРемонта = НАЧАЛОПЕРИОДА(ВТ_Данные.НачалоРемонта, ДЕНЬ))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЕСТЬNULL(ВТ_ФинДанные.ЭтоПлан, 0) КАК ЭтоПлан,
			|	ЕСТЬNULL(ВТ_ФинДанные.ЭтоФакт, 0) КАК ЭтоФакт,
			|	ЕСТЬNULL(ВТ_ФинДанные.ВСрок, 0) КАК ВСрок,
			|	ЕСТЬNULL(ВТ_ФинДанные.Позже, 0) КАК Позже,
			|	ЕСТЬNULL(ВТ_ФинДанные.Раньше, 0) КАК Раньше,
			|	ЕСТЬNULL(ВТ_ФинДанные.Всего, 0) КАК Всего,
			|	ЕСТЬNULL(ВТ_ФинДанные.ПроцентВСрок, 0) КАК ПроцентВСрок,
			|	ЕСТЬNULL(ВТ_ФинДанные.ПроцентПозже, 0) КАК ПроцентПозже,
			|	ЕСТЬNULL(ВТ_ФинДанные.ПроцентРаньше, 0) КАК ПроцентРаньше,
			|	ВТ_ФинДанные.Объект,
			|	ВТ_ФинДанные.ВидРемонта,
			|	ВТ_ФинДанные.Вид,
			|	ВТ_ФинДанные.ЗначРесурса,
			|	ВТ_ФинДанные.ДатаНачала,
			|	ВТ_ФинДанные.ID
			|ИЗ
			|	ВТ_ФинальныеДанные КАК ВТ_ФинДанные";
			
		КонецЕсли;
		
		Идентификатор = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Периодичность")).ИдентификаторПользовательскойНастройки;
		МетодРазбиения = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Идентификатор).Значение;
		ГруппировкаОтч = КомпоновщикНастроек.Настройки.Структура[1].Колонки[0].ПоляГруппировки.Элементы[0];
		
		Для каждого Элем Из КомпоновщикНастроек.Настройки.Структура Цикл
			Если элем.Имя = "Таблица" тогда
				ТаблицаГрафик = элем;
				прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ТаблицаГрафик <> Неопределено Тогда
			
			ГрупВидРемонта = НайтиДанные("ВидРемонта", ТаблицаГрафик.Строки);
			Если ГрупВидРемонта <> Неопределено Тогда
				Идентификатор = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоказыватьВидыРемонта")).ИдентификаторПользовательскойНастройки;
				Флаг = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Идентификатор).Значение;
				ГрупВидРемонта.Использование = Флаг;
			КонецЕсли;
		КонецЕсли;
		
		Если МетодРазбиения = ПредопределенноеЗначение("Перечисление.Периодичность.День") Тогда
			ГруппировкаОтч.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.День;
		ИначеЕсли МетодРазбиения = ПредопределенноеЗначение("Перечисление.Периодичность.Неделя") Тогда
			ГруппировкаОтч.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Неделя;
		ИначеЕсли МетодРазбиения = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц") Тогда
			ГруппировкаОтч.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Месяц;
		ИначеЕсли МетодРазбиения = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
			ГруппировкаОтч.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Квартал;
		Иначе
			ГруппировкаОтч.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Год;	
		КонецЕсли;
		
		Если НеИспользоватьПериод Тогда 
			ПараметрДатаНачала = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНачала"));
			ПараметрДатаНачала.Использование = Ложь;
			ПараметрДатаОкончания = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаОкончания"));
			ПараметрДатаОкончания.Использование = Ложь;
		Иначе 
			ПараметрДатаНачала = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаНачала"));
			ПараметрДатаНачала.Использование = Истина;
			ПараметрДатаОкончания = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаОкончания"));
			ПараметрДатаОкончания.Использование = Истина;
		КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция НайтиДанные(ИмяПоиска, МестоПоиска)
	
	Для каждого Элемент Из МестоПоиска Цикл
		Если Элемент.Имя = ИмяПоиска Тогда
			
			Возврат Элемент;
			
		Иначе
			
			Результат = НайтиДанные(ИмяПоиска, Элемент.Структура);
			Если Результат <> Неопределено Тогда
				Возврат Результат;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ФункцииОтчетовКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриЗагрузкеПользовательскихНастроекНаСервере = Истина;
	Настройки.События.ПриЗагрузкеВариантаНаСервере = Истина;
	Настройки.События.ПослеЗаполненияПанелиБыстрыхНастроек = Истина;
КонецПроцедуры

Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);
	
КонецПроцедуры

Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	ПользовательскиеНастройкиЭлементы = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;	
	ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы);
	
КонецПроцедуры

Процедура ПрименитьФункциональныеОпцииКНастройкам(ПользовательскиеНастройкиЭлементы)
	
	Если НЕ ИспользоватьУчетСостоянийОборудования Тогда
		Для каждого Элемент Из ПользовательскиеНастройкиЭлементы Цикл
			Если ТипЗнч(Элемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
				Если Строка(Элемент.Параметр) = "ОтображатьПростоиБезПлановыхРемонтов"
					ИЛИ Строка(Элемент.Параметр) = "ПричинаПростояВидимая"
					ИЛИ Строка(Элемент.Параметр) = "ВидПростояВидимый" Тогда
					Элемент.Значение      = Ложь;
					Элемент.Использование = Ложь;
					Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры




Процедура ПослеЗаполненияПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
	
КонецПроцедуры

Функция ПолучитьЗначениеФО(НаименованиеФО) Экспорт
	
	Возврат ПолучитьФункциональнуюОпцию(НаименованиеФО);
	
КонецФункции

ИспользоватьУчетСостоянийОборудования	= ПолучитьЗначениеФО("торо_УчетСостоянияОборудования");


#КонецОбласти


#КонецЕсли