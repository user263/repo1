#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОсновнойСхемы = КомпоновщикНастроек.ПолучитьНастройки();
	
	НастроитьДополнениеПоДатеДефекта(НастройкиОсновнойСхемы);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОсновнойСхемы, ДанныеРасшифровки);	
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
	
	ПроцессорВыводаВТабличныйДокумент = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаВТабличныйДокумент.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВыводаВТабличныйДокумент.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НастроитьДополнениеПоДатеДефекта(НастройкиСхемы)
	
	ПолеГруппировки = ПолучитьПолеГруппировкиКомпоновкиДанныхДляНастройкиДополнения(НастройкиСхемы, "ДатаДефекта");
	Если ПолеГруппировки <> Неопределено Тогда
		УстановитьТипДополненияПериодаДляПоляГруппировки(ПолеГруппировки, НастройкиСхемы);
		УстановитьДатыНачалаИОкончанияДополнения(ПолеГруппировки, НастройкиСхемы);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПолеГруппировкиКомпоновкиДанныхДляНастройкиДополнения(НастройкиСхемы, ИмяГруппировки)
	
	Для Каждого ЭлементНастройки Из НастройкиСхемы.Структура Цикл
		Если ТипЗнч(ЭлементНастройки) = Тип("ТаблицаКомпоновкиДанных") Тогда
			Для Каждого Колонка Из ЭлементНастройки.Колонки Цикл
				Если Колонка.Имя = ИмяГруппировки Тогда
					Возврат Колонка.ПоляГруппировки.Элементы[0];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

Процедура УстановитьТипДополненияПериодаДляПоляГруппировки(ПолеГруппировкиКомпоновкиДанных, НастройкиСхемы)

	ПараметрПериодичностьОтчета = НастройкиСхемы.ПараметрыДанных.Элементы.Найти("Периодичность");
	
	Если ПараметрПериодичностьОтчета <> Неопределено Тогда
		ТипДополненияПериодаПеречисление = ПараметрПериодичностьОтчета.Значение;
		Если ТипДополненияПериодаПеречисление = Перечисления.Периодичность.Месяц Тогда
			ПолеГруппировкиКомпоновкиДанных.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Месяц;
		ИначеЕсли ТипДополненияПериодаПеречисление = Перечисления.Периодичность.День Тогда
			ПолеГруппировкиКомпоновкиДанных.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.День;
		ИначеЕсли ТипДополненияПериодаПеречисление = Перечисления.Периодичность.Год Тогда
			ПолеГруппировкиКомпоновкиДанных.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Год;
		ИначеЕсли ТипДополненияПериодаПеречисление = Перечисления.Периодичность.Квартал Тогда
			ПолеГруппировкиКомпоновкиДанных.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Квартал;
		ИначеЕсли ТипДополненияПериодаПеречисление = Перечисления.Периодичность.Неделя Тогда
			ПолеГруппировкиКомпоновкиДанных.ТипДополнения = ТипДополненияПериодаКомпоновкиДанных.Неделя;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьДатыНачалаИОкончанияДополнения(ПолеГруппировкиКомпоновкиДанных, НастройкиСхемы)

	ПараметрПериодОтчета = НастройкиСхемы.ПараметрыДанных.Элементы.Найти("Период");
	
	Если ПараметрПериодОтчета <> Неопределено И ПараметрПериодОтчета.Использование Тогда
		ПолеГруппировкиКомпоновкиДанных.НачалоПериода = ПараметрПериодОтчета.Значение.ДатаНачала;
		ПолеГруппировкиКомпоновкиДанных.КонецПериода = ПараметрПериодОтчета.Значение.ДатаОкончания;
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#КонецЕсли